[
    {
        "id": "006fc51c92300bec",
        "type": "tab",
        "label": "Version Info",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "34c5d473de2de145",
        "type": "tab",
        "label": "MQTT Broker",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "031596afc773e181",
        "type": "tab",
        "label": "Master [20]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "ec15050b70975098",
        "type": "tab",
        "label": "RFID",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "1e403841a39b0138",
        "type": "tab",
        "label": "RFID Routing",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "75d15dd5e1cdbad2",
        "type": "tab",
        "label": "Robot [30]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "94da80d1f610b831",
        "type": "tab",
        "label": "Storage [40]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "0897c1d9a1c086e1",
        "type": "tab",
        "label": "Handling 1 [50]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "59f32dea3689223d",
        "type": "tab",
        "label": "Sorting [60]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "c7e2c1b5cad83a3e",
        "type": "tab",
        "label": "Testing [70]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "4feb0669cb214335",
        "type": "tab",
        "label": "Distribution [80]",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "10b1bc1a080d1c97",
        "type": "tab",
        "label": "Handling 2 [90]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "ed287fcb96b33d19",
        "type": "tab",
        "label": "Processing [100]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "bd2d7edff97a940e",
        "type": "group",
        "z": "4feb0669cb214335",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "d2a73e5ec91d1e64",
            "5b5d8f750f9f5873",
            "fa2aafcd887b7a68",
            "fa76f6d7aee5c231",
            "ba0274d5927980b1",
            "8cc680b5ce77cebc",
            "fb023f1c8a48f911",
            "39a35b742c524ee9",
            "d749cfac11f690c7",
            "f46335436e38b871",
            "63b9a74d0ec1da8c",
            "d60dda31388af0d3",
            "946ca0f475da40ce",
            "05db08f13278196e",
            "2887cc748089b892",
            "9c292acb911664d0",
            "a9312b38eee967e8",
            "ace1f8c9ed29d67c",
            "389df090a86f5428",
            "f975a9b3829e9510",
            "0325105149b57fd2",
            "5dfa07788570b290",
            "ceea51cc08a8c225",
            "5600d7d9ad471227",
            "2abbe577a672d8f1",
            "6dc5619ca56dade3",
            "11505d11d3c40da2",
            "48cae9d93c04b4fd",
            "5fe75c3c59a31d5d",
            "416ddbe60fe1a123",
            "415d39a0ba73040f",
            "577d71f51d638299",
            "73a3cbde25f9bbf4",
            "230fc984fbb04355",
            "9dbf40b819a6227d",
            "ef1727e1d6995eb7"
        ],
        "x": 14,
        "y": 499,
        "w": 1412,
        "h": 402
    },
    {
        "id": "eedfe2e97822b67f",
        "type": "group",
        "z": "4feb0669cb214335",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2634ce420146c179",
            "172b82eee78d4a59",
            "9535f17f5afdae87",
            "81ff38b90e087b06",
            "a1fd271f0d44592e",
            "598874fd36b665bf",
            "12864af8ddc53254",
            "7b18fcb7bcae2ced",
            "bf394a6790931c4b",
            "d3805bdf601843f8",
            "5b800ea18a78b0e5",
            "55cb807a367e84a9",
            "628ff7b38c7cb875",
            "e18b22fc3825ec72",
            "7d6fd00febd29e37",
            "0229cb5707743a6a",
            "fde157dec2b5f0de",
            "79518ad50c5078a3",
            "116733cb7c68a34e",
            "fbc5a78a77ab4c86",
            "05c25c89cd3269dc",
            "8b670b8ece02416d",
            "1c162c064975d210",
            "3be5606816852f99",
            "5a2cd3f1f2615c1a",
            "cafe5839094015a1",
            "9210a82ff57a4059",
            "fc5838d04de1e381",
            "3a8aae79daa3dba2",
            "7028e6ab851a3dd5",
            "71c0655dfbb991bb",
            "c8b09861527f7d98",
            "b347cfee1ad4ad89",
            "ef3a09c17bfb02b7",
            "196be37eb0e53e05",
            "746885a4496d2ec8",
            "e7e57e598d7ce30c",
            "623d440741a76905",
            "674a4a38f602e26b"
        ],
        "x": 14,
        "y": 919,
        "w": 1412,
        "h": 442
    },
    {
        "id": "c7db9df6c638300b",
        "type": "group",
        "z": "4feb0669cb214335",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "82929da775c399e1",
            "cf726bd04c51ec5b",
            "d032594ef594187b",
            "44382d0d7d3fddc7",
            "b6639b89115a6784",
            "fc740c3c9dea2f8e",
            "0a70d307f19cf2a2",
            "56e68722f3146c90",
            "2342000860e151a3",
            "51327886d8326bb7",
            "507f857a9a52a82e",
            "a8c57521bd642ecd",
            "8ef68b1750d4e8c9",
            "16a572af1e765c3e",
            "8c1a2f85756036ea",
            "8fce92e8be12bd7c",
            "716ddec5da1830a3",
            "dc694d175648849c",
            "345fe0d4ce650e0e",
            "d24b5064a322550f",
            "e0dce9aaeeae2e68",
            "af1039fd25bf671b",
            "899e583be1a3bc5c",
            "7d8e129ecd0e878f",
            "c55134b6b34e0df8",
            "640a4d4bbced17cc",
            "9228afa988754e4f",
            "eb8010fb098592ca",
            "1029ab7b5ab60f08",
            "f94769845f2d3deb"
        ],
        "x": 14,
        "y": 1379,
        "w": 1412,
        "h": 322
    },
    {
        "id": "f1c730860d837dca",
        "type": "group",
        "z": "4feb0669cb214335",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "08cc1e1f6b67f204",
            "ee961517cc7d3219",
            "d52111718c6bdd15",
            "48a14b1cd45104d2",
            "3fb58e9ad761c6ab",
            "12efda18a2df6947",
            "247baf169ad16a4f",
            "cc7b0eaf4c2228eb",
            "07a9e5f5854a920f",
            "454a4db13ffaf646",
            "c275c5d429369fe4",
            "a8cd030cc5eb858c",
            "c1c505c35ad31cf6",
            "4cc94a839d49b81c",
            "f39a2a9af21a143c",
            "0ea2616343bebaa5",
            "93e978eb4d0d5732",
            "1cba59729fb086d2",
            "54282a4d5263d408",
            "2d13d192512a2013",
            "59b80561abcd00de",
            "18a6a1271dfcb060",
            "5825e073b54a7fc1",
            "e3bb050a23fb23e8",
            "e4968aa82c1d9f76",
            "b2617a59523383c8",
            "a644be7707ba6069",
            "998da624acf151da",
            "aa290b8f9e6ef6bd",
            "c57d346e25cbbedf",
            "5ca7dfa1766b9985",
            "23ebea8cc2bac5ae",
            "82246804dcb70e6c",
            "78da4e4917d85c30",
            "eb28c95de637e793",
            "e059427121df1ea2",
            "6df7ce82458215e8",
            "8fb9723ea2c94922",
            "56eaa187e087e2ca"
        ],
        "x": 14,
        "y": 1719,
        "w": 1412,
        "h": 442
    },
    {
        "id": "0558cfa07285c727",
        "type": "group",
        "z": "4feb0669cb214335",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "07e6d428a3638a5a",
            "64e4b8257e465ca5",
            "26ca9a3d5d3e1053",
            "4efddfbbc1becc4d",
            "56db7b7bd638e344",
            "931e24c2077c839a",
            "d5083cddc771745f",
            "57c6fa40bdfbb848",
            "187af62fc84b4b51",
            "a4e4130d0adee857",
            "86823c71ee386e50",
            "5763f4a315b62ff2",
            "4ff5bed39f56025f",
            "402a76b1b8b9924c",
            "acc4ca7b4bc63877",
            "d64cc95830e78b92",
            "959aacf9406c1005",
            "0d5e086ae54d8954",
            "9fcf1e9c2327ace2",
            "66a26fba5314391b",
            "5b9ee33a0517a908",
            "1d8dfe5790279df5",
            "0ab5f0bf22244d60",
            "6b01ae78260aef03",
            "2aee2180258f2d8c",
            "56eae310f5fa8b6e",
            "68c65e3a3d3e3b2d",
            "35099693835b4e22",
            "5123691b953089fb",
            "511999b7729e7980"
        ],
        "x": 14,
        "y": 2179,
        "w": 1412,
        "h": 322
    },
    {
        "id": "61d5fa38c7dc3493",
        "type": "group",
        "z": "4feb0669cb214335",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "3a17ae5a8824bb81",
            "d897ec893a080acf",
            "c2fb23f074a639dd",
            "a1a841d282f7fb49",
            "1e85ebc074d7adfc",
            "d5305dc51114482f",
            "a0293ca7238b1f87",
            "2e3bfce2baeae8ca",
            "1906bc16bd18f763",
            "7560bffe1964479c",
            "f7a59fbd49e3bed1",
            "1e1bf9c66fd1d2ea",
            "db92c248adc383cf",
            "589a143d76bd09db",
            "c9a70d6d9daea7d0",
            "3a06b88a2186222a",
            "f28555bf2d82b5f1",
            "af79965dd17d331a",
            "1e559befcfc02beb",
            "3259e244d022f8ed",
            "9448859d84d1f60b",
            "43be4b49ab54e39a",
            "64d0b0e0e2064c23",
            "9f02c82a063efb56",
            "37733f560534311b",
            "82d0f1c093fd0f57",
            "64ebd5c6ef5f41cd",
            "fc51b31c8a5d0c52",
            "d856651ea58b0a37",
            "583dbd99f4f5df95",
            "0d982f59deb4f33a",
            "5a741441d96c6777",
            "d56a0667ee315181",
            "fe09ab306ff1acb2",
            "21db9f9947f993f2",
            "ea926cd1c3cf6689",
            "9073507f02e70669",
            "504180283454b7d1",
            "03bc1b3628c5262e"
        ],
        "x": 14,
        "y": 2519,
        "w": 1412,
        "h": 442
    },
    {
        "id": "56b0ba9ca855f95e",
        "type": "group",
        "z": "4feb0669cb214335",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "45d3594ae1ddb18d",
            "fc0ed8d91702d73f",
            "e8d3363cb22c5e15",
            "30edb62ba407c304",
            "f87af4e9604e43fa",
            "b258938bb0d12756",
            "c8a16099bb04d8a3",
            "2cceb0b669ce90e0",
            "6512c67fda6f0421",
            "1ab87eb3ba705d33",
            "b136ddfb594ab907",
            "5dbf69434580ef22",
            "f27c2cb19c7d6d62",
            "bed655225863719e",
            "0918725de3f03163",
            "acd28d5fdde03bc7",
            "bc4f2f59ed82670b",
            "3d3963f5941e745f",
            "c949f35283c882b2",
            "8d33aa94b4c589d5",
            "3c1504357bc03be5",
            "cf8e305f6376f7d4",
            "4ba3c96db35f1920",
            "64ecdcf2af476431",
            "42418cffb1dc54d3",
            "a3c0c0a339fcf5c4",
            "c01f7ab0a3c7b882",
            "3178653cc30dfea9",
            "0a59d7912a3b9e2c",
            "8356640309171fcc",
            "80f1c09cc8578eb6",
            "4dd130cd6a7d6d12",
            "e19b1e6709f9c81f",
            "ebe259698929cae7",
            "b9d7481bc4a42e87",
            "8f5c689f392145ec",
            "afc19adb8380ac28",
            "a420ff5baec380a6",
            "8e6e92704a323e43"
        ],
        "x": 14,
        "y": 2979,
        "w": 1412,
        "h": 402
    },
    {
        "id": "cc4affc8849c056a",
        "type": "group",
        "z": "4feb0669cb214335",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "1f5dcb06a6e57243",
            "a239df5a14ca35bb",
            "340a21779e3bea73",
            "cf7d6bc3a9a3254e",
            "8d388e35e02685a4",
            "8b3a1ce404a0df53",
            "b54bef6bf25879bb",
            "1ccf5b535b024a98",
            "9eddb4284a5b4e2c",
            "9364fa6ddec01192",
            "ef725e086dadb90a",
            "736eb095e7207b94",
            "c450efef81259026",
            "a72597f9fa9c5dce",
            "fb868599aee62e11",
            "fc96eb2c56cd3419",
            "c2f9c5f60352868a",
            "81838549ec2081bb",
            "a188058e483b3db1",
            "c68d097b0f783ff9",
            "c4875e083ab94bd8",
            "9c5f3fb90626791e",
            "a76c08c13da708bf",
            "9338895ce67f511c",
            "c28dbbf38625c2e8",
            "5ff5896b9a14d0c6"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "e16e4b927dd38aa9",
        "type": "group",
        "z": "c7e2c1b5cad83a3e",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "a97e90b56a62740a",
            "862744f748253dde",
            "ea9a50706db0ea16",
            "d4b3e13de129e449",
            "97ecefed2c67ebf3",
            "2473b59670fcdaaa",
            "6b5f9fc00666a151",
            "638c506dab58966d",
            "3fe2dff842491f9d",
            "c45393125bd5565e",
            "6ffb02f5ae61e2b5",
            "3314b253d2f1ad33",
            "d005240ad02ce9ef",
            "4d767ac8b2e9063f",
            "2f06843d0b973b0d",
            "a274498f3b3f5ecd",
            "39bc8a2d056eaf0c",
            "f91a56c01e7dccf6",
            "c6fcb6ec54933462",
            "1db508a54d02bcef",
            "6f94234eedf60212",
            "0fdd01a3bde50a0b",
            "ebe9d62502738118",
            "7e3f8ce72460670b",
            "191fd323dc7ba12c",
            "28a6998487f08748",
            "316d886b8ee5e8a9",
            "2d405789ca8ab816",
            "a98f9406b3fb6580",
            "e81700aac119abe2",
            "cf41532160fa77e2",
            "55df0f11940cea9c",
            "52ae850dafe036ba",
            "43c8582a6728e153",
            "46c4c3d66f88a690",
            "876f02205aa942cc"
        ],
        "x": 14,
        "y": 499,
        "w": 1412,
        "h": 402
    },
    {
        "id": "01ce21657a315198",
        "type": "group",
        "z": "c7e2c1b5cad83a3e",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "1cbe09737beee927",
            "38fa20a9a4fab507",
            "ee93662533ed3321",
            "c08b28131ecf857c",
            "c296caca3dd3fa28",
            "42ca2045e02c9a41",
            "3061b0c5690d3c36",
            "151289912bc53d35",
            "5d4edd51b247f00a",
            "561a55861adea393",
            "45a46c7ecfbfdd0e",
            "67509e6c13079a68",
            "4e54433753e49719",
            "34f3741e84f4ab53",
            "66fdce3b1115c8cb",
            "d66e218122c08739",
            "5066c3d0b6f01c90",
            "8b01d38633671f68",
            "0746b3ec12c649c9",
            "2d021c24bf46c842",
            "60a7c3bc96b723df",
            "f392cb3ee6f357d6",
            "0021ae387ac9ee34",
            "36ad7141b55e05b2",
            "aa11bce66ee08da2",
            "b3e513d383165d8c",
            "d01adf5527e2449a",
            "c3c539be88b2ff59",
            "96f91e8b2cdb9ec3",
            "aa05e15048552810",
            "ef0574a96e0d3d1f",
            "9104d8717ec08d68",
            "1ebe574ea8e860a7",
            "6c60d5df07d7c401",
            "13435ce9ff419659",
            "b850d5c23630cc00",
            "da05800ebafcf794",
            "84069babb8ab55d8",
            "6145053793d0fd38"
        ],
        "x": 14,
        "y": 919,
        "w": 1412,
        "h": 442
    },
    {
        "id": "a8c983974cf6b0c8",
        "type": "group",
        "z": "c7e2c1b5cad83a3e",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "9d8f1361a3c61707",
            "b98291cd48ee1a0c",
            "65efe14e6d052cc6",
            "e10d3000c399c8d1",
            "bf756f930492bb57",
            "45071e2766ca23c2",
            "7f045da7f0c9b484",
            "0dfa404cc0511594",
            "7ad8466c0b700a32",
            "07872141a0bc6579",
            "2a7632d2e9df8224",
            "086801c6e172419d",
            "188312dcc70890c2",
            "5687661df5f30b58",
            "1ed3edcac4bdaaf5",
            "28d2ae6019578958",
            "b6b85f6044ab8494",
            "de05a73cccca432d",
            "e1f2188817cd8e2b",
            "9613249b4a7665f9",
            "f8bedc05f28a351b",
            "4227eaa6e6f0494c",
            "50c5ce3aa6cbaec1",
            "dde333ccb8e762c6",
            "87baa20645efab95",
            "74d381778a8708ad",
            "7dc87617f79ad763"
        ],
        "x": 14,
        "y": 1379,
        "w": 1412,
        "h": 282
    },
    {
        "id": "cb3906ed62de1d6d",
        "type": "group",
        "z": "c7e2c1b5cad83a3e",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2f8a85b5a4e9811b",
            "ec63ee3a8cdafd55",
            "b3703ac52929da57",
            "2ed27ce004f46378",
            "cb02d55173eb6d07",
            "f9963cbe02999d13",
            "ded27f0562a15269",
            "ec2f8947a5adb7a7",
            "53da3ec32850feb2",
            "05d1e8e970059a87",
            "7459abf9d2b83c6a",
            "9754998a65d15bf7",
            "75df49ba06ee6c44",
            "2401c9d3ced4343a",
            "47e543e312442bc3",
            "cf71904842ce47d5",
            "459e541055f44af7",
            "16666ee164ccf552",
            "560528e711a845cc",
            "4af97f6247983196",
            "e99eb169a48d4259",
            "e3199c77a7aac31d",
            "670faae6d3a94b03",
            "c77d2750ee8e5665",
            "672767f298ae11c3",
            "a50eb664a1fa5553",
            "0a11143006d4f516",
            "c27c5c5c74d3ca9f",
            "6c3573fb4b87517e",
            "b12abbb1c807d5a8",
            "2349d3936975ea05",
            "b05940a43153a65b",
            "fe6156e25790eb29",
            "48d9f9db0eb3c77f",
            "b89959432850d4c1",
            "4df62d7a30e1bd99",
            "d4a21f1f65cfd01e",
            "a692280ffd9b5152",
            "f07e2fc41233f579"
        ],
        "x": 14,
        "y": 1679,
        "w": 1412,
        "h": 442
    },
    {
        "id": "6ea4606e56d3592a",
        "type": "group",
        "z": "c7e2c1b5cad83a3e",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "8b4b7d281502d225",
            "0b1bca3afce05c52",
            "df5463b4e95a6d5e",
            "bb47db2a8dab37d7",
            "0ba3296d694a082b",
            "95c68b9eb7025a44",
            "10fb7e0046546a73",
            "382470e90dc9db57",
            "536670f580511f7a",
            "e97499f6ca20111c",
            "cf44703895cea6dd",
            "a1d133e414302c66",
            "62118236f8850b69",
            "9e0382b624739f64",
            "c5d70330c2ad03d6",
            "12f5c0da250b615c",
            "09ad200f911cd975",
            "bf57aafdf2ac7b50",
            "407b8e6a8bd67cf4",
            "8ec6a6e599d91939",
            "54037ccc9f54caeb",
            "e3e32b4cd860988f",
            "ecf00c6e72249202",
            "78836b800fec0aae",
            "d1662026a52fcc42",
            "10106fb68f8df52b",
            "8f2237ccb09d183c"
        ],
        "x": 14,
        "y": 2139,
        "w": 1412,
        "h": 282
    },
    {
        "id": "e01cd84c0cdee455",
        "type": "group",
        "z": "c7e2c1b5cad83a3e",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "12360e8240435f7a",
            "ec71c9e256df43bc",
            "7132de261e9b4537",
            "cd3040206958a8cf",
            "71a4ca554db08da4",
            "c81363c7d85d0f25",
            "279fdf4653327040",
            "4c0f56ca040fc213",
            "c11705c28a546277",
            "9c2b3e579e335474",
            "25e3739cf03226b9",
            "bba07baaa6edca1b",
            "bd675c710677b460",
            "3005e5b70c21cccd",
            "5d3e6e9dcf97240d",
            "3bf373b894c4b285",
            "b734282c716ac03b",
            "fe6a2f58c176226b",
            "bf55358ea57d617b",
            "b957f183615f0b9c",
            "632283999d35a622",
            "898b483490d2f93b",
            "0811e1b7b3c28f0d",
            "472567166858dc48",
            "0de888bb0720ff39",
            "f3e1e6d00f535c77",
            "939140573d5e216f",
            "cd19d8967c09fc24",
            "e2f86a4ab93e3916",
            "4c63580c2272a064",
            "7a1309016e7b6977",
            "6b2ca5ba19227e5d",
            "1f58dbc8b0f7383a",
            "7353c59375c30c8d",
            "763eb359cd91aa1f",
            "ef09c51c227b8c2d",
            "c12f6ecbe4aaebaa",
            "10f71563192e12a6",
            "dd23e750208b81aa"
        ],
        "x": 14,
        "y": 2439,
        "w": 1412,
        "h": 442
    },
    {
        "id": "49ae933f55459fbf",
        "type": "group",
        "z": "c7e2c1b5cad83a3e",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2e99601bc1745924",
            "405980d50f99207f",
            "e0962740fb406885",
            "ad9f6e480c402bb9",
            "342e9fd2e34eb89a",
            "4fd981ea34ff65ac",
            "72418fbb94301902",
            "415055d6a69eeab1",
            "8abb3afa94d39850",
            "e65fb220d9ad32a8",
            "36c95447ddabdb75",
            "a8ce7029abfb6123",
            "330bdfb949d89f15",
            "c7fcde39faa4d0cb",
            "34ab3a5ba0ac7f83",
            "7bae5233f626e748",
            "4bb7711a407aa94b",
            "ef564e6ca399d359",
            "a577adac2d008e75",
            "ff933e691ed37c2f",
            "8d5a0a6bc9b5e4db",
            "dba4907b0c737815",
            "c6e438f01fcc68da",
            "dcc2fae9293f6422",
            "c2756a85f5afcd67",
            "c9839677598d8c89",
            "7d89f263b61e9dfe",
            "be2f0421d79c1b3a",
            "011f822ce9c38475",
            "80cceb22ba285a8f",
            "3d8c7af3b2451946",
            "5b82d71e63873092",
            "58aff805d7a95447",
            "352f51895b85fa45",
            "61f1da78502515a1",
            "72f6d249e2d1ebd0",
            "b861f6b595864373",
            "cb8de41f3a0f1541",
            "17d8503c9024be99",
            "66b271e2e5f7b3c4",
            "4d565312441017ee",
            "3210f9b1429bdced",
            "5a23a2141abd91cf",
            "1ba5ebf2b092d832",
            "f384ff02ee20a297",
            "c679f615f1208f38",
            "758f895cb618db92",
            "33abbf0aab29ebc1",
            "3786c33df25fd5b7",
            "be9e87d6a2e65c4b",
            "b2b59fda9e016cdc",
            "154157524f85b46a",
            "5c30a2034032432d",
            "cd364e8f59952ee3",
            "abdaae9af381d914",
            "091bb59ff91efcf2",
            "65e02974c04c8ec3",
            "c1d9d70568ddaa08",
            "9c9cacced9dae360",
            "a78401a289f0f61d",
            "b19cadc513e8c9a8",
            "5969daa0e1f88ab1",
            "b6278f9f424d8271",
            "b70e9a8918035acf",
            "fe07f9115d939b4e"
        ],
        "x": 14,
        "y": 2899,
        "w": 1412,
        "h": 682
    },
    {
        "id": "4d89eb271f846637",
        "type": "group",
        "z": "c7e2c1b5cad83a3e",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7a77ebb226db3f8a",
            "1def9163f1f98fbe",
            "18986d9ca29bd90a",
            "84574c84653cd415",
            "5ce648d6857ebf3d",
            "75aaedef5ed88961",
            "6d5071061bf737a8",
            "3803faeb283dbabc",
            "f7ea6a44635bdbad",
            "30b2fce2acad41fa",
            "35afe8baab7f666e",
            "4362e46d3476fdb4",
            "4d58e42d9ea6e2e0",
            "fdc5711f848a6fdc",
            "b585dc137b305dae",
            "7a496cc4bb6fea49",
            "f3742e86422ce055",
            "a5c54b4ada9bbef6",
            "5d5c5e571a9bd7eb",
            "02fb05a78c08f05c",
            "1565ffd087be3562",
            "31c1cb1bf2786985",
            "44f118cc82abc9a7",
            "7b8e340576a26067",
            "f1b4e2f681c56a5a",
            "ac556d056992d8f4"
        ],
        "x": 14,
        "y": 159,
        "w": 1352,
        "h": 322
    },
    {
        "id": "67ca324be2fb8df8",
        "type": "group",
        "z": "c7e2c1b5cad83a3e",
        "name": "AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "7c7a83e8c69c3568",
            "ddef01070c3113ce",
            "740f021d1d66824a",
            "e19fae256febb82b",
            "35fa8456ed5d1523",
            "40bded919ffc2963",
            "7f0206565cabd60b",
            "7fbc03e50fb9cd52",
            "da524a721705631c",
            "a48135c8d693cb62",
            "571e8d46cb58c6be",
            "606b8b8c8454691c",
            "c9108f2c6abec259",
            "dee4a4b7a8553b56",
            "eb1fa97f7e65636d",
            "e936ab9c75eae237",
            "818c32b8843252ea",
            "49e7cb44a52af4f9",
            "3155d2ba94e902bd",
            "daab1106932918ec",
            "b9aa2bfc5f5d2d07",
            "177ae5af39463442",
            "6040558ea933231a",
            "96bff5a0733de9a6",
            "3dbf359eaebe4fec",
            "cd8ef17cb223938e",
            "064d3a255aa10fa6",
            "c856fcb2c1dbe6a2",
            "e5006d52ab652249",
            "7d3169e58230eedc",
            "216e270e7762b43c",
            "6e8d8435bcbdadd6",
            "a367842895fed011",
            "d326c4981669858e",
            "c96e2a7a0ac1a0c5",
            "485e6e3e057da4b9",
            "a834b0ba80b94bfa",
            "3ef81dad672b11d1",
            "4c6b531abc920152",
            "d90916bb5cc7acd4",
            "af45f14ce9910c4a",
            "35308c64fcb16997"
        ],
        "x": 14,
        "y": 3599,
        "w": 1432,
        "h": 482
    },
    {
        "id": "19adb3d64a075f2f",
        "type": "group",
        "z": "c7e2c1b5cad83a3e",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e41715d38878e30e",
            "b773e666ea45a1ae"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "731a145cda9fc44d",
        "type": "group",
        "z": "4feb0669cb214335",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ddbc59cb0df9f9dd",
            "979e000eda0619ca"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "2c93a492e05ae8a6",
        "type": "group",
        "z": "10b1bc1a080d1c97",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "d732f2fcfb8fab82",
            "44b218759961cd6d",
            "6f2d34c40b877c8a",
            "fb763cd6ee65faf5",
            "f11293191240944f",
            "e8ede418ae940865",
            "3601054e962a8aa0",
            "033b6be5e7386d0b",
            "0abe7b491a40426b",
            "ab977a5ba1c49aed",
            "e146b3cfe80e21bf",
            "6a9b511bfae8ade8",
            "cb3b8669f394a290",
            "96313fa55c0c17a7",
            "33ca7e29a0a17826",
            "42c622fec4ede841",
            "c55149a05769af5c",
            "35356e0a12c26c24",
            "c22107e90bd5b4f3",
            "ef3dfb2165dc5417",
            "f3a00d5cb129882b",
            "c81159504f81d9bb",
            "26363fbe5953f011",
            "4ddb8ee6f04cbe36",
            "1654e282aa02de3e",
            "a14b65efa01d6659",
            "6398c5795321298b",
            "af2d4533c6c68faa",
            "f42d4334c7cd35e3",
            "b3bc3447f0bc4445",
            "4cc59134c8562fb5",
            "2e83874cf500c67d",
            "940c5f481709a826",
            "dfd9fddd281468cb",
            "8563c5f158f70a14",
            "1811302ae7241aab"
        ],
        "x": 14,
        "y": 499,
        "w": 1412,
        "h": 402
    },
    {
        "id": "5da9012dd6e33327",
        "type": "group",
        "z": "10b1bc1a080d1c97",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "8c8545167aaac001",
            "823079c611392827",
            "a090d32dbc4104bf",
            "39e9bedb349dced1",
            "c6799d89fcae7c1b",
            "0c189ca17298a00e",
            "403210667906825a",
            "cef9143d56fbc5fd",
            "bc7f5ee20914b346",
            "07ae788790555ff0",
            "d27f5a28d19b4ee0",
            "d9b5803140c4d08d",
            "08c5405e4cc9b67b",
            "02e5b8233e690065",
            "2828381d66222e75",
            "6ed9284de7dcc005",
            "d3d23d7be3323ebc",
            "b2133ea153d68ea5",
            "4b58267eb2e1154c",
            "86d35e6d4a7775b4",
            "a7a3faa772c993e8",
            "40540ebbf08f61f1",
            "1f5a4b78b2d0bfa5",
            "e921fa7f6c1e5dbe",
            "9ec461c2f7e70c70",
            "2e17fae187b6b4f0",
            "d4f6977df34abf85",
            "895e6d72bbd975fd",
            "5f98bd7144336867",
            "8bb4ec6c453a15ff",
            "94105e93a64de904",
            "cb3ae45c03e31d95",
            "a14e28b4ea2a4d61",
            "5862426d31dac218",
            "9e4e677fdad228d0",
            "761f2250f9533901",
            "fcaa1cf32eb454cc",
            "3881a8bde2fd484a",
            "660e468f2d983769"
        ],
        "x": 14,
        "y": 919,
        "w": 1412,
        "h": 442
    },
    {
        "id": "1b38f1289a9e8ba4",
        "type": "group",
        "z": "10b1bc1a080d1c97",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "eae2ffb399b0fd2e",
            "97d66a4a53cef514",
            "75436b5dd2ada1a2",
            "e7edbb57c0dadf1e",
            "bb179fced65a3282",
            "9dc2f871b475cd27",
            "9fe56ce469d79158",
            "b336d5a794bcdbfd",
            "200bf3769f6c83ca",
            "caa5c818432a3b8f",
            "bf93d77e306bf040",
            "d3f3a764f1ef3f84",
            "f58726d1cb19ca62",
            "284101ea74ce6433",
            "5547ab2f363e0003",
            "c750ece98ee4b3b2",
            "9fd3b936cea333ea",
            "79a6472a7504f727",
            "f193db42ae8add46",
            "4e85590eacdb9df7",
            "82bca7d8462cde4a",
            "a7442d2293eb693e",
            "d6d1fb863f9380cf",
            "0548da358114b868",
            "96c25f297ef1ec63",
            "9365cfeae37c8a46",
            "3a549dad39f504bb"
        ],
        "x": 14,
        "y": 1379,
        "w": 1412,
        "h": 282
    },
    {
        "id": "ad7826bbc28a2892",
        "type": "group",
        "z": "10b1bc1a080d1c97",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "78c8f1d5a58f719b",
            "29ae310bee8a4de2",
            "aee1c75da3775f34",
            "4b39722b3cb646d7",
            "90e255b3c382f367",
            "39fda7117840df84",
            "e0437801b1215cca",
            "eaecec6f3f057931",
            "d66cd396f57072c8",
            "58314c6c7611e929",
            "4372217976d86c78",
            "adaf6e9ad4be9777",
            "86d56e8880524160",
            "d55787c201ca82f4",
            "8a59181d2fe995d0",
            "abbd7b2cd675edc0",
            "5829cee2efb4cfcb",
            "9651f0561793287c",
            "06c085d74d815596",
            "181739e6a1a77587",
            "15a0b28eda4bfafc",
            "8624f2337e47349b",
            "e2b0e2f9328430a7",
            "a58f7856d4beda82",
            "f052c3cb86cc1c22",
            "90b5ef68073d0e4f",
            "ba6bd4baf587b2c8",
            "299dbbe40767d93e",
            "65191121b6d100d6",
            "dffa1aafac79daa5",
            "6e8be8c199f861e7",
            "f2620eebde22a286",
            "0bc7ac60e72ba821",
            "8cf9d8eec46061ef",
            "dbaf739a176ffdd8",
            "04314a7e44e30f04",
            "107293e27b64bf8a",
            "081986d26cf5b3f7",
            "d9efe80810868eb0"
        ],
        "x": 14,
        "y": 1679,
        "w": 1412,
        "h": 442
    },
    {
        "id": "b3ee09e8c7cff3c3",
        "type": "group",
        "z": "10b1bc1a080d1c97",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "680297395003ab46",
            "8301278556863cbe",
            "db92586b83894c8a",
            "90233a68114a3545",
            "4f67e45b37b16f04",
            "bea6291ca73faa37",
            "e975183e5e264506",
            "c3f4f9dc10c9b5d8",
            "ff13654e00621c88",
            "023babc53cd5463a",
            "edff29beae6897b6",
            "aec6603443761b59",
            "78239ebb893cef73",
            "34a93d802388341e",
            "b892c6304e22f2fc",
            "996fee36ac43b14b",
            "c9ce96c7f03c821e",
            "dd05281f6936a23e",
            "6c11826965c8cb53",
            "6adf48490f3181b9",
            "020a2c8917c33bb8",
            "7988109134128001",
            "c211f689e435f5b6",
            "f214c7c825805931",
            "b024fde72deaa993",
            "740698f4d88a0546",
            "685f4afb49683719"
        ],
        "x": 14,
        "y": 2139,
        "w": 1412,
        "h": 282
    },
    {
        "id": "57783af319a2be42",
        "type": "group",
        "z": "10b1bc1a080d1c97",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2e1fa00f306fb63d",
            "d0bf9efba8b59f83",
            "86ac93f4f162458e",
            "61bafbb0bf984e99",
            "84c6ead00ab5aec9",
            "7da16c8fb62ee4de",
            "0f22f6d26e2e65fb",
            "05f748e3cf231666",
            "91843166c72a9ce0",
            "62520645e7e84966",
            "db08ce60f94eb8f0",
            "c9ad8e8afe9d72a7",
            "cf859130a81353ad",
            "f7356d3e4352d015",
            "9ca3fe595f3d8c9b",
            "5444dcf07446e7c8",
            "7ecf11c082772889",
            "0cd69f16b3515e41",
            "0286e0687c1a5842",
            "10557fa99f3f8b2b",
            "af28b665cc9de7c0",
            "68512740a6cdc482",
            "4f99df47e6ec9b3e",
            "977892956f966488",
            "e869c5cb3d893310",
            "7ee12b8bd55f4ee8",
            "3e9d4176859aa0f8",
            "f21b26b961bce8e9",
            "2d2979e3b0e12cf7",
            "ba7f3c5e48fc6a6e",
            "5539efd1d1bc9483",
            "69f2f70e72a1eba1",
            "047b969555880b9f",
            "51f7404eaf605192",
            "d5dda0d563661bb5",
            "ccec59d5208758d0",
            "cd7d9eb664216023",
            "853d0c1be75e50ed",
            "3455b0b902abfefc"
        ],
        "x": 14,
        "y": 2439,
        "w": 1412,
        "h": 442
    },
    {
        "id": "8e666092d1c29a2e",
        "type": "group",
        "z": "10b1bc1a080d1c97",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "41ca4783a2e95289",
            "8b5732b8307d41c1",
            "f36918feb28b7869",
            "d76f980ad041aa10",
            "bee2d2701f3cca8f",
            "a7d2e08974c13ef4",
            "d3cf77cf305db249",
            "c284d3144b9d4dde",
            "85d4523b2d5785e3",
            "ccfc8911e5ed7881",
            "664757efafc60936",
            "1e476584cc643844",
            "e31d64b572984432",
            "a3a0089c976b7868",
            "990b65734199e493",
            "1ab837805ad6dfed",
            "dcee1bc321514525",
            "0154720d4bad0136",
            "7b2c36a22817d20c",
            "0b18f2bfa92096b3",
            "510e78bc9edc3b7e",
            "abf3c351ccbd0c1c",
            "498388c2d9c1fd3a",
            "8110bfdb17349b27",
            "2ffee207f1ce6579",
            "d7d1c022c4ba1aa6",
            "20cdd5a51c1f4a9e",
            "bb283311cc21b8de",
            "264ff8dfabad92a9",
            "02f2508fa5d14912",
            "1a2cbf13bd3b1d77",
            "72b8a09b2a578928",
            "1e1b742279dab193"
        ],
        "x": 14,
        "y": 2899,
        "w": 1412,
        "h": 342
    },
    {
        "id": "bb2ee30b1d795c05",
        "type": "group",
        "z": "10b1bc1a080d1c97",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0e1346dad496a51d",
            "920b99a9e5a4fb41",
            "2bc998dada27fa53",
            "5c55b07cde536769",
            "de21d8ad2752e2fd",
            "58f2f633a644beb6",
            "cd9b54e4c9362670",
            "856b539a4421b65c",
            "61f6abb8bde2c3c6",
            "792eda2a554543d5",
            "9c20f15107cb34a6",
            "7beec6dc604b51e8",
            "76f2c4e5cdcf1c9f",
            "1384bca399f282a9",
            "37cb6b70638172f0",
            "a6fe20e4a0b95384",
            "140583eda46e61e1",
            "f6921b8d3c8c2ccb",
            "15a17a0c4ba2fe77",
            "fde5ac2c8c34b46d",
            "d7db6f6789efdf2b",
            "a3d765ae7c4b7467",
            "35d6c3d68d15ba79",
            "ec6a9d2583c13b06",
            "05f0b9ac2290d482",
            "87c00f0165672734"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "c11f55de86be71ae",
        "type": "group",
        "z": "10b1bc1a080d1c97",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "dfc3cb125230ea8a",
            "4ff7e5540d65bbe9"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "27ba04bbd5f44787",
        "type": "group",
        "z": "10b1bc1a080d1c97",
        "name": "AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2a0d68afde739571",
            "5039d5799a98a84c",
            "bd0ae015466bcb5a",
            "69174c8d99769934",
            "784e249671d73578",
            "bbcb39ae86bc5ec9",
            "d6ad3f33fd015d85",
            "98989c52e47636a6",
            "da5f8f5c72357935",
            "efec8cfb5eb730d0",
            "0c5ea8d0c13eeda6",
            "013d1a4f7050c244",
            "3085f69e728f3d79",
            "e53ffe408cdf2c7d",
            "1d2f18486d7da8ea",
            "e501dac77a47f9e2",
            "fc8dc51ebdde782f",
            "0fbb5df3c9aee349",
            "9a8b9f107f1efd26",
            "9c6a76171ab89ac8",
            "8bc46d0482d63f1b",
            "546ebc240337e791",
            "02a1ecfbf2caf6cf",
            "8daafb26ca01ca0d",
            "ab936ac675fc0578",
            "04333e8b5e1551be",
            "c876be971dd0f5b5",
            "af569244a03b1fd7",
            "54c5d2f5708c574b",
            "3f5f1f1ff748cf4f",
            "7d5b1186ed5374bb",
            "427a6a105920b04e",
            "a26c477ef801c459",
            "1b466c87fa44c3ea",
            "448ab50fdc1ae161",
            "013c8fa434c10c03",
            "1f9ea1964b77de94",
            "ea9d57370d621162",
            "1869df1df1861297",
            "60b3f6fdadb4339e",
            "1d8346674a9da3f3",
            "f7a5c63c31211355"
        ],
        "x": 14,
        "y": 3259,
        "w": 1432,
        "h": 482
    },
    {
        "id": "fc81fcc14c459ae1",
        "type": "group",
        "z": "ed287fcb96b33d19",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2e5704f6057a354a",
            "aa6a596e2b82c4e1",
            "5db4bef4f7111dbb",
            "13c2c526232277de",
            "660d297551df252a",
            "7a06e1dfe29f9a00",
            "9084d28ecab02f7f",
            "82cc9341d6ad9891",
            "ba2383eae25720dd",
            "2603b4b8ce4830f4",
            "426db6c5a7aee838",
            "fd708c135b13b47f",
            "fe1b256806d6638e",
            "66a55696301a577c",
            "d6a2bd5ae5feeb4d",
            "101200a4a27f55a6",
            "1912fc338fa17051",
            "256a5f4f0532e0ab",
            "f0df46ce73ac0ca7",
            "fc1380e5223a6d98",
            "2b44118377f0fd05",
            "197926ce7abcace7",
            "eac69e1d7b6a8fe0",
            "a91b7f33181021f3",
            "eaec33463e767442",
            "3ff1a37b60e26933",
            "7b28770b68cf1785",
            "e8d533c0bbf5c984",
            "4d1317c5fd42e92d",
            "3ba10b4090510a5b",
            "16ba4bc544f78746",
            "68d59d4ecb8acdcf",
            "3533efaca7cf220d",
            "c64183b9b1189b08",
            "996d7ef549b25339",
            "7039262cea172545"
        ],
        "x": 14,
        "y": 499,
        "w": 1432,
        "h": 402
    },
    {
        "id": "15d256550a53d568",
        "type": "group",
        "z": "ed287fcb96b33d19",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "3558c251c449dc64",
            "b82d37cc0aa9272c",
            "39562f7f4f05dab4",
            "5c460a9388128f18",
            "1a9b4c438168afd0",
            "d57c2281ea98dbb6",
            "42eb6ebd01d2553d",
            "b23005f76222c20c",
            "4b2f0986591c4580",
            "b0d1c5d3d4fcd6f7",
            "a848c82bceac4c2c",
            "b854a605f6f87b73",
            "38f903bc61f24cd9",
            "5091edae7d54d7cc",
            "d29837275c4ab632",
            "5f79f2366e6256f7",
            "ea01bd377e174c8c",
            "f860ca11c01e5880",
            "19fba1105f6e41ad",
            "13374984f73624b7",
            "8d67cd89e23011d8",
            "018fb36e92823334",
            "f58ca4abaa585628",
            "3bb918ba5bf3c227",
            "5f53b8325f978a75",
            "69c5ce0c3463740b",
            "e0421f2c0c0851f0",
            "9a8bc37d698cc675",
            "18fea23d0411a5ac",
            "0dfcd8f206b99c0e",
            "2dbb334e4c6190e3",
            "47f0c1d64b6e45e0",
            "fd39fec66a4010c1",
            "dfa5443069cf106d",
            "89069690299d0243",
            "0833c65820e8fd1d",
            "a3d5451fa1796b50",
            "68af039378541c72",
            "62f6fd580dd926bd"
        ],
        "x": 14,
        "y": 919,
        "w": 1432,
        "h": 442
    },
    {
        "id": "5bcd107a401bf7ba",
        "type": "group",
        "z": "ed287fcb96b33d19",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "e1b60ab8d74efaca",
            "b1571c59bed4ac13",
            "c2d8d4fc62763707",
            "12c5355198959042",
            "c1cc506b93f00d2b",
            "1187e6c2cf101a83",
            "8bdc26972c29bedc",
            "2d8da1a0a863d3f5",
            "0533ef932d4a87eb",
            "3963ffe7c0b50885",
            "baca5cc69556a3bc",
            "26df0be39fc6c156",
            "6694035c40f2c855",
            "4c15ef796a81649b",
            "7a8d5dd5dcd0ed50",
            "84fd3301d5c81230",
            "53cbc147dec88b98",
            "450a631df5507e1e",
            "360cd2bc06e14e9c",
            "c595a3310c2d4a7f",
            "3161dca5b2c41b20",
            "62f438e09152eef2",
            "25551412d77812a0",
            "46ee74b06881a1c3",
            "c03413b3cb315409",
            "9490188fde149b71",
            "517706f5eb1ed808",
            "bf097fec23c37a99",
            "3a14bec9d1dd52af",
            "9d73df34c99dcec7",
            "1fa39724162c0dd3",
            "1836499616556488",
            "046a13b4ea8baa01"
        ],
        "x": 14,
        "y": 1379,
        "w": 1432,
        "h": 362
    },
    {
        "id": "480779416c5eea22",
        "type": "group",
        "z": "ed287fcb96b33d19",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "c20ccf2ea15e5aca",
            "c4299edb236e0d55",
            "e311e54ee0b680f7",
            "0603f7f5e989a171",
            "ec5c5a4731b61ab1",
            "ea846b4a02571ec9",
            "f605573b41326c34",
            "dfe764603117f44f",
            "c86df2d5d63cecf0",
            "9ffdeb3d00dbeb45",
            "166efd2d9b0b9b13",
            "df82fdd2d29e973e",
            "b07f20fa713b5372",
            "a60db929e0b0fcee",
            "fb57b48ce490ab78",
            "b5329c7acb8787fb",
            "087cc4e66fc39464",
            "2c4b69d9b2291cd0",
            "37c52446202753d4",
            "d919b1462e61d963",
            "f167d737f7df8032",
            "5ea5027cfa3bc9d3",
            "a1b989f7cb2a2810",
            "32907853f4a645bd",
            "843df8a20995e3f8",
            "c56ae4c0a292b40a",
            "b279283552f096e7",
            "61d2cc681b9db02d",
            "670713dc33591ee5",
            "9f66859f53b3a712",
            "01f61173d3baf90c",
            "99ca0d8745073171",
            "7fc89a8ef451c224",
            "c7ab32d860ecee41",
            "ad162ee6d3bd3fdc",
            "0e4e91cca077fd79",
            "8f7e0261a4d30ba3",
            "e64b86391a81181a",
            "911f51b916ab963f"
        ],
        "x": 14,
        "y": 1759,
        "w": 1432,
        "h": 442
    },
    {
        "id": "b0016ee5fad80c4b",
        "type": "group",
        "z": "ed287fcb96b33d19",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "8a5f6f10efd4ad7e",
            "1c9ff0f6ecf67fe8",
            "08853025ac9796c8",
            "996e2ea18588db17",
            "f0b3476a8e972f8c",
            "99c1c0bb518d0409",
            "bff79f75186f6dd7",
            "5d13c602f207e231",
            "966417c3854ff887",
            "acf371aaf93e4a62",
            "a13c8a089a819458",
            "b67765f45da21854",
            "640af98af4aed2e9",
            "48adbd9db8c4885c",
            "a488e5864859f9ea",
            "5ba3cc46296712be",
            "2809ff7c4d1ed0b9",
            "7751198636bbf351",
            "a55a55a141b36b95",
            "955227c9b94cc74d",
            "754bf3a8e0dc7093",
            "c9de6c6ce7f3ab7b",
            "d13242b7e922d7bf",
            "b7e0dd783c2b7bbc",
            "49098f74462e68e2",
            "c40f883e3c4f3c15",
            "adca60d890f21605",
            "c8c8d2328190fbcd",
            "f0661252320c139e",
            "db39673c8e665d29",
            "9fdeb8425cb3967e",
            "29a6608c46f46860",
            "87a75205776bab30"
        ],
        "x": 14,
        "y": 2219,
        "w": 1432,
        "h": 362
    },
    {
        "id": "2b71d72e8437f3fb",
        "type": "group",
        "z": "ed287fcb96b33d19",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "50589ba53397592f",
            "33ad69bb8378cb12",
            "b278b9e11cd448e3",
            "50d0b79140480d33",
            "3570d308b2f3f8f3",
            "20866469c094058c",
            "fab12dcd4ee36abb",
            "33b2c9721d8aea05",
            "e3957aa6780d5aad",
            "d416f2b7c703b62a",
            "f8cab238002cae19",
            "b7cf6883129f5bc9",
            "10433a92550946d3",
            "b49fcb3466d637c9",
            "8621618c8cfd0b76",
            "9cb656678e8f3297",
            "64f6dcb2f57ad037",
            "faf2824e23e26b64",
            "444c4fba0c765718",
            "e52561e9c8b0b8f8",
            "bb4834a943ca8517",
            "4de36ede3683ab96",
            "886e7a92b844d593",
            "be0d65dba4eb341c",
            "17b964a0a12f5f46",
            "2cbb20dadefc6a96",
            "d92036a88f17438b",
            "9e618b1a6a4be4fb",
            "964d5dad204a3595",
            "43022f8edf8721ad",
            "aa4cba980e8bce88",
            "8c242590208cdda5",
            "ebddceeffcb0efeb",
            "e1e1029fd62c5008",
            "4946270e5c9bd8c1",
            "b20ad60a3010b078",
            "9447c69676925f04",
            "45a52a666e43d1a2",
            "46446512a675dbfd"
        ],
        "x": 14,
        "y": 2599,
        "w": 1432,
        "h": 442
    },
    {
        "id": "423dc7f0127c0808",
        "type": "group",
        "z": "ed287fcb96b33d19",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "9a427b76feaaa98d",
            "6cd342428267a0bd",
            "9f4a3e51723214a3",
            "13374e619d6fe8e6",
            "454010fdd6341d89",
            "4e80eaaedc9037c8",
            "3117c3359839f637",
            "811f02d25386779f",
            "70b03ce4a67e0980",
            "c549e0e4e7b9605e",
            "5059978d95da1839",
            "6944667a658d8a5a",
            "8f54b0636fd67a90",
            "12259a058e46fc94",
            "b0e22d354705a229",
            "3656f58e17585b2a",
            "0e5a05de438479ae",
            "f9e9778913be6a4c",
            "e12971e326df498c",
            "0fc039fa8f6d86bc",
            "d298bdbbd07efad1",
            "6247b8b97c9c952d",
            "ff0bf3245b5fd70b",
            "85646e55efe55d1b",
            "1733ef4f590423b3",
            "8463cea1da7e6431",
            "4d52446b86991117",
            "e342a11cd27464b0",
            "4d4672b70e1156a2",
            "c844e497532381b8",
            "9bf99e3621e3685a",
            "5ca7e512a07858c2",
            "ebf39acf64dc6c0b",
            "eff05bf2a4440172",
            "34f68f712dc03b22",
            "0f6139e5d7ec62e6",
            "95a296d07d0dbb92",
            "5db270a945807641",
            "8c85bef70b993ca5"
        ],
        "x": 14,
        "y": 3059,
        "w": 1412,
        "h": 402
    },
    {
        "id": "1397f3c281b5fa0d",
        "type": "group",
        "z": "ed287fcb96b33d19",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fde7cd2e0c25fc54",
            "691139d5c9fc75b7",
            "a84dae0c3df0b2e3",
            "eb7861776f8fddc6",
            "38be1d336c3d3577",
            "3c70968d397bc9f1",
            "813f888aa924c3f6",
            "3264c6b087acb2de",
            "d8a28789582f33d9",
            "8036e3cf2956684b",
            "86f03102f6a80984",
            "c39be5728934a22b",
            "7806e1e71f26446f",
            "b02cbd44343fd0d9",
            "e4173a1888642799",
            "7f9345a77c8a646e",
            "85ec4975a7285c5a",
            "d8403ea7668d1b58",
            "5862d46f486faec3",
            "ae6ceec40a1045a8",
            "6e6f486cafcd8dcf",
            "1ce8d9096de19e2b",
            "f49184d519599a6a",
            "99d92a6fb11b2cca",
            "2afe348352837332",
            "9dda4d8be89fb10a"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "0eb428f681f4bf8d",
        "type": "group",
        "z": "ed287fcb96b33d19",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5fb7a47714a5734b",
            "1b70f0db27edbee9"
        ],
        "x": 14,
        "y": 19,
        "w": 392,
        "h": 122
    },
    {
        "id": "e8ca79a8c374701b",
        "type": "group",
        "z": "0897c1d9a1c086e1",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "52c90681338b0db6",
            "fa75e582be0be436",
            "06e9b91442ae7734",
            "6cd629aa134824a8",
            "da763d711e23c2aa",
            "a6c1fe44a1f67974",
            "5c751f334bfb976a",
            "d94eb9a252a835ed",
            "16497e5195e668f3",
            "c62c4649a0f53bd6",
            "21ed6950f37af7e3",
            "fdb4f7f3d9e9ffd9",
            "35a510a08ab9c0a1",
            "124e8a98d6e53a1d",
            "58664cf427d6950c",
            "d71d677cf8d67847",
            "d5b4a2e9b9105474",
            "5fc5412f9f6d69a8",
            "666fe40b54438d47",
            "0e858fe06deb4aba",
            "e66aa037b4b63e26",
            "aa09fcc5cede5b90",
            "58dd4148d3e8a16e",
            "c3806d5f0976bf13",
            "0782b24a2f5b6418",
            "27f6585d56434c5c",
            "884640f56ead6be1",
            "3b8c9cd3b27a4777",
            "3627c17561c8547f",
            "6562f623920fe675",
            "f8889accf86e0a1d",
            "96eb2c34d287d889",
            "70df84f9f2d3b036",
            "f18bf76280dae088",
            "0c7cbad33415d994",
            "b98a5365ac493d24"
        ],
        "x": 14,
        "y": 499,
        "w": 1412,
        "h": 402
    },
    {
        "id": "0cd830752355c083",
        "type": "group",
        "z": "0897c1d9a1c086e1",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "04a1132bc89deefb",
            "823ff8048fedd88b",
            "827d8b9d32f11653",
            "4b63f8cfbfbfbb04",
            "34afd15958660a64",
            "0900888e8f7e9879",
            "cf834fdf886e137f",
            "941cebef60742f1f",
            "3baa9c7ec43146f6",
            "b5a4110ec4d54889",
            "f4bffe79633b4e57",
            "ba206150236b1ac0",
            "874c8b114165af4f",
            "7acf02099190cc85",
            "ccfe95543c7a37e6",
            "60fcc650078c851e",
            "34f5e925d90c245a",
            "5f0bdc6067802942",
            "890dd195ec90baeb",
            "8e69567ef73f85cf",
            "327bd3b81b3b0fdd",
            "715805d9070728c0",
            "23c3a14c0dcd06e0",
            "5691271c21dd622d",
            "77ad1086c5618b8e",
            "1308d9d7a4e3924e",
            "1f5098be73e65a76",
            "d94de5cf5f9134f8",
            "42b6c308ef73d108",
            "c477937805da5f21",
            "c8cbedb289b1fbf7",
            "58d0b86bcd20010b",
            "c6a873646680a9e1",
            "2ab8cfd579e9ba44",
            "b4dbc9d9379497bf",
            "3f35d2acf5910513",
            "2cb5055cf0f56215",
            "a87f85b5a9d30cec",
            "cfc703cad0f994ef"
        ],
        "x": 14,
        "y": 919,
        "w": 1412,
        "h": 442
    },
    {
        "id": "6289d52ae68301c4",
        "type": "group",
        "z": "0897c1d9a1c086e1",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "c90d6f1e203d8242",
            "12bbd4de68b521a6",
            "0c8e0ec0fcda64a5",
            "1a85c905aef4220e",
            "2d0acc2748853355",
            "29f1a1b5e95cc132",
            "283d72da5ef4445f",
            "0cf946e22f19c6a7",
            "7ac153f3dda06d37",
            "7778de6f657fc120",
            "2152d45c6b01dfd0",
            "3cfb48ca2b5a2b62",
            "6c02613f7ceca4ae",
            "8c46ee163cf14392",
            "d2582617fefdd494",
            "d8ad66cf18651604",
            "ac3923236cffccde",
            "c00cd614944753e4",
            "a32230afbca289f4",
            "5935b0b06a396b2f",
            "b86c7e828437bdfe",
            "e21776c61d49363d",
            "d60f52da09078155",
            "e7a008eab3e52815",
            "c4f9cce1ed4de86a",
            "217d023a5a15dcc8",
            "c29ecd68b3db03f3"
        ],
        "x": 14,
        "y": 1379,
        "w": 1412,
        "h": 282
    },
    {
        "id": "9fd5525afdee172c",
        "type": "group",
        "z": "0897c1d9a1c086e1",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "4932565303106bb1",
            "395b0acd6d055d35",
            "9040ef038b12db8f",
            "dbf4ace945ca467f",
            "ea8fbfdce25d5dba",
            "0e2c1e3a6bb6938c",
            "fdb79c9bc21c603d",
            "24ad93a664a6d030",
            "c3232edb634b695b",
            "5cf3badfb8247326",
            "1ae827a107c51466",
            "9f5b8a03d9bc2a70",
            "2e98440344720373",
            "6d6f324dd05c5001",
            "b2f58b0948e12510",
            "5be335cc59ca22ce",
            "c585922a596b9b0a",
            "c0f93b185c23564e",
            "d8a598e18ee804be",
            "e35eb16267079e57",
            "58c754b84f68c5a8",
            "329c715ea8f24a87",
            "0e7f84bcb6eead03",
            "94c2e962df6e1fce",
            "f6ee371f515e8e77",
            "0798297230126185",
            "8d66f1a32e3eb699",
            "d955317eb9861d2b",
            "11b132e4f79e73cd",
            "fce045bb66311fde",
            "982ac2a06f98f550",
            "1848c8f89260242e",
            "523591222f4fcb69",
            "1d328e7976d50e3a",
            "75276484c67886e6",
            "5f7b688fc5bbf6fa",
            "0eb4d73e14576825",
            "02768a4e50acfee7"
        ],
        "x": 14,
        "y": 1679,
        "w": 1412,
        "h": 442
    },
    {
        "id": "19d92a04f9a68f32",
        "type": "group",
        "z": "0897c1d9a1c086e1",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "27709156df73d551",
            "68fced3bfe4ca99b",
            "3beafbfe2d0d87b0",
            "df6acc31ae76e248",
            "aec4af013003bb47",
            "39f122a428b9178d",
            "cb7f074a8b90f75f",
            "3a5e9f6a1bc2886e",
            "28a054bdba2529f7",
            "52ae403c1f62f6c0",
            "e50635e5196a72a2",
            "efa11c89abf9dbc9",
            "a662b82beb1e7644",
            "0ecc557b2b7a24e9",
            "6cf91a6a3dce6fd9",
            "e0f74c32161a1d3b",
            "1c1e68cc13e9c661",
            "f04853dc0f3b11b3",
            "98a7c349b47230d6",
            "bc0d64b3b37a8ef8",
            "cd4ded7ac69329e5",
            "10459864dcc3ec0b",
            "3daf9b7619c55cee",
            "a63498ae96bd8cac",
            "c177e35f0482ceb9",
            "f7e3da10acea41f0",
            "5d7f8b1b8301e38e"
        ],
        "x": 14,
        "y": 2139,
        "w": 1412,
        "h": 282
    },
    {
        "id": "40fa31564ac66078",
        "type": "group",
        "z": "0897c1d9a1c086e1",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "74634e74a4a450a8",
            "c676ad667d9e6eb5",
            "b1488b1c933f7a39",
            "29cb27117f85aa76",
            "c51be57fc9a65f0e",
            "ca6e48148ed76ed8",
            "1d05913b589bee96",
            "4fccd3148f188d97",
            "1875c813e04a3ba9",
            "52097cf08b4d28f0",
            "617beeeaa34f099e",
            "e1fbe79f8b15991b",
            "f51ce4be0b4cd474",
            "7c2d7ae2560e4f95",
            "b5fd1defd73b170b",
            "50b6c05a4db7113a",
            "69b67e6358a6aa77",
            "dad5711fb2335d18",
            "57f440496d9b24a5",
            "e3213516761771d4",
            "3525bef10c49e306",
            "298de32c71389899",
            "40811d69293b2794",
            "cfc452211782f920",
            "fd6b63621149bddb",
            "da4643f308c40041",
            "c71f51fb3429fa6b",
            "514333f58467efa4",
            "5facfa9096e9fef0",
            "774c161521f5c2ee",
            "02c9974c99bca153"
        ],
        "x": 14,
        "y": 2439,
        "w": 1412,
        "h": 442
    },
    {
        "id": "96461107ceb69d82",
        "type": "group",
        "z": "0897c1d9a1c086e1",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "bcc9c1d63bf56c01",
            "f9ae3dc9f047f555",
            "5113d4e879ec3c98",
            "de9e2bd37ff8e9ae",
            "8b2b1fa64c45d144",
            "918905a43357d5f0",
            "b299e89671983078",
            "9a5ff89532e00246",
            "0d62920c0c3b2d6e",
            "fd0d404e8d8289f7",
            "c6377946b1368668",
            "1e14f65d9534b356",
            "6aa1901e66c02987",
            "759ad7e67814bdf3",
            "798799209cbed063",
            "3c75eeb1bc4502f8",
            "923cbb395f3474a3",
            "4d572706ee82b5a6",
            "add3f083e5ee1a12",
            "a9b34ec02e14178a",
            "247f13d162a73702",
            "39a74915179f38c1",
            "0672d35396d58bf0",
            "71f18e8e49e753a6",
            "6c3727eb9946fc16",
            "9886822457a042f0",
            "d4d296c6cff7f250",
            "7318b600278bdcc0",
            "28cbcaa1bf47702e",
            "282b46536c6ad209",
            "3493ab1a995ad7ca",
            "0552af8081da6f19",
            "9f59ea14821fadae"
        ],
        "x": 14,
        "y": 2899,
        "w": 1412,
        "h": 342
    },
    {
        "id": "014bebdbda8b26d1",
        "type": "group",
        "z": "0897c1d9a1c086e1",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3d98cdcb2e3017c4",
            "75d7af72df20e833",
            "3742cb2ba445370e",
            "2345c368454a09b4",
            "63a95b6518d215b1",
            "7f35c67aa2e45926",
            "1a27b272cf798c6e",
            "a946bfcb9ba82708",
            "162cf5876d2ec39a",
            "6bc956b029eab897",
            "f17b42f2f4061f8e",
            "d5ac1d9ddb4beb89",
            "60fe4fb93abb7d9f",
            "59418c3120d3cc95",
            "4ef2219c49bd8fe6",
            "e71fb34cf06b78d6",
            "0d8cdcb81e5f40db",
            "2dd2952036e7739b",
            "3b119df290691c0b",
            "9f50f15a9047f330",
            "28b4e61508b2d440",
            "7fce618053606b85",
            "81947ef7e27a39a0",
            "361e74651bf883e8",
            "629ee6227dba217c",
            "d2d8b71a2a0cfec4"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "b3799830ce2a1124",
        "type": "group",
        "z": "0897c1d9a1c086e1",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4f37733dfa36b80b",
            "34dee94f057883cb"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "f15fd7c71d1cf616",
        "type": "group",
        "z": "0897c1d9a1c086e1",
        "name": "AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "13744070ac30f714",
            "76f67cc6180cc680",
            "14b61d05aba4aed8",
            "5998a045dee51517",
            "850c1ba4047a2cb9",
            "920c0e486e7aed51",
            "90336cfb677a9645",
            "0e72ba4a67260460",
            "b2b97c5d718fe003",
            "8bde4ad7af7305a5",
            "d0399f822fae664a",
            "2883cdb770d1069c",
            "a2ba9b11115d3f6e",
            "716068cdb139130f",
            "91e04ada696c56f5",
            "25a2cd0dfca666d8",
            "fdf313754cf16ff2",
            "29c55a5913a8ba41",
            "1df9029f93ba3b23",
            "ea735265b2612d5b",
            "7047d5bce741c263",
            "9fb765efae1a7f3a",
            "d844fdbc39ba327d",
            "026bec7c54e14f73",
            "ee22392e4b8a6bb2",
            "232f1221f16d6668",
            "40486899d39ef779",
            "2427b39b0318adb7",
            "d20b242086e34d3f",
            "51c70af75abb793e",
            "9842c018ebec6948",
            "919f9b10a6131455",
            "74a90a11c35d7dd7",
            "ac95b86dc464f573",
            "bef93bb43d8bf38e",
            "082e7775e836f87d",
            "853134254438251e",
            "99ea1c3996a124cd",
            "2e4da75f2f03e892",
            "dfb1acbe38f5607a",
            "bc0caad6e192eba6",
            "d5a0f49ac7e31adb"
        ],
        "x": 14,
        "y": 3259,
        "w": 1432,
        "h": 482
    },
    {
        "id": "60830a2c7424fd8b",
        "type": "group",
        "z": "59f32dea3689223d",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "bf608a64593de2c0",
            "38c91ba6e51aa367",
            "f5426764ab493c94",
            "1313015487160fe0",
            "7fa010a7c6cbf1b3",
            "81a51c02c2c9efab",
            "e5f534a25519de70",
            "588ff1e231f8c50c",
            "7c2712ee9790ac86",
            "113420e6e3dbd550",
            "f9391d9cb9ad760c",
            "745ccb7bf27f2a61",
            "84c385caa49fcfed",
            "0929e774fbeaeb57",
            "9f7389638e10738e",
            "e28b8565eeef24d8",
            "b27ad35cbbb805b6",
            "d1f8c29c262c1223",
            "454162cef02d9f04",
            "f431e36f786636d6",
            "4f2209ef442deb5f",
            "86966b3fdd0e2e14",
            "a25bbc29bde7d83e",
            "34690cf76e936a30",
            "6173bb129d946c01",
            "50bc38d528c9ac9b",
            "42ba5376c88f2214",
            "0d5efce9a0014cc9",
            "785eb1f5942ad231",
            "576ffbdb9401369b",
            "6e0fbc7ce96fb387",
            "2319f3cc79e5028c",
            "6937a0b3f8493c9b",
            "f748b81724e7c2aa",
            "77b9b7912b29e091",
            "a4ec0574fcc2054a",
            "b5a2684c37bda512",
            "4c583af4142b954d",
            "a38718d5e8b9065d"
        ],
        "x": 14,
        "y": 499,
        "w": 1412,
        "h": 442
    },
    {
        "id": "1ce1924906356292",
        "type": "group",
        "z": "59f32dea3689223d",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "5e6899f4d2c99789",
            "c81ac7be108bb97c",
            "5ff68e2e4bf14858",
            "8b671ecec756394a",
            "b761c6d37c024265",
            "8eb6cda3345aadef",
            "9a9b0eded5c335df",
            "e762c7fc8ad6bc5f",
            "fb280740d6d8898f",
            "b5acccad80ef991d",
            "9f9411a8fcedd7a4",
            "4073cfd025d540c7",
            "c5dd2eb969d6e160",
            "09cfb270b0578fcc",
            "72cc753b28d71c0a",
            "39fc9b7ec304bc61",
            "93a439eacae140c0",
            "a4b34a64c8a84a06",
            "16c9752332ab3735",
            "814a2c554c5bb648",
            "c17b9c2e446b3df8",
            "b6f69bd652a7ba99",
            "7e274a43cde3dd49",
            "24b0429aa4a03664",
            "d9c7aa5b6a44c265",
            "b57b9f033a42571e",
            "c091f1d02cbf4d62",
            "76fb7fbbcb8f8abb",
            "9d31918fa4840582",
            "85d3236d308ece3c",
            "1b8912548de8e3f3",
            "de8c3ee4c60e6084",
            "e8402f7518fd69a7",
            "adb4e5da38b74194",
            "725966c93ef4aafe",
            "6489cc825616458a",
            "92b005d69ceb56bd",
            "13c133cb1cf36fde",
            "820fc0e293720ba1"
        ],
        "x": 14,
        "y": 959,
        "w": 1412,
        "h": 442
    },
    {
        "id": "be496ef488a803cb",
        "type": "group",
        "z": "59f32dea3689223d",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "bf1d6cfe67a1abd5",
            "59186de199362054",
            "7d9883bd58c22555",
            "0ee7f45fbd029248",
            "4f02d08ef40d050e",
            "3a9d057e0ed5074b",
            "980f26575ceb3085",
            "6e2f832fb2494b90",
            "3b2c164da4e41f8a",
            "f72a9ca980d5f86f",
            "b01e4c78fe8c5d72",
            "7052ea6f6d171881",
            "70afef8cf9f4cfab",
            "2e2453a584f23d88",
            "25ff7b6b4ca3473c",
            "20f614753e0a59b8",
            "1e749a82a1e68f7d",
            "1039ea75e10a60e5",
            "4f7659a99a14cade",
            "2204576d673268ee",
            "458a8b38faabbc51",
            "aa5fe494638c0177",
            "53ba8274a8c6b727",
            "0164085549900b45",
            "1d3b7db235c80f1f",
            "556260e7925a6bd8",
            "1f76bd5da25ea754"
        ],
        "x": 14,
        "y": 1419,
        "w": 1412,
        "h": 282
    },
    {
        "id": "2315de58e1a030bc",
        "type": "group",
        "z": "59f32dea3689223d",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "38d46510dd789151",
            "74b477d2c6bae8ae",
            "b4818e9a49289668",
            "a64d9dfc5c09fcc1",
            "e0ced259e971db08",
            "75e3fa05cd349eed",
            "6d48469e421cd439",
            "251bddcccc3d4a3f",
            "97c3a196c8f8600e",
            "85f15eb0dbd302ce",
            "38884d340fd14980",
            "153080d8786e7a00",
            "23aaa702ab495435",
            "5ac9cd6478d08765",
            "c0b981a8548d7f90",
            "cad3ebce2040101b",
            "99471e2c984872ff",
            "3061ebd94acaca51",
            "88d8d6264ffb577c",
            "73b2b19bb23e24e0",
            "b2e935e24c721886",
            "74593aba597830ff",
            "4853ee4c3f48c11c",
            "5ce8c9570b0591ae",
            "fb0bbbd263c6c0a5",
            "44c9dba54a1f82f2",
            "1ff65f3b99354fa7",
            "beebd08669055273",
            "07ea9e06e875582a",
            "791a0d68e024742e",
            "56db99fb689a3c69",
            "2333b678702ac845",
            "7b8929d6be0dedd3",
            "7bb82c578d5bdf78",
            "c26d790d63739dec",
            "ccdd7182347d2665",
            "705ff21c46bfe124",
            "2de48ac9d9f7c3f2",
            "7cfa3af249f1fe57"
        ],
        "x": 14,
        "y": 1719,
        "w": 1412,
        "h": 442
    },
    {
        "id": "85591bdb7f51a2ba",
        "type": "group",
        "z": "59f32dea3689223d",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "34c7c3dfa0b5e6c9",
            "9110925400ce6f80",
            "9a34064e5147321d",
            "248a5eec6e5b50f2",
            "017710489c9c7ebb",
            "83fda3885af854c4",
            "5ce4abf5f3a97baa",
            "57801eb7f1e6cd6a",
            "95ae32399383dfd9",
            "d6cacedc068fd041",
            "3abbca30dea1e8fc",
            "b322d2458c820985",
            "e9756f6fbaee2703",
            "47f906d8f75ef319",
            "5756cf867aa49eab",
            "dab5b60bd9098311",
            "0fc646af42159792",
            "8581085215ec43d4",
            "fd8e5c57da6a57a2",
            "9e436853a6dae939",
            "0705cb287e862de1",
            "d94141bcbaffa877",
            "82c4b4cfd4e0fe33"
        ],
        "x": 14,
        "y": 2179,
        "w": 1412,
        "h": 282
    },
    {
        "id": "ca4a2f746d6ad1e1",
        "type": "group",
        "z": "59f32dea3689223d",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "cd51a7e4774dbb1f",
            "23fbcc5ab87d9a02",
            "adcc7e9af493754e",
            "9d89664ba6eab83c",
            "97e5f1a360bd267d",
            "de298b08c53d9b0c",
            "7a75972c54c97678",
            "0d72a9393f93485a",
            "c20f5f84612a7f48",
            "a592f4171911bd74",
            "4921f38347d8ad2d",
            "99f33929e55bb0dd",
            "193bf44ada70cf74",
            "022aedba1166e829",
            "5a693e6cabbd94b1",
            "61ea6969de0d26bb",
            "d0988a583525a6b9",
            "b40901b93a1778ab",
            "c10241d4afe5c195",
            "d2c08923223489b2",
            "3c5d075aabdf4bff",
            "4b2b07e7e68e1c7f",
            "37ff00d3954fc344",
            "ba6ca5f9efac6140",
            "b11565b91aa4dd7f",
            "8677d24e48f57d4c",
            "e47647ca0716e53d",
            "665e2e9acef80d31",
            "8e947a6a43157e24",
            "408ab7c3d37b7ac3",
            "73f8137211d24e4b",
            "ba1a909b89e8dbbe",
            "0a262aeb1e6094d7",
            "f7c80813420b52a8",
            "32149aba989436ae",
            "7ba18cc12f7dd999",
            "f8d7a44be0d2cf53",
            "dd02b5a5ae2574ae",
            "4efdcf61767925cc"
        ],
        "x": 14,
        "y": 2479,
        "w": 1412,
        "h": 442
    },
    {
        "id": "dd2055101e4f48ec",
        "type": "group",
        "z": "59f32dea3689223d",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "73a4b2be57abe91e",
            "ed9ce3e4b02de320",
            "a1ae521e1ea631ac",
            "418c1339da3805e1",
            "ff33ce122066d2c6",
            "a4e2149a1529f977",
            "9a8909e7fc624a94",
            "9a6572b7fc12102b",
            "eb26bd6ca51f3f10",
            "d9386122c5c815f4",
            "ffd0d826f6bf221f",
            "41963c9c8a73a559",
            "e2f15a21f4d7ce0e",
            "836b8ea9ac958332",
            "03d575ddd2f5b3c4",
            "3a99d297cf631553",
            "c24899998a0bb78c",
            "6342d3ae3fa9ac1e",
            "d5fa136cb37bfd12",
            "f672e9feb10c0559",
            "4c9634f984095b3c",
            "d57ba5f41bd8b8d4",
            "124a52f6520a98ac",
            "036699d2a0a7f955",
            "bcbe6558fad14d82",
            "4d31e9b1b529cc2e",
            "3aed2b732fe4d751",
            "fbea1ae5712cf11d",
            "cb7fb7e8f5473cda",
            "111192b3be6217be",
            "630537aa1189b094",
            "d16a0a4e0bd723ee",
            "25dfdcfc20be88b3",
            "12747a84a37f414f",
            "83ac5c6a62bb69fe",
            "b4002d78d1ef9815",
            "035509c374bb3390",
            "20ece7e1171de144",
            "eae7a6362d2a2c8f",
            "bd1f691ddebf9911",
            "28e7dd93d0edb6e6",
            "e712c7e63be412f8",
            "1cfdbe8199d7901b",
            "71d4cfa8325bb30b",
            "b6107042561e022f",
            "e216dc3342316f2b",
            "ad8a63dc023f7a60",
            "6eedc2139a760e1d",
            "75e8600366140357",
            "33f765229b92246e",
            "6ab7570bb7342ef3",
            "f37f3abda663fbcb",
            "b219f54873180bd7",
            "5999ba3802a396e9",
            "dc60891eee2674f5",
            "b50161ef6afd78c6",
            "3759d7c3b2e2f782",
            "c89eab62bac35317",
            "3c3c430c0a661f81",
            "aff74f05f11a38ec",
            "e12691c58064b450",
            "63ed606384326aa6"
        ],
        "x": 14,
        "y": 2939,
        "w": 1412,
        "h": 642
    },
    {
        "id": "5309664df04e5069",
        "type": "group",
        "z": "59f32dea3689223d",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0453d51308acca31",
            "1f049f585c48af1a",
            "7ba175210a58ce65",
            "c97db8721ea139d7",
            "697448320aebd1b8",
            "08017a84c32fc237",
            "29a8309d3f8b0a08",
            "433b7da3227f53e2",
            "34e41c65d6e84e71",
            "76f65b415eb3aa5d",
            "f61ee2054fae22c5",
            "e8bfa5d025e230dc",
            "e87e2603f317e4e6",
            "9b93210289261178",
            "df2b0afbe97ef28f",
            "bb71494467187278",
            "81bb7b5d4f3a56ee",
            "2c18e4c4529e3041",
            "c98bb1df658bbbfa",
            "f3126d26562bbfa1",
            "f36959cbea01c894",
            "2acfeb6a7b6d0702",
            "85c118dfa8919f4f",
            "c4133e97aba4f1c8",
            "a7b92ecc4f25a79a",
            "64ceeacafc05ecb9"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "a4edc290a39abadc",
        "type": "group",
        "z": "59f32dea3689223d",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b218d8c0f852ca22",
            "b9308266b784f90a"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "475174d47cc552fb",
        "type": "group",
        "z": "031596afc773e181",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "cc517573df216ad3",
            "2f427e83d18592fc"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "1b314a407f3f39f5",
        "type": "group",
        "z": "031596afc773e181",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "998d901bd25a2f02",
            "3d4de0ba8df61081",
            "0ab222341290db7c",
            "578070c5856ff18d",
            "deecfdd36fc3d26f",
            "80a6fa988b9309cd",
            "f3424b61376be52d",
            "574b7b888c9b7365",
            "a27c6a8335099f18",
            "2a44b9546efbff90",
            "4d269e9407470a26",
            "4afa86769f84c633",
            "794a3e594ed5955d",
            "db0aed47d59b3cfb",
            "53b7dacc428b5c53",
            "91f529e867681e0e",
            "ea2f83b14b8cfcf4",
            "55d654d5fc113f77",
            "38c49fcfb4b3868b",
            "6077e319653b52ac",
            "73637df5fd9d6d72",
            "a7d637be1666c685",
            "b093d3d7f510bf0a",
            "5bb73c2912894ef7",
            "f9b5544c33e367a6",
            "d04c7994e5bbc98f"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "73f9a10aa31c604b",
        "type": "group",
        "z": "031596afc773e181",
        "name": "Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "46be0b3c47321ae7",
            "4d79a1aa40af0fd6",
            "3e0f2f876ad1adcf",
            "db7067444aadbbe5",
            "eb030b184116de88",
            "1006f427c01576e8",
            "29e289348b90e8d0",
            "2b1a68bf02ec6c48",
            "dc764063241c69e4",
            "33aae946641b9fc7",
            "5a43ac3e45c0d54f",
            "98be8938ae85167d",
            "638291a27c71385d",
            "6bd81204cb3f7902",
            "335ab3322230cd77",
            "2b5b06728e9b077b",
            "9d61a06546a69bcc",
            "c746e6c33abcfc46",
            "3352ed751a275b73",
            "9cec5ca28b13d60e",
            "fdd92c7d457a519c",
            "1c3f645463d8156b",
            "ce6365d2dbf160b4",
            "502003b2e3222535"
        ],
        "x": 14,
        "y": 499,
        "w": 1412,
        "h": 242
    },
    {
        "id": "68eb1ab7189a6e7e",
        "type": "group",
        "z": "031596afc773e181",
        "name": "Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "9987a7b68bed50e1",
            "9dfb5fc77c7f8c7f",
            "4fa171c2e0f509da",
            "a6e17df2016f9a75",
            "f393a12069f134d2",
            "6c34ee2a225904d5",
            "ed2f022463d67e6f",
            "f5ebe5eb7ab798a9",
            "c133591a746db8c4",
            "e48153c831cb7aac",
            "d891f71aaadc215e",
            "322ea696af79e0cb",
            "30a9869d8113dce7",
            "14aaa2467be8b970",
            "f711648e17939613",
            "751543dfc50f0b67",
            "80af09a3609abaf2",
            "8255d5220f02b107",
            "fb8c718100f65f40",
            "99b2a7afc08c91a9",
            "e5e3de18228c26c8",
            "0e396a363345616e",
            "d7ac0fd949d3d196",
            "4c289c9266f456b3"
        ],
        "x": 14,
        "y": 759,
        "w": 1412,
        "h": 242
    },
    {
        "id": "52682c4bc5697699",
        "type": "group",
        "z": "031596afc773e181",
        "name": "Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "1fc953cb7ecff440",
            "59d0592a206603cc",
            "d3af352be922f1c8",
            "cb8242d5bc35c857",
            "6ffd5ac0640e081a",
            "357305cd191a552a",
            "6ffb060c3e2edb0e",
            "01bdd918090f23ce",
            "1cc6ae0cc77d97de",
            "c3993b6232ee64e5",
            "b05a714069a6cb3c",
            "65d4bd2a8c81ba30",
            "9838f3e439d62aad",
            "21f1fd12f99cd8d3",
            "544a9107a6912451",
            "86ebb8de9033f6a7",
            "a60e8443efc1d2d0",
            "982d7253bef8a01c",
            "e1dc260a24a3fd81",
            "b62247c2cf1d5848",
            "e8b965a996fef022",
            "28a8a9ca3a6468c3",
            "ec84ce2e931db653",
            "14d508334bf369b2"
        ],
        "x": 14,
        "y": 1019,
        "w": 1412,
        "h": 242
    },
    {
        "id": "015850cea3f2e53d",
        "type": "group",
        "z": "031596afc773e181",
        "name": "Test AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "081514c7a33ef596",
            "6300963e665d06f7",
            "58694d22ad138641",
            "5781712443345ead",
            "1ea386b7ce9a9fb2",
            "51c1c8c5fe7a2be9",
            "5f7fd6eb7745e213",
            "3af8eaa8290dcaa8",
            "675d2bd17adb8c6c",
            "946b3158326ebf43",
            "12bdb8971755a2ce",
            "6de6e69f37c4bc21",
            "10a766c9fc83c9e9",
            "eacfd2ea77a1ed67",
            "5a6fbfaaeca9fcf7",
            "054e13fef75de6a7",
            "0c4978529cf8bfc6",
            "b686757271442a93",
            "fd29fc393423bab2",
            "5e53c205576f3989",
            "057f5400bf4e9cb9",
            "515532ea38c7e723",
            "d63b81840071eba8",
            "cf303a87c0cfffb1",
            "e21293bb3bcc84e2",
            "6d12bdcee59be69e",
            "1c22a3916b0d138a",
            "2c54d271624e974a",
            "939516033baded94",
            "8ab1f3266bc43699",
            "2686d9e7eb3b3e53",
            "1529384fac3a0774",
            "1761c8f5e86c9f75",
            "4b0687cc17e1e47a",
            "abea1ef4c3eee6fc",
            "dbd9de0cd3b105ac",
            "0af7eeef3a5ad4a6",
            "7a04c5dc309e24ae",
            "95ce19faec05f2f7",
            "9ce295adaa089767",
            "1c5cdf8c27cab469",
            "fd2ec37401123724",
            "422e4e26b0f2d098"
        ],
        "x": 14,
        "y": 1279,
        "w": 1432,
        "h": 482
    },
    {
        "id": "fc4827def10c94bc",
        "type": "group",
        "z": "031596afc773e181",
        "name": "Proc AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "825ffc2e7b1167f1",
            "9425a164614ea230",
            "53b834073d2cb28a",
            "1a5b1f46bcfe9883",
            "b2648239d0ebda1a",
            "8fb9b2cbbc8989ab",
            "d538d29e88a38e73",
            "29a743beda814e39",
            "b71cf70e68990505",
            "50e6cd4089d016df",
            "11e7a9bf5241ec3a",
            "a9e33eb94525a462",
            "be04b91d2574b379",
            "2243173182fb4df4",
            "9b19a1b38935d90d",
            "e891fb3ef804a33a",
            "786b136460e41866",
            "314984decdd9f884",
            "963f3f25df29c54c",
            "df8e769f2833675e",
            "9e5ec047d23dbfdd",
            "b850531619e36be2",
            "7727055fb8f33eec",
            "1896e15fa663b3f9",
            "796ce9cba57404e9",
            "f749f42a3a87d274",
            "c2bdea5372dbee69",
            "7ecfbbece2943543",
            "9f793e88eac6fe9e",
            "e6331f43308266f2",
            "81ab885d41ac9c0e",
            "95ba0be057e0ddf4",
            "29560d6bf0d7d333",
            "24f8ca3fa2afb660",
            "1bd2422724702683",
            "30964a991219fb0b",
            "dc73e41a38a3506a",
            "d5699df020683605",
            "45a1550457e28f3c",
            "caa151375848f76b",
            "373835708d4fbe41",
            "2a6806767e1ce01e",
            "af738fdc7db8313b"
        ],
        "x": 14,
        "y": 1779,
        "w": 1432,
        "h": 482.9998321533203
    },
    {
        "id": "7e472c15e1740ec1",
        "type": "group",
        "z": "031596afc773e181",
        "name": "Visi AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "8b7ef40bf4e0bc00",
            "c852a3be9a97197a",
            "648c2ff3e67a6b88",
            "b6270b3d8557f01f",
            "bf55aac4cadad7f6",
            "cbbb471fe410c6e1",
            "3a1019fd8e5e9885",
            "1c25a55f50467c9e",
            "3fc414c5b3efa8f4",
            "b340a33908de1451",
            "018b5c91df6d7f87",
            "ad9d19a31e0dc7b0",
            "ceb260a2bb562811",
            "739a12d5a4585b9f",
            "84859124611d019d",
            "719b8e5b6e9d6550",
            "01ba14fc57f7185e",
            "84736197a9ae8291",
            "7a74f3a34b33552e",
            "b5fdd5a222b349f8",
            "4e0537d546b5973c",
            "5b21f49b55769677",
            "8ea2dbefbf210643",
            "03f68b5d7eb9ee88",
            "4cea68d435b5c6e8",
            "a6a24402eed2cf97",
            "83d37577650c4a9f",
            "f4c3b5cbeaccca32",
            "e335d85d7b1f4cc5",
            "8d38e014ea723a4b",
            "6e716330516b6de7",
            "19ce54687eee0871",
            "970f192805a0f3f1",
            "7ffb8df61bc20f5c",
            "674bf0cc2f6990e7",
            "27573381984fdff1",
            "9852c4d103ed155d",
            "ad4e66e6577beef0",
            "14b3754293efefb6",
            "975c9e8ac95a13a1",
            "07134aeea497c709",
            "78bb3a6c9a9a3c5c",
            "39979656e6298a6e"
        ],
        "x": 14,
        "y": 2279,
        "w": 1432,
        "h": 482
    },
    {
        "id": "bd4a1480f91b9ac0",
        "type": "group",
        "z": "031596afc773e181",
        "name": "Robo AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "9d217b147541aa04",
            "31714f8b488292c9",
            "172fb315f134d7c2",
            "caa27755f60f5b39",
            "4af0ce22c6e43b30",
            "215fccaba99ad69d",
            "8eccb2876a7987c5",
            "a01297dcb5e06232",
            "456a77b54ca35447",
            "cc48878d7be50a8f",
            "ebe00d7e62ca193a",
            "7d3df490cf05459e",
            "46e3747d56428bee",
            "76c97e47ad649979",
            "6b08555b87e38348",
            "7f70593f1f0340f8",
            "cc874bac153afb16",
            "442e10c0de3bad4a",
            "3a388cf152f2cbc5",
            "41797c571ddeeca0",
            "cbbddb8b3b08e279",
            "d486cdc5fcf03f8a",
            "a07bc1dd90ab69ba",
            "e142cdf4a2d342df",
            "625e9a2325f89820",
            "979dca88597c2dbf",
            "3eb5d7db3dc2a48e",
            "e234656dac0a79f3",
            "cc97c468aff3a2fb",
            "c9cbb1e11c32d57d",
            "b006e5dcd1aa01bb",
            "323a0ded9be0e36d",
            "a23fa7eeda9f8976",
            "0b1c74d6ae9da724",
            "f37356ce27d61f4d",
            "080f0127487a01ed",
            "602e917f7f2e9a85",
            "d2471ae7bc9b098f",
            "f2463b85963b86c7",
            "d4d37f199c7af037",
            "75928dfe9c9e34fd",
            "262a45f295890cf0",
            "5dba918ec342e1ad"
        ],
        "x": 14,
        "y": 2779,
        "w": 1432,
        "h": 482
    },
    {
        "id": "f8ac0186fc6ea09c",
        "type": "group",
        "z": "031596afc773e181",
        "name": "Stor AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "a3f53bc42ce41fad",
            "f9cc77d06fd3e1bc",
            "3c67ad0713d1c8cc",
            "2a2157d634c23e40",
            "23d6f295f30637d3",
            "f33220b91eeef885",
            "df2919ea5936976c",
            "3eaa8af543d34269",
            "fb2fcdc5eccebf48",
            "cf5197c8af33cb50",
            "e132df3eef709785",
            "10bf6e8f3eee2176",
            "e703eaf9b0e759fc",
            "e480e3692395fb94",
            "a9f8a87847909d58",
            "06066b98539320fa",
            "fd894c0d77c3ad53",
            "2508c019b5653745",
            "d41d265d27b95083",
            "dc5c2e6aa9b9c2ac",
            "1d8b358698fca3fe",
            "b58fdfe84c6f4ab6",
            "94ddffc1b6b6e2e9",
            "62e372759cd4f638",
            "851124cf127294f2",
            "2f61694a029459ca",
            "95206852c1169869",
            "d4a759cdd26429e5",
            "108e18c9bd8479a9",
            "4910e585f85c5009",
            "a4d219e66bddcc1b",
            "b7e4f1e496c461d7",
            "131568bf88704331",
            "756697f7aed9fd9d",
            "3cd4503240166c04",
            "069a680c5bab7c4f",
            "3c48f53758e333f3",
            "2a0ad375b354defa",
            "b022a51ea69867a3",
            "6fde1badbb89a63e",
            "052752e2afbcb57b",
            "2124eb014aff78a6",
            "6d6cda9e05d30650"
        ],
        "x": 14,
        "y": 3279,
        "w": 1432,
        "h": 482
    },
    {
        "id": "b2ad3f8d1c4d1fa2",
        "type": "group",
        "z": "031596afc773e181",
        "name": "Sort AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "45894727c091b334",
            "47638821def15c5f",
            "cb692872a650987f",
            "363b6e16620a8780",
            "e7bb0cdede38d8e8",
            "2a5a77f022cf548e",
            "082be786361df86a",
            "d5c9c810ee62f615",
            "349408ad4977a38c",
            "71b74a4e107830eb",
            "548e2759dff79629",
            "0166b85faa00d985",
            "efecb353f5a3b437",
            "f6da75a21b2ebe61",
            "d971a43bb45d3ac8",
            "9e3c133745b947a4",
            "ae26c965bba6022e",
            "c974e16b5c7ee8b5",
            "063707d01772641a",
            "9ec2df3be7b68fe7",
            "9f47a09749f422a3",
            "69eb736bdb93ee90",
            "e56fcd5d3bbc3bc5",
            "93917ff04ac10a9b",
            "0249a7b027e2bcc4",
            "df958bec86d92346",
            "03e8a68fdf9f7cdb",
            "c12d318fd480284b",
            "91d19a7c9197abe7",
            "77aada15c99710b4",
            "eca2603d513322c3",
            "ede6f8735a27d09d",
            "a3e5c4a1b28c5593",
            "defb0480424a862a",
            "794c5ce2bdc6c6ea",
            "f1a846cbc862e3ad",
            "244ca9afb80038f6",
            "931c8e286ec2663d",
            "0f3746d489abf8cb",
            "0d09faec86a1b67c",
            "7ab44df35f1379a5",
            "b5ad7554539e47ee",
            "0e5f45df0ab761e3"
        ],
        "x": 14,
        "y": 3779,
        "w": 1432,
        "h": 482
    },
    {
        "id": "929287f4685e34d7",
        "type": "group",
        "z": "75d15dd5e1cdbad2",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a27ba9d7d47983b6",
            "9ee378967d2b60c2"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "c128e5a5cf820b20",
        "type": "group",
        "z": "94da80d1f610b831",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4cfb118ef889b297",
            "661af5ebd4d13ab3"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "a1810abbedc7ee7a",
        "type": "group",
        "z": "031596afc773e181",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "83bdcc1ad90beebf",
            "fd82428dca4fdb35",
            "0d243cc395fb0062",
            "523e7f4ea14c875e",
            "fba629ad8f8ba150",
            "3add7c4ddc8cf46d"
        ],
        "x": 414,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "a39d8d76c8a1fdd5",
        "type": "group",
        "z": "75d15dd5e1cdbad2",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "bea5fe25de7824f0",
            "2c0cb36620379ffa",
            "3854bc398efada6b",
            "06f0f6b6129d7e69",
            "b2de3df1446f5b8d"
        ],
        "x": 414,
        "y": 19,
        "w": 582,
        "h": 122
    },
    {
        "id": "f93c4ce78db32fc6",
        "type": "group",
        "z": "0897c1d9a1c086e1",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "67a7128efa2f1ce7",
            "23609963d3549473",
            "7211136af0bafa9e",
            "a7e6ec67406974d3",
            "d5ed8aeecc1db212",
            "1c442b5fd5e89e43"
        ],
        "x": 414,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "2654790d3af52835",
        "type": "group",
        "z": "59f32dea3689223d",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e4ed89f1ced6a665",
            "554e9f32286443a4",
            "64cea3d093e1bbaf",
            "b4181d5af9da866f",
            "951c6a83da15949b",
            "c9420386577341e7"
        ],
        "x": 414,
        "y": 19,
        "w": 582,
        "h": 122
    },
    {
        "id": "e6f32531c35e260e",
        "type": "group",
        "z": "c7e2c1b5cad83a3e",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2f64dea547cf558a",
            "3d1acfd3af772223",
            "74995da7c17b0b50",
            "3c1a14bbe5803092",
            "f52ead3f2002073c",
            "9df40d51ecb779b5"
        ],
        "x": 414,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "e7d1903cca52ebaa",
        "type": "group",
        "z": "94da80d1f610b831",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e4913d882cc504aa",
            "78bfa36cd4e01b55",
            "26f3ced601db515d",
            "83f53fddb5416907",
            "923e7eec4fe8211c",
            "b9ba30c778e07b13"
        ],
        "x": 414,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "2c1318f945c97275",
        "type": "group",
        "z": "4feb0669cb214335",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ac80e65258d428e3",
            "cfbdb96842c291dc",
            "0d03bd9b739e302c",
            "c2c4d321b23145fc",
            "b84ac335cda3374e",
            "742e9220843cbbe8"
        ],
        "x": 414,
        "y": 19,
        "w": 582,
        "h": 122
    },
    {
        "id": "1231b87cb3dd641c",
        "type": "group",
        "z": "10b1bc1a080d1c97",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4e20440c90099925",
            "844b9de5d3e7a085",
            "b3ca75d5f5a59396",
            "855fb0dee00bf322",
            "e60880f3cd96ec7a",
            "12e657c5b482ee3e"
        ],
        "x": 414,
        "y": 19,
        "w": 582,
        "h": 122
    },
    {
        "id": "1c3840a86e7176fb",
        "type": "group",
        "z": "ed287fcb96b33d19",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "aa79304fec92679d",
            "6f2454c33013c85c",
            "567062141a4359e0",
            "ddb668be1416d235",
            "a5991bddcaaeb845",
            "40727d1201873610"
        ],
        "x": 434,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "08c3c04e8f2f1943",
        "type": "group",
        "z": "34c5d473de2de145",
        "name": "MQQT Broker",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0a72883955880279"
        ],
        "x": 34,
        "y": 19,
        "w": 192,
        "h": 82
    },
    {
        "id": "d3c5ed02b915a113",
        "type": "group",
        "z": "34c5d473de2de145",
        "name": "Transmission",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7b3ad7862c26373f",
            "a563cbd70c996a4f",
            "8caa76fc73f70cb0",
            "80eadb838c4ebcbb"
        ],
        "x": 254,
        "y": 19,
        "w": 572,
        "h": 142
    },
    {
        "id": "370c2440ced8bd12",
        "type": "group",
        "z": "34c5d473de2de145",
        "name": "Reading",
        "style": {
            "label": true,
            "color": "#000000",
            "fill": "#ffefbf"
        },
        "nodes": [
            "dfa229a5fb0fa0ca",
            "4abdd9aceb443468",
            "77067a71e5eb8d06"
        ],
        "x": 854,
        "y": 19,
        "w": 462,
        "h": 82
    },
    {
        "id": "5cc79be050ca8aea",
        "type": "group",
        "z": "34c5d473de2de145",
        "name": "Master [20]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9e9e77bb8a05deb8",
            "51e7ae989e20ec50",
            "a566b530c5d23848",
            "77eab8fb9a41240b",
            "159f7ce0d999c68d",
            "df283746e555439f",
            "527249266f668d11",
            "c0d0fb655b9235e1",
            "9abf3870b9c9b99b",
            "7b76d080b8956609",
            "b99462dbbb507d1e",
            "83fd4cec8c53341f",
            "60d0aa142a2450c9",
            "5d94d040cc84e9f0",
            "c4a2ca8ccbbb049a",
            "9c9d2bad997b5223",
            "5f5037d38a348f2e",
            "d83e3209ba5f0ca0",
            "1a849b37ded9d6b4",
            "060659c867c38e57",
            "c715926a0939586c",
            "fbc4d1a14d09b8ba",
            "ba8bc4236d65a285",
            "5e704591cca979b8",
            "1b13b41803b711d3",
            "4120720d228d5847",
            "8abfb811ed2821ce",
            "bf3ba10b3fe69ec4",
            "e49bbcfe881eb9e9",
            "e036b8963e0489e3",
            "0823f8b7daeef64f"
        ],
        "x": 34,
        "y": 179,
        "w": 492,
        "h": 642
    },
    {
        "id": "915e33e2268081b1",
        "type": "group",
        "z": "34c5d473de2de145",
        "name": "Robot [30]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ab5b7ac4b8879295",
            "301fef788939dcaf",
            "572f84a270c3ed7a",
            "5e9edc2636998783",
            "c204022e60d83733",
            "0ecf8fd10b223829",
            "883705c14088654f",
            "f74394f4918269cb",
            "46c1c77e10565db1",
            "d4c7c1ec79456177",
            "b2697794f8b75334",
            "20e4fbab1db2e5f0",
            "edb7e50736016282"
        ],
        "x": 554,
        "y": 179,
        "w": 532,
        "h": 282
    },
    {
        "id": "28efe6dcd0538d62",
        "type": "group",
        "z": "34c5d473de2de145",
        "name": "Handlong [50]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "dae7a9c5fbf1444e",
            "598c9c9feb3a06fe",
            "6a162f105693207f",
            "0c973d7d39bd6a50",
            "9ef7e978b549f9ba",
            "2465f2a3b121819e",
            "b6314c9fee63d8b2",
            "431ece0752a0f2d1",
            "75260cab7f259d00",
            "35f7912a601799ba",
            "85d2c0d8b98203fe",
            "21a0f90d1dca4541",
            "2454fc2a61f77ead",
            "1867de445bb40808",
            "fa33b36ce1ab2f41",
            "bf63f63831ca7084",
            "d8e7f2614aec4908",
            "ff4a77d923636c80",
            "927a88da756f35d5",
            "09814f5c50052898",
            "9023a1d44dd14a1f",
            "54708e5419a4e1b4",
            "582fd3f01f587f11",
            "3148ee9f94043427",
            "a33a1e3b06c9ef5e",
            "9129ba586bbd864c",
            "d5946cc26425fea2",
            "faa533eabb3a01a5",
            "ec0d413df6ba8038",
            "74b2368617782c63",
            "047dc51f280187e5"
        ],
        "x": 1114,
        "y": 179,
        "w": 552,
        "h": 642
    },
    {
        "id": "dce46db1f4e0e125",
        "type": "group",
        "z": "34c5d473de2de145",
        "name": "Sorting [60]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "768d3eb3bc0adc5e",
            "12de2bc7cb91510a",
            "49927e488301fb65",
            "66cbe63739b5aaaf",
            "98f981a5f0e1fb2e",
            "82d049b8840c40c5",
            "9537ce7342446c98",
            "b6633915287fed93",
            "b01139a5dfeb904c",
            "23b84d4737711c5d",
            "a335a0647f3da203",
            "7922a294f5bedadd",
            "9241de3d3cfa06d8",
            "88bf9e0fa1736bd9",
            "dec2543449b16ba3",
            "f2c8539f1e32b3d6",
            "d84234bcccde2243",
            "fad6fb9c02b0dde1",
            "d5ac37201caffddb",
            "9a0f9091e7668c13",
            "3aa073d4039fa34f",
            "f48fbacd651ec55d",
            "930f27b730f3b3f4",
            "05ed0640b1e3e771",
            "4461be2d2dd5e689",
            "8d0711d5616d3df9",
            "0eb11e0b775713f1",
            "4fbf870ee4096140",
            "c3e9345539f64330",
            "44722ef4f9c5d721",
            "31d13b7a464b0454",
            "de68bc723ac61fd7",
            "9be27c9c47cabc62",
            "f097487f2afa0717",
            "e2e18efde3b0d3a3",
            "3fc93acce911e34f",
            "97db7baa97411f2a"
        ],
        "x": 1694,
        "y": 179,
        "w": 552,
        "h": 762
    },
    {
        "id": "3b1117a21c830285",
        "type": "group",
        "z": "34c5d473de2de145",
        "name": "Testing [70]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9f6657e07eda96cc",
            "3b663dda98f802f5",
            "565e8a1c25b6a85d",
            "eb4502564331f697",
            "88854cff4d2b340b",
            "0f2107f40babe795",
            "e993ef0481d3012a",
            "567036a2c01c2c6e",
            "b499eb1c98dc3d7d",
            "edceba3efea74f1f",
            "c94f3dd54780d2b8",
            "fb9a10c223931afc",
            "276e4a84b5700179",
            "4fabe0639a679d36",
            "16c7a1df14c8f33c",
            "d9a5f12294765f74",
            "85f2747baaec9b2b",
            "04408b4b0d20ca79",
            "38afba89be66390d",
            "02a4964373f91263",
            "c1e6a87f8c0aa0d6",
            "1a85ce38a0c89022",
            "4b54715d0424ac8f",
            "1c5945d291aa42c6",
            "c1cbf50a294facac",
            "e35895b8b742ada9",
            "9627fd26809b7a3b",
            "da18af38ef484d3b",
            "e3be177be5b11e12",
            "6360a637f887f593",
            "f65349eb259ea09b",
            "66b6d3e1a955c6b2",
            "094e783e45c780a1"
        ],
        "x": 2274,
        "y": 179,
        "w": 552,
        "h": 682
    },
    {
        "id": "05f1cf12ec59fb7a",
        "type": "group",
        "z": "34c5d473de2de145",
        "name": "Distribution [80]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f7342a807abe2e8f",
            "24fcf39ada0d67e6",
            "320e0c96c9551bcc",
            "4d478ebc7e3dfb0e",
            "09f44f5be3ed94b4",
            "7465b12582c094f4",
            "5b5f0fb8848f944e",
            "4cd58b6d10c4c514",
            "bab796776f4918a8",
            "e792f8538e1e2432",
            "0cf4e065e0853a17",
            "ecc62498c3cbdecf",
            "bcc1e7aa1632de85",
            "7255eb16b2d98295",
            "eae853f18c8b32c3",
            "774d198e9f130a8e",
            "18bbfb2d9348e80d",
            "726c2ac4cd399af2",
            "c0e8669fa7e1ee61",
            "a60f357ceb02484a",
            "9b2b531183a524cb",
            "69fb239ffd4b6152",
            "181694f0607cce1a",
            "52698f7a26fd2e93",
            "2ec714df2c61b44a",
            "9ce61fd1c6606da6",
            "7ffd8b8f95970cbe",
            "dba490d7405a2f17",
            "68e7b94c2da3341e",
            "cfdde4468b007b24",
            "7e1c2d40327d2291",
            "25ad25dff64bdb8d",
            "0ed868a91d603220",
            "e6d39921353c37d7",
            "6cba4ac0705d7cb3",
            "eb7a5155997843c7",
            "079a738b937a16e0"
        ],
        "x": 2854,
        "y": 179,
        "w": 552,
        "h": 762
    },
    {
        "id": "ff72a3dbf8f66d53",
        "type": "group",
        "z": "34c5d473de2de145",
        "name": "Handling 2 [90]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "424a5cb3fefd45aa",
            "4dc4422b12733d22",
            "f72556202f29c06d",
            "15a65c0854716c40",
            "b49bdb5134508aa4",
            "e8f490edc72e3434",
            "9053da4cc282f240",
            "f9ce45277911e0ea",
            "c9cdec58221a43d6",
            "05ca711d1fc7dc95",
            "b6cc8193472c10db",
            "8e0da32934a3a074",
            "8f26c7c80403e464",
            "56cb3a80d2690750",
            "28d2cdbb34125323",
            "eda924e5ca723165",
            "2c71d66f3fcf3274",
            "bafa8f6039f010f3",
            "a1858dd92575d844",
            "f05274511c2a9bd7",
            "7530e6c1c047e398",
            "72488bacc32440bb",
            "e4eb9765353bdb89",
            "f08ef99199ecac25",
            "09b7738bc165019a",
            "14e02470810d72b8",
            "4c93070764af1b7d",
            "82101e38bfd35108",
            "f2925f31bd7c135b",
            "c69b238d972d42ae",
            "48be2cc207567a3c"
        ],
        "x": 3434,
        "y": 179,
        "w": 552,
        "h": 642
    },
    {
        "id": "d87ef24cbf29146a",
        "type": "group",
        "z": "34c5d473de2de145",
        "name": "Processing [100]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "276ec64484ae3796",
            "c906510784c926c9",
            "c6542c79843db351",
            "8e8ab5731df6c30a",
            "415b455a8ff46767",
            "ecf3fa858f55a3e2",
            "23190ec9e137c772",
            "044d3cc36f78b1f2",
            "6b02f3a012231bdb",
            "8bb8bc6fc7044c9e",
            "92d88803af9ce949",
            "e1f54a9614d3ef81",
            "63fc71b2aa8fc6fa",
            "df882576f38dd0c6",
            "9b26af3fa51441f3",
            "577df36c3fb663c7",
            "88cab66cfc135766",
            "70d47febaddcc267",
            "9b31d05d314398e7",
            "5eabc2910e610782",
            "caaf0488044a9963",
            "2b8c64af861c5e40",
            "dc97a3dca266c9e8",
            "f2c86602069a2f39",
            "7508259042bfc018",
            "90bf046a9e08b60c",
            "88ae68b4e7a3964a",
            "0a189568c5f9f66b",
            "43fa71d4de3daf8e",
            "9bae725ed528f3c3",
            "255889680cb64a1d",
            "7864de5838d49be9",
            "58675d144b399079",
            "6d53bf2daf80b939",
            "37f174a20d2e68f7",
            "28767164893cfb26",
            "8b94dbb40197a83f"
        ],
        "x": 4014,
        "y": 179,
        "w": 552,
        "h": 762
    },
    {
        "id": "03f2db2d1c1ba98b",
        "type": "group",
        "z": "ec15050b70975098",
        "name": "RFID System Configuration",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "46fcd9ce06dc90fd",
            "8655fef1905a53bd",
            "5ce657fe45f5278d",
            "ec336172c34b7ff3",
            "d8bab5bc84ee373c",
            "95d208697d49e7d8",
            "0b235393578db883",
            "f8743ce6fc8a052d",
            "0610a3f1ee2f3158",
            "f39f737536f4cdab",
            "5469715450f954eb",
            "c68ee5ca7514984d",
            "6d9a5c014bbdfc72",
            "45edd5d3f2cd6904"
        ],
        "x": 14,
        "y": 19,
        "w": 1612,
        "h": 242
    },
    {
        "id": "7a11315e649378dd",
        "type": "group",
        "z": "ec15050b70975098",
        "name": "Read via Dashboard",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fdfc6198dd681f3d",
            "81ebd6e4ef142f3b",
            "dc79484fb7604d92",
            "b558f938c6cee2f2",
            "c3037ce505fc9f9a",
            "76e28b166105e9a1",
            "9c26da7a85c9a965"
        ],
        "x": 14,
        "y": 279,
        "w": 1072,
        "h": 122
    },
    {
        "id": "29892d1461924b63",
        "type": "group",
        "z": "ec15050b70975098",
        "name": "Write via DashBoard",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8630f24296343be0",
            "b43b4b19f9bfae42",
            "c359cf89548c4e1d",
            "de13c0f3dcd1c685",
            "20085908290ab7b5",
            "25a519b164e261ac",
            "f5178c5f1480c676",
            "127817e4a064e51d",
            "bc3bc81a0289458e",
            "a8a611dbf0f44d40",
            "e603737fdc4af853",
            "d35897635309de74"
        ],
        "x": 1114,
        "y": 279,
        "w": 1192,
        "h": 162
    },
    {
        "id": "b7258161d47d7aa6",
        "type": "group",
        "z": "ec15050b70975098",
        "name": "Display TagID by Antenna",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "90a34c6e57efea2b",
            "97cb98c576764175",
            "5ea1fa6a0f2d677d",
            "ab141b8321d1b55f",
            "b63824e4fceb4029",
            "8a5a54db230795ba",
            "fddafa824f791bf3",
            "c21e2990a458f990",
            "a0281e9f9f4f2b9b",
            "6494468b998c8dd7",
            "dc2bc5d80113ec07"
        ],
        "x": 14,
        "y": 419,
        "w": 732,
        "h": 202
    },
    {
        "id": "0f8fe8b767eb683f",
        "type": "group",
        "z": "ec15050b70975098",
        "name": "Arrive and Depart Procedures",
        "style": {
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "80d2a6a14850f66a",
            "711af6285fbca08a",
            "355a3d9e2003e686",
            "5c45eda3c02eaf89",
            "2f3a48c6a6bdfbb5",
            "4b7bb121e0d2277f",
            "a96447f450f26c84",
            "c955811732d08be3",
            "af1fdde4ace7fd04",
            "37da4c7ea3fc0c9d",
            "17127297e21a6a78",
            "b7c3d2e4bd7066a9",
            "93c01431ecb89b30",
            "efe26cdee45d3661",
            "8977bd74a5ca54a2",
            "5de439f4e015a3a2",
            "a50fc46b234fcd8a",
            "b1c31f09bfaab763",
            "bbf470c80fbb1c10",
            "3498b04f96306271",
            "bfcbc44e3232a68f",
            "99010ee324e984f5",
            "31dcc6700c353e6d",
            "af1dd13f7b220974",
            "4f6a2d160967335e",
            "88ee93ab82e3a6f3",
            "0bffbe4528325072",
            "d8bba8ccffa64651",
            "b44957201a8ce390",
            "0da10e2e745c81c2",
            "7d00805b6b8b6eda",
            "4c110f1f993b1180",
            "61efaac17bb31009",
            "86039e0e3a6afab9",
            "1038e09b175952a4",
            "2c518b3132842a38",
            "d5e9979b0883c550",
            "06ce500db3d1cd27",
            "98bcb33524b5791e"
        ],
        "x": 14,
        "y": 639,
        "w": 1572,
        "h": 562
    },
    {
        "id": "88206e9dfa28ad0f",
        "type": "group",
        "z": "1e403841a39b0138",
        "name": "Distribution",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000",
            "label-position": "n"
        },
        "nodes": [
            "05b2816231022bb2",
            "b20c230ef4e02fc1",
            "5e13f30b3cddbb15",
            "772a109f50ee7ad8",
            "db1e85ddc3d6e716",
            "117de5d5506a066f",
            "25bb237d12969f31",
            "9fbdf3975565eae5",
            "261c155db63f7585"
        ],
        "x": 1944,
        "y": 1679,
        "w": 812,
        "h": 222
    },
    {
        "id": "7fa7577b502c30e1",
        "type": "group",
        "z": "1e403841a39b0138",
        "name": "Processing",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "63a00ab8dc3c0abe",
            "784d98ed42fe9c3a",
            "961f38e38f923e17",
            "6e4936f1c9365710",
            "d44ab41deae9e0d2",
            "e0bbd45bfdeb9df8",
            "3d1624709c3f966b",
            "1199bc0ea3d8368f",
            "a5204af48c6cbf7c"
        ],
        "x": 1944,
        "y": 1899,
        "w": 812,
        "h": 182
    },
    {
        "id": "7d28714bf0311e7b",
        "type": "group",
        "z": "1e403841a39b0138",
        "name": "Vision",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "85d0de3271455ce0",
            "afecaf6eaaebd6b0",
            "f38917f80475eac7",
            "896ccc5820ab906e",
            "b7b9cec177a348f5",
            "50db647f3394ee8b",
            "b0edbe2679dd09ce",
            "f53ad3fcc8ae497f",
            "97da7d1fc436569f"
        ],
        "x": 1944,
        "y": 2079,
        "w": 812,
        "h": 182
    },
    {
        "id": "d4708387f5f66b98",
        "type": "group",
        "z": "1e403841a39b0138",
        "name": "Robot",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "b950da2d8019b690",
            "a3a87f89997a68f3",
            "8f2557b3e4273e5d",
            "078fad69797fd732",
            "1e7b48ca0f9a1b3f",
            "9417023e81abca96",
            "c4bc08188533356e",
            "a294dfb952a7f131",
            "85bf620d22a14ad9"
        ],
        "x": 1944,
        "y": 2259,
        "w": 812,
        "h": 182
    },
    {
        "id": "cca5c20d8523848c",
        "type": "group",
        "z": "1e403841a39b0138",
        "name": "Storage",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "f8c6218005851a11",
            "c8cbf0c50e6024ae",
            "c07ebad33d8c73ea",
            "585a9ba6c4651bb3",
            "c90b1b0a76f874a6",
            "11f5f99447b3a062",
            "907af835fe5baf32",
            "f992d17bc83a67cb",
            "7b9f70b602fae36a"
        ],
        "x": 1944,
        "y": 2439,
        "w": 812,
        "h": 182
    },
    {
        "id": "88542df151e150a1",
        "type": "group",
        "z": "1e403841a39b0138",
        "name": "Sorting",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "83c5aaa04253f8a0",
            "0948c089b51a6794",
            "ee775ba0ba8e44f1",
            "297e42975f1de742",
            "0c3effaae4bafd21",
            "1d842b89beafb050",
            "826c3c0d067e6ea2",
            "af0b70d08d5226d5",
            "12d714e78f1b8185"
        ],
        "x": 1944,
        "y": 2619,
        "w": 812,
        "h": 202
    },
    {
        "id": "7a8e6c2dbdf825d0",
        "type": "group",
        "z": "1e403841a39b0138",
        "name": "Teste",
        "style": {
            "stroke": "#000000",
            "fill": "#a4a4a4",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "21392db4f850da89",
            "5e2925ac431c770b",
            "a57fd76ebd790cc2",
            "cc21937191be6398",
            "adccb81f6d217fe0",
            "dc8604ffb5443109",
            "6f7978eff02f82d3",
            "bebbda0a9eb964be",
            "acbb2f7e57522769",
            "4e7784f548135bc5",
            "ab160bafdeafbfa2",
            "be466d8356cbb01c",
            "1e20fcaccb497a49",
            "cf090b9cf9ef0b7d",
            "5b6f2674a763676b",
            "da9cbfc7933f7398",
            "5419a414dd73bf29",
            "a0421bed281fcf31",
            "fff70c2523b74520",
            "62a55c0b5f150a81",
            "681985bfdf8b9a79",
            "752760c7ac0ef6ef",
            "d3a3d2dbfa5b2749",
            "7a51e29f63fab44d",
            "456eb9eb2d350289",
            "e73a67afa25b9c20",
            "09619d163c37bd20",
            "3fe9b4638b816460",
            "4ca9c248fdfa5847",
            "c43ac335b6a18ec9",
            "9edef44c047648d3",
            "058b65ad69510edb",
            "e8180b744076f4ef",
            "839b4c048f7d1cc8",
            "902740288a237cc7",
            "c92c25c96c9500c9",
            "1e2107b52160592c",
            "c3c756b6bc463790",
            "b82b2368236a53ce",
            "0589a7c356a375a7",
            "ccba6683b9683afb",
            "1c11c024f8970253",
            "39d92c8b90c73082",
            "282176cff9080bc0",
            "c915001fb8a850f2",
            "2b5242c9a9ceb0d1",
            "df194bb8a4a49c30",
            "61d259312317c2c0",
            "191d4c3ed16add23",
            "8ff2c1dbca6313f5",
            "043bfe8854cf7c64",
            "8fc2dd37517cacad",
            "d04bdb53047c95ac",
            "7673e129cfe32489",
            "81056c8f16df158b",
            "5fa9284daab62de2",
            "b659389c3b0976d8",
            "44bb715f6102601c",
            "dd53e3ed4f19bdc3",
            "4206964cc2972305",
            "17bb6569f492215e",
            "573ccfc8080a7491",
            "bf5f5f4f9434fc3d",
            "26974897695982fc",
            "3ca9cb16a9b41db2"
        ],
        "x": 34,
        "y": 479,
        "w": 1332,
        "h": 802
    },
    {
        "id": "c4c593ba6143c273",
        "type": "group",
        "z": "1e403841a39b0138",
        "name": "Table Config.",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "4b9fa90e5c286a74",
            "e198f51dc3ff6032",
            "fedf9bafb7a3f368",
            "ca64471f9a1b94d8",
            "536690b5673f2e14",
            "957cd07eb1831ac1",
            "d297c004fa728ae2",
            "09774461e3e533fa",
            "9a1e7b52288c61c9",
            "27d1484bd603c6ad",
            "9ea9d79c09fb453b",
            "859bf3b0eeb49377",
            "d53547090319a391"
        ],
        "x": 54,
        "y": 239,
        "w": 1172,
        "h": 202
    },
    {
        "id": "b1751377a9cbe2fc",
        "type": "group",
        "z": "1e403841a39b0138",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0d6056c607c1f3fa",
            "459667caccbde980",
            "19628f562e207eaa",
            "862f50c650d020ca",
            "17b00d5072f43677",
            "5f134fb0916b25a0"
        ],
        "x": 14,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "e461993fb78eebad",
        "type": "ui_tab",
        "name": "Controls",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0bf576cdebe73fee",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#0033ff",
                "baseFont": "Arial,Arial,Helvetica,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#0033ff",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0033ff",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#4d70ff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0033ff",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "Arial,Arial,Helvetica,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "UNESP FMS with AAS",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 41,
                "sy": 48,
                "gx": 4,
                "gy": 4,
                "cx": 5,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c34233f4e7126d8d",
        "type": "ui_tab",
        "name": "Distribution",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "83f71b98cf19d898",
        "type": "ui_tab",
        "name": "Testing",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1e4aa09eb299b698",
        "type": "ui_tab",
        "name": "AS-i",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9f93b0f1106423fd",
        "type": "ui_tab",
        "name": "Handling 2",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3d6947a51eaa4869",
        "type": "ui_tab",
        "name": "Processing",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "781fe1dbe9f57920",
        "type": "ui_tab",
        "name": "Handling 1",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ea3865414e81449c",
        "type": "ui_tab",
        "name": "Sorting",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0eec5376bfff0195",
        "type": "ui_group",
        "name": "Distribution [80]",
        "tab": "e461993fb78eebad",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "93fbe529bf3b4213",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53888/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": false,
        "login": true,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "09c7f509198eafca",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "c34233f4e7126d8d",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "9f15425c94363b2a",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "c34233f4e7126d8d",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "942a632ed69a9868",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "c34233f4e7126d8d",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "219f1d9c02b36449",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "c34233f4e7126d8d",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a6fafdd26c020da2",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "c34233f4e7126d8d",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "9dd503c660f14ac8",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "c34233f4e7126d8d",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "99e81e95067b9e45",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "83f71b98cf19d898",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3926bb375e3ef913",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "83f71b98cf19d898",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "aa2e640ab6d2880c",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "83f71b98cf19d898",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "df56b07a3248e1e8",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "83f71b98cf19d898",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "1987ae589517adbd",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "83f71b98cf19d898",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "8a4d49a5c2f6f22b",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "83f71b98cf19d898",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "9f5f4c246a81b714",
        "type": "ui_group",
        "name": "Testing [70]",
        "tab": "e461993fb78eebad",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "90ad960b5d8708ba",
        "type": "ui_group",
        "name": "Testing",
        "tab": "1e4aa09eb299b698",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "821e214759c2c88d",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53887/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": false,
        "login": true,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "9d31d5774d948371",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53885/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": false,
        "login": true,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "e230948f30b84252",
        "type": "ui_group",
        "name": "Handling 2",
        "tab": "1e4aa09eb299b698",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "f319bce57ad650e1",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "9f93b0f1106423fd",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "27efe23283ab7286",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "9f93b0f1106423fd",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "39d050a0a4ef7908",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "9f93b0f1106423fd",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "7b9719c529a54011",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "9f93b0f1106423fd",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "fbefb765f12e8e16",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "9f93b0f1106423fd",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "253f8ad52553a173",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "9f93b0f1106423fd",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "668989f8ee84d520",
        "type": "ui_group",
        "name": "Handling 2 [90]",
        "tab": "e461993fb78eebad",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "038d76092cb41f2b",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53890/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": false,
        "login": true,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "5a9bf81ea9813817",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "3d6947a51eaa4869",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "f958a9aa519ee377",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "3d6947a51eaa4869",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d19797a079250fc5",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "3d6947a51eaa4869",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ab7c938b16989ad7",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "3d6947a51eaa4869",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "9d3f6f0389950d34",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "3d6947a51eaa4869",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "7fa3ab75555f7cf2",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "3d6947a51eaa4869",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "977e16b42dd24b9c",
        "type": "ui_group",
        "name": "Processing [100]",
        "tab": "e461993fb78eebad",
        "order": 6,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "7c3532b374fad5e8",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "781fe1dbe9f57920",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "253b98b922bb0a07",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "781fe1dbe9f57920",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4770dcc7dac439f1",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "781fe1dbe9f57920",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c16469d40b10f9c7",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "781fe1dbe9f57920",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "bb83383da337bbb5",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "781fe1dbe9f57920",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2b05692ef7caf42d",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "781fe1dbe9f57920",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ec21593d344c789d",
        "type": "ui_group",
        "name": "Handling 1",
        "tab": "1e4aa09eb299b698",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "829bd971df6e4aa4",
        "type": "ui_group",
        "name": "Handling 1 [50]",
        "tab": "e461993fb78eebad",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "05bef22ae7459f80",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53886/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": false,
        "login": true,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "894a03fce94da0d7",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "ea3865414e81449c",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "40e7bc8223cf7e48",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "ea3865414e81449c",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "8b3e4c954f472288",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "ea3865414e81449c",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ecd89844f6f2cd8c",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "ea3865414e81449c",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4dfdd4b1871d085b",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "ea3865414e81449c",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c238b18dd02b43b1",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "ea3865414e81449c",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e97defc61512c537",
        "type": "ui_group",
        "name": "Sorting [60]",
        "tab": "e461993fb78eebad",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2980d795e6b09239",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53889/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": false,
        "login": true,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "6f865d6d304fa9c0",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53882/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": false,
        "login": true,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "55d7a1022f2507a1",
        "type": "ui_tab",
        "name": "Master",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "292118fdc7365bc0",
        "type": "ui_group",
        "name": "Sensors",
        "tab": "55d7a1022f2507a1",
        "order": 1,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "951f6c64c796ef31",
        "type": "ui_group",
        "name": "Actuators",
        "tab": "55d7a1022f2507a1",
        "order": 2,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e99a0a0e71405ae6",
        "type": "ui_group",
        "name": "FeedBack",
        "tab": "55d7a1022f2507a1",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "62292116bb60abdf",
        "type": "ui_group",
        "name": "Test AS-i",
        "tab": "55d7a1022f2507a1",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cb2e4e231daf441f",
        "type": "ui_group",
        "name": "Proc AS-i",
        "tab": "55d7a1022f2507a1",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e0644ee2b6cb3177",
        "type": "ui_group",
        "name": "Visi AS-i",
        "tab": "55d7a1022f2507a1",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "fa86e700a3d847fa",
        "type": "ui_group",
        "name": "Robo AS-i",
        "tab": "55d7a1022f2507a1",
        "order": 7,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ae91ecd607dc7ef6",
        "type": "ui_group",
        "name": "Stor AS-i",
        "tab": "55d7a1022f2507a1",
        "order": 8,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "579fe01414767170",
        "type": "ui_group",
        "name": "Sort AS-i",
        "tab": "55d7a1022f2507a1",
        "order": 9,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b7ac41c0bcdf40b1",
        "type": "mqtt-broker",
        "name": "S7 Host",
        "broker": "200.145.26.202",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "fab94c45037f1a75",
        "type": "s7 endpoint",
        "d": true,
        "transport": "iso-on-tcp",
        "address": "200.145.26.35",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "50",
        "timeout": "1500",
        "name": "S7 Master",
        "vartable": [
            {
                "addr": "I20.0",
                "name": "O_20_On"
            },
            {
                "addr": "I20.1",
                "name": "O_20_Off"
            },
            {
                "addr": "I20.6",
                "name": "O_20_Controler_On"
            },
            {
                "addr": "I22.0",
                "name": "F_22_Led_On"
            },
            {
                "addr": "I22.1",
                "name": "F_22_Led_Off"
            },
            {
                "addr": "I22.7",
                "name": "F_22_Conveyor"
            },
            {
                "addr": "I24.0",
                "name": "O_24_Cart_Stat"
            },
            {
                "addr": "I24.1",
                "name": "O_24_Cart_Next"
            },
            {
                "addr": "I24.2",
                "name": "O_24_Optic"
            },
            {
                "addr": "I24.3",
                "name": "O_24_Count"
            },
            {
                "addr": "I24.4",
                "name": "O_24_Pist_Bck"
            },
            {
                "addr": "I24.5",
                "name": "F_24_Release_FB"
            },
            {
                "addr": "I25.0",
                "name": "O_25_Cart_Stat"
            },
            {
                "addr": "I25.1",
                "name": "O_25_Cart_Next"
            },
            {
                "addr": "I25.2",
                "name": "O_25_Optic"
            },
            {
                "addr": "I25.3",
                "name": "O_25_Count"
            },
            {
                "addr": "I25.4",
                "name": "O_25_Pist_Bck"
            },
            {
                "addr": "I25.5",
                "name": "F_25_Release_FB"
            },
            {
                "addr": "I26.0",
                "name": "O_26_Cart_Stat"
            },
            {
                "addr": "I26.1",
                "name": "O_26_Cart_Next"
            },
            {
                "addr": "I26.2",
                "name": "O_26_Optic"
            },
            {
                "addr": "I26.3",
                "name": "O_26_Count"
            },
            {
                "addr": "I26.4",
                "name": "O_26_Pist_Bck"
            },
            {
                "addr": "I26.5",
                "name": "F_26_Release_FB"
            },
            {
                "addr": "I27.0",
                "name": "O_27_Cart_Stat"
            },
            {
                "addr": "I27.1",
                "name": "O_27_Cart_Next"
            },
            {
                "addr": "I27.2",
                "name": "O_27_Optic"
            },
            {
                "addr": "I27.3",
                "name": "O_27_Count"
            },
            {
                "addr": "I27.4",
                "name": "O_27_Pist_Bck"
            },
            {
                "addr": "I27.5",
                "name": "F_27_Release_FB"
            },
            {
                "addr": "I28.0",
                "name": "O_28_Cart_Stat"
            },
            {
                "addr": "I28.1",
                "name": "O_28_Cart_Next"
            },
            {
                "addr": "I28.2",
                "name": "O_28_Optic"
            },
            {
                "addr": "I28.3",
                "name": "O_28_Count"
            },
            {
                "addr": "I28.4",
                "name": "O_28_Pist_Bck"
            },
            {
                "addr": "I28.5",
                "name": "F_28_Release_FB"
            },
            {
                "addr": "I29.0",
                "name": "O_29_Cart_Stat"
            },
            {
                "addr": "I29.1",
                "name": "O_29_Cart_Next"
            },
            {
                "addr": "I29.2",
                "name": "O_29_Optic"
            },
            {
                "addr": "I29.3",
                "name": "O_29_Count"
            },
            {
                "addr": "I29.4",
                "name": "O_29_Pist_Bck"
            },
            {
                "addr": "I29.5",
                "name": "F_29_Release_FB"
            },
            {
                "addr": "I31.0",
                "name": "O_31_Start"
            },
            {
                "addr": "I31.1",
                "name": "O_31_Stop"
            },
            {
                "addr": "I31.2",
                "name": "O_31_Reset"
            },
            {
                "addr": "I31.6",
                "name": "O_31_Part_in_Claw"
            },
            {
                "addr": "I31.7",
                "name": "O_31_Orientation"
            },
            {
                "addr": "I32.0",
                "name": "O_32_Sp_Cyl_Bck"
            },
            {
                "addr": "I32.1",
                "name": "O_32_Sp_Cyl_Fwd"
            },
            {
                "addr": "I32.2",
                "name": "O_32_Co_Cyl_Bck"
            },
            {
                "addr": "I32.3",
                "name": "O_32_Co_Cyl_Fwd"
            },
            {
                "addr": "I32.4",
                "name": "O_32_Sp_PickUp"
            },
            {
                "addr": "I32.5",
                "name": "O_32_Co_PickUp"
            },
            {
                "addr": "I32.6",
                "name": "O_32_Co_Mag_Empty"
            },
            {
                "addr": "I34.0",
                "name": "A_34_Request"
            },
            {
                "addr": "I34.1",
                "name": "A_34_No_Cart"
            },
            {
                "addr": "I34.2",
                "name": "A_34_Cart_Full"
            },
            {
                "addr": "I50.0",
                "name": "O_50_Part_Reserve"
            },
            {
                "addr": "I50.1",
                "name": "O_50_Claw_Cart"
            },
            {
                "addr": "I50.2",
                "name": "O_50_Claw_Del"
            },
            {
                "addr": "I50.3",
                "name": "O_50_Claw_Reserve"
            },
            {
                "addr": "I50.4",
                "name": "O_50_Claw_Low"
            },
            {
                "addr": "I50.5",
                "name": "O_50_Claw_High"
            },
            {
                "addr": "I50.6",
                "name": "O_50_Part_in_Claw"
            },
            {
                "addr": "I51.0",
                "name": "O_51_Start"
            },
            {
                "addr": "I51.1",
                "name": "O_51_Stop"
            },
            {
                "addr": "I51.2",
                "name": "O_51_Key_Pos"
            },
            {
                "addr": "I51.3",
                "name": "O_51_Reset"
            },
            {
                "addr": "I51.4",
                "name": "O_51_Panel_I4"
            },
            {
                "addr": "I51.5",
                "name": "O_51_Panel_I5"
            },
            {
                "addr": "I51.6",
                "name": "O_51_Panel_I6"
            },
            {
                "addr": "I51.7",
                "name": "O_51_Panel_I7"
            },
            {
                "addr": "I52.0",
                "name": "F_52_Claw_2_Del"
            },
            {
                "addr": "I52.1",
                "name": "F_52_Claw_2_Cart"
            },
            {
                "addr": "I52.2",
                "name": "F_52_Claw_Down"
            },
            {
                "addr": "I52.3",
                "name": "F_52_Close_Claw"
            },
            {
                "addr": "I53.0",
                "name": "F_53_Led_Start"
            },
            {
                "addr": "I53.1",
                "name": "F_53_Led_Reset"
            },
            {
                "addr": "I53.2",
                "name": "F_53_Led_Extra1"
            },
            {
                "addr": "I53.3",
                "name": "F_53_Led_Extra2"
            },
            {
                "addr": "I53.4",
                "name": "F_53_Panel_O4"
            },
            {
                "addr": "I53.5",
                "name": "F_53_Panel_O5"
            },
            {
                "addr": "I53.6",
                "name": "F_53_Panel_O6"
            },
            {
                "addr": "I53.7",
                "name": "F_53_Panel_O7"
            },
            {
                "addr": "I54.0",
                "name": "A_54_Request"
            },
            {
                "addr": "I54.1",
                "name": "A_54_No_Cart"
            },
            {
                "addr": "I54.2",
                "name": "A_54_Cart_Full"
            },
            {
                "addr": "I55.0",
                "name": "C_55_Initialization"
            },
            {
                "addr": "I55.1",
                "name": "C_55_PD_Proc"
            },
            {
                "addr": "I55.2",
                "name": "C_55_PD_Cart"
            },
            {
                "addr": "I60.0",
                "name": "O_60_SPart"
            },
            {
                "addr": "I60.1",
                "name": "O_60_SInd"
            },
            {
                "addr": "I60.2",
                "name": "O_60_SPhoto"
            },
            {
                "addr": "I60.3",
                "name": "O_60_Part_Pass"
            },
            {
                "addr": "I60.4",
                "name": "O_60_SL1_Bck"
            },
            {
                "addr": "I60.5",
                "name": "O_60_SL1_Fwd"
            },
            {
                "addr": "I60.6",
                "name": "O_60_SL2_Bck"
            },
            {
                "addr": "I60.7",
                "name": "O_60_SL2_Fwd"
            },
            {
                "addr": "I61.0",
                "name": "O_61_Start"
            },
            {
                "addr": "I61.1",
                "name": "O_61_Stop"
            },
            {
                "addr": "I61.2",
                "name": "O_61_Key_Pos"
            },
            {
                "addr": "I61.3",
                "name": "O_61_Reset"
            },
            {
                "addr": "I61.4",
                "name": "O_61_Panel_I4"
            },
            {
                "addr": "I61.5",
                "name": "O_61_Panel_I5"
            },
            {
                "addr": "I61.6",
                "name": "O_61_Panel_I6"
            },
            {
                "addr": "I61.7",
                "name": "O_61_Panel_I7"
            },
            {
                "addr": "I62.0",
                "name": "F_62_Conveyor"
            },
            {
                "addr": "I62.1",
                "name": "F_62_P1"
            },
            {
                "addr": "I62.2",
                "name": "F_62_P2"
            },
            {
                "addr": "I62.3",
                "name": "F_62_Identify"
            },
            {
                "addr": "I63.0",
                "name": "F_63_Led_Start"
            },
            {
                "addr": "I63.1",
                "name": "F_63_Led_Reset"
            },
            {
                "addr": "I63.2",
                "name": "F_63_Led_Extra1"
            },
            {
                "addr": "I63.3",
                "name": "F_63_Led_Extra2"
            },
            {
                "addr": "I63.4",
                "name": "F_63_Panel_O4"
            },
            {
                "addr": "I63.5",
                "name": "F_63_Panel_O5"
            },
            {
                "addr": "I63.6",
                "name": "F_63_Panel_O6"
            },
            {
                "addr": "I63.7",
                "name": "F_63_Panel_O7"
            },
            {
                "addr": "I65.0",
                "name": "C_65_Initialization"
            },
            {
                "addr": "I65.1",
                "name": "C_65_ID_1"
            },
            {
                "addr": "I65.2",
                "name": "C_65_ID_2"
            },
            {
                "addr": "I70.0",
                "name": "O_70_SInductive"
            },
            {
                "addr": "I70.1",
                "name": "O_70_SPart"
            },
            {
                "addr": "I70.2",
                "name": "O_70_SStation"
            },
            {
                "addr": "I70.3",
                "name": "O_70_SPart_Height"
            },
            {
                "addr": "I70.4",
                "name": "O_70_Elev_High"
            },
            {
                "addr": "I70.5",
                "name": "O_70_Elev_Low"
            },
            {
                "addr": "I70.6",
                "name": "O_70_Pist_Back"
            },
            {
                "addr": "I71.0",
                "name": "O_71_Start"
            },
            {
                "addr": "I71.1",
                "name": "O_71_Stop"
            },
            {
                "addr": "I71.2",
                "name": "O_71_Key_Pos"
            },
            {
                "addr": "I71.3",
                "name": "O_71_Reset"
            },
            {
                "addr": "I71.4",
                "name": "O_71_Panel_I4"
            },
            {
                "addr": "I71.5",
                "name": "O_71_Panel_I5"
            },
            {
                "addr": "I71.6",
                "name": "O_71_Panel_I6"
            },
            {
                "addr": "I71.7",
                "name": "O_71_Panel_I7"
            },
            {
                "addr": "I72.0",
                "name": "F_72_Elev_Down"
            },
            {
                "addr": "I72.1",
                "name": "F_72_Elev_Up"
            },
            {
                "addr": "I72.2",
                "name": "F_72_Eject_Part"
            },
            {
                "addr": "I72.3",
                "name": "F_72_Air_On"
            },
            {
                "addr": "I73.0",
                "name": "F_73_Led_Start"
            },
            {
                "addr": "I73.1",
                "name": "F_73_Led_Reset"
            },
            {
                "addr": "I73.2",
                "name": "F_73_Led_Extra1"
            },
            {
                "addr": "I73.3",
                "name": "F_73_Led_Extra2"
            },
            {
                "addr": "I73.4",
                "name": "F_73_Panel_O4"
            },
            {
                "addr": "I73.5",
                "name": "F_73_Panel_O5"
            },
            {
                "addr": "I73.6",
                "name": "F_73_Panel_O6"
            },
            {
                "addr": "I73.7",
                "name": "F_73_Panel_O7"
            },
            {
                "addr": "I74.0",
                "name": "A_74_Request"
            },
            {
                "addr": "I74.1",
                "name": "A_74_No_Cart"
            },
            {
                "addr": "I74.2",
                "name": "A_74_Cart_Full"
            },
            {
                "addr": "I75.0",
                "name": "C_75_Initialization"
            },
            {
                "addr": "I75.1",
                "name": "C_75_ID_Delivery1"
            },
            {
                "addr": "I75.2",
                "name": "C_75_ID_Delivery2"
            },
            {
                "addr": "I75.3",
                "name": "C_75_Part_Del"
            },
            {
                "addr": "I75.4",
                "name": "C_75_RQ_Part_Del"
            },
            {
                "addr": "I75.5",
                "name": "C_75_RQ_Wrong"
            },
            {
                "addr": "I75.6",
                "name": "C_75_Identified80"
            },
            {
                "addr": "I75.7",
                "name": "C_75_Requested80"
            },
            {
                "addr": "I80.0",
                "name": "O_80_Mag_Full"
            },
            {
                "addr": "I80.1",
                "name": "O_80_Pist_Back"
            },
            {
                "addr": "I80.2",
                "name": "O_80_Pist_Fwd"
            },
            {
                "addr": "I80.3",
                "name": "O_80_Part_Stuck"
            },
            {
                "addr": "I80.4",
                "name": "O_80_Arm_Mag"
            },
            {
                "addr": "I80.5",
                "name": "O_80_Arm_Del"
            },
            {
                "addr": "I80.6",
                "name": "O_80_Mag_Empty"
            },
            {
                "addr": "I81.0",
                "name": "O_81_Start"
            },
            {
                "addr": "I81.1",
                "name": "O_81_Stop"
            },
            {
                "addr": "I81.2",
                "name": "O_81_Key_Pos"
            },
            {
                "addr": "I81.3",
                "name": "O_81_Reset"
            },
            {
                "addr": "I81.4",
                "name": "O_81_Panel_I4"
            },
            {
                "addr": "I81.5",
                "name": "O_81_Panel_I5"
            },
            {
                "addr": "I81.6",
                "name": "O_81_Panel_I6"
            },
            {
                "addr": "I81.7",
                "name": "O_81_Panel_I7"
            },
            {
                "addr": "I82.0",
                "name": "F_82_Pist_Adv"
            },
            {
                "addr": "I82.1",
                "name": "F_82_Suction_On"
            },
            {
                "addr": "I82.2",
                "name": "F_82_Suction_Off"
            },
            {
                "addr": "I82.3",
                "name": "F_82_Arm_2_Del"
            },
            {
                "addr": "I82.4",
                "name": "F_82_Arm_2_Mag"
            },
            {
                "addr": "I83.0",
                "name": "F_83_Led_Start"
            },
            {
                "addr": "I83.1",
                "name": "F_83_Led_Reset"
            },
            {
                "addr": "I83.2",
                "name": "F_83_Led_Extra1"
            },
            {
                "addr": "I83.3",
                "name": "F_83_Led_Extra2"
            },
            {
                "addr": "I83.4",
                "name": "F_83_Panel_O4"
            },
            {
                "addr": "I83.5",
                "name": "F_83_Panel_O5"
            },
            {
                "addr": "I83.6",
                "name": "F_83_Panel_O6"
            },
            {
                "addr": "I83.7",
                "name": "F_83_Panel_O7"
            },
            {
                "addr": "I85.0",
                "name": "C_85_Initialization"
            },
            {
                "addr": "I90.0",
                "name": "O_90_Part_Reserve"
            },
            {
                "addr": "I90.1",
                "name": "O_90_Claw_Del"
            },
            {
                "addr": "I90.2",
                "name": "O_90_Claw_Cart"
            },
            {
                "addr": "I90.3",
                "name": "O_90_Claw_Reserve"
            },
            {
                "addr": "I90.4",
                "name": "O_90_Claw_Low"
            },
            {
                "addr": "I90.5",
                "name": "O_90_Claw_High"
            },
            {
                "addr": "I90.6",
                "name": "O_90_Part_in_Claw"
            },
            {
                "addr": "I91.0",
                "name": "O_91_Start"
            },
            {
                "addr": "I91.1",
                "name": "O_91_Stop"
            },
            {
                "addr": "I91.2",
                "name": "O_91_Key_Pos"
            },
            {
                "addr": "I91.3",
                "name": "O_91_Reset"
            },
            {
                "addr": "I91.4",
                "name": "O_91_Panel_I4"
            },
            {
                "addr": "I91.5",
                "name": "O_91_Panel_I5"
            },
            {
                "addr": "I91.6",
                "name": "O_91_Panel_I6"
            },
            {
                "addr": "I91.7",
                "name": "O_91_Panel_I7"
            },
            {
                "addr": "I92.0",
                "name": "F_92_Claw_2_Cart"
            },
            {
                "addr": "I92.1",
                "name": "F_92_Claw_2_Del"
            },
            {
                "addr": "I92.2",
                "name": "F_92_Claw_Down"
            },
            {
                "addr": "I92.3",
                "name": "F_92_Close_Claw"
            },
            {
                "addr": "I93.0",
                "name": "F_93_Led_Start"
            },
            {
                "addr": "I93.1",
                "name": "F_93_Led_Reset"
            },
            {
                "addr": "I93.2",
                "name": "F_93_Led_Extra1"
            },
            {
                "addr": "I93.3",
                "name": "F_93_Led_Extra2"
            },
            {
                "addr": "I93.4",
                "name": "F_93_Panel_O4"
            },
            {
                "addr": "I93.5",
                "name": "F_93_Panel_O5"
            },
            {
                "addr": "I93.6",
                "name": "F_93_Panel_O6"
            },
            {
                "addr": "I93.7",
                "name": "F_93_Panel_O7"
            },
            {
                "addr": "I94.0",
                "name": "A_94_Request"
            },
            {
                "addr": "I94.1",
                "name": "A_94_No_Cart"
            },
            {
                "addr": "I94.2",
                "name": "A_94_Cart_Full"
            },
            {
                "addr": "I95.0",
                "name": "C_95_Initialization"
            },
            {
                "addr": "I100.0",
                "name": "O_100_PInit_Pos"
            },
            {
                "addr": "I100.1",
                "name": "O_100_PDrill_Pos"
            },
            {
                "addr": "I100.2",
                "name": "O_100_PTest_Pos"
            },
            {
                "addr": "I100.3",
                "name": "O_100_SDrill_High"
            },
            {
                "addr": "I100.4",
                "name": "O_100_SDrill_Low"
            },
            {
                "addr": "I100.5",
                "name": "O_100_RT_Sensor"
            },
            {
                "addr": "I100.6",
                "name": "O_100_PTest_Ok"
            },
            {
                "addr": "I101.0",
                "name": "O_101_Start"
            },
            {
                "addr": "I101.1",
                "name": "O_101_Stop"
            },
            {
                "addr": "I101.2",
                "name": "O_101_Key_Pos"
            },
            {
                "addr": "I101.3",
                "name": "O_101_Reset"
            },
            {
                "addr": "I101.4",
                "name": "O_101_Panel_I4"
            },
            {
                "addr": "I101.5",
                "name": "O_101_Panel_I5"
            },
            {
                "addr": "I101.6",
                "name": "O_101_Panel_I6"
            },
            {
                "addr": "I101.7",
                "name": "O_101_Panel_I7"
            },
            {
                "addr": "I102.0",
                "name": "F_102_Drill_On"
            },
            {
                "addr": "I102.1",
                "name": "F_102_RT_On"
            },
            {
                "addr": "I102.2",
                "name": "F_102_Drill_Down"
            },
            {
                "addr": "I102.3",
                "name": "F_102_Drill_Up"
            },
            {
                "addr": "I102.4",
                "name": "F_102_Drill_Pin"
            },
            {
                "addr": "I102.5",
                "name": "F_102_Test_Pin"
            },
            {
                "addr": "I103.0",
                "name": "F_103_Led_Start"
            },
            {
                "addr": "I103.1",
                "name": "F_103_Led_Reset"
            },
            {
                "addr": "I103.2",
                "name": "F_103_Led_Extra1"
            },
            {
                "addr": "I103.3",
                "name": "F_103_Led_Extra2"
            },
            {
                "addr": "I103.4",
                "name": "F_103_Panel_O4"
            },
            {
                "addr": "I103.5",
                "name": "F_103_Panel_O5"
            },
            {
                "addr": "I103.6",
                "name": "F_103_Panel_O6"
            },
            {
                "addr": "I103.7",
                "name": "F_103_Panel_O7"
            },
            {
                "addr": "I105.0",
                "name": "C_105_Initialization"
            },
            {
                "addr": "I105.1",
                "name": "C_105_Part_ready"
            },
            {
                "addr": "Q20.0",
                "name": "I_20_Led_On"
            },
            {
                "addr": "Q20.1",
                "name": "I_20_Led_Off"
            },
            {
                "addr": "Q20.7",
                "name": "I_20_Conveyor"
            },
            {
                "addr": "Q24.0",
                "name": "I_24_Cart_Test"
            },
            {
                "addr": "Q24.1",
                "name": "C_24_Request"
            },
            {
                "addr": "Q24.2",
                "name": "C_24_CartDel"
            },
            {
                "addr": "Q25.0",
                "name": "I_25_Cart_Proc"
            },
            {
                "addr": "Q25.1",
                "name": "C_25_Request"
            },
            {
                "addr": "Q25.2",
                "name": "C_25_CartDel"
            },
            {
                "addr": "Q26.0",
                "name": "I_26_Cart_Visi"
            },
            {
                "addr": "Q26.1",
                "name": "C_26_Request"
            },
            {
                "addr": "Q26.2",
                "name": "C_26_CartDel"
            },
            {
                "addr": "Q27.0",
                "name": "I_27_Cart_Robo"
            },
            {
                "addr": "Q27.1",
                "name": "C_27_Request"
            },
            {
                "addr": "Q27.2",
                "name": "C_27_CartDel"
            },
            {
                "addr": "Q28.0",
                "name": "I_28_Cart_Stor"
            },
            {
                "addr": "Q28.1",
                "name": "C_28_Request"
            },
            {
                "addr": "Q28.2",
                "name": "C_28_CartDel"
            },
            {
                "addr": "Q29.0",
                "name": "I_29_Cart_Sort"
            },
            {
                "addr": "Q29.1",
                "name": "C_29_Request"
            },
            {
                "addr": "Q29.2",
                "name": "C_29_CartDel"
            },
            {
                "addr": "Q30.0",
                "name": "I_30_LED_Start"
            },
            {
                "addr": "Q30.1",
                "name": "I_30_Init_Pos"
            },
            {
                "addr": "Q30.2",
                "name": "I_30_Led_Extra1"
            },
            {
                "addr": "Q30.3",
                "name": "I_30_Led_Extra2"
            },
            {
                "addr": "Q30.4",
                "name": "I_30_Spring_Cyl"
            },
            {
                "addr": "Q30.5",
                "name": "I_30_Cover_Cyl"
            },
            {
                "addr": "Q33.0",
                "name": "F_33_LED_Start"
            },
            {
                "addr": "Q33.1",
                "name": "F_33_Init_Pos"
            },
            {
                "addr": "Q33.2",
                "name": "F_33_Led_Extra1"
            },
            {
                "addr": "Q33.3",
                "name": "F_33_Led_Extra2"
            },
            {
                "addr": "Q33.4",
                "name": "F_33_Spring_Cyl"
            },
            {
                "addr": "Q33.5",
                "name": "F_33_Cover_Cyl"
            },
            {
                "addr": "Q34.0",
                "name": "A_34_Cart_Stat"
            },
            {
                "addr": "Q34.1",
                "name": "A_34_Cart_Next"
            },
            {
                "addr": "Q34.2",
                "name": "A_34_Optic"
            },
            {
                "addr": "Q34.3",
                "name": "A_34_Count"
            },
            {
                "addr": "Q34.4",
                "name": "A_34_Pist_Bck"
            },
            {
                "addr": "Q34.5",
                "name": "A_34_Release_FB"
            },
            {
                "addr": "Q50.0",
                "name": "I_50_Claw_2_Del"
            },
            {
                "addr": "Q50.1",
                "name": "I_50_Claw_2_Cart"
            },
            {
                "addr": "Q50.2",
                "name": "I_50_Claw_Down"
            },
            {
                "addr": "Q50.3",
                "name": "I_50_Close_Claw"
            },
            {
                "addr": "Q51.0",
                "name": "I_51_Led_Start"
            },
            {
                "addr": "Q51.1",
                "name": "I_51_Led_Reset"
            },
            {
                "addr": "Q51.2",
                "name": "I_51_Led_Extra1"
            },
            {
                "addr": "Q51.3",
                "name": "I_51_Led_Extra2"
            },
            {
                "addr": "Q51.4",
                "name": "I_51_Panel_O4"
            },
            {
                "addr": "Q51.5",
                "name": "I_51_Panel_O5"
            },
            {
                "addr": "Q51.6",
                "name": "I_51_Panel_O6"
            },
            {
                "addr": "Q51.7",
                "name": "I_51_Panel_O7"
            },
            {
                "addr": "Q52.0",
                "name": "C_52_Profibus"
            },
            {
                "addr": "Q54.0",
                "name": "A_54_Cart_Stat"
            },
            {
                "addr": "Q54.1",
                "name": "A_54_Cart_Next"
            },
            {
                "addr": "Q54.2",
                "name": "A_54_Optic"
            },
            {
                "addr": "Q54.3",
                "name": "A_54_Count"
            },
            {
                "addr": "Q54.4",
                "name": "A_54_Pist_Bck"
            },
            {
                "addr": "Q54.5",
                "name": "A_54_Release_FB"
            },
            {
                "addr": "Q55.0",
                "name": "C_55_Start"
            },
            {
                "addr": "Q55.1",
                "name": "C_55_Cart2Del"
            },
            {
                "addr": "Q55.2",
                "name": "C_55_Del2Cart"
            },
            {
                "addr": "Q60.0",
                "name": "I_60_Conveyor"
            },
            {
                "addr": "Q60.1",
                "name": "I_60_P1"
            },
            {
                "addr": "Q60.2",
                "name": "I_60_P2"
            },
            {
                "addr": "Q60.3",
                "name": "I_60_Identify"
            },
            {
                "addr": "Q61.0",
                "name": "I_61_Led_Start"
            },
            {
                "addr": "Q61.1",
                "name": "I_61_Led_Reset"
            },
            {
                "addr": "Q61.2",
                "name": "I_61_Led_Extra1"
            },
            {
                "addr": "Q61.3",
                "name": "I_61_Led_Extra2"
            },
            {
                "addr": "Q61.4",
                "name": "I_61_Panel_O4"
            },
            {
                "addr": "Q61.5",
                "name": "I_61_Panel_O5"
            },
            {
                "addr": "Q61.6",
                "name": "I_61_Panel_O6"
            },
            {
                "addr": "Q61.7",
                "name": "I_61_Panel_O7"
            },
            {
                "addr": "Q62.0",
                "name": "C_62_Profibus"
            },
            {
                "addr": "Q65.0",
                "name": "C_65_RBS_Output"
            },
            {
                "addr": "Q65.1",
                "name": "C_65_RSB_Output"
            },
            {
                "addr": "Q65.2",
                "name": "C_65_BRS_Output"
            },
            {
                "addr": "Q65.3",
                "name": "C_65_BSR_Output"
            },
            {
                "addr": "Q65.4",
                "name": "C_65_SRB_Output"
            },
            {
                "addr": "Q65.5",
                "name": "C_65_SBR_Output"
            },
            {
                "addr": "Q70.0",
                "name": "I_70_Elev_Down"
            },
            {
                "addr": "Q70.1",
                "name": "I_70_Elev_Up"
            },
            {
                "addr": "Q70.2",
                "name": "I_70_Eject_Part"
            },
            {
                "addr": "Q70.3",
                "name": "I_70_Air_On"
            },
            {
                "addr": "Q71.0",
                "name": "I_71_Led_Start"
            },
            {
                "addr": "Q71.1",
                "name": "I_71_Led_Reset"
            },
            {
                "addr": "Q71.2",
                "name": "I_71_Led_Extra1"
            },
            {
                "addr": "Q71.3",
                "name": "I_71_Led_Extra2"
            },
            {
                "addr": "Q71.4",
                "name": "I_71_Panel_O4"
            },
            {
                "addr": "Q71.5",
                "name": "I_71_Panel_O5"
            },
            {
                "addr": "Q71.6",
                "name": "I_71_Panel_O6"
            },
            {
                "addr": "Q71.7",
                "name": "I_71_Panel_O7"
            },
            {
                "addr": "Q72.0",
                "name": "C_72_Profibus"
            },
            {
                "addr": "Q74.0",
                "name": "A_74_Cart_Stat"
            },
            {
                "addr": "Q74.1",
                "name": "A_74_Cart_Next"
            },
            {
                "addr": "Q74.2",
                "name": "A_74_Optic"
            },
            {
                "addr": "Q74.3",
                "name": "A_74_Count"
            },
            {
                "addr": "Q74.4",
                "name": "A_74_Pist_Bck"
            },
            {
                "addr": "Q74.5",
                "name": "A_74_Release_FB"
            },
            {
                "addr": "Q75.0",
                "name": "C_75_RQ_Delivery1"
            },
            {
                "addr": "Q75.1",
                "name": "C_75_RQ_Delivery2"
            },
            {
                "addr": "Q75.2",
                "name": "C_75_Identified"
            },
            {
                "addr": "Q75.3",
                "name": "C_75_Requested"
            },
            {
                "addr": "Q80.0",
                "name": "I_80_Pist_Adv"
            },
            {
                "addr": "Q80.1",
                "name": "I_80_Suction_On"
            },
            {
                "addr": "Q80.2",
                "name": "I_80_Suction_Off"
            },
            {
                "addr": "Q80.3",
                "name": "I_80_Arm_2_Del"
            },
            {
                "addr": "Q80.4",
                "name": "I_80_Arm_2_Mag"
            },
            {
                "addr": "Q81.0",
                "name": "I_81_Led_Start"
            },
            {
                "addr": "Q81.1",
                "name": "I_81_Led_Reset"
            },
            {
                "addr": "Q81.2",
                "name": "I_81_Led_Extra1"
            },
            {
                "addr": "Q81.3",
                "name": "I_81_Led_Extra2"
            },
            {
                "addr": "Q81.4",
                "name": "I_81_Panel_O4"
            },
            {
                "addr": "Q81.5",
                "name": "I_81_Panel_O5"
            },
            {
                "addr": "Q81.6",
                "name": "I_81_Panel_O6"
            },
            {
                "addr": "Q81.7",
                "name": "I_81_Panel_O7"
            },
            {
                "addr": "Q82.0",
                "name": "C_82_Profibus"
            },
            {
                "addr": "QB83",
                "name": "C_83_RQ_Parts"
            },
            {
                "addr": "Q85.0",
                "name": "C_85_Start"
            },
            {
                "addr": "Q85.1",
                "name": "C_85_Single"
            },
            {
                "addr": "Q85.2",
                "name": "C_85_Continuous"
            },
            {
                "addr": "Q85.3",
                "name": "C_85_Counted"
            },
            {
                "addr": "Q90.0",
                "name": "I_90_Claw_2_Cart"
            },
            {
                "addr": "Q90.1",
                "name": "I_90_Claw_2_Del"
            },
            {
                "addr": "Q90.2",
                "name": "I_90_Claw_Down"
            },
            {
                "addr": "Q90.3",
                "name": "I_90_Close_Claw"
            },
            {
                "addr": "Q91.0",
                "name": "I_91_Led_Start"
            },
            {
                "addr": "Q91.1",
                "name": "I_91_Led_Reset"
            },
            {
                "addr": "Q91.2",
                "name": "I_91_Led_Extra1"
            },
            {
                "addr": "Q91.3",
                "name": "I_91_Led_Extra2"
            },
            {
                "addr": "Q91.4",
                "name": "I_91_Panel_O4"
            },
            {
                "addr": "Q91.5",
                "name": "I_91_Panel_O5"
            },
            {
                "addr": "Q91.6",
                "name": "I_91_Panel_O6"
            },
            {
                "addr": "Q91.7",
                "name": "I_91_Panel_O7"
            },
            {
                "addr": "Q92.0",
                "name": "C_92_Profibus"
            },
            {
                "addr": "Q94.0",
                "name": "A_94_Cart_Stat"
            },
            {
                "addr": "Q94.1",
                "name": "A_94_Cart_Next"
            },
            {
                "addr": "Q94.2",
                "name": "A_94_Optic"
            },
            {
                "addr": "Q94.3",
                "name": "A_94_Count"
            },
            {
                "addr": "Q94.4",
                "name": "A_94_Pist_Bck"
            },
            {
                "addr": "Q94.5",
                "name": "A_94_Release_FB"
            },
            {
                "addr": "Q95.0",
                "name": "C_95_Start"
            },
            {
                "addr": "Q95.1",
                "name": "C_95_Cart2Del"
            },
            {
                "addr": "Q95.2",
                "name": "C_95_Del2Cart"
            },
            {
                "addr": "Q100.0",
                "name": "I_100_Drill_On"
            },
            {
                "addr": "Q100.1",
                "name": "I_100_RT_On"
            },
            {
                "addr": "Q100.2",
                "name": "I_100_Drill_Down"
            },
            {
                "addr": "Q100.3",
                "name": "I_100_Drill_Up"
            },
            {
                "addr": "Q100.4",
                "name": "I_100_Drill_Pin"
            },
            {
                "addr": "Q100.5",
                "name": "I_100_Test_Pin"
            },
            {
                "addr": "Q101.0",
                "name": "I_101_Led_Start"
            },
            {
                "addr": "Q101.1",
                "name": "I_101_Led_Reset"
            },
            {
                "addr": "Q101.2",
                "name": "I_101_Led_Extra1"
            },
            {
                "addr": "Q101.3",
                "name": "I_101_Led_Extra2"
            },
            {
                "addr": "Q101.4",
                "name": "I_101_Panel_O4"
            },
            {
                "addr": "Q101.5",
                "name": "I_101_Panel_O5"
            },
            {
                "addr": "Q101.6",
                "name": "I_101_Panel_O6"
            },
            {
                "addr": "Q101.7",
                "name": "I_101_Panel_O7"
            },
            {
                "addr": "Q102.0",
                "name": "C_102_Profibus"
            },
            {
                "addr": "Q105.0",
                "name": "C_105_Start"
            },
            {
                "addr": "Q105.1",
                "name": "C_105_Test"
            },
            {
                "addr": "Q105.2",
                "name": "C_105_TestDrill"
            },
            {
                "addr": "Q105.3",
                "name": "C_105_Rotation"
            }
        ]
    },
    {
        "id": "04ac9348ac03b3e9",
        "type": "ui_group",
        "name": "Tag report",
        "tab": "983ad7ea1457a4d6",
        "order": 2,
        "disp": true,
        "width": 16,
        "collapse": false
    },
    {
        "id": "1137a9e0614609d2",
        "type": "ui_group",
        "name": "Tag ID",
        "tab": "983ad7ea1457a4d6",
        "order": 4,
        "disp": true,
        "width": 7,
        "collapse": false
    },
    {
        "id": "20c5ddaf10ac3164",
        "type": "ui_group",
        "name": "Comando de Inicialização",
        "tab": "983ad7ea1457a4d6",
        "order": 1,
        "disp": true,
        "width": 9,
        "collapse": false
    },
    {
        "id": "48a76dbf5a87e035",
        "type": "ui_group",
        "name": "Status Escrita do Servidor",
        "tab": "983ad7ea1457a4d6",
        "order": 5,
        "disp": true,
        "width": 7,
        "collapse": false
    },
    {
        "id": "43e2e23f67dde8e3",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://200.145.26.39:53880/UA/SimpleNodeRedServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "d1f7a0abdebf34ee",
        "type": "ui_spacer",
        "z": "ec15050b70975098",
        "name": "spacer",
        "group": "04ac9348ac03b3e9",
        "order": 2,
        "width": 16,
        "height": 1
    },
    {
        "id": "6b3a72b6131dd3fe",
        "type": "ui_spacer",
        "z": "ec15050b70975098",
        "name": "spacer",
        "group": "04ac9348ac03b3e9",
        "order": 3,
        "width": 16,
        "height": 1
    },
    {
        "id": "79f50c9ed1c20f1b",
        "type": "comment",
        "z": "006fc51c92300bec",
        "name": "Node-Red: V6.10",
        "info": "V6.10 - 07/07/2025\nIncluído usuário e senha para todos os servidores OPC UA \nAdicionado estação Robot para os arquivos Variables.csv e users.json\n\nV6.9 - 26/06/2025\nImplementado servidor MQTT direto na versão com AAS\nTrazido o flow do RFID para a versão do AAS para implementação e ajustes futuros\nObs.: A partir deste ponto a versão sem o AAS (V5.12) não será mais atualizada.\n\nV5.12 - 2025-06-17\nImplementado servidor MQTT para distribuição das variáveis do CLP, permitindo uma única conexão ao CLP.\nCorrigido parcialmente (somente variáveis do Master [20]) problema de acionamento via MQTT sem usar as saídas nas abas.\nSerá necessário a criação de um Node-RED exclusivo para o servidor MQTT que deverá funcionar separado do restante da aplicação.\n\nV6.8.2 - 2025-06-17\nCorrigido problema de acionamento via MQTT.\nSerá necessário a criação de um Node-RED exclusivo para o servidor MQTT que deverá funcionar separado do restante da aplicação.\n\nV6.8.1\nCorrigido os caminhos dos arquivos nodeset.xml e Variables.csv para que trabalhem em sistemas Linux e nas TVBox\n\nV6.8\nImplementado servidor MQTT para distribuição das variáveis do CLP, permitindo uma única conexão ao CLP.\nCorrigido as abas para iniciarem o Subscribe somente após o servidor de leitura estar ativo.\n\nV5.11.1 - 2025-06-11\nInício da otimização da aba do RFID para integração com a nova metodologia de rastreamento.\n\nV5.11 - 2025-06-10\nIncluído atuadores e feedbacks da estação da Remota do Robot [30]\n\nV5.10 - 2025-06-05\nIncluído estação Robot [30] e acertado os namespaces (ns) das demais estações após a criação.\n\nV6.7.1 - 2025-05-07\nCorrigido os caminhos dos arquivos nodeset.xml e Variables.csv para que trabalhem em sistemas Linux e nas TVBox\n\nV5.9 - 2025-05-05\nCriação de conexão única para a leitura de variáveis no CLP e funções para cada variável nos blocos individuais.\n\nV6.7 - 2025-05-02\nCriação de conexão única para a leitura de variáveis no CLP e funções para cada variável nos blocos individuais.\n\nV5.8 - 29/04/2025\nAtualização da versão anterior para as novas variáveis conforme a V6.6, inlcuindo principalmente a mudança do endereço PROFIBUS da Esteira para [20]\n\nV6.6 - 25/04/2025\nInclusão da estação Sorting [60] e Master [20]\nSerivodr 53892 - [20] Master\nSerivodr 53896 - [60] Sorting\n\nV6.5 - 24/04/2025\nInclusão da estação Handling 1 [50]\nSerivodr 53895 - [50] Handling 1\n\nV6.4 - 27/03/2025\nInclusão da estação Processing [100]\nSerivodr 53890 - [100] Processing\n\nV6.3 - 25/03/2025\nDivisão dos servidores para trabalhar com unidades de forma individual, resolvendo o problema de 10 subscrições por cliente.\nSerivodr 53887 - [70] Testing\nServidor 53888 - [80] Distribution\nServidor 53889 - [90] Handling 2\n\nv6.2.2 - 12/02/2025\nPequenos acertos para versão 1.2 do AAS\n\nV6.2.1 - 04/02/2025\nIncluído leitura e criação do arquivo de conversão e da subscrição das variáveis a partir do Status das conexões dos clientes.\nO novo modo solucionou o problema de leitura da 1ª leitura pois força uma escrita quando existe a inscrição.\n\nV6.2 - 03/02/2025\nAtualização do arquivo s7endpoint_CLP Mestre para conter todas as variáveis da estação Testing [70]\nCriação da Aba Testing [70] e seus respectivos sinais\n\nV6.1.1 - 31/01/2025\nCriada programação para garantir a 1ª leitura das variáveis, com trigger e delay de 10 segundos.\nTestes de leitura e escrita. Ok.\n\nV6.1 - 30/01/2025\nResolvido problema de leitura e escrita do AAS com tradução Variável para NameSpace e Identifier\nRefeita a programação para a estação Distribution [80] \n\nV6.0.1 - 4/12/2024\nInseridas as novas variáveis de controle no AAS\nAcertado o nome das classes para \"Sensors\" e \"Actuators\"\nProblema na criação da variável tipo Byte C_83_RQ_Parts\n\nV5.7.8 - 28/11/2024\nCriadas Variáveis de controle da estação Testing [70]\n\nV5.7.2 - 26/11/2024\nInvertidas das posições I90.1 e I90.2 devido à alteração física\nCriada variável (QB83) para número de peças requisitadas\n\nV5.7.1 - 14/11/2024\nAtualização da estação Distributing [80] para os novos modos de produção e acertado o nome das variáveis\nIncluído a possibilidade de entrega \"contada\" de peças.\n\nV6.0 - 24/09/2024 - AAS\n\tImplementação da 1ª versão do AAS, somente para a unidade Distribution [80]\n\tP.S.: A versão 5.7 permanecerá rodando e sendo desenvolvida visto que o AAS ainda precisa ser terminado para poder ser implantado por completo.\n\nV5.7 - 19/09/2024\nCorrigido acionamento da variável I_20_Led_On\nRetirado os acionamentos individuias das estação via \"Controls and Information\"\nAdicionado o Botão via \"Controls and Information\" para a produção de uma peça.\n\nV5.6 - 08/08/2024\nInclusão das variáveis de controle da estação Sorting [60]\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação Sorting [60] \n\nV5.5 - 05/08/2024\nAtualização dos nomes das variáveis de On/Off para Start/Stop e do sinal 80_O_Mag_Empty.\nAtualização das descrições de todas as variáveispara inglês\nAdequação dos nomes das variáveis para o AAS (com letras iniciando)\nAcertado o NameSpace das estações para que as variáveis do RFID fiquem junto com as demais do Conveyor [30] (ns=12) e corrigido as demais estações.\n\nV5.4 - 31/07/2024\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação Distribution [80] - Start e Modo (Automatico ou Manual).\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação Handling 1 [90] - Start e Modo (Cart2Del e Del2Cart).\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação Processing [100] - Modo (Rotate, Test e Test+Drill).\nAtualizado arquivos config.csv e s7endpoint_CLP Mestre.csv\n\n\nV5.3 - 30/07/2024\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação [70] Testing.\nAtualizado arquivos config.csv e s7endpoint_CLP Mestre.csv",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "02c8db0cfd46da1d",
        "type": "comment",
        "z": "006fc51c92300bec",
        "name": "AAS: V2.1.1",
        "info": "V2.1.1 - 26/06/2025\n\nCorrigido nome do SMC \"AS-i\" para \"ASi\" para evitar erro de nomenclatura\nTornado todos os SMC em \"VARIABLE\" ao invés de \"PARAMETER\" para verificar erro do servidor OPC UA\n\nV2.1 - 28/04/2025\nIncluído as variáveis de simulação (SimulatedData) para todas as estações.\n\nV2.0 - 14/03/2025\nDividido os Assets por estação devido à limitação do Node-RED de 100 subscriptions.\nCada estação agora terá a sua própria versão do arquivo, todos partindo da V2.0 em conjunto.\n\nV1.2 - 12/02/2025\nIncluído submodelos para o FMS (Documentation)\nIncluído submodelos para o Distribution (Identification, TechincalData, Documentation e SimulationData)\n\nV1.1 - 03/02/2025\nIncluído as variávies de Operational Data para a estação Testing [70]\n\nV1.0 - 30/01/2025\nIncluído as variáveis de Operational Data para a estação Distribution [80]",
        "x": 90,
        "y": 80,
        "wires": []
    },
    {
        "id": "8286ca7ef0057898",
        "type": "comment",
        "z": "006fc51c92300bec",
        "name": "S7: V3.0.9",
        "info": "10/06/2025 - V3.0.9\nProgramação dos Sensores e Atuadores para a Remota do Braço Robótico [30] em FB3\n\n25/04/2025 - V3.0.8\nProgramação das estação Master [20] para que os sesnores do AS-i estivessem corretamente dentro da estação (e não separados) devido ao AAS.\nCorreção de TAGs diversas de variáveis\n\n15/04/2025 - V3.0.7\nProgramação básica da estação Handling 2 [90] para versão AAS Ok. Programados OB1, FB1, FB3, FB4 e FB5.\n\n31/03/2025 - V3.0.6\nResolvido problema de conexão estação [100] Processing. \nFoi necessário apagar e recolocar o Hardware, reconfigurando a rede PROFIBUS e os compartilhamentos.\n\n26/03/2025 - V3.0.5\nAcertado valores das variáveis das estações Handling 2 [90] e Processing [100] para o AAS.\n\n03/02/2025 - V3.0.4\nIncluídos OB82 e OB121 na estação Distribution [80]\nInserido o sinal de C_75_Initialization e corrigido as Tags para a estação Testing [70]\nAdequação dos novos endereços do Profibus nas estações Testing [70] e Distribution [80]\n\n04/12/2024 - V3.0.3\nProgramação estação Testing [70] : FB5 (Requested)\nIntegração da função Requested com as programações da estação Distributing [80], tanto no FB4 (Single) como no FB6 (Counted). \nFoi necessário substituir a programação de FB6 [80] devido à necessidade de não se ter peça no braço na última movimentação. Agora FB6 [80] está similar a FB4 [80]\n\n28/11/2024 - V3.0.2\nProgramada estação Testing [70]: OB1 (Main), FB1 (Initialization), FB4 (Identified). Ainda faltando FB5 (Requested)\n\n26/11/2024 - V3.0.1\nConcluída Programação da estação distributing [80]: OB1 (Main), FB1 (Initialization), FB4 (Single), FB5 (Continuous) e FB6 (Counted Mode) com controle via Node-RED e OPC UA\n\n13/11/2024 - V3.0\nInício da reprogramação das estações, para funcionamento junto ao FMS e Softwares de supervisão\nProgramada estação distributing [80]: OB1 (Main), FB1 (Initialization), FB4 (Single) e FB5 (Continuous). Ainda faltando FB6 (Counted Mode)\n\n01/10/2024 - V2.7\nAdicionado Remota Robot no CLP Mestre com o endereço Profibus 3. Variáries serão I30.0 a I32.7 e Q30.0 a Q30.7\nAdicionado OB121 e OB82 para resolver problema de inicialização.\nImplementação de posição de Manutenção (Key-Pos I125.2 = 0) e posição de produção (Key_Pos I125.2 = 1) para todas as estações.\n\n20/08/2024 - V2.6\nProgramação da estação Sorting [60] com os seis modos de produção\nAcerto da programação do Bloco FB11 (Produção de uma peça início ao fim) e dos blocos dos CLP´s que estavam em conflito\n\n02/08/2024 - V2.5\nAlteração e padronização da nomenclatura das variávies do OPC para atender as necessidades do AAS\n\n31/07/2024 - V2.4\nProgramação dos modos Test+Drill e Rotation Only [100] e retina de RESET\nAlteração da programação das unidades [70], [80], [90] e [100] para integração com a versão 5.4 do Node-RED na qual a programação dos modos é feito através do dashboard.\n\n23/07/2024 - V2.3\nProgramação do modo Test Only [100] e rotina de RESET.\n\n17/07/2024 - V2.2\nImplementação do tratamento de múltiplos carrinhos pela estação Master [20] para a chamada no Conveyor.\nInício programação unidade Processing [100] com 2 modos - Test e Test+Drill\n\n16/07/2024 - V2.1\nAjuste na programação do FB10 [20] Master para impedir solicitações multiplas enquanto o sistema ainda está em processo.\nAjuste na programação do [90] Handling 2 para usar a entrada Stop para alterar entre os modos de movimentação de peças, liberando a entrada Reset para zerar a memória.\nImplementação de RESET nas unidades [70], [80] e [90] no FB1 fazendo com que a entrada de Reset (I124.3) zere todas as memórias.\nImplementação de RESET na unidade [20] no FB1 fazendo com que a entrada de Off (I124.1) zere todas as memórias.\n\n04/04/2024 - V2.0\nProgramação por Function Blocks \n\nEm todas as estações (exceto Master)\nFB1 - Inicialização\nFB2 - OPC UA Sensores\nFB3 - OPC UA Atuadores\n\nNo Master:\nFB1 - Inicialização\nFB2 - OPC-UA Master\nFB3 - OPC-UA Conveyour\nFB4 - OPC-UA Handling 1\nFB5 - OPC-UA Sorting\nFB6 - OPC-UA Testing\nFB7 - OPC-UA Distribution\nFB8 - OPC-UA handling 2\nFB9 - OPC-UA Processing\nFB10 - Conveyor Control\n\nProgamações Adicionias:\n[70] TESTING\nFB4 - Identified Delivery\nFB5 - Requested Delivery\n\n[80] DISTRIBUTION\nFB4 - Manual Delivery (Single)\nFB5 - Automatic Delivery (Continuous)\n\n[90] HANDLING 2\nFB4 - Cart 2 Delivery\nFB5 - Delivery 2 Cart",
        "x": 80,
        "y": 120,
        "wires": []
    },
    {
        "id": "65069df5f6b92833",
        "type": "comment",
        "z": "006fc51c92300bec",
        "name": "S7 Endpoint Variables: V6.6.2",
        "info": "v5.11 - 10/06/2025\nIncluído as variáveis dos atuadores e feedback da Remota do Robot [30], pareando com a V6.6.2 do S7endpoint\n\nV5.10 - 05/06/2025\nIncluído as variáveis dos sensores do Remota do Robot [30], pareando com a V6.6.1 do s7endpoint\n\nV5.8 - 29/04/2025\nAcertado as variáveis que foram atualizadas para o AAS para a versão sem o AAS, deixando assim somente a V6.6 para o s7endpoint\n\nV6.6 - 25/04/2025\nAcertado as variáveis da estação [60] e Master [20] Sorting para o AAS\n\nV6.5 - 24/04/2025\nAcertado as variáveis da estação [50] Handling1 para o AAS\n\nV6.4 - 27/03/2025\nAcertado as variáveis da estação [100] Processing para o AAS\n\nV6.3 - 25/03/2025\nAcertado as variáveis da estação [90] Handling 2, [80] Distribution e [70] Testing para o AAS\nCorrigido posição das variáveis I90.1 a I90.3 após mudança física\n\nV5.7.3 - 28/11/2024\nCriadas Variáveis de controle da estação Testing [70]\n\nV5.7.2 - 26/11/2024\nInvertidas das posições I90.1 e I90.2 devido à alteração física\nCriada variável (QB83) para número de peças requisitadas\n\nV5.7.1 - 14/11/2024\nAcertadas as variáveis de controle para a estação Distribution [80]\n\nV5.7 - 14/08/2024\nInclusão das variáveis de simulação da estação Master [20]\nCriação das variáveis de controle para o Master [20] - Produção início ao fim.\n\nV5.6 - 08/08/2024\nInclusão das variáveis de controle da estação Sorting [60]\n\nV5.5 - 05/08/2024\nAtualização dos nomes das variáveis de On/Off para Start/Stop e do sinal O_80_Mag_Empty.\nAtualização das descrições de todas as variáveispara inglês\nImplementação das variáveis de simulação para as estações Conveyor [30], Handling 1 [50] e Sorting [60]\nAdequação dos nomes das variáveis para o AAS (com letras iniciando)\nAcertado o NameSpace para que as variáveis do RFID fiquem junto com as demais do Conveyor [30] (ns=12) e corrigido as demais estações.\n\nV5.4 - 31/07/2024\nImplementação de variáveis de controle para a estação Handling 2 [90] para o sentido de movimento do braço além de botão de Start\nImplementação de variáveis de controle para a estação Processing [100] para o modo de produção\nImplementação das variáveis de simulação para a estação Handling 2 [90] e Processing [100]\n\n\nV5.3 - 30/07/2024\nImplementação de variáveis de controle para a estação Testing [70] para o modo de funcionamento (Identified e Requested)\nImplementação de variáveis de controle para a estação Distribution [80] para o modo de funcionamento (Manual e Automatic) além de botão de Start\nImplementação das variáveis de simulação para a estação Testing [70] e Distribution [80]\n\n17/07/2024\nCorreção de problemas na estação Handling [90] que estava criando os sinais dos sensores (outputs) pois estavam duplicados com os Inputs.",
        "x": 360,
        "y": 40,
        "wires": []
    },
    {
        "id": "dc443e323e123314",
        "type": "comment",
        "z": "006fc51c92300bec",
        "name": "CVS Path",
        "info": "Linux / TV BOX:\n/root/ProjetoGemeo/AAS/Master/Variables.csv\n/root/ProjetoGemeo/AAS/Robot/Variables.csv\n/root/ProjetoGemeo/AAS/Handling1/Variables.csv\n/root/ProjetoGemeo/AAS/Sorting/Variables.csv\n/root/ProjetoGemeo/AAS/Testing/Variables.csv\n/root/ProjetoGemeo/AAS/Distribution/Variables.csv\n/root/ProjetoGemeo/AAS/Handling2/Variables.csv\n/root/ProjetoGemeo/AAS/Processing/Variables.csv\n\nWindows\nC:\\ProjetoGemeo\\AAS\\Master\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Robot\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Handling1\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Sorting\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Testing\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Distribution\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Handling2\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Processing\\Variables.csv",
        "x": 300,
        "y": 120,
        "wires": []
    },
    {
        "id": "ac6b88d72493fe33",
        "type": "comment",
        "z": "006fc51c92300bec",
        "name": "nodeset.xml Path",
        "info": "Linux / TV BOX:\n/root/ProjetoGemeo/AAS/Master\n/root/ProjetoGemeo/AAS/Robot\n/root/ProjetoGemeo/AAS/Storage\n/root/ProjetoGemeo/AAS/Handling1\n/root/ProjetoGemeo/AAS/Sorting\n/root/ProjetoGemeo/AAS/Testing\n/root/ProjetoGemeo/AAS/Distribution\n/root/ProjetoGemeo/AAS/Handling2\n/root/ProjetoGemeo/AAS/Processing\n\nWindows\nC:\\ProjetoGemeo\\AAS\\Master\nC:\\ProjetoGemeo\\AAS\\Robot\nC:\\ProjetoGemeo\\AAS\\Storage\nC:\\ProjetoGemeo\\AAS\\Handling1\nC:\\ProjetoGemeo\\AAS\\Sorting\nC:\\ProjetoGemeo\\AAS\\Testing\nC:\\ProjetoGemeo\\AAS\\Distribution\nC:\\ProjetoGemeo\\AAS\\Handling2\nC:\\ProjetoGemeo\\AAS\\Processing",
        "x": 320,
        "y": 80,
        "wires": []
    },
    {
        "id": "b9ed0b91f080ba78",
        "type": "comment",
        "z": "006fc51c92300bec",
        "name": "users Path",
        "info": "Linux / TV BOX:\n/root/ProjetoGemeo/AAS/Master/users.json\n/root/ProjetoGemeo/AAS/Robot/users.json\n/root/ProjetoGemeo/AAS/Handling1/users.json\n/root/ProjetoGemeo/AAS/Sorting/users.json\n/root/ProjetoGemeo/AAS/Testing/users.json\n/root/ProjetoGemeo/AAS/Distribution/users.json\n/root/ProjetoGemeo/AAS/Handling2/users.json\n/root/ProjetoGemeo/AAS/Processing/users.json\n\nWindows\nC:\\ProjetoGemeo\\AAS\\Master\\users.json\nC:\\ProjetoGemeo\\AAS\\Robot\\users.json\nC:\\ProjetoGemeo\\AAS\\Handling1\\users.json\nC:\\ProjetoGemeo\\AAS\\Sorting\\users.json\nC:\\ProjetoGemeo\\AAS\\Testing\\users.json\nC:\\ProjetoGemeo\\AAS\\Distribution\\users.json\nC:\\ProjetoGemeo\\AAS\\Handling2\\users.json\nC:\\ProjetoGemeo\\AAS\\Processing\\users.json",
        "x": 300,
        "y": 160,
        "wires": []
    },
    {
        "id": "7b3ad7862c26373f",
        "type": "s7 in",
        "z": "34c5d473de2de145",
        "g": "d3c5ed02b915a113",
        "endpoint": "fab94c45037f1a75",
        "mode": "all-split",
        "variable": "F_22_Led_On",
        "diff": true,
        "name": "S7 Connection",
        "x": 360,
        "y": 60,
        "wires": [
            [
                "8caa76fc73f70cb0"
            ]
        ]
    },
    {
        "id": "a563cbd70c996a4f",
        "type": "mqtt out",
        "z": "34c5d473de2de145",
        "g": "d3c5ed02b915a113",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b7ac41c0bcdf40b1",
        "x": 710,
        "y": 60,
        "wires": []
    },
    {
        "id": "8caa76fc73f70cb0",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d3c5ed02b915a113",
        "name": "Changes MSG",
        "func": "let Value\nlet TAG\n\nValue = msg.payload\nTAG = msg.topic\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 60,
        "wires": [
            [
                "a563cbd70c996a4f",
                "80eadb838c4ebcbb"
            ]
        ]
    },
    {
        "id": "80eadb838c4ebcbb",
        "type": "debug",
        "z": "34c5d473de2de145",
        "g": "d3c5ed02b915a113",
        "name": "S7 Variables",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 120,
        "wires": []
    },
    {
        "id": "51e7ae989e20ec50",
        "type": "link in",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "Master [20]",
        "links": [
            "77067a71e5eb8d06"
        ],
        "x": 75,
        "y": 500,
        "wires": [
            [
                "77eab8fb9a41240b",
                "159f7ce0d999c68d",
                "df283746e555439f",
                "527249266f668d11",
                "c0d0fb655b9235e1",
                "9e9e77bb8a05deb8",
                "9abf3870b9c9b99b",
                "7b76d080b8956609",
                "b99462dbbb507d1e",
                "83fd4cec8c53341f",
                "60d0aa142a2450c9",
                "5d94d040cc84e9f0",
                "c4a2ca8ccbbb049a",
                "9c9d2bad997b5223",
                "5f5037d38a348f2e"
            ]
        ]
    },
    {
        "id": "77eab8fb9a41240b",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "I_20_Led_On",
        "func": "if (msg.topic === \"I_20_Led_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_20_Led_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 220,
        "wires": [
            [
                "d83e3209ba5f0ca0"
            ]
        ]
    },
    {
        "id": "d83e3209ba5f0ca0",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_20_Led_On",
        "name": "I_20_Led_On",
        "x": 420,
        "y": 220,
        "wires": []
    },
    {
        "id": "dfa229a5fb0fa0ca",
        "type": "mqtt in",
        "z": "34c5d473de2de145",
        "g": "370c2440ced8bd12",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b7ac41c0bcdf40b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 950,
        "y": 60,
        "wires": [
            [
                "4abdd9aceb443468"
            ]
        ]
    },
    {
        "id": "4abdd9aceb443468",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "370c2440ced8bd12",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 60,
        "wires": [
            [
                "77067a71e5eb8d06"
            ]
        ]
    },
    {
        "id": "77067a71e5eb8d06",
        "type": "link out",
        "z": "34c5d473de2de145",
        "g": "370c2440ced8bd12",
        "name": "S7 Variables",
        "mode": "link",
        "links": [
            "51e7ae989e20ec50",
            "572f84a270c3ed7a",
            "598c9c9feb3a06fe",
            "12de2bc7cb91510a",
            "3b663dda98f802f5",
            "24fcf39ada0d67e6",
            "4dc4422b12733d22",
            "c906510784c926c9"
        ],
        "x": 1275,
        "y": 60,
        "wires": []
    },
    {
        "id": "159f7ce0d999c68d",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "I_20_Led_Off",
        "func": "if (msg.topic === \"I_20_Led_Off\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_20_Led_Off\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 260,
        "wires": [
            [
                "1a849b37ded9d6b4"
            ]
        ]
    },
    {
        "id": "1a849b37ded9d6b4",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_20_Led_Off",
        "name": "I_20_Led_Off",
        "x": 420,
        "y": 260,
        "wires": []
    },
    {
        "id": "df283746e555439f",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "I_20_Conveyor",
        "func": "if (msg.topic === \"I_20_Conveyor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_20_Conveyor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 300,
        "wires": [
            [
                "060659c867c38e57"
            ]
        ]
    },
    {
        "id": "060659c867c38e57",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_20_Conveyor",
        "name": "I_20_Conveyor",
        "x": 420,
        "y": 300,
        "wires": []
    },
    {
        "id": "527249266f668d11",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "I_24_Cart_Test",
        "func": "if (msg.topic === \"I_24_Cart_Test\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_24_Cart_Test\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 340,
        "wires": [
            [
                "c715926a0939586c"
            ]
        ]
    },
    {
        "id": "c715926a0939586c",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_24_Cart_Test",
        "name": "I_24_Cart_Test",
        "x": 420,
        "y": 340,
        "wires": []
    },
    {
        "id": "9e9e77bb8a05deb8",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "I_25_Cart_Proc",
        "func": "if (msg.topic === \"I_25_Cart_Proc\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_25_Cart_Proc\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 420,
        "wires": [
            [
                "a566b530c5d23848"
            ]
        ]
    },
    {
        "id": "a566b530c5d23848",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_25_Cart_Proc",
        "name": "I_25_Cart_Proc",
        "x": 420,
        "y": 420,
        "wires": []
    },
    {
        "id": "c0d0fb655b9235e1",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "C_24_Request",
        "func": "if (msg.topic === \"C_24_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_24_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 380,
        "wires": [
            [
                "fbc4d1a14d09b8ba"
            ]
        ]
    },
    {
        "id": "fbc4d1a14d09b8ba",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_24_Request",
        "name": "C_24_Request",
        "x": 420,
        "y": 380,
        "wires": []
    },
    {
        "id": "7b76d080b8956609",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "I_26_Cart_Visi",
        "func": "if (msg.topic === \"I_26_Cart_Visi\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_26_Cart_Visi\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 500,
        "wires": [
            [
                "5e704591cca979b8"
            ]
        ]
    },
    {
        "id": "5e704591cca979b8",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_26_Cart_Visi",
        "name": "I_26_Cart_Visi",
        "x": 420,
        "y": 500,
        "wires": []
    },
    {
        "id": "83fd4cec8c53341f",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "I_27_Cart_Robo",
        "func": "if (msg.topic === \"I_27_Cart_Robo\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_27_Cart_Robo\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 580,
        "wires": [
            [
                "4120720d228d5847"
            ]
        ]
    },
    {
        "id": "4120720d228d5847",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_27_Cart_Robo",
        "name": "I_27_Cart_Robo",
        "x": 420,
        "y": 580,
        "wires": []
    },
    {
        "id": "5d94d040cc84e9f0",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "I_28_Cart_Stor",
        "func": "if (msg.topic === \"I_28_Cart_Stor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_28_Cart_Stor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 660,
        "wires": [
            [
                "bf3ba10b3fe69ec4"
            ]
        ]
    },
    {
        "id": "bf3ba10b3fe69ec4",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_28_Cart_Stor",
        "name": "I_28_Cart_Stor",
        "x": 420,
        "y": 660,
        "wires": []
    },
    {
        "id": "9c9d2bad997b5223",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "I_29_Cart_Sort",
        "func": "if (msg.topic === \"I_29_Cart_Sort\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_29_Cart_Sort\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 740,
        "wires": [
            [
                "e036b8963e0489e3"
            ]
        ]
    },
    {
        "id": "e036b8963e0489e3",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_29_Cart_Sort",
        "name": "I_29_Cart_Sort",
        "x": 420,
        "y": 740,
        "wires": []
    },
    {
        "id": "9abf3870b9c9b99b",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "C_25_Request",
        "func": "if (msg.topic === \"C_25_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_25_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 460,
        "wires": [
            [
                "ba8bc4236d65a285"
            ]
        ]
    },
    {
        "id": "ba8bc4236d65a285",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_25_Request",
        "name": "C_25_Request",
        "x": 420,
        "y": 460,
        "wires": []
    },
    {
        "id": "b99462dbbb507d1e",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "C_26_Request",
        "func": "if (msg.topic === \"C_26_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_26_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 540,
        "wires": [
            [
                "1b13b41803b711d3"
            ]
        ]
    },
    {
        "id": "1b13b41803b711d3",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_26_Request",
        "name": "C_26_Request",
        "x": 420,
        "y": 540,
        "wires": []
    },
    {
        "id": "60d0aa142a2450c9",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "C_27_Request",
        "func": "if (msg.topic === \"C_27_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_27_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 620,
        "wires": [
            [
                "8abfb811ed2821ce"
            ]
        ]
    },
    {
        "id": "8abfb811ed2821ce",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_27_Request",
        "name": "C_27_Request",
        "x": 420,
        "y": 620,
        "wires": []
    },
    {
        "id": "c4a2ca8ccbbb049a",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "C_28_Request",
        "func": "if (msg.topic === \"C_28_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_28_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 700,
        "wires": [
            [
                "e49bbcfe881eb9e9"
            ]
        ]
    },
    {
        "id": "e49bbcfe881eb9e9",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_28_Request",
        "name": "C_28_Request",
        "x": 420,
        "y": 700,
        "wires": []
    },
    {
        "id": "5f5037d38a348f2e",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "name": "C_29_Request",
        "func": "if (msg.topic === \"C_29_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_29_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 780,
        "wires": [
            [
                "0823f8b7daeef64f"
            ]
        ]
    },
    {
        "id": "0823f8b7daeef64f",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "5cc79be050ca8aea",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_29_Request",
        "name": "C_29_Request",
        "x": 420,
        "y": 780,
        "wires": []
    },
    {
        "id": "0a72883955880279",
        "type": "aedes broker",
        "z": "34c5d473de2de145",
        "g": "08c3c04e8f2f1943",
        "name": "S7 Variables",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "persistence_bind": "memory",
        "dburl": "",
        "usetls": false,
        "x": 130,
        "y": 60,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ab5b7ac4b8879295",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "915e33e2268081b1",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_30_Cover_Cyl",
        "name": "I_30_Cover_Cyl",
        "x": 960,
        "y": 420,
        "wires": []
    },
    {
        "id": "b2697794f8b75334",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "915e33e2268081b1",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_30_LED_Start",
        "name": "I_30_LED_Start",
        "x": 960,
        "y": 220,
        "wires": []
    },
    {
        "id": "d4c7c1ec79456177",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "915e33e2268081b1",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_30_Init_Pos",
        "name": "I_30_Init_Pos",
        "x": 960,
        "y": 260,
        "wires": []
    },
    {
        "id": "46c1c77e10565db1",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "915e33e2268081b1",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_30_Led_Extra1",
        "name": "I_30_Led_Extra1",
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "20e4fbab1db2e5f0",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "915e33e2268081b1",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_30_Led_Extra2",
        "name": "I_30_Led_Extra2",
        "x": 970,
        "y": 340,
        "wires": []
    },
    {
        "id": "edb7e50736016282",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "915e33e2268081b1",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_30_Spring_Cyl",
        "name": "I_30_Spring_Cyl",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "0ecf8fd10b223829",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "915e33e2268081b1",
        "name": "I_30_LED_Start",
        "func": "if (msg.topic === \"I_30_LED_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_30_LED_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 220,
        "wires": [
            [
                "b2697794f8b75334"
            ]
        ]
    },
    {
        "id": "c204022e60d83733",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "915e33e2268081b1",
        "name": "I_30_Init_Pos",
        "func": "if (msg.topic === \"I_30_Init_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_30_Init_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 260,
        "wires": [
            [
                "d4c7c1ec79456177"
            ]
        ]
    },
    {
        "id": "5e9edc2636998783",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "915e33e2268081b1",
        "name": "I_30_Led_Extra1",
        "func": "if (msg.topic === \"I_30_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_30_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 300,
        "wires": [
            [
                "46c1c77e10565db1"
            ]
        ]
    },
    {
        "id": "883705c14088654f",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "915e33e2268081b1",
        "name": "I_30_Led_Extra2",
        "func": "if (msg.topic === \"I_30_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_30_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 340,
        "wires": [
            [
                "20e4fbab1db2e5f0"
            ]
        ]
    },
    {
        "id": "f74394f4918269cb",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "915e33e2268081b1",
        "name": "I_30_Spring_Cyl",
        "func": "if (msg.topic === \"I_30_Spring_Cyl\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_30_Spring_Cyl\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 380,
        "wires": [
            [
                "edb7e50736016282"
            ]
        ]
    },
    {
        "id": "301fef788939dcaf",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "915e33e2268081b1",
        "name": "I_30_Cover_Cyl",
        "func": "if (msg.topic === \"I_30_Cover_Cyl\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_30_Cover_Cyl\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 420,
        "wires": [
            [
                "ab5b7ac4b8879295"
            ]
        ]
    },
    {
        "id": "572f84a270c3ed7a",
        "type": "link in",
        "z": "34c5d473de2de145",
        "g": "915e33e2268081b1",
        "name": "Robot [30]",
        "links": [
            "77067a71e5eb8d06"
        ],
        "x": 595,
        "y": 320,
        "wires": [
            [
                "5e9edc2636998783",
                "c204022e60d83733",
                "0ecf8fd10b223829",
                "883705c14088654f",
                "f74394f4918269cb",
                "301fef788939dcaf"
            ]
        ]
    },
    {
        "id": "6a162f105693207f",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_50_Claw_2_Del",
        "name": "I_50_Claw_2_Del",
        "x": 1550,
        "y": 220,
        "wires": []
    },
    {
        "id": "fa33b36ce1ab2f41",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_50_Claw_2_Cart",
        "name": "I_50_Claw_2_Cart",
        "x": 1550,
        "y": 260,
        "wires": []
    },
    {
        "id": "bf63f63831ca7084",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_50_Claw_Down",
        "name": "I_50_Claw_Down",
        "x": 1550,
        "y": 300,
        "wires": []
    },
    {
        "id": "d8e7f2614aec4908",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_50_Close_Claw",
        "name": "I_50_Close_Claw",
        "x": 1550,
        "y": 340,
        "wires": []
    },
    {
        "id": "ff4a77d923636c80",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_51_Led_Start",
        "name": "I_51_Led_Start",
        "x": 1540,
        "y": 380,
        "wires": []
    },
    {
        "id": "927a88da756f35d5",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_51_Led_Reset",
        "name": "I_51_Led_Reset",
        "x": 1540,
        "y": 420,
        "wires": []
    },
    {
        "id": "09814f5c50052898",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_51_Led_Extra1",
        "name": "I_51_Led_Extra1",
        "x": 1550,
        "y": 460,
        "wires": []
    },
    {
        "id": "9023a1d44dd14a1f",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_51_Led_Extra2",
        "name": "I_51_Led_Extra2",
        "x": 1550,
        "y": 500,
        "wires": []
    },
    {
        "id": "54708e5419a4e1b4",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_51_Panel_O4",
        "name": "I_51_Panel_O4",
        "x": 1540,
        "y": 540,
        "wires": []
    },
    {
        "id": "582fd3f01f587f11",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_51_Panel_O5",
        "name": "I_51_Panel_O5",
        "x": 1540,
        "y": 580,
        "wires": []
    },
    {
        "id": "3148ee9f94043427",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_51_Panel_O6",
        "name": "I_51_Panel_O6",
        "x": 1540,
        "y": 620,
        "wires": []
    },
    {
        "id": "a33a1e3b06c9ef5e",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_51_Panel_O7",
        "name": "I_51_Panel_O7",
        "x": 1540,
        "y": 660,
        "wires": []
    },
    {
        "id": "dae7a9c5fbf1444e",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "I_50_Claw_2_Del",
        "func": "if (msg.topic === \"I_50_Claw_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_50_Claw_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 220,
        "wires": [
            [
                "6a162f105693207f"
            ]
        ]
    },
    {
        "id": "0c973d7d39bd6a50",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "I_50_Claw_2_Cart",
        "func": "if (msg.topic === \"I_50_Claw_2_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_50_Claw_2_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 260,
        "wires": [
            [
                "fa33b36ce1ab2f41"
            ]
        ]
    },
    {
        "id": "9ef7e978b549f9ba",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "I_50_Claw_Down",
        "func": "if (msg.topic === \"I_50_Claw_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_50_Claw_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 300,
        "wires": [
            [
                "bf63f63831ca7084"
            ]
        ]
    },
    {
        "id": "2465f2a3b121819e",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "I_50_Close_Claw",
        "func": "if (msg.topic === \"I_50_Close_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_50_Close_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 340,
        "wires": [
            [
                "d8e7f2614aec4908"
            ]
        ]
    },
    {
        "id": "b6314c9fee63d8b2",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "I_51_Led_Start",
        "func": "if (msg.topic === \"I_51_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 380,
        "wires": [
            [
                "ff4a77d923636c80"
            ]
        ]
    },
    {
        "id": "431ece0752a0f2d1",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "I_51_Led_Reset",
        "func": "if (msg.topic === \"I_51_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 420,
        "wires": [
            [
                "927a88da756f35d5"
            ]
        ]
    },
    {
        "id": "75260cab7f259d00",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "I_51_Led_Extra1",
        "func": "if (msg.topic === \"I_51_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 460,
        "wires": [
            [
                "09814f5c50052898"
            ]
        ]
    },
    {
        "id": "35f7912a601799ba",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "I_51_Led_Extra2",
        "func": "if (msg.topic === \"I_51_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 500,
        "wires": [
            [
                "9023a1d44dd14a1f"
            ]
        ]
    },
    {
        "id": "85d2c0d8b98203fe",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "I_51_Panel_O4",
        "func": "if (msg.topic === \"I_51_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 540,
        "wires": [
            [
                "54708e5419a4e1b4"
            ]
        ]
    },
    {
        "id": "21a0f90d1dca4541",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "I_51_Panel_O5",
        "func": "if (msg.topic === \"I_51_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 580,
        "wires": [
            [
                "582fd3f01f587f11"
            ]
        ]
    },
    {
        "id": "2454fc2a61f77ead",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "I_51_Panel_O6",
        "func": "if (msg.topic === \"I_51_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 620,
        "wires": [
            [
                "3148ee9f94043427"
            ]
        ]
    },
    {
        "id": "1867de445bb40808",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "I_51_Panel_O7",
        "func": "if (msg.topic === \"I_51_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 660,
        "wires": [
            [
                "a33a1e3b06c9ef5e"
            ]
        ]
    },
    {
        "id": "598c9c9feb3a06fe",
        "type": "link in",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "Handling [50]",
        "links": [
            "77067a71e5eb8d06"
        ],
        "x": 1155,
        "y": 480,
        "wires": [
            [
                "dae7a9c5fbf1444e",
                "0c973d7d39bd6a50",
                "9ef7e978b549f9ba",
                "2465f2a3b121819e",
                "b6314c9fee63d8b2",
                "431ece0752a0f2d1",
                "75260cab7f259d00",
                "35f7912a601799ba",
                "85d2c0d8b98203fe",
                "21a0f90d1dca4541",
                "2454fc2a61f77ead",
                "1867de445bb40808",
                "faa533eabb3a01a5",
                "ec0d413df6ba8038",
                "74b2368617782c63"
            ]
        ]
    },
    {
        "id": "9129ba586bbd864c",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_55_Cart2Del",
        "name": "C_55_Cart2Del",
        "x": 1540,
        "y": 740,
        "wires": []
    },
    {
        "id": "d5946cc26425fea2",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_55_Del2Cart",
        "name": "C_55_Del2Cart",
        "x": 1540,
        "y": 780,
        "wires": []
    },
    {
        "id": "faa533eabb3a01a5",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "C_55_Cart2Del",
        "func": "if (msg.topic === \"C_55_Cart2Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_55_Cart2Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 740,
        "wires": [
            [
                "9129ba586bbd864c"
            ]
        ]
    },
    {
        "id": "ec0d413df6ba8038",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "C_55_Del2Cart",
        "func": "if (msg.topic === \"C_55_Del2Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_55_Del2Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 780,
        "wires": [
            [
                "d5946cc26425fea2"
            ]
        ]
    },
    {
        "id": "3aa073d4039fa34f",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_60_Conveyor",
        "name": "I_60_Conveyor",
        "x": 2120,
        "y": 220,
        "wires": []
    },
    {
        "id": "f48fbacd651ec55d",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_60_P1",
        "name": "I_60_P1",
        "x": 2100,
        "y": 260,
        "wires": []
    },
    {
        "id": "930f27b730f3b3f4",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_60_P2",
        "name": "I_60_P2",
        "x": 2100,
        "y": 300,
        "wires": []
    },
    {
        "id": "05ed0640b1e3e771",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_60_Identify",
        "name": "I_60_Identify",
        "x": 2110,
        "y": 340,
        "wires": []
    },
    {
        "id": "4461be2d2dd5e689",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_61_Led_Start",
        "name": "I_61_Led_Start",
        "x": 2120,
        "y": 380,
        "wires": []
    },
    {
        "id": "49927e488301fb65",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_61_Led_Reset",
        "name": "I_61_Led_Reset",
        "x": 2120,
        "y": 420,
        "wires": []
    },
    {
        "id": "8d0711d5616d3df9",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_61_Led_Extra1",
        "name": "I_61_Led_Extra1",
        "x": 2130,
        "y": 460,
        "wires": []
    },
    {
        "id": "0eb11e0b775713f1",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_61_Led_Extra2",
        "name": "I_61_Led_Extra2",
        "x": 2130,
        "y": 500,
        "wires": []
    },
    {
        "id": "4fbf870ee4096140",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_61_Panel_O4",
        "name": "I_61_Panel_O4",
        "x": 2120,
        "y": 540,
        "wires": []
    },
    {
        "id": "c3e9345539f64330",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_61_Panel_O5",
        "name": "I_61_Panel_O5",
        "x": 2120,
        "y": 580,
        "wires": []
    },
    {
        "id": "44722ef4f9c5d721",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_61_Panel_O6",
        "name": "I_61_Panel_O6",
        "x": 2120,
        "y": 620,
        "wires": []
    },
    {
        "id": "31d13b7a464b0454",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_61_Panel_O7",
        "name": "I_61_Panel_O7",
        "x": 2120,
        "y": 660,
        "wires": []
    },
    {
        "id": "66cbe63739b5aaaf",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "I_60_Conveyor",
        "func": "if (msg.topic === \"I_60_Conveyor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_60_Conveyor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 220,
        "wires": [
            [
                "3aa073d4039fa34f"
            ]
        ]
    },
    {
        "id": "98f981a5f0e1fb2e",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "I_60_P1",
        "func": "if (msg.topic === \"I_60_P1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_60_P1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 260,
        "wires": [
            [
                "f48fbacd651ec55d"
            ]
        ]
    },
    {
        "id": "82d049b8840c40c5",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "I_60_P2",
        "func": "if (msg.topic === \"I_60_P2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_60_P2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 300,
        "wires": [
            [
                "930f27b730f3b3f4"
            ]
        ]
    },
    {
        "id": "9537ce7342446c98",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "I_60_Identify",
        "func": "if (msg.topic === \"I_60_Identify\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_60_Identify\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 340,
        "wires": [
            [
                "05ed0640b1e3e771"
            ]
        ]
    },
    {
        "id": "b6633915287fed93",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "I_61_Led_Start",
        "func": "if (msg.topic === \"I_61_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 380,
        "wires": [
            [
                "4461be2d2dd5e689"
            ]
        ]
    },
    {
        "id": "768d3eb3bc0adc5e",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "I_61_Led_Reset",
        "func": "if (msg.topic === \"I_61_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 420,
        "wires": [
            [
                "49927e488301fb65"
            ]
        ]
    },
    {
        "id": "b01139a5dfeb904c",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "I_61_Led_Extra1",
        "func": "if (msg.topic === \"I_61_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 460,
        "wires": [
            [
                "8d0711d5616d3df9"
            ]
        ]
    },
    {
        "id": "23b84d4737711c5d",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "I_61_Led_Extra2",
        "func": "if (msg.topic === \"I_61_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 500,
        "wires": [
            [
                "0eb11e0b775713f1"
            ]
        ]
    },
    {
        "id": "a335a0647f3da203",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "I_61_Panel_O4",
        "func": "if (msg.topic === \"I_61_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 540,
        "wires": [
            [
                "4fbf870ee4096140"
            ]
        ]
    },
    {
        "id": "7922a294f5bedadd",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "I_61_Panel_O5",
        "func": "if (msg.topic === \"I_61_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 580,
        "wires": [
            [
                "c3e9345539f64330"
            ]
        ]
    },
    {
        "id": "9241de3d3cfa06d8",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "I_61_Panel_O6",
        "func": "if (msg.topic === \"I_61_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 620,
        "wires": [
            [
                "44722ef4f9c5d721"
            ]
        ]
    },
    {
        "id": "88bf9e0fa1736bd9",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "I_61_Panel_O7",
        "func": "if (msg.topic === \"I_61_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 660,
        "wires": [
            [
                "31d13b7a464b0454"
            ]
        ]
    },
    {
        "id": "12de2bc7cb91510a",
        "type": "link in",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "Sorting [60]",
        "links": [
            "77067a71e5eb8d06"
        ],
        "x": 1735,
        "y": 560,
        "wires": [
            [
                "66cbe63739b5aaaf",
                "98f981a5f0e1fb2e",
                "82d049b8840c40c5",
                "9537ce7342446c98",
                "b6633915287fed93",
                "768d3eb3bc0adc5e",
                "b01139a5dfeb904c",
                "23b84d4737711c5d",
                "a335a0647f3da203",
                "7922a294f5bedadd",
                "9241de3d3cfa06d8",
                "88bf9e0fa1736bd9",
                "dec2543449b16ba3",
                "f2c8539f1e32b3d6",
                "d84234bcccde2243",
                "fad6fb9c02b0dde1",
                "d5ac37201caffddb",
                "9a0f9091e7668c13"
            ]
        ]
    },
    {
        "id": "dec2543449b16ba3",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "C_65_RBS_Output",
        "func": "if (msg.topic === \"C_65_RBS_Output\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_RBS_Output\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 700,
        "wires": [
            [
                "de68bc723ac61fd7"
            ]
        ]
    },
    {
        "id": "f2c8539f1e32b3d6",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "C_65_RSB_Output",
        "func": "if (msg.topic === \"C_65_RSB_Output\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_RSB_Output\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 740,
        "wires": [
            [
                "9be27c9c47cabc62"
            ]
        ]
    },
    {
        "id": "de68bc723ac61fd7",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_65_RBS_Output",
        "name": "C_65_RBS_Output",
        "x": 2130,
        "y": 700,
        "wires": []
    },
    {
        "id": "9be27c9c47cabc62",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_65_RSB_Output",
        "name": "C_65_RSB_Output",
        "x": 2130,
        "y": 740,
        "wires": []
    },
    {
        "id": "f097487f2afa0717",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_65_BRS_Output",
        "name": "C_65_BRS_Output",
        "x": 2130,
        "y": 780,
        "wires": []
    },
    {
        "id": "e2e18efde3b0d3a3",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_65_BSR_Output",
        "name": "C_65_BSR_Output",
        "x": 2130,
        "y": 820,
        "wires": []
    },
    {
        "id": "3fc93acce911e34f",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_65_SRB_Output",
        "name": "C_65_SRB_Output",
        "x": 2130,
        "y": 860,
        "wires": []
    },
    {
        "id": "97db7baa97411f2a",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_65_SBR_Output",
        "name": "C_65_SBR_Output",
        "x": 2130,
        "y": 900,
        "wires": []
    },
    {
        "id": "d84234bcccde2243",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "C_65_BRS_Output",
        "func": "if (msg.topic === \"C_65_BRS_Output\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_BRS_Output\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 780,
        "wires": [
            [
                "f097487f2afa0717"
            ]
        ]
    },
    {
        "id": "fad6fb9c02b0dde1",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "C_65_BSR_Output",
        "func": "if (msg.topic === \"C_65_BSR_Output\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_BSR_Output\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 820,
        "wires": [
            [
                "e2e18efde3b0d3a3"
            ]
        ]
    },
    {
        "id": "d5ac37201caffddb",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "C_65_SRB_Output",
        "func": "if (msg.topic === \"C_65_SRB_Output\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_SRB_Output\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 860,
        "wires": [
            [
                "3fc93acce911e34f"
            ]
        ]
    },
    {
        "id": "9a0f9091e7668c13",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "dce46db1f4e0e125",
        "name": "C_65_SBR_Output",
        "func": "if (msg.topic === \"C_65_SBR_Output\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_SBR_Output\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 900,
        "wires": [
            [
                "97db7baa97411f2a"
            ]
        ]
    },
    {
        "id": "38afba89be66390d",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_70_Elev_Down",
        "name": "I_70_Elev_Down",
        "x": 2710,
        "y": 220,
        "wires": []
    },
    {
        "id": "02a4964373f91263",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_70_Elev_Up",
        "name": "I_70_Elev_Up",
        "x": 2700,
        "y": 260,
        "wires": []
    },
    {
        "id": "565e8a1c25b6a85d",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_70_Eject_Part",
        "name": "I_70_Eject_Part",
        "x": 2700,
        "y": 300,
        "wires": []
    },
    {
        "id": "c1e6a87f8c0aa0d6",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_70_Air_On",
        "name": "I_70_Air_On",
        "x": 2690,
        "y": 340,
        "wires": []
    },
    {
        "id": "1a85ce38a0c89022",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_71_Led_Start",
        "name": "I_71_Led_Start",
        "x": 2700,
        "y": 380,
        "wires": []
    },
    {
        "id": "4b54715d0424ac8f",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_71_Led_Reset",
        "name": "I_71_Led_Reset",
        "x": 2700,
        "y": 420,
        "wires": []
    },
    {
        "id": "1c5945d291aa42c6",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_71_Led_Extra1",
        "name": "I_71_Led_Extra1",
        "x": 2710,
        "y": 460,
        "wires": []
    },
    {
        "id": "c1cbf50a294facac",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_71_Led_Extra2",
        "name": "I_71_Led_Extra2",
        "x": 2710,
        "y": 500,
        "wires": []
    },
    {
        "id": "e35895b8b742ada9",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_71_Panel_O4",
        "name": "I_71_Panel_O4",
        "x": 2700,
        "y": 540,
        "wires": []
    },
    {
        "id": "9627fd26809b7a3b",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_71_Panel_O5",
        "name": "I_71_Panel_O5",
        "x": 2700,
        "y": 580,
        "wires": []
    },
    {
        "id": "da18af38ef484d3b",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_71_Panel_O6",
        "name": "I_71_Panel_O6",
        "x": 2700,
        "y": 620,
        "wires": []
    },
    {
        "id": "e3be177be5b11e12",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_71_Panel_O7",
        "name": "I_71_Panel_O7",
        "x": 2700,
        "y": 660,
        "wires": []
    },
    {
        "id": "eb4502564331f697",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_70_Elev_Down",
        "func": "if (msg.topic === \"I_70_Elev_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_70_Elev_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 220,
        "wires": [
            [
                "38afba89be66390d"
            ]
        ]
    },
    {
        "id": "88854cff4d2b340b",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_70_Elev_Up",
        "func": "if (msg.topic === \"I_70_Elev_Up\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_70_Elev_Up\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 260,
        "wires": [
            [
                "02a4964373f91263"
            ]
        ]
    },
    {
        "id": "9f6657e07eda96cc",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_70_Eject_Part",
        "func": "if (msg.topic === \"I_70_Eject_Part\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_70_Eject_Part\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 300,
        "wires": [
            [
                "565e8a1c25b6a85d"
            ]
        ]
    },
    {
        "id": "0f2107f40babe795",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_70_Air_On",
        "func": "if (msg.topic === \"I_70_Air_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_70_Air_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 340,
        "wires": [
            [
                "c1e6a87f8c0aa0d6"
            ]
        ]
    },
    {
        "id": "e993ef0481d3012a",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_71_Led_Start",
        "func": "if (msg.topic === \"I_71_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 380,
        "wires": [
            [
                "1a85ce38a0c89022"
            ]
        ]
    },
    {
        "id": "567036a2c01c2c6e",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_71_Led_Reset",
        "func": "if (msg.topic === \"I_71_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 420,
        "wires": [
            [
                "4b54715d0424ac8f"
            ]
        ]
    },
    {
        "id": "b499eb1c98dc3d7d",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_71_Led_Extra1",
        "func": "if (msg.topic === \"I_71_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 460,
        "wires": [
            [
                "1c5945d291aa42c6"
            ]
        ]
    },
    {
        "id": "edceba3efea74f1f",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_71_Led_Extra2",
        "func": "if (msg.topic === \"I_71_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 500,
        "wires": [
            [
                "c1cbf50a294facac"
            ]
        ]
    },
    {
        "id": "c94f3dd54780d2b8",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_71_Panel_O4",
        "func": "if (msg.topic === \"I_71_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 540,
        "wires": [
            [
                "e35895b8b742ada9"
            ]
        ]
    },
    {
        "id": "fb9a10c223931afc",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_71_Panel_O5",
        "func": "if (msg.topic === \"I_71_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 580,
        "wires": [
            [
                "9627fd26809b7a3b"
            ]
        ]
    },
    {
        "id": "276e4a84b5700179",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_71_Panel_O6",
        "func": "if (msg.topic === \"I_71_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 620,
        "wires": [
            [
                "da18af38ef484d3b"
            ]
        ]
    },
    {
        "id": "4fabe0639a679d36",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_71_Panel_O7",
        "func": "if (msg.topic === \"I_71_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 660,
        "wires": [
            [
                "e3be177be5b11e12"
            ]
        ]
    },
    {
        "id": "3b663dda98f802f5",
        "type": "link in",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "Testing [70]",
        "links": [
            "77067a71e5eb8d06"
        ],
        "x": 2315,
        "y": 520,
        "wires": [
            [
                "eb4502564331f697",
                "88854cff4d2b340b",
                "9f6657e07eda96cc",
                "0f2107f40babe795",
                "e993ef0481d3012a",
                "567036a2c01c2c6e",
                "b499eb1c98dc3d7d",
                "edceba3efea74f1f",
                "c94f3dd54780d2b8",
                "fb9a10c223931afc",
                "276e4a84b5700179",
                "4fabe0639a679d36",
                "16c7a1df14c8f33c",
                "d9a5f12294765f74",
                "85f2747baaec9b2b",
                "04408b4b0d20ca79"
            ]
        ]
    },
    {
        "id": "16c7a1df14c8f33c",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_75_RQ_Delivery1",
        "func": "if (msg.topic === \"I_75_RQ_Delivery1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_75_RQ_Delivery1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 700,
        "wires": [
            [
                "6360a637f887f593"
            ]
        ]
    },
    {
        "id": "d9a5f12294765f74",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "I_75_RQ_Delivery2",
        "func": "if (msg.topic === \"I_75_RQ_Delivery2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_75_RQ_Delivery2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 740,
        "wires": [
            [
                "f65349eb259ea09b"
            ]
        ]
    },
    {
        "id": "85f2747baaec9b2b",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "C_75_Identified",
        "func": "if (msg.topic === \"C_75_Identified\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_Identified\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 780,
        "wires": [
            [
                "66b6d3e1a955c6b2"
            ]
        ]
    },
    {
        "id": "04408b4b0d20ca79",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "name": "C_75_Requested",
        "func": "if (msg.topic === \"C_75_Requested\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_Requested\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 820,
        "wires": [
            [
                "094e783e45c780a1"
            ]
        ]
    },
    {
        "id": "6360a637f887f593",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "",
        "name": "I_75_RQ_Delivery1",
        "x": 2710,
        "y": 700,
        "wires": []
    },
    {
        "id": "f65349eb259ea09b",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "",
        "name": "I_75_RQ_Delivery2",
        "x": 2710,
        "y": 740,
        "wires": []
    },
    {
        "id": "66b6d3e1a955c6b2",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_75_Identified",
        "name": "C_75_Identified",
        "x": 2700,
        "y": 780,
        "wires": []
    },
    {
        "id": "094e783e45c780a1",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "3b1117a21c830285",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_75_Requested",
        "name": "C_75_Requested",
        "x": 2710,
        "y": 820,
        "wires": []
    },
    {
        "id": "a60f357ceb02484a",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_80_Pist_Adv",
        "name": "I_80_Pist_Adv",
        "x": 3280,
        "y": 220,
        "wires": []
    },
    {
        "id": "9b2b531183a524cb",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_80_Suction_On",
        "name": "I_80_Suction_On",
        "x": 3290,
        "y": 260,
        "wires": []
    },
    {
        "id": "69fb239ffd4b6152",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_80_Suction_Off",
        "name": "I_80_Suction_Off",
        "x": 3290,
        "y": 300,
        "wires": []
    },
    {
        "id": "181694f0607cce1a",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_80_Arm_2_Del",
        "name": "I_80_Arm_2_Del",
        "x": 3290,
        "y": 340,
        "wires": []
    },
    {
        "id": "52698f7a26fd2e93",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_80_Arm_2_Mag",
        "name": "I_80_Arm_2_Mag",
        "x": 3290,
        "y": 380,
        "wires": []
    },
    {
        "id": "2ec714df2c61b44a",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_81_Led_Start",
        "name": "I_81_Led_Start",
        "x": 3280,
        "y": 420,
        "wires": []
    },
    {
        "id": "320e0c96c9551bcc",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_81_Led_Reset",
        "name": "I_81_Led_Reset",
        "x": 3280,
        "y": 460,
        "wires": []
    },
    {
        "id": "9ce61fd1c6606da6",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_81_Led_Extra1",
        "name": "I_81_Led_Extra1",
        "x": 3290,
        "y": 500,
        "wires": []
    },
    {
        "id": "7ffd8b8f95970cbe",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_81_Led_Extra2",
        "name": "I_81_Led_Extra2",
        "x": 3290,
        "y": 540,
        "wires": []
    },
    {
        "id": "dba490d7405a2f17",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_81_Panel_O4",
        "name": "I_81_Panel_O4",
        "x": 3280,
        "y": 580,
        "wires": []
    },
    {
        "id": "68e7b94c2da3341e",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_81_Panel_O5",
        "name": "I_81_Panel_O5",
        "x": 3280,
        "y": 620,
        "wires": []
    },
    {
        "id": "cfdde4468b007b24",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_81_Panel_O6",
        "name": "I_81_Panel_O6",
        "x": 3280,
        "y": 660,
        "wires": []
    },
    {
        "id": "7e1c2d40327d2291",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_81_Panel_O7",
        "name": "I_81_Panel_O7",
        "x": 3280,
        "y": 700,
        "wires": []
    },
    {
        "id": "25ad25dff64bdb8d",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_85_Single",
        "name": "C_85_Single",
        "x": 3270,
        "y": 820,
        "wires": []
    },
    {
        "id": "0ed868a91d603220",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_85_Continuous",
        "name": "C_85_Continuous",
        "x": 3290,
        "y": 860,
        "wires": []
    },
    {
        "id": "e6d39921353c37d7",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_85_Counted",
        "name": "C_85_Counted",
        "x": 3280,
        "y": 900,
        "wires": []
    },
    {
        "id": "6cba4ac0705d7cb3",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_83_RQ_Parts",
        "name": "C_83_RQ_Parts",
        "x": 3280,
        "y": 740,
        "wires": []
    },
    {
        "id": "4d478ebc7e3dfb0e",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "I_80_Pist_Adv",
        "func": "if (msg.topic === \"I_80_Pist_Adv\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_80_Pist_Adv\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 220,
        "wires": [
            [
                "a60f357ceb02484a"
            ]
        ]
    },
    {
        "id": "09f44f5be3ed94b4",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "I_80_Suction_On",
        "func": "if (msg.topic === \"I_80_Suction_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_80_Suction_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 260,
        "wires": [
            [
                "9b2b531183a524cb"
            ]
        ]
    },
    {
        "id": "7465b12582c094f4",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "I_80_Suction_Off",
        "func": "if (msg.topic === \"I_80_Suction_Off\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_80_Suction_Off\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 300,
        "wires": [
            [
                "69fb239ffd4b6152"
            ]
        ]
    },
    {
        "id": "5b5f0fb8848f944e",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "I_80_Arm_2_Del",
        "func": "if (msg.topic === \"I_80_Arm_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_80_Arm_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 340,
        "wires": [
            [
                "181694f0607cce1a"
            ]
        ]
    },
    {
        "id": "4cd58b6d10c4c514",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "I_80_Arm_2_Mag",
        "func": "if (msg.topic === \"I_80_Arm_2_Mag\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_80_Arm_2_Mag\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 380,
        "wires": [
            [
                "52698f7a26fd2e93"
            ]
        ]
    },
    {
        "id": "bab796776f4918a8",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "I_81_Led_Start",
        "func": "if (msg.topic === \"I_81_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 420,
        "wires": [
            [
                "2ec714df2c61b44a"
            ]
        ]
    },
    {
        "id": "f7342a807abe2e8f",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "I_81_Led_Reset",
        "func": "if (msg.topic === \"I_81_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 460,
        "wires": [
            [
                "320e0c96c9551bcc"
            ]
        ]
    },
    {
        "id": "e792f8538e1e2432",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "I_81_Led_Extra1",
        "func": "if (msg.topic === \"I_81_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 500,
        "wires": [
            [
                "9ce61fd1c6606da6"
            ]
        ]
    },
    {
        "id": "0cf4e065e0853a17",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "I_81_Led_Extra2",
        "func": "if (msg.topic === \"I_81_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 540,
        "wires": [
            [
                "7ffd8b8f95970cbe"
            ]
        ]
    },
    {
        "id": "ecc62498c3cbdecf",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "I_81_Panel_O4",
        "func": "if (msg.topic === \"I_81_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 580,
        "wires": [
            [
                "dba490d7405a2f17"
            ]
        ]
    },
    {
        "id": "bcc1e7aa1632de85",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "I_81_Panel_O5",
        "func": "if (msg.topic === \"I_81_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 620,
        "wires": [
            [
                "68e7b94c2da3341e"
            ]
        ]
    },
    {
        "id": "7255eb16b2d98295",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "I_81_Panel_O6",
        "func": "if (msg.topic === \"I_81_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 660,
        "wires": [
            [
                "cfdde4468b007b24"
            ]
        ]
    },
    {
        "id": "24fcf39ada0d67e6",
        "type": "link in",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "Distribution [80]",
        "links": [
            "77067a71e5eb8d06"
        ],
        "x": 2895,
        "y": 540,
        "wires": [
            [
                "4d478ebc7e3dfb0e",
                "09f44f5be3ed94b4",
                "7465b12582c094f4",
                "5b5f0fb8848f944e",
                "4cd58b6d10c4c514",
                "bab796776f4918a8",
                "f7342a807abe2e8f",
                "e792f8538e1e2432",
                "0cf4e065e0853a17",
                "ecc62498c3cbdecf",
                "bcc1e7aa1632de85",
                "7255eb16b2d98295",
                "eae853f18c8b32c3",
                "774d198e9f130a8e",
                "18bbfb2d9348e80d",
                "726c2ac4cd399af2",
                "c0e8669fa7e1ee61",
                "eb7a5155997843c7"
            ]
        ]
    },
    {
        "id": "eae853f18c8b32c3",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "I_81_Panel_O7",
        "func": "if (msg.topic === \"I_81_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 700,
        "wires": [
            [
                "7e1c2d40327d2291"
            ]
        ]
    },
    {
        "id": "774d198e9f130a8e",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "C_85_Single",
        "func": "if (msg.topic === \"C_85_Single\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_85_Single\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3050,
        "y": 820,
        "wires": [
            [
                "25ad25dff64bdb8d"
            ]
        ]
    },
    {
        "id": "18bbfb2d9348e80d",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "C_85_Continuous",
        "func": "if (msg.topic === \"C_85_Continuous\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_85_Continuous\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 860,
        "wires": [
            [
                "0ed868a91d603220"
            ]
        ]
    },
    {
        "id": "726c2ac4cd399af2",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "C_85_Counted",
        "func": "if (msg.topic === \"C_85_Counted\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_85_Counted\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 900,
        "wires": [
            [
                "e6d39921353c37d7"
            ]
        ]
    },
    {
        "id": "c0e8669fa7e1ee61",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "C_83_RQ_Parts",
        "func": "if (msg.topic === \"C_83_RQ_Parts\") {\n    node.status({fill:\"green\",shape:\"dot\",text:msg.payload})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 740,
        "wires": [
            [
                "6cba4ac0705d7cb3"
            ]
        ]
    },
    {
        "id": "2c71d66f3fcf3274",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_90_Claw_2_Cart",
        "name": "I_90_Claw_2_Cart",
        "x": 3870,
        "y": 220,
        "wires": []
    },
    {
        "id": "bafa8f6039f010f3",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_90_Claw_2_Del",
        "name": "I_90_Claw_2_Del",
        "x": 3870,
        "y": 260,
        "wires": []
    },
    {
        "id": "a1858dd92575d844",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_90_Claw_Down",
        "name": "I_90_Claw_Down",
        "x": 3870,
        "y": 300,
        "wires": []
    },
    {
        "id": "f72556202f29c06d",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_90_Close_Claw",
        "name": "I_90_Close_Claw",
        "x": 3870,
        "y": 340,
        "wires": []
    },
    {
        "id": "f05274511c2a9bd7",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_91_Led_Start",
        "name": "I_91_Led_Start",
        "x": 3860,
        "y": 380,
        "wires": []
    },
    {
        "id": "7530e6c1c047e398",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_91_Led_Reset",
        "name": "I_91_Led_Reset",
        "x": 3860,
        "y": 420,
        "wires": []
    },
    {
        "id": "72488bacc32440bb",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_91_Led_Extra1",
        "name": "I_91_Led_Extra1",
        "x": 3870,
        "y": 460,
        "wires": []
    },
    {
        "id": "e4eb9765353bdb89",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_91_Led_Extra2",
        "name": "I_91_Led_Extra2",
        "x": 3870,
        "y": 500,
        "wires": []
    },
    {
        "id": "f08ef99199ecac25",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_91_Panel_O4",
        "name": "I_91_Panel_O4",
        "x": 3860,
        "y": 540,
        "wires": []
    },
    {
        "id": "09b7738bc165019a",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_91_Panel_O5",
        "name": "I_91_Panel_O5",
        "x": 3860,
        "y": 580,
        "wires": []
    },
    {
        "id": "14e02470810d72b8",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_91_Panel_O6",
        "name": "I_91_Panel_O6",
        "x": 3860,
        "y": 620,
        "wires": []
    },
    {
        "id": "4c93070764af1b7d",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_91_Panel_O7",
        "name": "I_91_Panel_O7",
        "x": 3860,
        "y": 660,
        "wires": []
    },
    {
        "id": "82101e38bfd35108",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_95_Cart2Del",
        "name": "C_95_Cart2Del",
        "x": 3860,
        "y": 740,
        "wires": []
    },
    {
        "id": "f2925f31bd7c135b",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_95_Del2Cart",
        "name": "C_95_Del2Cart",
        "x": 3860,
        "y": 780,
        "wires": []
    },
    {
        "id": "15a65c0854716c40",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "I_90_Claw_2_Cart",
        "func": "if (msg.topic === \"I_90_Claw_2_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_90_Claw_2_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 220,
        "wires": [
            [
                "2c71d66f3fcf3274"
            ]
        ]
    },
    {
        "id": "b49bdb5134508aa4",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "I_90_Claw_2_Del",
        "func": "if (msg.topic === \"I_90_Claw_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_90_Claw_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 260,
        "wires": [
            [
                "bafa8f6039f010f3"
            ]
        ]
    },
    {
        "id": "e8f490edc72e3434",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "I_90_Claw_Down",
        "func": "if (msg.topic === \"I_90_Claw_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_90_Claw_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 300,
        "wires": [
            [
                "a1858dd92575d844"
            ]
        ]
    },
    {
        "id": "424a5cb3fefd45aa",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "I_90_Close_Claw",
        "func": "if (msg.topic === \"I_90_Close_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_90_Close_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 340,
        "wires": [
            [
                "f72556202f29c06d"
            ]
        ]
    },
    {
        "id": "9053da4cc282f240",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "I_91_Led_Start",
        "func": "if (msg.topic === \"I_91_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 380,
        "wires": [
            [
                "f05274511c2a9bd7"
            ]
        ]
    },
    {
        "id": "f9ce45277911e0ea",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "I_91_Led_Reset",
        "func": "if (msg.topic === \"I_91_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 420,
        "wires": [
            [
                "7530e6c1c047e398"
            ]
        ]
    },
    {
        "id": "c9cdec58221a43d6",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "I_91_Led_Extra1",
        "func": "if (msg.topic === \"I_91_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 460,
        "wires": [
            [
                "72488bacc32440bb"
            ]
        ]
    },
    {
        "id": "05ca711d1fc7dc95",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "I_91_Led_Extra2",
        "func": "if (msg.topic === \"I_91_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 500,
        "wires": [
            [
                "e4eb9765353bdb89"
            ]
        ]
    },
    {
        "id": "b6cc8193472c10db",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "I_91_Panel_O4",
        "func": "if (msg.topic === \"I_91_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 540,
        "wires": [
            [
                "f08ef99199ecac25"
            ]
        ]
    },
    {
        "id": "8e0da32934a3a074",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "I_91_Panel_O5",
        "func": "if (msg.topic === \"I_91_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 580,
        "wires": [
            [
                "09b7738bc165019a"
            ]
        ]
    },
    {
        "id": "8f26c7c80403e464",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "I_91_Panel_O6",
        "func": "if (msg.topic === \"I_91_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 620,
        "wires": [
            [
                "14e02470810d72b8"
            ]
        ]
    },
    {
        "id": "56cb3a80d2690750",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "I_91_Panel_O7",
        "func": "if (msg.topic === \"I_91_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 660,
        "wires": [
            [
                "4c93070764af1b7d"
            ]
        ]
    },
    {
        "id": "28d2cdbb34125323",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "C_95_Cart2Del",
        "func": "if (msg.topic === \"C_95_Cart2Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_95_Cart2Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 740,
        "wires": [
            [
                "82101e38bfd35108"
            ]
        ]
    },
    {
        "id": "eda924e5ca723165",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "C_95_Del2Cart",
        "func": "if (msg.topic === \"C_95_Del2Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_95_Del2Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 780,
        "wires": [
            [
                "f2925f31bd7c135b"
            ]
        ]
    },
    {
        "id": "4dc4422b12733d22",
        "type": "link in",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "Handling [90]",
        "links": [
            "77067a71e5eb8d06"
        ],
        "x": 3475,
        "y": 480,
        "wires": [
            [
                "15a65c0854716c40",
                "b49bdb5134508aa4",
                "e8f490edc72e3434",
                "424a5cb3fefd45aa",
                "9053da4cc282f240",
                "f9ce45277911e0ea",
                "c9cdec58221a43d6",
                "05ca711d1fc7dc95",
                "b6cc8193472c10db",
                "8e0da32934a3a074",
                "8f26c7c80403e464",
                "56cb3a80d2690750",
                "28d2cdbb34125323",
                "eda924e5ca723165",
                "c69b238d972d42ae"
            ]
        ]
    },
    {
        "id": "c6542c79843db351",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_100_Drill_On",
        "name": "I_100_Drill_On",
        "x": 4440,
        "y": 220,
        "wires": []
    },
    {
        "id": "5eabc2910e610782",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_100_RT_On",
        "name": "I_100_RT_On",
        "x": 4440,
        "y": 260,
        "wires": []
    },
    {
        "id": "caaf0488044a9963",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_100_Drill_Down",
        "name": "I_100_Drill_Down",
        "x": 4450,
        "y": 300,
        "wires": []
    },
    {
        "id": "2b8c64af861c5e40",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_100_Drill_Up",
        "name": "I_100_Drill_Up",
        "x": 4440,
        "y": 340,
        "wires": []
    },
    {
        "id": "dc97a3dca266c9e8",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_100_Drill_Pin",
        "name": "I_100_Drill_Pin",
        "x": 4440,
        "y": 380,
        "wires": []
    },
    {
        "id": "f2c86602069a2f39",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_100_Test_Pin",
        "name": "I_100_Test_Pin",
        "x": 4440,
        "y": 420,
        "wires": []
    },
    {
        "id": "7508259042bfc018",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_101_Led_Start",
        "name": "I_101_Led_Start",
        "x": 4450,
        "y": 460,
        "wires": []
    },
    {
        "id": "90bf046a9e08b60c",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_101_Led_Reset",
        "name": "I_101_Led_Reset",
        "x": 4450,
        "y": 500,
        "wires": []
    },
    {
        "id": "88ae68b4e7a3964a",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_101_Led_Extra1",
        "name": "I_101_Led_Extra1",
        "x": 4450,
        "y": 540,
        "wires": []
    },
    {
        "id": "0a189568c5f9f66b",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_101_Led_Extra2",
        "name": "I_101_Led_Extra2",
        "x": 4450,
        "y": 580,
        "wires": []
    },
    {
        "id": "43fa71d4de3daf8e",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_101_Panel_O4",
        "name": "I_101_Panel_O4",
        "x": 4450,
        "y": 620,
        "wires": []
    },
    {
        "id": "9bae725ed528f3c3",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_101_Panel_O5",
        "name": "I_101_Panel_O5",
        "x": 4450,
        "y": 660,
        "wires": []
    },
    {
        "id": "255889680cb64a1d",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_101_Panel_O6",
        "name": "I_101_Panel_O6",
        "x": 4450,
        "y": 700,
        "wires": []
    },
    {
        "id": "7864de5838d49be9",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "I_101_Panel_O7",
        "name": "I_101_Panel_O7",
        "x": 4450,
        "y": 740,
        "wires": []
    },
    {
        "id": "58675d144b399079",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_105_Test",
        "name": "C_105_Test",
        "x": 4430,
        "y": 820,
        "wires": []
    },
    {
        "id": "6d53bf2daf80b939",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_105_TestDrill",
        "name": "C_105_TestDrill",
        "x": 4440,
        "y": 860,
        "wires": []
    },
    {
        "id": "37f174a20d2e68f7",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_105_Rotation",
        "name": "C_105_Rotation",
        "x": 4440,
        "y": 900,
        "wires": []
    },
    {
        "id": "276ec64484ae3796",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_100_Drill_On",
        "func": "if (msg.topic === \"I_100_Drill_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_100_Drill_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 220,
        "wires": [
            [
                "c6542c79843db351"
            ]
        ]
    },
    {
        "id": "8e8ab5731df6c30a",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_100_RT_On",
        "func": "if (msg.topic === \"I_100_RT_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_100_RT_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 260,
        "wires": [
            [
                "5eabc2910e610782"
            ]
        ]
    },
    {
        "id": "415b455a8ff46767",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_100_Drill_Down",
        "func": "if (msg.topic === \"I_100_Drill_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_100_Drill_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 300,
        "wires": [
            [
                "caaf0488044a9963"
            ]
        ]
    },
    {
        "id": "ecf3fa858f55a3e2",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_100_Drill_Up",
        "func": "if (msg.topic === \"I_100_Drill_Up\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_100_Drill_Up\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 340,
        "wires": [
            [
                "2b8c64af861c5e40"
            ]
        ]
    },
    {
        "id": "23190ec9e137c772",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_100_Drill_Pin",
        "func": "if (msg.topic === \"I_100_Drill_Pin\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_100_Drill_Pin\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 380,
        "wires": [
            [
                "dc97a3dca266c9e8"
            ]
        ]
    },
    {
        "id": "044d3cc36f78b1f2",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_100_Test_Pin",
        "func": "if (msg.topic === \"I_100_Test_Pin\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_100_Test_Pin\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 420,
        "wires": [
            [
                "f2c86602069a2f39"
            ]
        ]
    },
    {
        "id": "6b02f3a012231bdb",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_101_Led_Start",
        "func": "if (msg.topic === \"I_101_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 460,
        "wires": [
            [
                "7508259042bfc018"
            ]
        ]
    },
    {
        "id": "8bb8bc6fc7044c9e",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_101_Led_Reset",
        "func": "if (msg.topic === \"I_101_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 500,
        "wires": [
            [
                "90bf046a9e08b60c"
            ]
        ]
    },
    {
        "id": "92d88803af9ce949",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_101_Led_Extra1",
        "func": "if (msg.topic === \"I_101_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 540,
        "wires": [
            [
                "88ae68b4e7a3964a"
            ]
        ]
    },
    {
        "id": "e1f54a9614d3ef81",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_101_Led_Extra2",
        "func": "if (msg.topic === \"I_101_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 580,
        "wires": [
            [
                "0a189568c5f9f66b"
            ]
        ]
    },
    {
        "id": "63fc71b2aa8fc6fa",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_101_Panel_O4",
        "func": "if (msg.topic === \"I_101_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 620,
        "wires": [
            [
                "43fa71d4de3daf8e"
            ]
        ]
    },
    {
        "id": "df882576f38dd0c6",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_101_Panel_O5",
        "func": "if (msg.topic === \"I_101_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 660,
        "wires": [
            [
                "9bae725ed528f3c3"
            ]
        ]
    },
    {
        "id": "c906510784c926c9",
        "type": "link in",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "Processing [80]",
        "links": [
            "77067a71e5eb8d06"
        ],
        "x": 4055,
        "y": 540,
        "wires": [
            [
                "276ec64484ae3796",
                "8e8ab5731df6c30a",
                "415b455a8ff46767",
                "ecf3fa858f55a3e2",
                "23190ec9e137c772",
                "044d3cc36f78b1f2",
                "6b02f3a012231bdb",
                "8bb8bc6fc7044c9e",
                "92d88803af9ce949",
                "e1f54a9614d3ef81",
                "63fc71b2aa8fc6fa",
                "df882576f38dd0c6",
                "9b26af3fa51441f3",
                "577df36c3fb663c7",
                "88cab66cfc135766",
                "70d47febaddcc267",
                "9b31d05d314398e7",
                "28767164893cfb26"
            ]
        ]
    },
    {
        "id": "9b26af3fa51441f3",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_101_Panel_O6",
        "func": "if (msg.topic === \"I_101_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 700,
        "wires": [
            [
                "255889680cb64a1d"
            ]
        ]
    },
    {
        "id": "577df36c3fb663c7",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "I_101_Panel_O7",
        "func": "if (msg.topic === \"I_101_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 740,
        "wires": [
            [
                "7864de5838d49be9"
            ]
        ]
    },
    {
        "id": "88cab66cfc135766",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "C_105_Test",
        "func": "if (msg.topic === \"C_105_Test\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_Test\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4210,
        "y": 820,
        "wires": [
            [
                "58675d144b399079"
            ]
        ]
    },
    {
        "id": "70d47febaddcc267",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "C_105_TestDrill",
        "func": "if (msg.topic === \"C_105_TestDrill\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_TestDrill\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 860,
        "wires": [
            [
                "6d53bf2daf80b939"
            ]
        ]
    },
    {
        "id": "9b31d05d314398e7",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "C_105_Rotation",
        "func": "if (msg.topic === \"C_105_Rotation\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_Rotation\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 900,
        "wires": [
            [
                "37f174a20d2e68f7"
            ]
        ]
    },
    {
        "id": "74b2368617782c63",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "name": "C_55_Start",
        "func": "if (msg.topic === \"C_55_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_55_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 700,
        "wires": [
            [
                "047dc51f280187e5"
            ]
        ]
    },
    {
        "id": "047dc51f280187e5",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "28efe6dcd0538d62",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_55_Start",
        "name": "C_55_Start",
        "x": 1530,
        "y": 700,
        "wires": []
    },
    {
        "id": "eb7a5155997843c7",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "name": "C_85_Start",
        "func": "if (msg.topic === \"C_85_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_85_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3050,
        "y": 780,
        "wires": [
            [
                "079a738b937a16e0"
            ]
        ]
    },
    {
        "id": "079a738b937a16e0",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "05f1cf12ec59fb7a",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_85_Start",
        "name": "C_85_Start",
        "x": 3270,
        "y": 780,
        "wires": []
    },
    {
        "id": "c69b238d972d42ae",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "name": "C_95_Start",
        "func": "if (msg.topic === \"C_95_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_95_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3630,
        "y": 700,
        "wires": [
            [
                "48be2cc207567a3c"
            ]
        ]
    },
    {
        "id": "48be2cc207567a3c",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "ff72a3dbf8f66d53",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_95_Start",
        "name": "C_95_Start",
        "x": 3850,
        "y": 700,
        "wires": []
    },
    {
        "id": "28767164893cfb26",
        "type": "function",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "name": "C_105_Start",
        "func": "if (msg.topic === \"C_105_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4210,
        "y": 780,
        "wires": [
            [
                "8b94dbb40197a83f"
            ]
        ]
    },
    {
        "id": "8b94dbb40197a83f",
        "type": "s7 out",
        "z": "34c5d473de2de145",
        "g": "d87ef24cbf29146a",
        "endpoint": "fab94c45037f1a75",
        "variable": "C_105_Start",
        "name": "C_105_Start",
        "x": 4430,
        "y": 780,
        "wires": []
    },
    {
        "id": "cc517573df216ad3",
        "type": "debug",
        "z": "031596afc773e181",
        "g": "475174d47cc552fb",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "2f427e83d18592fc",
        "type": "OpcUa-Server",
        "z": "031596afc773e181",
        "g": "475174d47cc552fb",
        "port": "53882",
        "name": "Server : Master",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Master/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Master",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "cc517573df216ad3"
            ]
        ]
    },
    {
        "id": "998d901bd25a2f02",
        "type": "comment",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "3d4de0ba8df61081",
        "type": "function",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "0ab222341290db7c"
            ]
        ]
    },
    {
        "id": "0ab222341290db7c",
        "type": "function",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Master_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "80a6fa988b9309cd"
            ]
        ]
    },
    {
        "id": "578070c5856ff18d",
        "type": "file",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "deecfdd36fc3d26f",
        "type": "comment",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "80a6fa988b9309cd",
        "type": "OpcUa-Client",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "endpoint": "6f865d6d304fa9c0",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "f3424b61376be52d"
            ],
            [
                "73637df5fd9d6d72",
                "f9b5544c33e367a6"
            ]
        ]
    },
    {
        "id": "f3424b61376be52d",
        "type": "function",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 300,
        "wires": [
            [
                "574b7b888c9b7365",
                "a27c6a8335099f18"
            ]
        ]
    },
    {
        "id": "574b7b888c9b7365",
        "type": "file",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a27c6a8335099f18",
        "type": "debug",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 340,
        "wires": []
    },
    {
        "id": "2a44b9546efbff90",
        "type": "comment",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "4d269e9407470a26",
        "type": "function",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "ea2f83b14b8cfcf4"
            ]
        ]
    },
    {
        "id": "4afa86769f84c633",
        "type": "OpcUa-Client",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "endpoint": "6f865d6d304fa9c0",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "794a3e594ed5955d"
            ],
            []
        ]
    },
    {
        "id": "794a3e594ed5955d",
        "type": "debug",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "db0aed47d59b3cfb",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Write_Master",
        "links": [
            "75e3fa05cd349eed",
            "ff33ce122066d2c6",
            "017710489c9c7ebb",
            "0d72a9393f93485a",
            "b4002d78d1ef9815",
            "4f02d08ef40d050e",
            "e762c7fc8ad6bc5f",
            "588ff1e231f8c50c",
            "db7067444aadbbe5",
            "a6e17df2016f9a75",
            "cb8242d5bc35c857",
            "5f7fd6eb7745e213",
            "d538d29e88a38e73",
            "3a1019fd8e5e9885",
            "8eccb2876a7987c5",
            "df2919ea5936976c",
            "082be786361df86a"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "53b7dacc428b5c53"
            ]
        ]
    },
    {
        "id": "53b7dacc428b5c53",
        "type": "function",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "91f529e867681e0e"
            ]
        ]
    },
    {
        "id": "91f529e867681e0e",
        "type": "file in",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "4d269e9407470a26"
            ]
        ]
    },
    {
        "id": "ea2f83b14b8cfcf4",
        "type": "function",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "4afa86769f84c633"
            ]
        ]
    },
    {
        "id": "55d654d5fc113f77",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "CSV Link",
        "links": [
            "73637df5fd9d6d72"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "38c49fcfb4b3868b"
            ]
        ]
    },
    {
        "id": "38c49fcfb4b3868b",
        "type": "function",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "6077e319653b52ac"
            ]
        ]
    },
    {
        "id": "6077e319653b52ac",
        "type": "trigger",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "578070c5856ff18d"
            ]
        ]
    },
    {
        "id": "73637df5fd9d6d72",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "55d654d5fc113f77",
            "a7d637be1666c685"
        ],
        "x": 935,
        "y": 340,
        "wires": []
    },
    {
        "id": "a7d637be1666c685",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "CSV Link",
        "links": [
            "73637df5fd9d6d72"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "b093d3d7f510bf0a"
            ]
        ]
    },
    {
        "id": "b093d3d7f510bf0a",
        "type": "function",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_20_On\" : false,\n    \"O_20_Off\" : false,\n    \"O_20_Controler_On\" : false,\n    \"F_22_Led_On\" : false,\n    \"F_22_Led_Off\" : false,\n    \"F_22_Conveyor\" : false,\n    \"O_24_Cart_Stat\" : false,\n    \"O_24_Cart_Next\" : false,\n    \"O_24_Optic\" : false,\n    \"O_24_Count\" : false,\n    \"O_24_Pist_Bck\" : false,\n    \"F_24_Release_FB\" : false,\n    \"O_25_Cart_Stat\" : false,\n    \"O_25_Cart_Next\" : false,\n    \"O_25_Optic\" : false,\n    \"O_25_Count\" : false,\n    \"O_25_Pist_Bck\" : false,\n    \"F_25_Release_FB\" : false,\n    \"O_26_Cart_Stat\" : false,\n    \"O_26_Cart_Next\" : false,\n    \"O_26_Optic\" : false,\n    \"O_26_Count\" : false,\n    \"O_26_Pist_Bck\" : false,\n    \"F_26_Release_FB\" : false,\n    \"O_27_Cart_Stat\" : false,\n    \"O_27_Cart_Next\" : false,\n    \"O_27_Optic\" : false,\n    \"O_27_Count\" : false,\n    \"O_27_Pist_Bck\" : false,\n    \"F_27_Release_FB\" : false,\n    \"O_28_Cart_Stat\" : false,\n    \"O_28_Cart_Next\" : false,\n    \"O_28_Optic\" : false,\n    \"O_28_Count\" : false,\n    \"O_28_Pist_Bck\" : false,\n    \"F_28_Release_FB\" : false,\n    \"O_29_Cart_Stat\" : false,\n    \"O_29_Cart_Next\" : false,\n    \"O_29_Optic\" : false,\n    \"O_29_Count\" : false,\n    \"O_29_Pist_Bck\" : false,\n    \"F_29_Release_FB\" : false,\n    \"I_20_Led_On\" : false,\n    \"I_20_Led_Off\" : false,\n    \"I_20_Conveyor\" : false,\n    \"I_24_Cart_Test\" : false,\n    \"C_24_Request\" : false,\n    \"C_24_CartDel\" : false,\n    \"I_25_Cart_Proc\" : false,\n    \"C_25_Request\" : false,\n    \"C_25_CartDel\" : false,\n    \"I_26_Cart_Visi\" : false,\n    \"C_26_Request\" : false,\n    \"C_26_CartDel\" : false,\n    \"I_27_Cart_Robo\" : false,\n    \"C_27_Request\" : false,\n    \"C_27_CartDel\" : false,\n    \"I_28_Cart_Stor\" : false,\n    \"C_28_Request\" : false,\n    \"C_28_CartDel\" : false,\n    \"I_29_Cart_Sort\" : false,\n    \"C_29_Request\" : false,\n    \"C_29_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "5bb73c2912894ef7"
            ]
        ]
    },
    {
        "id": "5bb73c2912894ef7",
        "type": "trigger",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "3d4de0ba8df61081"
            ]
        ]
    },
    {
        "id": "46be0b3c47321ae7",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "item": "O_20_On",
        "datatype": "Boolean",
        "value": "",
        "name": "O_20_On",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "db7067444aadbbe5"
            ]
        ]
    },
    {
        "id": "4d79a1aa40af0fd6",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "item": "O_20_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "O_20_Off",
        "x": 480,
        "y": 660,
        "wires": [
            [
                "db7067444aadbbe5"
            ]
        ]
    },
    {
        "id": "3e0f2f876ad1adcf",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "item": "O_20_Controler_On",
        "datatype": "Boolean",
        "value": "",
        "name": "O_20_Controler_On",
        "x": 440,
        "y": 700,
        "wires": [
            [
                "db7067444aadbbe5"
            ]
        ]
    },
    {
        "id": "db7067444aadbbe5",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "20 Physical Sensor",
        "mode": "link",
        "links": [
            "db0aed47d59b3cfb"
        ],
        "x": 625,
        "y": 660,
        "wires": []
    },
    {
        "id": "eb030b184116de88",
        "type": "switch",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "20 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_20_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_20_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_20_Controler_On",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 660,
        "wires": [
            [
                "1006f427c01576e8"
            ],
            [
                "29e289348b90e8d0"
            ],
            [
                "2b1a68bf02ec6c48"
            ]
        ]
    },
    {
        "id": "1006f427c01576e8",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "order": 0,
        "group": "292118fdc7365bc0",
        "width": 0,
        "height": 0,
        "label": "On Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_20_On",
        "x": 1040,
        "y": 620,
        "wires": []
    },
    {
        "id": "29e289348b90e8d0",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "order": 0,
        "group": "292118fdc7365bc0",
        "width": 0,
        "height": 0,
        "label": "Off Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_20_Off",
        "x": 1040,
        "y": 660,
        "wires": []
    },
    {
        "id": "2b1a68bf02ec6c48",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "order": 0,
        "group": "292118fdc7365bc0",
        "width": 0,
        "height": 0,
        "label": "Controler On",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_20_Controler_On",
        "x": 1080,
        "y": 700,
        "wires": []
    },
    {
        "id": "dc764063241c69e4",
        "type": "function",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_20_On\" : false,\n            \"O_20_Off\" : false,\n            \"O_20_Controler_On\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "5a43ac3e45c0d54f"
            ]
        ]
    },
    {
        "id": "33aae946641b9fc7",
        "type": "OpcUa-Client",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "endpoint": "6f865d6d304fa9c0",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "638291a27c71385d",
                "ce6365d2dbf160b4"
            ],
            [
                "dc764063241c69e4"
            ]
        ]
    },
    {
        "id": "5a43ac3e45c0d54f",
        "type": "trigger",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "6bd81204cb3f7902"
            ]
        ]
    },
    {
        "id": "98be8938ae85167d",
        "type": "function",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "33aae946641b9fc7"
            ]
        ]
    },
    {
        "id": "638291a27c71385d",
        "type": "debug",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "20 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 580,
        "wires": []
    },
    {
        "id": "6bd81204cb3f7902",
        "type": "function",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "2b5b06728e9b077b"
            ]
        ]
    },
    {
        "id": "335ab3322230cd77",
        "type": "function",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "98be8938ae85167d"
            ]
        ]
    },
    {
        "id": "2b5b06728e9b077b",
        "type": "function",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "9d61a06546a69bcc"
            ]
        ]
    },
    {
        "id": "9d61a06546a69bcc",
        "type": "file in",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "335ab3322230cd77"
            ]
        ]
    },
    {
        "id": "9987a7b68bed50e1",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "item": "I_20_Led_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_20_Led_On",
        "x": 460,
        "y": 880,
        "wires": [
            [
                "a6e17df2016f9a75"
            ]
        ]
    },
    {
        "id": "9dfb5fc77c7f8c7f",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "item": "I_20_Led_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "I_20_Led_Off",
        "x": 460,
        "y": 920,
        "wires": [
            [
                "a6e17df2016f9a75"
            ]
        ]
    },
    {
        "id": "4fa171c2e0f509da",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "item": "I_20_Conveyor",
        "datatype": "Boolean",
        "value": "",
        "name": "I_20_Conveyor",
        "x": 460,
        "y": 960,
        "wires": [
            [
                "a6e17df2016f9a75"
            ]
        ]
    },
    {
        "id": "a6e17df2016f9a75",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "20 Physical Actuators",
        "mode": "link",
        "links": [
            "db0aed47d59b3cfb"
        ],
        "x": 625,
        "y": 920,
        "wires": []
    },
    {
        "id": "f393a12069f134d2",
        "type": "switch",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "20 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_20_Led_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_20_Led_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_20_Conveyor",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 920,
        "wires": [
            [
                "e5e3de18228c26c8"
            ],
            [
                "0e396a363345616e"
            ],
            [
                "d7ac0fd949d3d196"
            ]
        ]
    },
    {
        "id": "6c34ee2a225904d5",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "I_20_Led_On",
        "label": "On LED",
        "tooltip": "",
        "group": "951f6c64c796ef31",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 880,
        "wires": [
            [
                "9987a7b68bed50e1"
            ]
        ]
    },
    {
        "id": "ed2f022463d67e6f",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "I_20_Led_Off",
        "label": "Off LED",
        "tooltip": "",
        "group": "951f6c64c796ef31",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 920,
        "wires": [
            [
                "9dfb5fc77c7f8c7f"
            ]
        ]
    },
    {
        "id": "f5ebe5eb7ab798a9",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "I_20_Conveyor",
        "label": "Conveyor",
        "tooltip": "",
        "group": "951f6c64c796ef31",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 960,
        "wires": [
            [
                "4fa171c2e0f509da"
            ]
        ]
    },
    {
        "id": "c133591a746db8c4",
        "type": "function",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 800,
        "wires": [
            [
                "d891f71aaadc215e"
            ]
        ]
    },
    {
        "id": "e48153c831cb7aac",
        "type": "function",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 800,
        "wires": [
            [
                "c133591a746db8c4"
            ]
        ]
    },
    {
        "id": "d891f71aaadc215e",
        "type": "OpcUa-Client",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "endpoint": "6f865d6d304fa9c0",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 800,
        "wires": [
            [
                "30a9869d8113dce7",
                "fb8c718100f65f40"
            ],
            [
                "14aaa2467be8b970"
            ]
        ]
    },
    {
        "id": "322ea696af79e0cb",
        "type": "file in",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 800,
        "wires": [
            [
                "e48153c831cb7aac"
            ]
        ]
    },
    {
        "id": "30a9869d8113dce7",
        "type": "debug",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "20 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 840,
        "wires": []
    },
    {
        "id": "14aaa2467be8b970",
        "type": "function",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n        \"I_20_Led_On\" : false,\n        \"I_20_Led_Off\" : false,\n        \"I_20_Conveyor\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 800,
        "wires": [
            [
                "751543dfc50f0b67"
            ]
        ]
    },
    {
        "id": "f711648e17939613",
        "type": "function",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 800,
        "wires": [
            [
                "322ea696af79e0cb"
            ]
        ]
    },
    {
        "id": "751543dfc50f0b67",
        "type": "trigger",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 800,
        "wires": [
            [
                "80af09a3609abaf2"
            ]
        ]
    },
    {
        "id": "80af09a3609abaf2",
        "type": "function",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 800,
        "wires": [
            [
                "f711648e17939613"
            ]
        ]
    },
    {
        "id": "1fc953cb7ecff440",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "item": "F_22_Led_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_22_Led_On",
        "x": 460,
        "y": 1140,
        "wires": [
            [
                "cb8242d5bc35c857"
            ]
        ]
    },
    {
        "id": "59d0592a206603cc",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "item": "F_22_Led_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "F_22_Led_Off",
        "x": 460,
        "y": 1180,
        "wires": [
            [
                "cb8242d5bc35c857"
            ]
        ]
    },
    {
        "id": "d3af352be922f1c8",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "item": "F_22_Conveyor",
        "datatype": "Boolean",
        "value": "",
        "name": "F_22_Conveyor",
        "x": 460,
        "y": 1220,
        "wires": [
            [
                "cb8242d5bc35c857"
            ]
        ]
    },
    {
        "id": "cb8242d5bc35c857",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "50 Physical Feedback",
        "mode": "link",
        "links": [
            "db0aed47d59b3cfb"
        ],
        "x": 625,
        "y": 1180,
        "wires": []
    },
    {
        "id": "6ffd5ac0640e081a",
        "type": "switch",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "20 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_22_Led_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_22_Led_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_22_Conveyor",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 1180,
        "wires": [
            [
                "357305cd191a552a"
            ],
            [
                "6ffb060c3e2edb0e"
            ],
            [
                "01bdd918090f23ce"
            ]
        ]
    },
    {
        "id": "357305cd191a552a",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "order": 0,
        "group": "e99a0a0e71405ae6",
        "width": 0,
        "height": 0,
        "label": "On LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_22_Led_On",
        "x": 1060,
        "y": 1140,
        "wires": []
    },
    {
        "id": "6ffb060c3e2edb0e",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "order": 0,
        "group": "e99a0a0e71405ae6",
        "width": 0,
        "height": 0,
        "label": "Off LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_22_Led_Off",
        "x": 1060,
        "y": 1180,
        "wires": []
    },
    {
        "id": "01bdd918090f23ce",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "order": 0,
        "group": "e99a0a0e71405ae6",
        "width": 0,
        "height": 0,
        "label": "Conveyor On",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_22_Conveyor",
        "x": 1060,
        "y": 1220,
        "wires": []
    },
    {
        "id": "1cc6ae0cc77d97de",
        "type": "function",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1060,
        "wires": [
            [
                "b05a714069a6cb3c"
            ]
        ]
    },
    {
        "id": "c3993b6232ee64e5",
        "type": "function",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1060,
        "wires": [
            [
                "1cc6ae0cc77d97de"
            ]
        ]
    },
    {
        "id": "b05a714069a6cb3c",
        "type": "OpcUa-Client",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "endpoint": "6f865d6d304fa9c0",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1060,
        "wires": [
            [
                "9838f3e439d62aad",
                "e1dc260a24a3fd81"
            ],
            [
                "21f1fd12f99cd8d3"
            ]
        ]
    },
    {
        "id": "65d4bd2a8c81ba30",
        "type": "file in",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1060,
        "wires": [
            [
                "c3993b6232ee64e5"
            ]
        ]
    },
    {
        "id": "9838f3e439d62aad",
        "type": "debug",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "20 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1100,
        "wires": []
    },
    {
        "id": "21f1fd12f99cd8d3",
        "type": "function",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n        \"F_22_Led_On\" : false,\n        \"F_22_Led_Off\" : false,\n        \"F_22_Conveyor\" : false,\n}};\nelse return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1060,
        "wires": [
            [
                "86ebb8de9033f6a7"
            ]
        ]
    },
    {
        "id": "544a9107a6912451",
        "type": "function",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1060,
        "wires": [
            [
                "65d4bd2a8c81ba30"
            ]
        ]
    },
    {
        "id": "86ebb8de9033f6a7",
        "type": "trigger",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1060,
        "wires": [
            [
                "a60e8443efc1d2d0"
            ]
        ]
    },
    {
        "id": "a60e8443efc1d2d0",
        "type": "function",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1060,
        "wires": [
            [
                "544a9107a6912451"
            ]
        ]
    },
    {
        "id": "081514c7a33ef596",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "item": "O_24_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Cart_Stat",
        "x": 460,
        "y": 1400,
        "wires": [
            [
                "5f7fd6eb7745e213"
            ]
        ]
    },
    {
        "id": "6300963e665d06f7",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "item": "O_24_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Cart_Next",
        "x": 450,
        "y": 1440,
        "wires": [
            [
                "5f7fd6eb7745e213"
            ]
        ]
    },
    {
        "id": "58694d22ad138641",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "item": "O_24_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Optic",
        "x": 470,
        "y": 1480,
        "wires": [
            [
                "5f7fd6eb7745e213"
            ]
        ]
    },
    {
        "id": "5781712443345ead",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "item": "O_24_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Count",
        "x": 470,
        "y": 1520,
        "wires": [
            [
                "5f7fd6eb7745e213"
            ]
        ]
    },
    {
        "id": "1ea386b7ce9a9fb2",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "item": "O_24_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Pist_Bck",
        "x": 460,
        "y": 1560,
        "wires": [
            [
                "5f7fd6eb7745e213"
            ]
        ]
    },
    {
        "id": "51c1c8c5fe7a2be9",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "item": "F_24_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_24_Release_FB",
        "x": 450,
        "y": 1600,
        "wires": [
            [
                "5f7fd6eb7745e213"
            ]
        ]
    },
    {
        "id": "5f7fd6eb7745e213",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "Test AS-i",
        "mode": "link",
        "links": [
            "db0aed47d59b3cfb"
        ],
        "x": 625,
        "y": 1560,
        "wires": []
    },
    {
        "id": "3af8eaa8290dcaa8",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1320,
        "wires": [
            [
                "675d2bd17adb8c6c"
            ]
        ]
    },
    {
        "id": "675d2bd17adb8c6c",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1320,
        "wires": [
            [
                "946b3158326ebf43"
            ]
        ]
    },
    {
        "id": "946b3158326ebf43",
        "type": "file in",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1320,
        "wires": [
            [
                "12bdb8971755a2ce"
            ]
        ]
    },
    {
        "id": "12bdb8971755a2ce",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1320,
        "wires": [
            [
                "6de6e69f37c4bc21"
            ]
        ]
    },
    {
        "id": "6de6e69f37c4bc21",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1320,
        "wires": [
            [
                "10a766c9fc83c9e9"
            ]
        ]
    },
    {
        "id": "10a766c9fc83c9e9",
        "type": "OpcUa-Client",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "endpoint": "6f865d6d304fa9c0",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1320,
        "wires": [
            [
                "d63b81840071eba8",
                "1761c8f5e86c9f75"
            ],
            [
                "cf303a87c0cfffb1"
            ]
        ]
    },
    {
        "id": "eacfd2ea77a1ed67",
        "type": "switch",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "Test AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_24_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_24_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_24_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_24_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_24_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_24_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_24_Cart_Test",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_24_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_24_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 1560,
        "wires": [
            [
                "5a6fbfaaeca9fcf7"
            ],
            [
                "054e13fef75de6a7"
            ],
            [
                "0c4978529cf8bfc6"
            ],
            [
                "b686757271442a93"
            ],
            [
                "fd29fc393423bab2"
            ],
            [
                "5e53c205576f3989"
            ],
            [
                "1c5cdf8c27cab469"
            ],
            [
                "fd2ec37401123724"
            ],
            [
                "057f5400bf4e9cb9"
            ]
        ]
    },
    {
        "id": "5a6fbfaaeca9fcf7",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "order": 1,
        "group": "62292116bb60abdf",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Cart_Stat",
        "x": 1060,
        "y": 1400,
        "wires": []
    },
    {
        "id": "054e13fef75de6a7",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "order": 2,
        "group": "62292116bb60abdf",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Cart_Next",
        "x": 1070,
        "y": 1440,
        "wires": []
    },
    {
        "id": "0c4978529cf8bfc6",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "order": 3,
        "group": "62292116bb60abdf",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Optic",
        "x": 1050,
        "y": 1480,
        "wires": []
    },
    {
        "id": "b686757271442a93",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "order": 4,
        "group": "62292116bb60abdf",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Count",
        "x": 1050,
        "y": 1520,
        "wires": []
    },
    {
        "id": "fd29fc393423bab2",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "order": 5,
        "group": "62292116bb60abdf",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Pist_Bck",
        "x": 1060,
        "y": 1560,
        "wires": []
    },
    {
        "id": "5e53c205576f3989",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "order": 6,
        "group": "62292116bb60abdf",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_24_Release_FB",
        "x": 1070,
        "y": 1600,
        "wires": []
    },
    {
        "id": "057f5400bf4e9cb9",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "order": 9,
        "group": "62292116bb60abdf",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_24_CartDel",
        "x": 1060,
        "y": 1720,
        "wires": []
    },
    {
        "id": "515532ea38c7e723",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "item": "C_24_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_24_CartDel",
        "x": 460,
        "y": 1720,
        "wires": [
            [
                "5f7fd6eb7745e213"
            ]
        ]
    },
    {
        "id": "d63b81840071eba8",
        "type": "debug",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "Test AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1360,
        "wires": []
    },
    {
        "id": "cf303a87c0cfffb1",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_24_Cart_Stat\" : false,\n    \"O_24_Cart_Next\" : false,\n    \"O_24_Optic\" : false,\n    \"O_24_Count\" : false,\n    \"O_24_Pist_Bck\" : false,\n    \"F_24_Release_FB\" : false,\n    \"I_24_Cart_Test\" : false,\n    \"C_24_Request\" : false,\n    \"C_24_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1320,
        "wires": [
            [
                "e21293bb3bcc84e2"
            ]
        ]
    },
    {
        "id": "e21293bb3bcc84e2",
        "type": "trigger",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1320,
        "wires": [
            [
                "3af8eaa8290dcaa8"
            ]
        ]
    },
    {
        "id": "6d12bdcee59be69e",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "I_24_Cart_Test",
        "label": "Release cart",
        "tooltip": "",
        "group": "62292116bb60abdf",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1640,
        "wires": [
            [
                "1c22a3916b0d138a"
            ]
        ]
    },
    {
        "id": "1c22a3916b0d138a",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "item": "I_24_Cart_Test",
        "datatype": "Boolean",
        "value": "",
        "name": "I_24_Cart_Test",
        "x": 460,
        "y": 1640,
        "wires": [
            [
                "5f7fd6eb7745e213"
            ]
        ]
    },
    {
        "id": "2c54d271624e974a",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "C_24_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "62292116bb60abdf",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1680,
        "wires": [
            [
                "939516033baded94"
            ]
        ]
    },
    {
        "id": "939516033baded94",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "item": "C_24_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_24_Request",
        "x": 460,
        "y": 1680,
        "wires": [
            [
                "5f7fd6eb7745e213"
            ]
        ]
    },
    {
        "id": "825ffc2e7b1167f1",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "item": "O_25_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Cart_Stat",
        "x": 480,
        "y": 1900,
        "wires": [
            [
                "d538d29e88a38e73"
            ]
        ]
    },
    {
        "id": "9425a164614ea230",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "item": "O_25_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Cart_Next",
        "x": 470,
        "y": 1940,
        "wires": [
            [
                "d538d29e88a38e73"
            ]
        ]
    },
    {
        "id": "53b834073d2cb28a",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "item": "O_25_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Optic",
        "x": 490,
        "y": 1980,
        "wires": [
            [
                "d538d29e88a38e73"
            ]
        ]
    },
    {
        "id": "1a5b1f46bcfe9883",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "item": "O_25_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Count",
        "x": 490,
        "y": 2020,
        "wires": [
            [
                "d538d29e88a38e73"
            ]
        ]
    },
    {
        "id": "b2648239d0ebda1a",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "item": "O_25_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Pist_Bck",
        "x": 480,
        "y": 2060,
        "wires": [
            [
                "d538d29e88a38e73"
            ]
        ]
    },
    {
        "id": "8fb9b2cbbc8989ab",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "item": "F_25_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_25_Release_FB",
        "x": 470,
        "y": 2100,
        "wires": [
            [
                "d538d29e88a38e73"
            ]
        ]
    },
    {
        "id": "d538d29e88a38e73",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "Proc AS-i",
        "mode": "link",
        "links": [
            "db0aed47d59b3cfb"
        ],
        "x": 645,
        "y": 2060,
        "wires": []
    },
    {
        "id": "29a743beda814e39",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1820,
        "wires": [
            [
                "b71cf70e68990505"
            ]
        ]
    },
    {
        "id": "b71cf70e68990505",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1820,
        "wires": [
            [
                "50e6cd4089d016df"
            ]
        ]
    },
    {
        "id": "50e6cd4089d016df",
        "type": "file in",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1820,
        "wires": [
            [
                "11e7a9bf5241ec3a"
            ]
        ]
    },
    {
        "id": "11e7a9bf5241ec3a",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1820,
        "wires": [
            [
                "a9e33eb94525a462"
            ]
        ]
    },
    {
        "id": "a9e33eb94525a462",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1820,
        "wires": [
            [
                "be04b91d2574b379"
            ]
        ]
    },
    {
        "id": "be04b91d2574b379",
        "type": "OpcUa-Client",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "endpoint": "6f865d6d304fa9c0",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1820,
        "wires": [
            [
                "7727055fb8f33eec",
                "81ab885d41ac9c0e"
            ],
            [
                "1896e15fa663b3f9"
            ]
        ]
    },
    {
        "id": "2243173182fb4df4",
        "type": "switch",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "Proc AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_25_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_25_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_25_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_25_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_25_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_25_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_25_Cart_Proc",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_25_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_25_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 859.9999618530273,
        "y": 2060.9998321533203,
        "wires": [
            [
                "9b19a1b38935d90d"
            ],
            [
                "e891fb3ef804a33a"
            ],
            [
                "786b136460e41866"
            ],
            [
                "314984decdd9f884"
            ],
            [
                "963f3f25df29c54c"
            ],
            [
                "df8e769f2833675e"
            ],
            [
                "373835708d4fbe41"
            ],
            [
                "2a6806767e1ce01e"
            ],
            [
                "9e5ec047d23dbfdd"
            ]
        ]
    },
    {
        "id": "9b19a1b38935d90d",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "order": 1,
        "group": "cb2e4e231daf441f",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Cart_Stat",
        "x": 1059.9999618530273,
        "y": 1900.9998321533203,
        "wires": []
    },
    {
        "id": "e891fb3ef804a33a",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "order": 2,
        "group": "cb2e4e231daf441f",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Cart_Next",
        "x": 1069.9999618530273,
        "y": 1940.9998321533203,
        "wires": []
    },
    {
        "id": "786b136460e41866",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "order": 3,
        "group": "cb2e4e231daf441f",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Optic",
        "x": 1049.9999618530273,
        "y": 1980.9998321533203,
        "wires": []
    },
    {
        "id": "314984decdd9f884",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "order": 4,
        "group": "cb2e4e231daf441f",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Count",
        "x": 1049.9999618530273,
        "y": 2020.9998321533203,
        "wires": []
    },
    {
        "id": "963f3f25df29c54c",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "order": 5,
        "group": "cb2e4e231daf441f",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Pist_Bck",
        "x": 1059.9999618530273,
        "y": 2060.9998321533203,
        "wires": []
    },
    {
        "id": "df8e769f2833675e",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "order": 6,
        "group": "cb2e4e231daf441f",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_25_Release_FB",
        "x": 1069.9999618530273,
        "y": 2100.9998321533203,
        "wires": []
    },
    {
        "id": "9e5ec047d23dbfdd",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "order": 9,
        "group": "cb2e4e231daf441f",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_25_CartDel",
        "x": 1059.9999618530273,
        "y": 2220.9998321533203,
        "wires": []
    },
    {
        "id": "b850531619e36be2",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "item": "C_25_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_25_CartDel",
        "x": 480,
        "y": 2220,
        "wires": [
            [
                "d538d29e88a38e73"
            ]
        ]
    },
    {
        "id": "7727055fb8f33eec",
        "type": "debug",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "Proc AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1860,
        "wires": []
    },
    {
        "id": "1896e15fa663b3f9",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_25_Cart_Stat\" : false,\n    \"O_25_Cart_Next\" : false,\n    \"O_25_Optic\" : false,\n    \"O_25_Count\" : false,\n    \"O_25_Pist_Bck\" : false,\n    \"F_25_Release_FB\" : false,\n    \"I_25_Cart_Proc\" : false,\n    \"C_25_Request\" : false,\n    \"C_25_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1820,
        "wires": [
            [
                "796ce9cba57404e9"
            ]
        ]
    },
    {
        "id": "796ce9cba57404e9",
        "type": "trigger",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1820,
        "wires": [
            [
                "29a743beda814e39"
            ]
        ]
    },
    {
        "id": "f749f42a3a87d274",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "I_25_Cart_Proc",
        "label": "Release cart",
        "tooltip": "",
        "group": "cb2e4e231daf441f",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2140,
        "wires": [
            [
                "c2bdea5372dbee69"
            ]
        ]
    },
    {
        "id": "c2bdea5372dbee69",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "item": "I_25_Cart_Proc",
        "datatype": "Boolean",
        "value": "",
        "name": "I_25_Cart_Proc",
        "x": 480,
        "y": 2140,
        "wires": [
            [
                "d538d29e88a38e73"
            ]
        ]
    },
    {
        "id": "7ecfbbece2943543",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "C_25_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "cb2e4e231daf441f",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2180,
        "wires": [
            [
                "9f793e88eac6fe9e"
            ]
        ]
    },
    {
        "id": "9f793e88eac6fe9e",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "item": "C_25_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_25_Request",
        "x": 480,
        "y": 2180,
        "wires": [
            [
                "d538d29e88a38e73"
            ]
        ]
    },
    {
        "id": "8b7ef40bf4e0bc00",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "item": "O_26_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Cart_Stat",
        "x": 480,
        "y": 2400,
        "wires": [
            [
                "3a1019fd8e5e9885"
            ]
        ]
    },
    {
        "id": "c852a3be9a97197a",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "item": "O_26_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Cart_Next",
        "x": 470,
        "y": 2440,
        "wires": [
            [
                "3a1019fd8e5e9885"
            ]
        ]
    },
    {
        "id": "648c2ff3e67a6b88",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "item": "O_26_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Optic",
        "x": 490,
        "y": 2480,
        "wires": [
            [
                "3a1019fd8e5e9885"
            ]
        ]
    },
    {
        "id": "b6270b3d8557f01f",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "item": "O_26_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Count",
        "x": 490,
        "y": 2520,
        "wires": [
            [
                "3a1019fd8e5e9885"
            ]
        ]
    },
    {
        "id": "bf55aac4cadad7f6",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "item": "O_26_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Pist_Bck",
        "x": 480,
        "y": 2560,
        "wires": [
            [
                "3a1019fd8e5e9885"
            ]
        ]
    },
    {
        "id": "cbbb471fe410c6e1",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "item": "F_26_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_26_Release_FB",
        "x": 470,
        "y": 2600,
        "wires": [
            [
                "3a1019fd8e5e9885"
            ]
        ]
    },
    {
        "id": "3a1019fd8e5e9885",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "Visi AS-i",
        "mode": "link",
        "links": [
            "db0aed47d59b3cfb"
        ],
        "x": 645,
        "y": 2560,
        "wires": []
    },
    {
        "id": "1c25a55f50467c9e",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2320,
        "wires": [
            [
                "3fc414c5b3efa8f4"
            ]
        ]
    },
    {
        "id": "3fc414c5b3efa8f4",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2320,
        "wires": [
            [
                "b340a33908de1451"
            ]
        ]
    },
    {
        "id": "b340a33908de1451",
        "type": "file in",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2320,
        "wires": [
            [
                "018b5c91df6d7f87"
            ]
        ]
    },
    {
        "id": "018b5c91df6d7f87",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2320,
        "wires": [
            [
                "ad9d19a31e0dc7b0"
            ]
        ]
    },
    {
        "id": "ad9d19a31e0dc7b0",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2320,
        "wires": [
            [
                "ceb260a2bb562811"
            ]
        ]
    },
    {
        "id": "ceb260a2bb562811",
        "type": "OpcUa-Client",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "endpoint": "6f865d6d304fa9c0",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2320,
        "wires": [
            [
                "8ea2dbefbf210643",
                "14b3754293efefb6"
            ],
            [
                "03f68b5d7eb9ee88"
            ]
        ]
    },
    {
        "id": "739a12d5a4585b9f",
        "type": "switch",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "Visi AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_26_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_26_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_26_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_26_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_26_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_26_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_26_Cart_Visi",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_26_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_26_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 2560,
        "wires": [
            [
                "84859124611d019d"
            ],
            [
                "719b8e5b6e9d6550"
            ],
            [
                "01ba14fc57f7185e"
            ],
            [
                "84736197a9ae8291"
            ],
            [
                "7a74f3a34b33552e"
            ],
            [
                "b5fdd5a222b349f8"
            ],
            [
                "07134aeea497c709"
            ],
            [
                "78bb3a6c9a9a3c5c"
            ],
            [
                "4e0537d546b5973c"
            ]
        ]
    },
    {
        "id": "84859124611d019d",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "order": 1,
        "group": "e0644ee2b6cb3177",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Cart_Stat",
        "x": 1060,
        "y": 2400,
        "wires": []
    },
    {
        "id": "719b8e5b6e9d6550",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "order": 2,
        "group": "e0644ee2b6cb3177",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Cart_Next",
        "x": 1070,
        "y": 2440,
        "wires": []
    },
    {
        "id": "01ba14fc57f7185e",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "order": 3,
        "group": "e0644ee2b6cb3177",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Optic",
        "x": 1050,
        "y": 2480,
        "wires": []
    },
    {
        "id": "84736197a9ae8291",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "order": 4,
        "group": "e0644ee2b6cb3177",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Count",
        "x": 1050,
        "y": 2520,
        "wires": []
    },
    {
        "id": "7a74f3a34b33552e",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "order": 5,
        "group": "e0644ee2b6cb3177",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Pist_Bck",
        "x": 1060,
        "y": 2560,
        "wires": []
    },
    {
        "id": "b5fdd5a222b349f8",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "order": 6,
        "group": "e0644ee2b6cb3177",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_26_Release_FB",
        "x": 1070,
        "y": 2600,
        "wires": []
    },
    {
        "id": "4e0537d546b5973c",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "order": 9,
        "group": "e0644ee2b6cb3177",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_26_CartDel",
        "x": 1060,
        "y": 2720,
        "wires": []
    },
    {
        "id": "5b21f49b55769677",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "item": "C_26_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_26_CartDel",
        "x": 480,
        "y": 2720,
        "wires": [
            [
                "3a1019fd8e5e9885"
            ]
        ]
    },
    {
        "id": "8ea2dbefbf210643",
        "type": "debug",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "Visi AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 2360,
        "wires": []
    },
    {
        "id": "03f68b5d7eb9ee88",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_26_Cart_Stat\" : false,\n    \"O_26_Cart_Next\" : false,\n    \"O_26_Optic\" : false,\n    \"O_26_Count\" : false,\n    \"O_26_Pist_Bck\" : false,\n    \"F_26_Release_FB\" : false,\n    \"I_26_Cart_Visi\" : false,\n    \"C_26_Request\" : false,\n    \"C_26_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2320,
        "wires": [
            [
                "4cea68d435b5c6e8"
            ]
        ]
    },
    {
        "id": "4cea68d435b5c6e8",
        "type": "trigger",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2320,
        "wires": [
            [
                "1c25a55f50467c9e"
            ]
        ]
    },
    {
        "id": "a6a24402eed2cf97",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "I_26_Cart_Visi",
        "label": "Release cart",
        "tooltip": "",
        "group": "e0644ee2b6cb3177",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2640,
        "wires": [
            [
                "83d37577650c4a9f"
            ]
        ]
    },
    {
        "id": "83d37577650c4a9f",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "item": "I_26_Cart_Visi",
        "datatype": "Boolean",
        "value": "",
        "name": "I_26_Cart_Visi",
        "x": 480,
        "y": 2640,
        "wires": [
            [
                "3a1019fd8e5e9885"
            ]
        ]
    },
    {
        "id": "f4c3b5cbeaccca32",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "C_26_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "e0644ee2b6cb3177",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2680,
        "wires": [
            [
                "e335d85d7b1f4cc5"
            ]
        ]
    },
    {
        "id": "e335d85d7b1f4cc5",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "item": "C_26_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_26_Request",
        "x": 480,
        "y": 2680,
        "wires": [
            [
                "3a1019fd8e5e9885"
            ]
        ]
    },
    {
        "id": "9d217b147541aa04",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "item": "O_27_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Cart_Stat",
        "x": 480,
        "y": 2900,
        "wires": [
            [
                "8eccb2876a7987c5"
            ]
        ]
    },
    {
        "id": "31714f8b488292c9",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "item": "O_27_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Cart_Next",
        "x": 470,
        "y": 2940,
        "wires": [
            [
                "8eccb2876a7987c5"
            ]
        ]
    },
    {
        "id": "172fb315f134d7c2",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "item": "O_27_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Optic",
        "x": 490,
        "y": 2980,
        "wires": [
            [
                "8eccb2876a7987c5"
            ]
        ]
    },
    {
        "id": "caa27755f60f5b39",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "item": "O_27_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Count",
        "x": 490,
        "y": 3020,
        "wires": [
            [
                "8eccb2876a7987c5"
            ]
        ]
    },
    {
        "id": "4af0ce22c6e43b30",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "item": "O_27_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Pist_Bck",
        "x": 480,
        "y": 3060,
        "wires": [
            [
                "8eccb2876a7987c5"
            ]
        ]
    },
    {
        "id": "215fccaba99ad69d",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "item": "F_27_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_27_Release_FB",
        "x": 470,
        "y": 3100,
        "wires": [
            [
                "8eccb2876a7987c5"
            ]
        ]
    },
    {
        "id": "8eccb2876a7987c5",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "Robo AS-i",
        "mode": "link",
        "links": [
            "db0aed47d59b3cfb"
        ],
        "x": 645,
        "y": 3060,
        "wires": []
    },
    {
        "id": "a01297dcb5e06232",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2820,
        "wires": [
            [
                "456a77b54ca35447"
            ]
        ]
    },
    {
        "id": "456a77b54ca35447",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2820,
        "wires": [
            [
                "cc48878d7be50a8f"
            ]
        ]
    },
    {
        "id": "cc48878d7be50a8f",
        "type": "file in",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2820,
        "wires": [
            [
                "ebe00d7e62ca193a"
            ]
        ]
    },
    {
        "id": "ebe00d7e62ca193a",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2820,
        "wires": [
            [
                "7d3df490cf05459e"
            ]
        ]
    },
    {
        "id": "7d3df490cf05459e",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2820,
        "wires": [
            [
                "46e3747d56428bee"
            ]
        ]
    },
    {
        "id": "46e3747d56428bee",
        "type": "OpcUa-Client",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "endpoint": "6f865d6d304fa9c0",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2820,
        "wires": [
            [
                "a07bc1dd90ab69ba",
                "f2463b85963b86c7"
            ],
            [
                "e142cdf4a2d342df"
            ]
        ]
    },
    {
        "id": "76c97e47ad649979",
        "type": "switch",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "Robo AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_27_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_27_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_27_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_27_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_27_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_27_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_27_Cart_Robo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_27_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_27_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 3060,
        "wires": [
            [
                "6b08555b87e38348"
            ],
            [
                "7f70593f1f0340f8"
            ],
            [
                "cc874bac153afb16"
            ],
            [
                "442e10c0de3bad4a"
            ],
            [
                "3a388cf152f2cbc5"
            ],
            [
                "41797c571ddeeca0"
            ],
            [
                "75928dfe9c9e34fd"
            ],
            [
                "262a45f295890cf0"
            ],
            [
                "cbbddb8b3b08e279"
            ]
        ]
    },
    {
        "id": "6b08555b87e38348",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "order": 1,
        "group": "fa86e700a3d847fa",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Cart_Stat",
        "x": 1060,
        "y": 2900,
        "wires": []
    },
    {
        "id": "7f70593f1f0340f8",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "order": 2,
        "group": "fa86e700a3d847fa",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Cart_Next",
        "x": 1070,
        "y": 2940,
        "wires": []
    },
    {
        "id": "cc874bac153afb16",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "order": 3,
        "group": "fa86e700a3d847fa",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Optic",
        "x": 1050,
        "y": 2980,
        "wires": []
    },
    {
        "id": "442e10c0de3bad4a",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "order": 4,
        "group": "fa86e700a3d847fa",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Count",
        "x": 1050,
        "y": 3020,
        "wires": []
    },
    {
        "id": "3a388cf152f2cbc5",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "order": 5,
        "group": "fa86e700a3d847fa",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Pist_Bck",
        "x": 1060,
        "y": 3060,
        "wires": []
    },
    {
        "id": "41797c571ddeeca0",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "order": 6,
        "group": "fa86e700a3d847fa",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_27_Release_FB",
        "x": 1070,
        "y": 3100,
        "wires": []
    },
    {
        "id": "cbbddb8b3b08e279",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "order": 9,
        "group": "fa86e700a3d847fa",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_27_CartDel",
        "x": 1060,
        "y": 3220,
        "wires": []
    },
    {
        "id": "d486cdc5fcf03f8a",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "item": "C_27_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_27_CartDel",
        "x": 480,
        "y": 3220,
        "wires": [
            [
                "8eccb2876a7987c5"
            ]
        ]
    },
    {
        "id": "a07bc1dd90ab69ba",
        "type": "debug",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "Robo AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 2860,
        "wires": []
    },
    {
        "id": "e142cdf4a2d342df",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_27_Cart_Stat\" : false,\n    \"O_27_Cart_Next\" : false,\n    \"O_27_Optic\" : false,\n    \"O_27_Count\" : false,\n    \"O_27_Pist_Bck\" : false,\n    \"F_27_Release_FB\" : false,\n    \"I_27_Cart_Robo\" : false,\n    \"C_27_Request\" : false,\n    \"C_27_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2820,
        "wires": [
            [
                "625e9a2325f89820"
            ]
        ]
    },
    {
        "id": "625e9a2325f89820",
        "type": "trigger",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2820,
        "wires": [
            [
                "a01297dcb5e06232"
            ]
        ]
    },
    {
        "id": "979dca88597c2dbf",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "I_27_Cart_Robo",
        "label": "Release cart",
        "tooltip": "",
        "group": "fa86e700a3d847fa",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 3140,
        "wires": [
            [
                "3eb5d7db3dc2a48e"
            ]
        ]
    },
    {
        "id": "3eb5d7db3dc2a48e",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "item": "I_27_Cart_Robo",
        "datatype": "Boolean",
        "value": "",
        "name": "I_27_Cart_Robo",
        "x": 480,
        "y": 3140,
        "wires": [
            [
                "8eccb2876a7987c5"
            ]
        ]
    },
    {
        "id": "e234656dac0a79f3",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "C_27_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "fa86e700a3d847fa",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 3180,
        "wires": [
            [
                "cc97c468aff3a2fb"
            ]
        ]
    },
    {
        "id": "cc97c468aff3a2fb",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "item": "C_27_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_27_Request",
        "x": 480,
        "y": 3180,
        "wires": [
            [
                "8eccb2876a7987c5"
            ]
        ]
    },
    {
        "id": "a3f53bc42ce41fad",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "item": "O_28_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Cart_Stat",
        "x": 480,
        "y": 3400,
        "wires": [
            [
                "df2919ea5936976c"
            ]
        ]
    },
    {
        "id": "f9cc77d06fd3e1bc",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "item": "O_28_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Cart_Next",
        "x": 470,
        "y": 3440,
        "wires": [
            [
                "df2919ea5936976c"
            ]
        ]
    },
    {
        "id": "3c67ad0713d1c8cc",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "item": "O_28_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Optic",
        "x": 490,
        "y": 3480,
        "wires": [
            [
                "df2919ea5936976c"
            ]
        ]
    },
    {
        "id": "2a2157d634c23e40",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "item": "O_28_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Count",
        "x": 490,
        "y": 3520,
        "wires": [
            [
                "df2919ea5936976c"
            ]
        ]
    },
    {
        "id": "23d6f295f30637d3",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "item": "O_28_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Pist_Bck",
        "x": 480,
        "y": 3560,
        "wires": [
            [
                "df2919ea5936976c"
            ]
        ]
    },
    {
        "id": "f33220b91eeef885",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "item": "F_28_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_28_Release_FB",
        "x": 470,
        "y": 3600,
        "wires": [
            [
                "df2919ea5936976c"
            ]
        ]
    },
    {
        "id": "df2919ea5936976c",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "Robo AS-i",
        "mode": "link",
        "links": [
            "db0aed47d59b3cfb"
        ],
        "x": 645,
        "y": 3560,
        "wires": []
    },
    {
        "id": "3eaa8af543d34269",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3320,
        "wires": [
            [
                "fb2fcdc5eccebf48"
            ]
        ]
    },
    {
        "id": "fb2fcdc5eccebf48",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3320,
        "wires": [
            [
                "cf5197c8af33cb50"
            ]
        ]
    },
    {
        "id": "cf5197c8af33cb50",
        "type": "file in",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3320,
        "wires": [
            [
                "e132df3eef709785"
            ]
        ]
    },
    {
        "id": "e132df3eef709785",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3320,
        "wires": [
            [
                "10bf6e8f3eee2176"
            ]
        ]
    },
    {
        "id": "10bf6e8f3eee2176",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3320,
        "wires": [
            [
                "e703eaf9b0e759fc"
            ]
        ]
    },
    {
        "id": "e703eaf9b0e759fc",
        "type": "OpcUa-Client",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "endpoint": "6f865d6d304fa9c0",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3320,
        "wires": [
            [
                "94ddffc1b6b6e2e9",
                "b022a51ea69867a3"
            ],
            [
                "62e372759cd4f638"
            ]
        ]
    },
    {
        "id": "e480e3692395fb94",
        "type": "switch",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "Stor AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_28_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_28_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_28_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_28_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_28_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_28_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_28_Cart_Stor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_28_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_28_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 3560,
        "wires": [
            [
                "a9f8a87847909d58"
            ],
            [
                "06066b98539320fa"
            ],
            [
                "fd894c0d77c3ad53"
            ],
            [
                "2508c019b5653745"
            ],
            [
                "d41d265d27b95083"
            ],
            [
                "dc5c2e6aa9b9c2ac"
            ],
            [
                "052752e2afbcb57b"
            ],
            [
                "2124eb014aff78a6"
            ],
            [
                "1d8b358698fca3fe"
            ]
        ]
    },
    {
        "id": "a9f8a87847909d58",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "order": 1,
        "group": "ae91ecd607dc7ef6",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Cart_Stat",
        "x": 1060,
        "y": 3400,
        "wires": []
    },
    {
        "id": "06066b98539320fa",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "order": 2,
        "group": "ae91ecd607dc7ef6",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Cart_Next",
        "x": 1070,
        "y": 3440,
        "wires": []
    },
    {
        "id": "fd894c0d77c3ad53",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "order": 3,
        "group": "ae91ecd607dc7ef6",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Optic",
        "x": 1050,
        "y": 3480,
        "wires": []
    },
    {
        "id": "2508c019b5653745",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "order": 4,
        "group": "ae91ecd607dc7ef6",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Count",
        "x": 1050,
        "y": 3520,
        "wires": []
    },
    {
        "id": "d41d265d27b95083",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "order": 5,
        "group": "ae91ecd607dc7ef6",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Pist_Bck",
        "x": 1060,
        "y": 3560,
        "wires": []
    },
    {
        "id": "dc5c2e6aa9b9c2ac",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "order": 6,
        "group": "ae91ecd607dc7ef6",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_28_Release_FB",
        "x": 1070,
        "y": 3600,
        "wires": []
    },
    {
        "id": "1d8b358698fca3fe",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "order": 9,
        "group": "ae91ecd607dc7ef6",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_28_CartDel",
        "x": 1060,
        "y": 3720,
        "wires": []
    },
    {
        "id": "b58fdfe84c6f4ab6",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "item": "C_28_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_28_CartDel",
        "x": 480,
        "y": 3720,
        "wires": [
            [
                "df2919ea5936976c"
            ]
        ]
    },
    {
        "id": "94ddffc1b6b6e2e9",
        "type": "debug",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "Stor AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 3360,
        "wires": []
    },
    {
        "id": "62e372759cd4f638",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_28_Cart_Stat\" : false,\n    \"O_28_Cart_Next\" : false,\n    \"O_28_Optic\" : false,\n    \"O_28_Count\" : false,\n    \"O_28_Pist_Bck\" : false,\n    \"F_28_Release_FB\" : false,\n    \"I_28_Cart_Stor\" : false,\n    \"C_28_Request\" : false,\n    \"C_28_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3320,
        "wires": [
            [
                "851124cf127294f2"
            ]
        ]
    },
    {
        "id": "851124cf127294f2",
        "type": "trigger",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3320,
        "wires": [
            [
                "3eaa8af543d34269"
            ]
        ]
    },
    {
        "id": "2f61694a029459ca",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "I_28_Cart_Stor",
        "label": "Release cart",
        "tooltip": "",
        "group": "ae91ecd607dc7ef6",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 3640,
        "wires": [
            [
                "95206852c1169869"
            ]
        ]
    },
    {
        "id": "95206852c1169869",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "item": "I_28_Cart_Stor",
        "datatype": "Boolean",
        "value": "",
        "name": "I_28_Cart_Stor",
        "x": 480,
        "y": 3640,
        "wires": [
            [
                "df2919ea5936976c"
            ]
        ]
    },
    {
        "id": "d4a759cdd26429e5",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "C_28_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "ae91ecd607dc7ef6",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 3680,
        "wires": [
            [
                "108e18c9bd8479a9"
            ]
        ]
    },
    {
        "id": "108e18c9bd8479a9",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "item": "C_28_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_28_Request",
        "x": 480,
        "y": 3680,
        "wires": [
            [
                "df2919ea5936976c"
            ]
        ]
    },
    {
        "id": "45894727c091b334",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "item": "O_29_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Cart_Stat",
        "x": 480,
        "y": 3900,
        "wires": [
            [
                "082be786361df86a"
            ]
        ]
    },
    {
        "id": "47638821def15c5f",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "item": "O_29_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Cart_Next",
        "x": 470,
        "y": 3940,
        "wires": [
            [
                "082be786361df86a"
            ]
        ]
    },
    {
        "id": "cb692872a650987f",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "item": "O_29_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Optic",
        "x": 490,
        "y": 3980,
        "wires": [
            [
                "082be786361df86a"
            ]
        ]
    },
    {
        "id": "363b6e16620a8780",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "item": "O_29_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Count",
        "x": 490,
        "y": 4020,
        "wires": [
            [
                "082be786361df86a"
            ]
        ]
    },
    {
        "id": "e7bb0cdede38d8e8",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "item": "O_29_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Pist_Bck",
        "x": 480,
        "y": 4060,
        "wires": [
            [
                "082be786361df86a"
            ]
        ]
    },
    {
        "id": "2a5a77f022cf548e",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "item": "F_29_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_29_Release_FB",
        "x": 470,
        "y": 4100,
        "wires": [
            [
                "082be786361df86a"
            ]
        ]
    },
    {
        "id": "082be786361df86a",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "Robo AS-i",
        "mode": "link",
        "links": [
            "db0aed47d59b3cfb"
        ],
        "x": 645,
        "y": 4060,
        "wires": []
    },
    {
        "id": "d5c9c810ee62f615",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3820,
        "wires": [
            [
                "349408ad4977a38c"
            ]
        ]
    },
    {
        "id": "349408ad4977a38c",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3820,
        "wires": [
            [
                "71b74a4e107830eb"
            ]
        ]
    },
    {
        "id": "71b74a4e107830eb",
        "type": "file in",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3820,
        "wires": [
            [
                "548e2759dff79629"
            ]
        ]
    },
    {
        "id": "548e2759dff79629",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3820,
        "wires": [
            [
                "0166b85faa00d985"
            ]
        ]
    },
    {
        "id": "0166b85faa00d985",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3820,
        "wires": [
            [
                "efecb353f5a3b437"
            ]
        ]
    },
    {
        "id": "efecb353f5a3b437",
        "type": "OpcUa-Client",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "endpoint": "6f865d6d304fa9c0",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3820,
        "wires": [
            [
                "e56fcd5d3bbc3bc5",
                "0f3746d489abf8cb"
            ],
            [
                "93917ff04ac10a9b"
            ]
        ]
    },
    {
        "id": "f6da75a21b2ebe61",
        "type": "switch",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "Sort AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_29_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_29_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_29_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_29_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_29_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_29_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_29_Cart_Sort",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_29_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_29_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 4060,
        "wires": [
            [
                "d971a43bb45d3ac8"
            ],
            [
                "9e3c133745b947a4"
            ],
            [
                "ae26c965bba6022e"
            ],
            [
                "c974e16b5c7ee8b5"
            ],
            [
                "063707d01772641a"
            ],
            [
                "9ec2df3be7b68fe7"
            ],
            [
                "7ab44df35f1379a5"
            ],
            [
                "b5ad7554539e47ee"
            ],
            [
                "9f47a09749f422a3"
            ]
        ]
    },
    {
        "id": "d971a43bb45d3ac8",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "order": 1,
        "group": "579fe01414767170",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Cart_Stat",
        "x": 1060,
        "y": 3900,
        "wires": []
    },
    {
        "id": "9e3c133745b947a4",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "order": 2,
        "group": "579fe01414767170",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Cart_Next",
        "x": 1070,
        "y": 3940,
        "wires": []
    },
    {
        "id": "ae26c965bba6022e",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "order": 3,
        "group": "579fe01414767170",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Optic",
        "x": 1050,
        "y": 3980,
        "wires": []
    },
    {
        "id": "c974e16b5c7ee8b5",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "order": 4,
        "group": "579fe01414767170",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Count",
        "x": 1050,
        "y": 4020,
        "wires": []
    },
    {
        "id": "063707d01772641a",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "order": 5,
        "group": "579fe01414767170",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Pist_Bck",
        "x": 1060,
        "y": 4060,
        "wires": []
    },
    {
        "id": "9ec2df3be7b68fe7",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "order": 6,
        "group": "579fe01414767170",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_29_Release_FB",
        "x": 1070,
        "y": 4100,
        "wires": []
    },
    {
        "id": "9f47a09749f422a3",
        "type": "ui_led",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "order": 9,
        "group": "579fe01414767170",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_29_CartDel",
        "x": 1060,
        "y": 4220,
        "wires": []
    },
    {
        "id": "69eb736bdb93ee90",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "item": "C_29_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_29_CartDel",
        "x": 480,
        "y": 4220,
        "wires": [
            [
                "082be786361df86a"
            ]
        ]
    },
    {
        "id": "e56fcd5d3bbc3bc5",
        "type": "debug",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "Sort AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 3860,
        "wires": []
    },
    {
        "id": "93917ff04ac10a9b",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_29_Cart_Stat\" : false,\n    \"O_29_Cart_Next\" : false,\n    \"O_29_Optic\" : false,\n    \"O_29_Count\" : false,\n    \"O_29_Pist_Bck\" : false,\n    \"F_29_Release_FB\" : false,\n    \"I_29_Cart_Sort\" : false,\n    \"C_29_Request\" : false,\n    \"C_29_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3820,
        "wires": [
            [
                "0249a7b027e2bcc4"
            ]
        ]
    },
    {
        "id": "0249a7b027e2bcc4",
        "type": "trigger",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3820,
        "wires": [
            [
                "d5c9c810ee62f615"
            ]
        ]
    },
    {
        "id": "df958bec86d92346",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "I_29_Cart_Sort",
        "label": "Release cart",
        "tooltip": "",
        "group": "579fe01414767170",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 4140,
        "wires": [
            [
                "03e8a68fdf9f7cdb"
            ]
        ]
    },
    {
        "id": "03e8a68fdf9f7cdb",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "item": "I_29_Cart_Sort",
        "datatype": "Boolean",
        "value": "",
        "name": "I_29_Cart_Sort",
        "x": 480,
        "y": 4140,
        "wires": [
            [
                "082be786361df86a"
            ]
        ]
    },
    {
        "id": "c12d318fd480284b",
        "type": "ui_switch",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "C_29_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "579fe01414767170",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 4180,
        "wires": [
            [
                "91d19a7c9197abe7"
            ]
        ]
    },
    {
        "id": "91d19a7c9197abe7",
        "type": "OpcUa-Item",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "item": "C_29_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_29_Request",
        "x": 480,
        "y": 4180,
        "wires": [
            [
                "082be786361df86a"
            ]
        ]
    },
    {
        "id": "83bdcc1ad90beebf",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "a1810abbedc7ee7a",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "3352ed751a275b73",
            "b62247c2cf1d5848",
            "8ab1f3266bc43699",
            "29560d6bf0d7d333",
            "9852c4d103ed155d",
            "602e917f7f2e9a85",
            "3c48f53758e333f3",
            "244ca9afb80038f6"
        ],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "fd82428dca4fdb35",
        "type": "debug",
        "z": "031596afc773e181",
        "g": "a1810abbedc7ee7a",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "c746e6c33abcfc46",
        "type": "function",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "O_20_On",
        "func": "if (msg.topic === \"O_20_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_20_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 620,
        "wires": [
            [
                "46be0b3c47321ae7"
            ]
        ]
    },
    {
        "id": "3352ed751a275b73",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "S7 PS",
        "links": [
            "83bdcc1ad90beebf"
        ],
        "x": 55,
        "y": 660,
        "wires": [
            [
                "c746e6c33abcfc46",
                "9cec5ca28b13d60e",
                "fdd92c7d457a519c"
            ]
        ]
    },
    {
        "id": "9cec5ca28b13d60e",
        "type": "function",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "O_20_Off",
        "func": "if (msg.topic === \"O_20_Off\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_20_Off\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 660,
        "wires": [
            [
                "4d79a1aa40af0fd6"
            ]
        ]
    },
    {
        "id": "fdd92c7d457a519c",
        "type": "function",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "O_20_Controler_On",
        "func": "if (msg.topic === \"O_20_Controler_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_20_Controler_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 700,
        "wires": [
            [
                "3e0f2f876ad1adcf"
            ]
        ]
    },
    {
        "id": "1c3f645463d8156b",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "Sub In PS",
        "links": [
            "ce6365d2dbf160b4"
        ],
        "x": 755,
        "y": 660,
        "wires": [
            [
                "eb030b184116de88"
            ]
        ]
    },
    {
        "id": "ce6365d2dbf160b4",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "Sub Out PS",
        "mode": "link",
        "links": [
            "1c3f645463d8156b"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "8255d5220f02b107",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "Sub In PA",
        "links": [
            "fb8c718100f65f40"
        ],
        "x": 755,
        "y": 920,
        "wires": [
            [
                "f393a12069f134d2"
            ]
        ]
    },
    {
        "id": "fb8c718100f65f40",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "Sub Out PA",
        "mode": "link",
        "links": [
            "8255d5220f02b107"
        ],
        "x": 1295,
        "y": 800,
        "wires": []
    },
    {
        "id": "982d7253bef8a01c",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "Sub In PF",
        "links": [
            "e1dc260a24a3fd81"
        ],
        "x": 755,
        "y": 1180,
        "wires": [
            [
                "6ffd5ac0640e081a"
            ]
        ]
    },
    {
        "id": "e1dc260a24a3fd81",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "Sub Out PF",
        "mode": "link",
        "links": [
            "982d7253bef8a01c"
        ],
        "x": 1295,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b62247c2cf1d5848",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "S7 F",
        "links": [
            "83bdcc1ad90beebf"
        ],
        "x": 55,
        "y": 1180,
        "wires": [
            [
                "e8b965a996fef022",
                "28a8a9ca3a6468c3",
                "ec84ce2e931db653"
            ]
        ]
    },
    {
        "id": "e8b965a996fef022",
        "type": "function",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "F_22_Led_On",
        "func": "if (msg.topic === \"F_22_Led_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_22_Led_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1140,
        "wires": [
            [
                "1fc953cb7ecff440"
            ]
        ]
    },
    {
        "id": "28a8a9ca3a6468c3",
        "type": "function",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "F_22_Led_Off",
        "func": "if (msg.topic === \"F_22_Led_Off\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"F_22_Led_Off\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1180,
        "wires": [
            [
                "59d0592a206603cc"
            ]
        ]
    },
    {
        "id": "ec84ce2e931db653",
        "type": "function",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "F_22_Conveyor",
        "func": "if (msg.topic === \"F_22_Conveyor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_22_Conveyor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1220,
        "wires": [
            [
                "d3af352be922f1c8"
            ]
        ]
    },
    {
        "id": "8ab1f3266bc43699",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "S7 Test AS-i",
        "links": [
            "83bdcc1ad90beebf"
        ],
        "x": 55,
        "y": 1560,
        "wires": [
            [
                "2686d9e7eb3b3e53",
                "4b0687cc17e1e47a",
                "abea1ef4c3eee6fc",
                "dbd9de0cd3b105ac",
                "0af7eeef3a5ad4a6",
                "7a04c5dc309e24ae",
                "95ce19faec05f2f7"
            ]
        ]
    },
    {
        "id": "2686d9e7eb3b3e53",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "C_24_CartDel",
        "func": "if (msg.topic === \"C_24_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"C_24_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1720,
        "wires": [
            [
                "515532ea38c7e723"
            ]
        ]
    },
    {
        "id": "1529384fac3a0774",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "Sub In Test AS-i",
        "links": [
            "1761c8f5e86c9f75"
        ],
        "x": 755,
        "y": 1560,
        "wires": [
            [
                "eacfd2ea77a1ed67"
            ]
        ]
    },
    {
        "id": "1761c8f5e86c9f75",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "Sub Out Test AS-i",
        "mode": "link",
        "links": [
            "1529384fac3a0774"
        ],
        "x": 1295,
        "y": 1320,
        "wires": []
    },
    {
        "id": "24f8ca3fa2afb660",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "O_25_Cart_Stat",
        "func": "if (msg.topic === \"O_25_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_25_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1900,
        "wires": [
            [
                "825ffc2e7b1167f1"
            ]
        ]
    },
    {
        "id": "1bd2422724702683",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "O_25_Cart_Next",
        "func": "if (msg.topic === \"O_25_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_25_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1940,
        "wires": [
            [
                "9425a164614ea230"
            ]
        ]
    },
    {
        "id": "30964a991219fb0b",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "O_25_Optic",
        "func": "if (msg.topic === \"O_25_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_25_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1980,
        "wires": [
            [
                "53b834073d2cb28a"
            ]
        ]
    },
    {
        "id": "dc73e41a38a3506a",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "O_25_Count",
        "func": "if (msg.topic === \"O_25_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_25_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2020,
        "wires": [
            [
                "1a5b1f46bcfe9883"
            ]
        ]
    },
    {
        "id": "d5699df020683605",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "O_25_Pist_Bck",
        "func": "if (msg.topic === \"O_25_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_25_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2060,
        "wires": [
            [
                "b2648239d0ebda1a"
            ]
        ]
    },
    {
        "id": "95ba0be057e0ddf4",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "F_25_Release_FB",
        "func": "if (msg.topic === \"F_25_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg}\n\nif (msg.topic === \"F_25_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2100,
        "wires": [
            [
                "8fb9b2cbbc8989ab"
            ]
        ]
    },
    {
        "id": "45a1550457e28f3c",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "C_25_CartDel",
        "func": "if (msg.topic === \"C_25_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg}\n\nif (msg.topic === \"C_25_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2220,
        "wires": [
            [
                "b850531619e36be2"
            ]
        ]
    },
    {
        "id": "29560d6bf0d7d333",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "S7 Proc AS-i",
        "links": [
            "83bdcc1ad90beebf"
        ],
        "x": 55,
        "y": 2060,
        "wires": [
            [
                "24f8ca3fa2afb660",
                "1bd2422724702683",
                "30964a991219fb0b",
                "dc73e41a38a3506a",
                "d5699df020683605",
                "95ba0be057e0ddf4",
                "45a1550457e28f3c"
            ]
        ]
    },
    {
        "id": "8d38e014ea723a4b",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "O_26_Cart_Stat",
        "func": "if (msg.topic === \"O_26_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_26_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2400,
        "wires": [
            [
                "8b7ef40bf4e0bc00"
            ]
        ]
    },
    {
        "id": "6e716330516b6de7",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "O_26_Cart_Next",
        "func": "if (msg.topic === \"O_26_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_26_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2440,
        "wires": [
            [
                "c852a3be9a97197a"
            ]
        ]
    },
    {
        "id": "19ce54687eee0871",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "O_26_Optic",
        "func": "if (msg.topic === \"O_26_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_26_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2480,
        "wires": [
            [
                "648c2ff3e67a6b88"
            ]
        ]
    },
    {
        "id": "970f192805a0f3f1",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "O_26_Count",
        "func": "if (msg.topic === \"O_26_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_26_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2520,
        "wires": [
            [
                "b6270b3d8557f01f"
            ]
        ]
    },
    {
        "id": "7ffb8df61bc20f5c",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "O_26_Pist_Bck",
        "func": "if (msg.topic === \"O_26_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_26_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2560,
        "wires": [
            [
                "bf55aac4cadad7f6"
            ]
        ]
    },
    {
        "id": "674bf0cc2f6990e7",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "F_26_Release_FB",
        "func": "if (msg.topic === \"F_26_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_26_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2600,
        "wires": [
            [
                "cbbb471fe410c6e1"
            ]
        ]
    },
    {
        "id": "27573381984fdff1",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "C_26_CartDel",
        "func": "if (msg.topic === \"C_26_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg}\n\nif (msg.topic === \"C_26_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2720,
        "wires": [
            [
                "5b21f49b55769677"
            ]
        ]
    },
    {
        "id": "9852c4d103ed155d",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "S7 Visi AS-i",
        "links": [
            "83bdcc1ad90beebf"
        ],
        "x": 55,
        "y": 2560,
        "wires": [
            [
                "8d38e014ea723a4b",
                "6e716330516b6de7",
                "19ce54687eee0871",
                "970f192805a0f3f1",
                "7ffb8df61bc20f5c",
                "674bf0cc2f6990e7",
                "27573381984fdff1"
            ]
        ]
    },
    {
        "id": "c9cbb1e11c32d57d",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "O_27_Cart_Stat",
        "func": "if (msg.topic === \"O_27_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_27_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2900,
        "wires": [
            [
                "9d217b147541aa04"
            ]
        ]
    },
    {
        "id": "b006e5dcd1aa01bb",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "O_27_Cart_Next",
        "func": "if (msg.topic === \"O_27_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_27_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2940,
        "wires": [
            [
                "31714f8b488292c9"
            ]
        ]
    },
    {
        "id": "323a0ded9be0e36d",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "O_27_Optic",
        "func": "if (msg.topic === \"O_27_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_27_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2980,
        "wires": [
            [
                "172fb315f134d7c2"
            ]
        ]
    },
    {
        "id": "a23fa7eeda9f8976",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "O_27_Count",
        "func": "if (msg.topic === \"O_27_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_27_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3020,
        "wires": [
            [
                "caa27755f60f5b39"
            ]
        ]
    },
    {
        "id": "0b1c74d6ae9da724",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "O_27_Pist_Bck",
        "func": "if (msg.topic === \"O_27_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_27_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3060,
        "wires": [
            [
                "4af0ce22c6e43b30"
            ]
        ]
    },
    {
        "id": "f37356ce27d61f4d",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "F_27_Release_FB",
        "func": "if (msg.topic === \"F_27_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_27_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3100,
        "wires": [
            [
                "215fccaba99ad69d"
            ]
        ]
    },
    {
        "id": "080f0127487a01ed",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "C_27_CartDel",
        "func": "if (msg.topic === \"C_27_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"C_27_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3220,
        "wires": [
            [
                "d486cdc5fcf03f8a"
            ]
        ]
    },
    {
        "id": "602e917f7f2e9a85",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "S7 Robo AS-i",
        "links": [
            "83bdcc1ad90beebf"
        ],
        "x": 55,
        "y": 3060,
        "wires": [
            [
                "c9cbb1e11c32d57d",
                "b006e5dcd1aa01bb",
                "323a0ded9be0e36d",
                "a23fa7eeda9f8976",
                "0b1c74d6ae9da724",
                "f37356ce27d61f4d",
                "080f0127487a01ed"
            ]
        ]
    },
    {
        "id": "4910e585f85c5009",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "O_28_Cart_Stat",
        "func": "if (msg.topic === \"O_28_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3400,
        "wires": [
            [
                "a3f53bc42ce41fad"
            ]
        ]
    },
    {
        "id": "a4d219e66bddcc1b",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "O_28_Cart_Next",
        "func": "if (msg.topic === \"O_28_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3440,
        "wires": [
            [
                "f9cc77d06fd3e1bc"
            ]
        ]
    },
    {
        "id": "b7e4f1e496c461d7",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "O_28_Optic",
        "func": "if (msg.topic === \"O_28_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3480,
        "wires": [
            [
                "3c67ad0713d1c8cc"
            ]
        ]
    },
    {
        "id": "131568bf88704331",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "O_28_Count",
        "func": "if (msg.topic === \"O_28_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3520,
        "wires": [
            [
                "2a2157d634c23e40"
            ]
        ]
    },
    {
        "id": "756697f7aed9fd9d",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "O_28_Pist_Bck",
        "func": "if (msg.topic === \"O_28_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3560,
        "wires": [
            [
                "23d6f295f30637d3"
            ]
        ]
    },
    {
        "id": "3cd4503240166c04",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "F_28_Release_FB",
        "func": "if (msg.topic === \"F_28_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_28_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3600,
        "wires": [
            [
                "f33220b91eeef885"
            ]
        ]
    },
    {
        "id": "069a680c5bab7c4f",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "C_28_CartDel",
        "func": "if (msg.topic === \"C_28_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"C_28_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3720,
        "wires": [
            [
                "b58fdfe84c6f4ab6"
            ]
        ]
    },
    {
        "id": "3c48f53758e333f3",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "S7 Stor AS-i",
        "links": [
            "83bdcc1ad90beebf"
        ],
        "x": 55,
        "y": 3560,
        "wires": [
            [
                "4910e585f85c5009",
                "a4d219e66bddcc1b",
                "b7e4f1e496c461d7",
                "131568bf88704331",
                "756697f7aed9fd9d",
                "3cd4503240166c04",
                "069a680c5bab7c4f"
            ]
        ]
    },
    {
        "id": "77aada15c99710b4",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "O_29_Cart_Stat",
        "func": "if (msg.topic === \"O_29_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3900,
        "wires": [
            [
                "45894727c091b334"
            ]
        ]
    },
    {
        "id": "eca2603d513322c3",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "O_29_Cart_Next",
        "func": "if (msg.topic === \"O_29_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3940,
        "wires": [
            [
                "47638821def15c5f"
            ]
        ]
    },
    {
        "id": "ede6f8735a27d09d",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "O_29_Optic",
        "func": "if (msg.topic === \"O_29_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3980,
        "wires": [
            [
                "cb692872a650987f"
            ]
        ]
    },
    {
        "id": "a3e5c4a1b28c5593",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "O_29_Count",
        "func": "if (msg.topic === \"O_29_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 4020,
        "wires": [
            [
                "363b6e16620a8780"
            ]
        ]
    },
    {
        "id": "defb0480424a862a",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "O_29_Pist_Bck",
        "func": "if (msg.topic === \"O_29_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4060,
        "wires": [
            [
                "e7bb0cdede38d8e8"
            ]
        ]
    },
    {
        "id": "794c5ce2bdc6c6ea",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "F_29_Release_FB",
        "func": "if (msg.topic === \"F_29_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_29_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 4100,
        "wires": [
            [
                "2a5a77f022cf548e"
            ]
        ]
    },
    {
        "id": "f1a846cbc862e3ad",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "C_29_CartDel",
        "func": "if (msg.topic === \"C_29_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"C_29_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4220,
        "wires": [
            [
                "69eb736bdb93ee90"
            ]
        ]
    },
    {
        "id": "244ca9afb80038f6",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "S7 Sort AS-i",
        "links": [
            "83bdcc1ad90beebf"
        ],
        "x": 55,
        "y": 4060,
        "wires": [
            [
                "77aada15c99710b4",
                "eca2603d513322c3",
                "ede6f8735a27d09d",
                "a3e5c4a1b28c5593",
                "defb0480424a862a",
                "794c5ce2bdc6c6ea",
                "f1a846cbc862e3ad"
            ]
        ]
    },
    {
        "id": "e6331f43308266f2",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "Sub In Proc AS-i",
        "links": [
            "81ab885d41ac9c0e"
        ],
        "x": 754.9999618530273,
        "y": 2060.9998321533203,
        "wires": [
            [
                "2243173182fb4df4"
            ]
        ]
    },
    {
        "id": "81ab885d41ac9c0e",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "Sub Out Proc AS-i",
        "mode": "link",
        "links": [
            "e6331f43308266f2"
        ],
        "x": 1295,
        "y": 1820,
        "wires": []
    },
    {
        "id": "ad4e66e6577beef0",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "Sub In Visi AS-i",
        "links": [
            "14b3754293efefb6"
        ],
        "x": 755,
        "y": 2560,
        "wires": [
            [
                "739a12d5a4585b9f"
            ]
        ]
    },
    {
        "id": "14b3754293efefb6",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "Sub Out Visi AS-i",
        "mode": "link",
        "links": [
            "ad4e66e6577beef0"
        ],
        "x": 1295,
        "y": 2320,
        "wires": []
    },
    {
        "id": "d2471ae7bc9b098f",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "Sub In Robo AS-i",
        "links": [
            "f2463b85963b86c7"
        ],
        "x": 755,
        "y": 3060,
        "wires": [
            [
                "76c97e47ad649979"
            ]
        ]
    },
    {
        "id": "f2463b85963b86c7",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "Sub Out Robo AS-i",
        "mode": "link",
        "links": [
            "d2471ae7bc9b098f"
        ],
        "x": 1295,
        "y": 2820,
        "wires": []
    },
    {
        "id": "2a0ad375b354defa",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "Sub In Stor AS-i",
        "links": [
            "b022a51ea69867a3"
        ],
        "x": 755,
        "y": 3560,
        "wires": [
            [
                "e480e3692395fb94"
            ]
        ]
    },
    {
        "id": "b022a51ea69867a3",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "Sub Out Stor AS-i",
        "mode": "link",
        "links": [
            "2a0ad375b354defa"
        ],
        "x": 1295,
        "y": 3320,
        "wires": []
    },
    {
        "id": "931c8e286ec2663d",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "Sub In Sort AS-i",
        "links": [
            "0f3746d489abf8cb"
        ],
        "x": 755,
        "y": 4060,
        "wires": [
            [
                "f6da75a21b2ebe61"
            ]
        ]
    },
    {
        "id": "0f3746d489abf8cb",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "Sub Out Sort AS-i",
        "mode": "link",
        "links": [
            "931c8e286ec2663d"
        ],
        "x": 1295,
        "y": 3820,
        "wires": []
    },
    {
        "id": "4b0687cc17e1e47a",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "O_24_Cart_Stat",
        "func": "if (msg.topic === \"O_24_Cart_Stat\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_24_Cart_Stat\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1400,
        "wires": [
            [
                "081514c7a33ef596"
            ]
        ]
    },
    {
        "id": "abea1ef4c3eee6fc",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "O_24_Cart_Next",
        "func": "if (msg.topic === \"O_24_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_24_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1440,
        "wires": [
            [
                "6300963e665d06f7"
            ]
        ]
    },
    {
        "id": "dbd9de0cd3b105ac",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "O_24_Optic",
        "func": "if (msg.topic === \"O_24_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_24_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1480,
        "wires": [
            [
                "58694d22ad138641"
            ]
        ]
    },
    {
        "id": "0af7eeef3a5ad4a6",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "O_24_Count",
        "func": "if (msg.topic === \"O_24_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_24_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1520,
        "wires": [
            [
                "5781712443345ead"
            ]
        ]
    },
    {
        "id": "7a04c5dc309e24ae",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "O_24_Pist_Bck",
        "func": "if (msg.topic === \"O_24_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_24_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1560,
        "wires": [
            [
                "1ea386b7ce9a9fb2"
            ]
        ]
    },
    {
        "id": "95ce19faec05f2f7",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "F_24_Release_FB",
        "func": "if (msg.topic === \"F_24_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_24_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1600,
        "wires": [
            [
                "51c1c8c5fe7a2be9"
            ]
        ]
    },
    {
        "id": "f9b5544c33e367a6",
        "type": "function",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "d04c7994e5bbc98f"
            ]
        ]
    },
    {
        "id": "502003b2e3222535",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "73f9a10aa31c604b",
        "name": "Read S",
        "links": [
            "d04c7994e5bbc98f"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "dc764063241c69e4"
            ]
        ]
    },
    {
        "id": "d04c7994e5bbc98f",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "1b314a407f3f39f5",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "502003b2e3222535",
            "99b2a7afc08c91a9",
            "14d508334bf369b2",
            "9ce295adaa089767",
            "caa151375848f76b",
            "975c9e8ac95a13a1",
            "d4d37f199c7af037",
            "6fde1badbb89a63e",
            "0d09faec86a1b67c"
        ],
        "x": 1115,
        "y": 380,
        "wires": []
    },
    {
        "id": "99b2a7afc08c91a9",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "Read A",
        "links": [
            "d04c7994e5bbc98f"
        ],
        "x": 55,
        "y": 800,
        "wires": [
            [
                "14aaa2467be8b970"
            ]
        ]
    },
    {
        "id": "14d508334bf369b2",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "52682c4bc5697699",
        "name": "Read F",
        "links": [
            "d04c7994e5bbc98f"
        ],
        "x": 55,
        "y": 1060,
        "wires": [
            [
                "21f1fd12f99cd8d3"
            ]
        ]
    },
    {
        "id": "9ce295adaa089767",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "Read Test AS-i",
        "links": [
            "d04c7994e5bbc98f"
        ],
        "x": 55,
        "y": 1320,
        "wires": [
            [
                "cf303a87c0cfffb1"
            ]
        ]
    },
    {
        "id": "caa151375848f76b",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "Read Proc AS-i",
        "links": [
            "d04c7994e5bbc98f"
        ],
        "x": 55,
        "y": 1820,
        "wires": [
            [
                "1896e15fa663b3f9"
            ]
        ]
    },
    {
        "id": "975c9e8ac95a13a1",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "Read Visi AS-i",
        "links": [
            "d04c7994e5bbc98f"
        ],
        "x": 55,
        "y": 2320,
        "wires": [
            [
                "03f68b5d7eb9ee88"
            ]
        ]
    },
    {
        "id": "d4d37f199c7af037",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "Read Robo AS-i",
        "links": [
            "d04c7994e5bbc98f"
        ],
        "x": 55,
        "y": 2820,
        "wires": [
            [
                "e142cdf4a2d342df"
            ]
        ]
    },
    {
        "id": "6fde1badbb89a63e",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "Read Stor AS-i",
        "links": [
            "d04c7994e5bbc98f"
        ],
        "x": 55,
        "y": 3320,
        "wires": [
            [
                "62e372759cd4f638"
            ]
        ]
    },
    {
        "id": "0d09faec86a1b67c",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "Read Sort AS-i",
        "links": [
            "d04c7994e5bbc98f"
        ],
        "x": 55,
        "y": 3820,
        "wires": [
            [
                "93917ff04ac10a9b"
            ]
        ]
    },
    {
        "id": "0d243cc395fb0062",
        "type": "mqtt in",
        "z": "031596afc773e181",
        "g": "a1810abbedc7ee7a",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b7ac41c0bcdf40b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "523e7f4ea14c875e"
            ]
        ]
    },
    {
        "id": "523e7f4ea14c875e",
        "type": "function",
        "z": "031596afc773e181",
        "g": "a1810abbedc7ee7a",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "83bdcc1ad90beebf",
                "fd82428dca4fdb35"
            ]
        ]
    },
    {
        "id": "e5e3de18228c26c8",
        "type": "function",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "I_20_Led_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 880,
        "wires": [
            [
                "4c289c9266f456b3"
            ]
        ]
    },
    {
        "id": "0e396a363345616e",
        "type": "function",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "I_20_Led_Off",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\n\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\n\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 920,
        "wires": [
            [
                "4c289c9266f456b3"
            ]
        ]
    },
    {
        "id": "d7ac0fd949d3d196",
        "type": "function",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "I_20_Conveyor",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\n\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\n\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 960,
        "wires": [
            [
                "4c289c9266f456b3"
            ]
        ]
    },
    {
        "id": "1c5cdf8c27cab469",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "I_24_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1640,
        "wires": [
            [
                "422e4e26b0f2d098"
            ]
        ]
    },
    {
        "id": "fd2ec37401123724",
        "type": "function",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "C_24_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1680,
        "wires": [
            [
                "422e4e26b0f2d098"
            ]
        ]
    },
    {
        "id": "373835708d4fbe41",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "I_25_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2140,
        "wires": [
            [
                "af738fdc7db8313b"
            ]
        ]
    },
    {
        "id": "2a6806767e1ce01e",
        "type": "function",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "C_25_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2180,
        "wires": [
            [
                "af738fdc7db8313b"
            ]
        ]
    },
    {
        "id": "07134aeea497c709",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "I_26_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2640,
        "wires": [
            [
                "39979656e6298a6e"
            ]
        ]
    },
    {
        "id": "78bb3a6c9a9a3c5c",
        "type": "function",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "C_26_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2680,
        "wires": [
            [
                "39979656e6298a6e"
            ]
        ]
    },
    {
        "id": "75928dfe9c9e34fd",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "I_27_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3140,
        "wires": [
            [
                "5dba918ec342e1ad"
            ]
        ]
    },
    {
        "id": "262a45f295890cf0",
        "type": "function",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "C_27_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3180,
        "wires": [
            [
                "5dba918ec342e1ad"
            ]
        ]
    },
    {
        "id": "052752e2afbcb57b",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "I_28_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3640,
        "wires": [
            [
                "6d6cda9e05d30650"
            ]
        ]
    },
    {
        "id": "2124eb014aff78a6",
        "type": "function",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "C_28_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3680,
        "wires": [
            [
                "6d6cda9e05d30650"
            ]
        ]
    },
    {
        "id": "7ab44df35f1379a5",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "I_29_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 4140,
        "wires": [
            [
                "0e5f45df0ab761e3"
            ]
        ]
    },
    {
        "id": "b5ad7554539e47ee",
        "type": "function",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "C_29_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 4180,
        "wires": [
            [
                "0e5f45df0ab761e3"
            ]
        ]
    },
    {
        "id": "fba629ad8f8ba150",
        "type": "link in",
        "z": "031596afc773e181",
        "g": "a1810abbedc7ee7a",
        "name": "S7 Actuators",
        "links": [
            "0e5f45df0ab761e3",
            "6d6cda9e05d30650",
            "5dba918ec342e1ad",
            "39979656e6298a6e",
            "af738fdc7db8313b",
            "422e4e26b0f2d098",
            "4c289c9266f456b3"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "3add7c4ddc8cf46d"
            ]
        ]
    },
    {
        "id": "3add7c4ddc8cf46d",
        "type": "mqtt out",
        "z": "031596afc773e181",
        "g": "a1810abbedc7ee7a",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b7ac41c0bcdf40b1",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "0e5f45df0ab761e3",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "b2ad3f8d1c4d1fa2",
        "name": "S7 Sort AS-i",
        "mode": "link",
        "links": [
            "fba629ad8f8ba150"
        ],
        "x": 1235,
        "y": 4060,
        "wires": []
    },
    {
        "id": "6d6cda9e05d30650",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "f8ac0186fc6ea09c",
        "name": "S7 Stor AS-i",
        "mode": "link",
        "links": [
            "fba629ad8f8ba150"
        ],
        "x": 1235,
        "y": 3560,
        "wires": []
    },
    {
        "id": "5dba918ec342e1ad",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "bd4a1480f91b9ac0",
        "name": "S7 Robo AS-i",
        "mode": "link",
        "links": [
            "fba629ad8f8ba150"
        ],
        "x": 1235,
        "y": 3060,
        "wires": []
    },
    {
        "id": "39979656e6298a6e",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "7e472c15e1740ec1",
        "name": "S7 Visi AS-i",
        "mode": "link",
        "links": [
            "fba629ad8f8ba150"
        ],
        "x": 1235,
        "y": 2560,
        "wires": []
    },
    {
        "id": "af738fdc7db8313b",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "fc4827def10c94bc",
        "name": "S7 Proc AS-i",
        "mode": "link",
        "links": [
            "fba629ad8f8ba150"
        ],
        "x": 1235,
        "y": 2060,
        "wires": []
    },
    {
        "id": "422e4e26b0f2d098",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "015850cea3f2e53d",
        "name": "S7 Test AS-i",
        "mode": "link",
        "links": [
            "fba629ad8f8ba150"
        ],
        "x": 1235,
        "y": 1560,
        "wires": []
    },
    {
        "id": "4c289c9266f456b3",
        "type": "link out",
        "z": "031596afc773e181",
        "g": "68eb1ab7189a6e7e",
        "name": "S7 A",
        "mode": "link",
        "links": [
            "fba629ad8f8ba150"
        ],
        "x": 1235,
        "y": 920,
        "wires": []
    },
    {
        "id": "b43b4b19f9bfae42",
        "type": "function",
        "z": "ec15050b70975098",
        "g": "29892d1461924b63",
        "name": "Change Tag ID",
        "func": "msg.payload = \"tag.write_id(new_tag_id=\" + msg.payload.id + \")\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 360,
        "wires": [
            [
                "de13c0f3dcd1c685",
                "20085908290ab7b5"
            ]
        ]
    },
    {
        "id": "81ebd6e4ef142f3b",
        "type": "function",
        "z": "ec15050b70975098",
        "g": "7a11315e649378dd",
        "name": "Check Tag ID",
        "func": "msg.payload = \"tag.read_id()\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 340,
        "wires": [
            [
                "dc79484fb7604d92"
            ]
        ]
    },
    {
        "id": "dc79484fb7604d92",
        "type": "tcp request",
        "z": "ec15050b70975098",
        "g": "7a11315e649378dd",
        "name": "RFID Write",
        "server": "200.145.26.38",
        "port": "50007",
        "out": "sit",
        "ret": "string",
        "splitc": " ",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 510,
        "y": 340,
        "wires": [
            [
                "b558f938c6cee2f2"
            ]
        ]
    },
    {
        "id": "b558f938c6cee2f2",
        "type": "switch",
        "z": "ec15050b70975098",
        "g": "7a11315e649378dd",
        "name": "Sucess/Error",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "tag_id=",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 340,
        "wires": [
            [
                "c3037ce505fc9f9a"
            ],
            [
                "76e28b166105e9a1"
            ]
        ]
    },
    {
        "id": "c3037ce505fc9f9a",
        "type": "split",
        "z": "ec15050b70975098",
        "g": "7a11315e649378dd",
        "name": "Sucess",
        "splt": "=",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 860,
        "y": 320,
        "wires": [
            [
                "9c26da7a85c9a965"
            ]
        ]
    },
    {
        "id": "76e28b166105e9a1",
        "type": "function",
        "z": "ec15050b70975098",
        "g": "7a11315e649378dd",
        "name": "Error",
        "func": "msg.payload = \"Nenhuma Tag no alcance da antena\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 360,
        "wires": [
            [
                "9c26da7a85c9a965"
            ]
        ]
    },
    {
        "id": "de13c0f3dcd1c685",
        "type": "tcp request",
        "z": "ec15050b70975098",
        "g": "29892d1461924b63",
        "name": "RFID Write",
        "server": "200.145.26.38",
        "port": "50007",
        "out": "sit",
        "ret": "string",
        "splitc": " ",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 1610,
        "y": 360,
        "wires": [
            [
                "25a519b164e261ac"
            ]
        ]
    },
    {
        "id": "25a519b164e261ac",
        "type": "switch",
        "z": "ec15050b70975098",
        "g": "29892d1461924b63",
        "name": "Sucess/Error",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1790,
        "y": 360,
        "wires": [
            [
                "127817e4a064e51d"
            ],
            [
                "bc3bc81a0289458e"
            ]
        ]
    },
    {
        "id": "127817e4a064e51d",
        "type": "function",
        "z": "ec15050b70975098",
        "g": "29892d1461924b63",
        "name": "Sucess",
        "func": "msg.payload = \"Tag ID changed\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 340,
        "wires": [
            [
                "a8a611dbf0f44d40",
                "e603737fdc4af853"
            ]
        ]
    },
    {
        "id": "bc3bc81a0289458e",
        "type": "function",
        "z": "ec15050b70975098",
        "g": "29892d1461924b63",
        "name": "Error",
        "func": "msg.payload = \"Error\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 380,
        "wires": [
            [
                "a8a611dbf0f44d40"
            ]
        ]
    },
    {
        "id": "5469715450f954eb",
        "type": "join",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "name": "Collects Messages for display",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "10",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1240,
        "y": 140,
        "wires": [
            [
                "6d9a5c014bbdfc72"
            ]
        ]
    },
    {
        "id": "46fcd9ce06dc90fd",
        "type": "tcp in",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "name": "RFID Read",
        "server": "client",
        "host": "200.145.26.38",
        "port": "50008",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "8655fef1905a53bd"
            ]
        ]
    },
    {
        "id": "5ce657fe45f5278d",
        "type": "split",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "name": "String Treatment 1",
        "splt": "\\r",
        "spltType": "str",
        "arraySplt": "2",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 610,
        "y": 60,
        "wires": [
            [
                "95d208697d49e7d8"
            ]
        ]
    },
    {
        "id": "0b235393578db883",
        "type": "switch",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "name": "String Treatment 3",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 140,
        "wires": [
            [
                "f8743ce6fc8a052d"
            ]
        ]
    },
    {
        "id": "f8743ce6fc8a052d",
        "type": "function",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "name": "Initialization",
        "func": "msg.payload = \n    \"setup.operating_mode=autonomous\\r\\n\\\n    modem.protocol.isoc.physical.set(tari=tari_12_50, return_link_freq=LF160, data_1_length=d1_len_20, rt_modulation=rt_mod_pr, tr_encoding=tr_enc_fm0, interrogator_mode=dense)\\r\\n\\\n    antennas.1.conducted_power=240\\r\\n\\\n    antennas.2.conducted_power=180\\r\\n\\\n    antennas.3.conducted_power=200\\r\\n\\\n    antennas.4.conducted_power=240\\r\\n\\\n    tag.reporting.depart_fields=tag_id antenna time user_data\\r\\n\\\n    tag.reporting.arrive_fields=tag_id antenna time user_data\\r\\n\\\n    reader.events.register(\" + msg.payload + \", event.tag.arrive)\\r\\n\\\n    reader.events.register(\" + msg.payload + \", event.tag.depart)\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 140,
        "wires": [
            [
                "0610a3f1ee2f3158",
                "f39f737536f4cdab"
            ]
        ]
    },
    {
        "id": "0610a3f1ee2f3158",
        "type": "tcp request",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "name": "RFID Write",
        "server": "200.145.26.38",
        "port": "50007",
        "out": "sit",
        "ret": "string",
        "splitc": " ",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 990,
        "y": 140,
        "wires": [
            [
                "5469715450f954eb"
            ]
        ]
    },
    {
        "id": "d8bab5bc84ee373c",
        "type": "link out",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "name": "RFID Read",
        "mode": "link",
        "links": [
            "b63824e4fceb4029",
            "af1fdde4ace7fd04"
        ],
        "x": 685,
        "y": 220,
        "wires": []
    },
    {
        "id": "95d208697d49e7d8",
        "type": "split",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "name": "String Treatment 2",
        "splt": "event.connection id = ",
        "spltType": "str",
        "arraySplt": "2",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 610,
        "y": 100,
        "wires": [
            [
                "0b235393578db883"
            ]
        ]
    },
    {
        "id": "c68ee5ca7514984d",
        "type": "inject",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "name": "",
        "props": [
            {
                "p": "complete",
                "v": ".",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "x": 1010,
        "y": 80,
        "wires": [
            [
                "5469715450f954eb"
            ]
        ]
    },
    {
        "id": "b63824e4fceb4029",
        "type": "link in",
        "z": "ec15050b70975098",
        "g": "b7258161d47d7aa6",
        "name": "RFID Read",
        "links": [
            "d8bab5bc84ee373c"
        ],
        "x": 55,
        "y": 520,
        "wires": [
            [
                "97cb98c576764175"
            ]
        ]
    },
    {
        "id": "97cb98c576764175",
        "type": "switch",
        "z": "ec15050b70975098",
        "g": "b7258161d47d7aa6",
        "name": "Slipt by Antenna",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "antenna=1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 180,
        "y": 520,
        "wires": [
            [
                "90a34c6e57efea2b"
            ],
            [
                "8a5a54db230795ba"
            ],
            [
                "fddafa824f791bf3"
            ],
            [
                "c21e2990a458f990"
            ]
        ]
    },
    {
        "id": "6a129908ec15ad56",
        "type": "link in",
        "z": "ec15050b70975098",
        "name": "link in 8",
        "links": [],
        "x": 245,
        "y": 1460,
        "wires": [
            [
                "18def0a0a4f20aea"
            ]
        ]
    },
    {
        "id": "7985d3ceaefed05b",
        "type": "switch",
        "z": "ec15050b70975098",
        "name": "Escreve Antena 1",
        "property": "payload.variableName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "_W_TagID",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "_W_UserData",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 1440,
        "wires": [
            [
                "4ae7e624aed14eb2"
            ],
            [
                "dc70b2ab7b6f4201"
            ]
        ]
    },
    {
        "id": "18def0a0a4f20aea",
        "type": "switch",
        "z": "ec15050b70975098",
        "name": "Escreve do Server OPCUA",
        "property": "payload.variableName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "_W_",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 240,
        "y": 1520,
        "wires": [
            [
                "3505e39b58c76db7"
            ]
        ]
    },
    {
        "id": "4ae7e624aed14eb2",
        "type": "function",
        "z": "ec15050b70975098",
        "name": "Escreve/Altera Tag ID",
        "func": "msg.payload = \"tag.write_id(new_tag_id=\" + msg.payload.variableValue + \", antenna=\" + msg.payload.antena + \")\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 1420,
        "wires": [
            [
                "56920c8cacf90dbd",
                "9db2f5f63a4ed329",
                "1e27fe21fc593a9e"
            ]
        ]
    },
    {
        "id": "dc70b2ab7b6f4201",
        "type": "function",
        "z": "ec15050b70975098",
        "name": "Escreve/Altera User Data",
        "func": "msg.payload = \"tag.write_user_data(user_data=\" + msg.payload.variableValue + \", antenna=\"+ msg.payload.antena +\" )\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1640,
        "wires": [
            [
                "fdf74148b0eca986",
                "9db2f5f63a4ed329"
            ]
        ]
    },
    {
        "id": "9db2f5f63a4ed329",
        "type": "tcp request",
        "z": "ec15050b70975098",
        "name": "RFID Escrita",
        "server": "200.145.26.38",
        "port": "50007",
        "out": "sit",
        "ret": "string",
        "splitc": " ",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 1910,
        "y": 1540,
        "wires": [
            [
                "3bb32419822dbd08",
                "6e0bfee6d9e4b704"
            ]
        ]
    },
    {
        "id": "0167a50dc82498ef",
        "type": "switch",
        "z": "ec15050b70975098",
        "name": "Separa os dados escritos por antena",
        "property": "payload.variableName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Antena1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Antena2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Antena3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Antena4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 770,
        "y": 1520,
        "wires": [
            [
                "61d417fb4de7e147"
            ],
            [
                "4987013b24438dec"
            ],
            [
                "7efb09db3341e192"
            ],
            [
                "ae425d24a7cf71a2"
            ]
        ]
    },
    {
        "id": "bce954ab8e4903a2",
        "type": "switch",
        "z": "ec15050b70975098",
        "name": "Escreve Antena 2",
        "property": "payload.variableName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "_W_TagID",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "_W_UserData",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 1500,
        "wires": [
            [
                "4ae7e624aed14eb2"
            ],
            [
                "dc70b2ab7b6f4201"
            ]
        ]
    },
    {
        "id": "a37989ed3daaf1f7",
        "type": "switch",
        "z": "ec15050b70975098",
        "name": "Escreve Antena 3",
        "property": "payload.variableName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "_W_TagID",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "_W_UserData",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 1560,
        "wires": [
            [
                "4ae7e624aed14eb2"
            ],
            [
                "dc70b2ab7b6f4201"
            ]
        ]
    },
    {
        "id": "4267e46e28e901e4",
        "type": "switch",
        "z": "ec15050b70975098",
        "name": "Escreve Antena 4",
        "property": "payload.variableName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "_W_TagID",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "_W_UserData",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 1620,
        "wires": [
            [
                "4ae7e624aed14eb2"
            ],
            [
                "dc70b2ab7b6f4201"
            ]
        ]
    },
    {
        "id": "61d417fb4de7e147",
        "type": "change",
        "z": "ec15050b70975098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.antena",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1440,
        "wires": [
            [
                "7985d3ceaefed05b"
            ]
        ]
    },
    {
        "id": "4987013b24438dec",
        "type": "change",
        "z": "ec15050b70975098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.antena",
                "pt": "msg",
                "to": "2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1500,
        "wires": [
            [
                "bce954ab8e4903a2"
            ]
        ]
    },
    {
        "id": "7efb09db3341e192",
        "type": "change",
        "z": "ec15050b70975098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.antena",
                "pt": "msg",
                "to": "3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1560,
        "wires": [
            [
                "a37989ed3daaf1f7"
            ]
        ]
    },
    {
        "id": "ae425d24a7cf71a2",
        "type": "change",
        "z": "ec15050b70975098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.antena",
                "pt": "msg",
                "to": "4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1620,
        "wires": [
            [
                "4267e46e28e901e4"
            ]
        ]
    },
    {
        "id": "56920c8cacf90dbd",
        "type": "debug",
        "z": "ec15050b70975098",
        "name": "debug escrita TagID",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 1420,
        "wires": []
    },
    {
        "id": "fdf74148b0eca986",
        "type": "debug",
        "z": "ec15050b70975098",
        "name": "debug escrita UserData",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1910,
        "y": 1640,
        "wires": []
    },
    {
        "id": "6e0bfee6d9e4b704",
        "type": "debug",
        "z": "ec15050b70975098",
        "name": "debug status escrita",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2240,
        "y": 1440,
        "wires": []
    },
    {
        "id": "2f3a48c6a6bdfbb5",
        "type": "split",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 570,
        "y": 700,
        "wires": [
            [
                "37da4c7ea3fc0c9d"
            ]
        ]
    },
    {
        "id": "37da4c7ea3fc0c9d",
        "type": "split",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 700,
        "wires": [
            [
                "5de439f4e015a3a2"
            ]
        ]
    },
    {
        "id": "5de439f4e015a3a2",
        "type": "switch",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "tag_id",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "user_data",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 700,
        "wires": [
            [
                "af1dd13f7b220974"
            ],
            [
                "4f6a2d160967335e"
            ]
        ]
    },
    {
        "id": "5c45eda3c02eaf89",
        "type": "switch",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "Read tag.arrive",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "event.tag.arrive",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 200,
        "y": 840,
        "wires": [
            [
                "711af6285fbca08a"
            ]
        ]
    },
    {
        "id": "711af6285fbca08a",
        "type": "switch",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "Split by antena",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "antenna=1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 380,
        "y": 840,
        "wires": [
            [
                "2f3a48c6a6bdfbb5"
            ],
            [
                "80d2a6a14850f66a"
            ],
            [
                "4b7bb121e0d2277f"
            ],
            [
                "a96447f450f26c84"
            ]
        ]
    },
    {
        "id": "80d2a6a14850f66a",
        "type": "split",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 570,
        "y": 800,
        "wires": [
            [
                "355a3d9e2003e686"
            ]
        ]
    },
    {
        "id": "355a3d9e2003e686",
        "type": "split",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 800,
        "wires": [
            [
                "c955811732d08be3"
            ]
        ]
    },
    {
        "id": "c955811732d08be3",
        "type": "switch",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "tag_id",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "user_data",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 800,
        "wires": [
            [
                "93c01431ecb89b30"
            ],
            [
                "efe26cdee45d3661"
            ]
        ]
    },
    {
        "id": "4b7bb121e0d2277f",
        "type": "split",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 570,
        "y": 900,
        "wires": [
            [
                "17127297e21a6a78"
            ]
        ]
    },
    {
        "id": "17127297e21a6a78",
        "type": "split",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 900,
        "wires": [
            [
                "a50fc46b234fcd8a"
            ]
        ]
    },
    {
        "id": "a50fc46b234fcd8a",
        "type": "switch",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "tag_id",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "user_data",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 900,
        "wires": [
            [
                "88ee93ab82e3a6f3"
            ],
            [
                "0bffbe4528325072"
            ]
        ]
    },
    {
        "id": "a96447f450f26c84",
        "type": "split",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 570,
        "y": 1000,
        "wires": [
            [
                "b7c3d2e4bd7066a9"
            ]
        ]
    },
    {
        "id": "b7c3d2e4bd7066a9",
        "type": "split",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 1000,
        "wires": [
            [
                "b1c31f09bfaab763"
            ]
        ]
    },
    {
        "id": "b1c31f09bfaab763",
        "type": "switch",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "tag_id",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "user_data",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 1000,
        "wires": [
            [
                "d8bba8ccffa64651"
            ],
            [
                "b44957201a8ce390"
            ]
        ]
    },
    {
        "id": "31dcc6700c353e6d",
        "type": "switch",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "Red Tag.depart",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "event.tag.depart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 360,
        "y": 1100,
        "wires": [
            [
                "0da10e2e745c81c2"
            ]
        ]
    },
    {
        "id": "0da10e2e745c81c2",
        "type": "switch",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "Split by antenna",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "antenna=1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 540,
        "y": 1100,
        "wires": [
            [
                "7d00805b6b8b6eda"
            ],
            [
                "bbf470c80fbb1c10"
            ],
            [
                "86039e0e3a6afab9"
            ],
            [
                "d5e9979b0883c550"
            ]
        ]
    },
    {
        "id": "3bb32419822dbd08",
        "type": "switch",
        "z": "ec15050b70975098",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2190,
        "y": 1540,
        "wires": [
            [
                "6a6b7255bc356c52"
            ],
            [
                "6413fe770ab3a1f4"
            ]
        ]
    },
    {
        "id": "6a6b7255bc356c52",
        "type": "function",
        "z": "ec15050b70975098",
        "name": "Escrita Servidor Sucesso",
        "func": "msg.payload = \"Escrita feita com sucesso pelo servidor\"\nmsg.topic = \"ns=12;s=StatusEscrita;datatype=String\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2410,
        "y": 1520,
        "wires": [
            [
                "fcc6957a7f6345b2",
                "8eaf654b67d14f4a",
                "cc227f5d6c8b3274"
            ]
        ]
    },
    {
        "id": "6413fe770ab3a1f4",
        "type": "function",
        "z": "ec15050b70975098",
        "name": "Escrita Servidor Erro",
        "func": "msg.payload = \"Problema ao fazer a escrita pelo servidor. Erro: \"+ msg.payload\nmsg.topic = \"ns=12;s=StatusEscrita;datatype=String\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1560,
        "wires": [
            [
                "fcc6957a7f6345b2",
                "8eaf654b67d14f4a"
            ]
        ]
    },
    {
        "id": "fcc6957a7f6345b2",
        "type": "link out",
        "z": "ec15050b70975098",
        "name": "RFID Status Escrita Servidor",
        "mode": "link",
        "links": [],
        "x": 2635,
        "y": 1520,
        "wires": []
    },
    {
        "id": "d6c571e85c8672e9",
        "type": "comment",
        "z": "ec15050b70975098",
        "name": "Escrita na Peça",
        "info": "",
        "x": 380,
        "y": 1640,
        "wires": []
    },
    {
        "id": "ab141b8321d1b55f",
        "type": "link out",
        "z": "ec15050b70975098",
        "g": "b7258161d47d7aa6",
        "name": "RFID",
        "mode": "link",
        "links": [],
        "x": 535,
        "y": 520,
        "wires": []
    },
    {
        "id": "ec336172c34b7ff3",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "group": "04ac9348ac03b3e9",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Messages",
        "label": "Messages",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 590,
        "y": 180,
        "wires": []
    },
    {
        "id": "fdfc6198dd681f3d",
        "type": "ui_button",
        "z": "ec15050b70975098",
        "g": "7a11315e649378dd",
        "name": "Check Tag ID",
        "group": "1137a9e0614609d2",
        "order": 1,
        "width": 7,
        "height": 1,
        "passthru": false,
        "label": "Check Tag ID",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "81ebd6e4ef142f3b"
            ]
        ]
    },
    {
        "id": "8630f24296343be0",
        "type": "ui_form",
        "z": "ec15050b70975098",
        "g": "29892d1461924b63",
        "name": "",
        "label": "Change Tag ID",
        "group": "1137a9e0614609d2",
        "order": 3,
        "width": 7,
        "height": 1,
        "options": [
            {
                "label": "New TagID",
                "value": "id",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "Alterar",
        "cancel": "Cancelar",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 1220,
        "y": 360,
        "wires": [
            [
                "b43b4b19f9bfae42",
                "c359cf89548c4e1d"
            ]
        ]
    },
    {
        "id": "f39f737536f4cdab",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "group": "20c5ddaf10ac3164",
        "order": 1,
        "width": 9,
        "height": 8,
        "name": "Initialization",
        "label": "Initialization",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 990,
        "y": 180,
        "wires": []
    },
    {
        "id": "6d9a5c014bbdfc72",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "group": "20c5ddaf10ac3164",
        "order": 2,
        "width": 9,
        "height": 2,
        "name": "",
        "label": "Setup Confirmation",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1510,
        "y": 140,
        "wires": []
    },
    {
        "id": "9c26da7a85c9a965",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "7a11315e649378dd",
        "group": "1137a9e0614609d2",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "Tag ID",
        "label": "Tag ID:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1010,
        "y": 340,
        "wires": []
    },
    {
        "id": "a8a611dbf0f44d40",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "29892d1461924b63",
        "group": "1137a9e0614609d2",
        "order": 4,
        "width": 7,
        "height": 1,
        "name": "Tag ID",
        "label": "Tag ID Status",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2110,
        "y": 360,
        "wires": []
    },
    {
        "id": "8eaf654b67d14f4a",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "group": "48a76dbf5a87e035",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 2670,
        "y": 1560,
        "wires": []
    },
    {
        "id": "0b8f2bfd90a79c16",
        "type": "debug",
        "z": "ec15050b70975098",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1600,
        "wires": []
    },
    {
        "id": "3505e39b58c76db7",
        "type": "switch",
        "z": "ec15050b70975098",
        "name": "Filtra dados corretos",
        "property": "payload.variableValue",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 480,
        "y": 1520,
        "wires": [
            [
                "0167a50dc82498ef",
                "0b8f2bfd90a79c16"
            ]
        ]
    },
    {
        "id": "65175199cdbc64fb",
        "type": "link out",
        "z": "ec15050b70975098",
        "name": "RFID Escrita OPC UA",
        "mode": "link",
        "links": [],
        "x": 1985,
        "y": 1360,
        "wires": []
    },
    {
        "id": "8655fef1905a53bd",
        "type": "switch",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "name": "Separates Config/Messages",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "event.connection id = ",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "event.tag",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 120,
        "wires": [
            [
                "5ce657fe45f5278d"
            ],
            [
                "ec336172c34b7ff3",
                "45edd5d3f2cd6904"
            ]
        ]
    },
    {
        "id": "1e27fe21fc593a9e",
        "type": "change",
        "z": "ec15050b70975098",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "escrita_servidor",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 1360,
        "wires": [
            [
                "65175199cdbc64fb"
            ]
        ]
    },
    {
        "id": "20085908290ab7b5",
        "type": "change",
        "z": "ec15050b70975098",
        "g": "29892d1461924b63",
        "name": "Define New ID",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "escrita_dashboard",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 400,
        "wires": [
            [
                "f5178c5f1480c676"
            ]
        ]
    },
    {
        "id": "f5178c5f1480c676",
        "type": "link out",
        "z": "ec15050b70975098",
        "g": "29892d1461924b63",
        "name": "RFID Escrita Dashboard",
        "mode": "link",
        "links": [],
        "x": 1745,
        "y": 400,
        "wires": []
    },
    {
        "id": "d35897635309de74",
        "type": "link out",
        "z": "ec15050b70975098",
        "g": "29892d1461924b63",
        "name": "RFID Sucesso Escrita Dashboard",
        "mode": "link",
        "links": [],
        "x": 2265,
        "y": 320,
        "wires": []
    },
    {
        "id": "e603737fdc4af853",
        "type": "change",
        "z": "ec15050b70975098",
        "g": "29892d1461924b63",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sucesso_escrita_dashboard",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 320,
        "wires": [
            [
                "d35897635309de74"
            ]
        ]
    },
    {
        "id": "cc227f5d6c8b3274",
        "type": "link out",
        "z": "ec15050b70975098",
        "name": "RFID Sucesso Escrita Servidor",
        "mode": "link",
        "links": [],
        "x": 2585,
        "y": 1480,
        "wires": []
    },
    {
        "id": "5ea1fa6a0f2d677d",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "b7258161d47d7aa6",
        "group": "04ac9348ac03b3e9",
        "order": 4,
        "width": 8,
        "height": 3,
        "name": "Ant1 Report",
        "label": "Tag Report Antena 1",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 650,
        "y": 460,
        "wires": []
    },
    {
        "id": "a0281e9f9f4f2b9b",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "b7258161d47d7aa6",
        "group": "04ac9348ac03b3e9",
        "order": 10,
        "width": 8,
        "height": 3,
        "name": "Ant2 Report",
        "label": "Tag Report Antena 2",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 650,
        "y": 500,
        "wires": []
    },
    {
        "id": "6494468b998c8dd7",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "b7258161d47d7aa6",
        "group": "04ac9348ac03b3e9",
        "order": 5,
        "width": 8,
        "height": 3,
        "name": "Ant3 Report",
        "label": "Tag Report Antena 3",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 650,
        "y": 540,
        "wires": []
    },
    {
        "id": "dc2bc5d80113ec07",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "b7258161d47d7aa6",
        "group": "04ac9348ac03b3e9",
        "order": 11,
        "width": 8,
        "height": 3,
        "name": "Ant4 Report",
        "label": "Tag Report Antena 4",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 650,
        "y": 580,
        "wires": []
    },
    {
        "id": "4c110f1f993b1180",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "group": "04ac9348ac03b3e9",
        "order": 6,
        "width": 8,
        "height": 1,
        "name": "Tag ID Antena 1:",
        "label": "TagID A1:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1450,
        "y": 680,
        "wires": []
    },
    {
        "id": "bfcbc44e3232a68f",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "group": "04ac9348ac03b3e9",
        "order": 12,
        "width": 8,
        "height": 1,
        "name": "Tag ID Antena 2:",
        "label": "TagID A2:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1450,
        "y": 780,
        "wires": []
    },
    {
        "id": "1038e09b175952a4",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "group": "04ac9348ac03b3e9",
        "order": 7,
        "width": 8,
        "height": 1,
        "name": "Tag ID Antena 3:",
        "label": "TagID A3:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1450,
        "y": 880,
        "wires": []
    },
    {
        "id": "06ce500db3d1cd27",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "group": "04ac9348ac03b3e9",
        "order": 13,
        "width": 8,
        "height": 1,
        "name": "Tag ID Antena 4:",
        "label": "TagID A4:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1450,
        "y": 980,
        "wires": []
    },
    {
        "id": "61efaac17bb31009",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "group": "04ac9348ac03b3e9",
        "order": 8,
        "width": 8,
        "height": 2,
        "name": "User Data Antena 1:",
        "label": "UserData A1:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1460,
        "y": 720,
        "wires": []
    },
    {
        "id": "99010ee324e984f5",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "group": "04ac9348ac03b3e9",
        "order": 14,
        "width": 8,
        "height": 1,
        "name": "User Data Antena 2:",
        "label": "UserData A2:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1460,
        "y": 820,
        "wires": []
    },
    {
        "id": "2c518b3132842a38",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "group": "04ac9348ac03b3e9",
        "order": 9,
        "width": 8,
        "height": 2,
        "name": "User Data Antena 3:",
        "label": "UserData A3:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1460,
        "y": 920,
        "wires": []
    },
    {
        "id": "98bcb33524b5791e",
        "type": "ui_text",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "group": "04ac9348ac03b3e9",
        "order": 15,
        "width": 8,
        "height": 1,
        "name": "User Data Antena 4:",
        "label": "UserData A4:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1460,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3498b04f96306271",
        "type": "link out",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "RFID Read Antenna",
        "mode": "link",
        "links": [],
        "x": 1315,
        "y": 860,
        "wires": []
    },
    {
        "id": "c359cf89548c4e1d",
        "type": "link out",
        "z": "ec15050b70975098",
        "g": "29892d1461924b63",
        "name": "RFID Modificação",
        "mode": "link",
        "links": [],
        "x": 1355,
        "y": 400,
        "wires": []
    },
    {
        "id": "8977bd74a5ca54a2",
        "type": "delay",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "0.5s Delay",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 190,
        "y": 1100,
        "wires": [
            [
                "31dcc6700c353e6d"
            ]
        ]
    },
    {
        "id": "af1dd13f7b220974",
        "type": "OpcUa-Item",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "item": "ns=12;s=Ant1_R_TagID",
        "datatype": "String",
        "value": "",
        "name": "Ant1_R_TagID",
        "x": 1140,
        "y": 680,
        "wires": [
            [
                "3498b04f96306271",
                "4c110f1f993b1180"
            ]
        ]
    },
    {
        "id": "4f6a2d160967335e",
        "type": "OpcUa-Item",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "item": "ns=12;s=Ant1_R_UserData",
        "datatype": "String",
        "value": "",
        "name": "Ant1_R_UserData",
        "x": 1150,
        "y": 720,
        "wires": [
            [
                "3498b04f96306271",
                "61efaac17bb31009"
            ]
        ]
    },
    {
        "id": "90a34c6e57efea2b",
        "type": "OpcUa-Item",
        "z": "ec15050b70975098",
        "g": "b7258161d47d7aa6",
        "item": "ns=12;s=Ant1_TagReport",
        "datatype": "String",
        "value": "",
        "name": "Ant1_TagReport",
        "x": 380,
        "y": 460,
        "wires": [
            [
                "5ea1fa6a0f2d677d",
                "ab141b8321d1b55f"
            ]
        ]
    },
    {
        "id": "8a5a54db230795ba",
        "type": "OpcUa-Item",
        "z": "ec15050b70975098",
        "g": "b7258161d47d7aa6",
        "item": "ns=12;s=Ant2_TagReport",
        "datatype": "String",
        "value": "",
        "name": "Ant2_TagReport",
        "x": 380,
        "y": 500,
        "wires": [
            [
                "ab141b8321d1b55f",
                "a0281e9f9f4f2b9b"
            ]
        ]
    },
    {
        "id": "fddafa824f791bf3",
        "type": "OpcUa-Item",
        "z": "ec15050b70975098",
        "g": "b7258161d47d7aa6",
        "item": "ns=12;s=Ant3_TagReport",
        "datatype": "String",
        "value": "",
        "name": "Ant3_TagReport",
        "x": 380,
        "y": 540,
        "wires": [
            [
                "ab141b8321d1b55f",
                "6494468b998c8dd7"
            ]
        ]
    },
    {
        "id": "c21e2990a458f990",
        "type": "OpcUa-Item",
        "z": "ec15050b70975098",
        "g": "b7258161d47d7aa6",
        "item": "ns=12;s=Ant4_TagReport",
        "datatype": "String",
        "value": "",
        "name": "Ant4_TagReport",
        "x": 380,
        "y": 580,
        "wires": [
            [
                "ab141b8321d1b55f",
                "dc2bc5d80113ec07"
            ]
        ]
    },
    {
        "id": "93c01431ecb89b30",
        "type": "OpcUa-Item",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "item": "ns=12;s=Ant2_R_TagID",
        "datatype": "String",
        "value": "",
        "name": "Ant2_R_TagID",
        "x": 1140,
        "y": 780,
        "wires": [
            [
                "3498b04f96306271",
                "bfcbc44e3232a68f"
            ]
        ]
    },
    {
        "id": "efe26cdee45d3661",
        "type": "OpcUa-Item",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "item": "ns=12;s=Ant2_R_UserData",
        "datatype": "String",
        "value": "",
        "name": "Ant2_R_UserData",
        "x": 1150,
        "y": 820,
        "wires": [
            [
                "3498b04f96306271",
                "99010ee324e984f5"
            ]
        ]
    },
    {
        "id": "88ee93ab82e3a6f3",
        "type": "OpcUa-Item",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "item": "ns=12;s=Ant3_R_TagID",
        "datatype": "String",
        "value": "",
        "name": "Ant3_R_TagID",
        "x": 1140,
        "y": 880,
        "wires": [
            [
                "3498b04f96306271",
                "1038e09b175952a4"
            ]
        ]
    },
    {
        "id": "0bffbe4528325072",
        "type": "OpcUa-Item",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "item": "ns=12;s=Ant3_R_UserData",
        "datatype": "String",
        "value": "",
        "name": "Ant3_R_UserData",
        "x": 1150,
        "y": 920,
        "wires": [
            [
                "3498b04f96306271",
                "2c518b3132842a38"
            ]
        ]
    },
    {
        "id": "d8bba8ccffa64651",
        "type": "OpcUa-Item",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "item": "ns=12;s=Ant4_R_TagID",
        "datatype": "String",
        "value": "",
        "name": "Ant4_R_TagID",
        "x": 1140,
        "y": 980,
        "wires": [
            [
                "3498b04f96306271",
                "06ce500db3d1cd27"
            ]
        ]
    },
    {
        "id": "b44957201a8ce390",
        "type": "OpcUa-Item",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "item": "ns=12;s=Ant1_R_UserData",
        "datatype": "String",
        "value": "",
        "name": "Ant1_R_UserData",
        "x": 1150,
        "y": 1020,
        "wires": [
            [
                "3498b04f96306271",
                "98bcb33524b5791e"
            ]
        ]
    },
    {
        "id": "7d00805b6b8b6eda",
        "type": "function",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "Antenna 1",
        "func": "if (msg.topic === \"\") {\n    msg.payload=msg.topic\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1040,
        "wires": [
            [
                "af1dd13f7b220974",
                "4f6a2d160967335e"
            ]
        ]
    },
    {
        "id": "bbf470c80fbb1c10",
        "type": "function",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "Antenna 2",
        "func": "if (msg.topic === \"\") {\n    msg.payload=msg.topic\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1080,
        "wires": [
            [
                "93c01431ecb89b30",
                "efe26cdee45d3661"
            ]
        ]
    },
    {
        "id": "86039e0e3a6afab9",
        "type": "function",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "Antenna 3",
        "func": "if (msg.topic === \"\") {\n    msg.payload=msg.topic\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1120,
        "wires": [
            [
                "88ee93ab82e3a6f3",
                "0bffbe4528325072"
            ]
        ]
    },
    {
        "id": "d5e9979b0883c550",
        "type": "function",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "Antenna 4",
        "func": "if (msg.topic === \"\") {\n    msg.payload=msg.topic\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1160,
        "wires": [
            [
                "d8bba8ccffa64651",
                "b44957201a8ce390"
            ]
        ]
    },
    {
        "id": "45edd5d3f2cd6904",
        "type": "delay",
        "z": "ec15050b70975098",
        "g": "03f2db2d1c1ba98b",
        "name": "Delay 1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 580,
        "y": 220,
        "wires": [
            [
                "d8bab5bc84ee373c"
            ]
        ]
    },
    {
        "id": "af1fdde4ace7fd04",
        "type": "link in",
        "z": "ec15050b70975098",
        "g": "0f8fe8b767eb683f",
        "name": "RFID Read",
        "links": [
            "d8bab5bc84ee373c"
        ],
        "x": 55,
        "y": 960,
        "wires": [
            [
                "5c45eda3c02eaf89",
                "8977bd74a5ca54a2"
            ]
        ]
    },
    {
        "id": "4b9fa90e5c286a74",
        "type": "csv",
        "z": "1e403841a39b0138",
        "g": "c4c593ba6143c273",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 510,
        "y": 360,
        "wires": [
            [
                "d297c004fa728ae2"
            ]
        ]
    },
    {
        "id": "e198f51dc3ff6032",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "c4c593ba6143c273",
        "name": "Select Row",
        "func": "// Recebe o número da linha desejada\nlet linhaDesejada = parseInt(msg.linha);  // 'linha' deve ser passada para este nó como o número da linha desejada\n\n// A tabela agora está em msg.payload como um array de objetos\nlet tabela = msg.payload;\n\n// Verifica se a tabela é um array e se a linha desejada existe\nif (Array.isArray(tabela) && linhaDesejada > 0 && linhaDesejada <= tabela.length) {\n    // Acessa a linha desejada (subtraímos 1 para ajustar ao índice do array)\n    let linha = tabela[linhaDesejada - 1];\n    msg.payload = linha;  // Retorna a linha encontrada\n} else {\n    msg.payload = { error: \"Linha não encontrada ou número de linha inválido\" };  // Retorna erro\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 360,
        "wires": [
            [
                "859bf3b0eeb49377",
                "d53547090319a391",
                "39d92c8b90c73082"
            ]
        ]
    },
    {
        "id": "fedf9bafb7a3f368",
        "type": "inject",
        "z": "1e403841a39b0138",
        "g": "c4c593ba6143c273",
        "name": "C",
        "props": [
            {
                "p": "linha",
                "v": "3",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 400,
        "wires": [
            [
                "ca64471f9a1b94d8"
            ]
        ]
    },
    {
        "id": "ca64471f9a1b94d8",
        "type": "file in",
        "z": "1e403841a39b0138",
        "g": "c4c593ba6143c273",
        "name": "Read Table 1",
        "filename": "C:\\Users\\admin\\Downloads\\Peças.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 360,
        "wires": [
            [
                "4b9fa90e5c286a74"
            ]
        ]
    },
    {
        "id": "536690b5673f2e14",
        "type": "inject",
        "z": "1e403841a39b0138",
        "g": "c4c593ba6143c273",
        "name": "A",
        "props": [
            {
                "p": "linha",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "ca64471f9a1b94d8"
            ]
        ]
    },
    {
        "id": "957cd07eb1831ac1",
        "type": "inject",
        "z": "1e403841a39b0138",
        "g": "c4c593ba6143c273",
        "name": "B",
        "props": [
            {
                "p": "linha",
                "v": "2",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "ca64471f9a1b94d8"
            ]
        ]
    },
    {
        "id": "85d0de3271455ce0",
        "type": "function",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7d28714bf0311e7b",
        "name": " Stop at Vision?",
        "func": "let estacao = \"Vision\"; // Apenas para status visual (opcional)\n\n// Garante que msg.payload é booleano (true ou false)\nif (typeof msg.payload === \"boolean\") {\n    if (msg.payload === true) {\n        node.status({ fill: \"green\", shape: \"dot\", text: `Stopping at ${estacao}` });\n        return [msg, null];  // Continua o fluxo normal\n    } else {\n        node.status({ fill: \"red\", shape: \"ring\", text: `Skipping ${estacao}` });\n        return [null, msg];  // Pula para a próxima estação\n    }\n} else {\n    // Caso o payload não seja booleano (erro no fluxo)\n    node.status({ fill: \"yellow\", shape: \"ring\", text: `Invalid value for ${estacao}` });\n    msg.payload = { error: `Invalid boolean value for '${estacao}'.` };\n    return [null, msg];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 2160,
        "wires": [
            [
                "afecaf6eaaebd6b0",
                "b0edbe2679dd09ce"
            ],
            [
                "b950da2d8019b690"
            ]
        ]
    },
    {
        "id": "d297c004fa728ae2",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "c4c593ba6143c273",
        "name": "Convert to Variables",
        "func": "// A tabela já foi convertida pelo nó CSV em um array de objetos\nlet tabela = msg.payload;\n\n// Itera sobre cada linha da tabela e converte as colunas \"true\" e \"false\" para valores booleanos reais\ntabela.forEach(linha => {\n    // Para cada linha, converte os valores das colunas para booleano\n    linha.Distribution = linha.Distribution === 'Sim';  // Converte string \"true\" para booleano true\n    linha.Processing = linha.Processing === 'Sim';      // Converte string \"true\" para booleano true\n    linha.Vision = linha.Vision === 'Sim';              // Converte string \"true\" para booleano true\n    linha.Robot = linha.Robot === 'Sim';                // Converte string \"true\" para booleano true\n    linha.Storage = linha.Storage === 'Sim';            // Converte string \"true\" para booleano true\n    linha.Sorting = linha.Sorting === 'Sim';            // Converte string \"true\" para booleano true\n});\n\n// Atualiza o msg.payload com a tabela convertida\nmsg.payload = tabela;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 360,
        "wires": [
            [
                "e198f51dc3ff6032"
            ]
        ]
    },
    {
        "id": "63a00ab8dc3c0abe",
        "type": "function",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7fa7577b502c30e1",
        "name": " Stop at Processing?",
        "func": "let estacao = \"Processing\"; // Apenas para status visual (opcional)\n\n// Garante que msg.payload é booleano (true ou false)\nif (typeof msg.payload === \"boolean\") {\n    if (msg.payload === true) {\n        node.status({ fill: \"green\", shape: \"dot\", text: `Stopping at ${estacao}` });\n        return [msg, null];  // Continua o fluxo normal\n    } else {\n        node.status({ fill: \"red\", shape: \"ring\", text: `Skipping ${estacao}` });\n        return [null, msg];  // Pula para a próxima estação\n    }\n} else {\n    // Caso o payload não seja booleano (erro no fluxo)\n    node.status({ fill: \"yellow\", shape: \"ring\", text: `Invalid value for ${estacao}` });\n    msg.payload = { error: `Invalid boolean value for '${estacao}'.` };\n    return [null, msg];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2370,
        "y": 1980,
        "wires": [
            [
                "784d98ed42fe9c3a",
                "1199bc0ea3d8368f"
            ],
            [
                "f53ad3fcc8ae497f"
            ]
        ]
    },
    {
        "id": "a3a87f89997a68f3",
        "type": "function",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "d4708387f5f66b98",
        "name": "Stop at Robot?",
        "func": "let estacao = \"Robot\"; // Apenas para status visual (opcional)\n\n// Garante que msg.payload é booleano (true ou false)\nif (typeof msg.payload === \"boolean\") {\n    if (msg.payload === true) {\n        node.status({ fill: \"green\", shape: \"dot\", text: `Stopping at ${estacao}` });\n        return [msg, null];  // Continua o fluxo normal\n    } else {\n        node.status({ fill: \"red\", shape: \"ring\", text: `Skipping ${estacao}` });\n        return [null, msg];  // Pula para a próxima estação\n    }\n} else {\n    // Caso o payload não seja booleano (erro no fluxo)\n    node.status({ fill: \"yellow\", shape: \"ring\", text: `Invalid value for ${estacao}` });\n    msg.payload = { error: `Invalid boolean value for '${estacao}'.` };\n    return [null, msg];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 2340,
        "wires": [
            [
                "8f2557b3e4273e5d",
                "a294dfb952a7f131"
            ],
            [
                "f992d17bc83a67cb"
            ]
        ]
    },
    {
        "id": "f8c6218005851a11",
        "type": "function",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "cca5c20d8523848c",
        "name": "Stop at Storage?",
        "func": "let estacao = \"Storage\"; // Apenas para status visual (opcional)\n\n// Garante que msg.payload é booleano (true ou false)\nif (typeof msg.payload === \"boolean\") {\n    if (msg.payload === true) {\n        node.status({ fill: \"green\", shape: \"dot\", text: `Stopping at ${estacao}` });\n        return [msg, null];  // Continua o fluxo normal\n    } else {\n        node.status({ fill: \"red\", shape: \"ring\", text: `Skipping ${estacao}` });\n        return [null, msg];  // Pula para a próxima estação\n    }\n} else {\n    // Caso o payload não seja booleano (erro no fluxo)\n    node.status({ fill: \"yellow\", shape: \"ring\", text: `Invalid value for ${estacao}` });\n    msg.payload = { error: `Invalid boolean value for '${estacao}'.` };\n    return [null, msg];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2360,
        "y": 2520,
        "wires": [
            [
                "585a9ba6c4651bb3",
                "907af835fe5baf32"
            ],
            [
                "826c3c0d067e6ea2"
            ]
        ]
    },
    {
        "id": "83c5aaa04253f8a0",
        "type": "function",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88542df151e150a1",
        "name": "Stop at Sorting?",
        "func": "let estacao = \"Sorting\"; // Apenas para status visual (opcional)\n\n// Garante que msg.payload é booleano (true ou false)\nif (typeof msg.payload === \"boolean\") {\n    if (msg.payload === true) {\n        node.status({ fill: \"green\", shape: \"dot\", text: `Stopping at ${estacao}` });\n        return [msg, null];  // Continua o fluxo normal\n    } else {\n        node.status({ fill: \"red\", shape: \"ring\", text: `Skipping ${estacao}` });\n        return [null, msg];  // Pula para a próxima estação\n    }\n} else {\n    // Caso o payload não seja booleano (erro no fluxo)\n    node.status({ fill: \"yellow\", shape: \"ring\", text: `Invalid value for ${estacao}` });\n    msg.payload = { error: `Invalid boolean value for '${estacao}'.` };\n    return [null, msg];\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 2720,
        "wires": [
            [
                "297e42975f1de742",
                "1d842b89beafb050"
            ]
        ]
    },
    {
        "id": "afecaf6eaaebd6b0",
        "type": "OpcUa-Item",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7d28714bf0311e7b",
        "item": "ns=8;s=C_26_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_26_Request",
        "x": 2650,
        "y": 2180,
        "wires": [
            [
                "108ec0e9643720e5"
            ]
        ]
    },
    {
        "id": "f38917f80475eac7",
        "type": "s7 in",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7d28714bf0311e7b",
        "endpoint": "",
        "mode": "single",
        "variable": "O_26_Cart_Stat",
        "diff": true,
        "name": "O_26_Cart_Stat",
        "x": 2250,
        "y": 2220,
        "wires": [
            [
                "896ccc5820ab906e",
                "8a844e215f74c5b7"
            ]
        ]
    },
    {
        "id": "896ccc5820ab906e",
        "type": "delay",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7d28714bf0311e7b",
        "name": "Station Stop Time - 3s",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2470,
        "y": 2220,
        "wires": [
            [
                "b7b9cec177a348f5"
            ]
        ]
    },
    {
        "id": "108ec0e9643720e5",
        "type": "OpcUa-Client",
        "z": "1e403841a39b0138",
        "d": true,
        "endpoint": "43e2e23f67dde8e3",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": 1,
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "OPC Server",
        "x": 2920,
        "y": 2260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "784d98ed42fe9c3a",
        "type": "OpcUa-Item",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7fa7577b502c30e1",
        "item": "ns=7;s=C_25_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_25_Request",
        "x": 2650,
        "y": 2000,
        "wires": [
            [
                "108ec0e9643720e5"
            ]
        ]
    },
    {
        "id": "961f38e38f923e17",
        "type": "s7 in",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7fa7577b502c30e1",
        "endpoint": "",
        "mode": "single",
        "variable": "O_25_Cart_Stat",
        "diff": true,
        "name": "O_25_Cart_Stat",
        "x": 2250,
        "y": 2040,
        "wires": [
            [
                "6e4936f1c9365710",
                "ee5ca3be0c84352a"
            ]
        ]
    },
    {
        "id": "6e4936f1c9365710",
        "type": "delay",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7fa7577b502c30e1",
        "name": " Station stop time - 5s",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2470,
        "y": 2040,
        "wires": [
            [
                "d44ab41deae9e0d2"
            ]
        ]
    },
    {
        "id": "8f2557b3e4273e5d",
        "type": "OpcUa-Item",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "d4708387f5f66b98",
        "item": "ns=9;s=C_27_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_27_Request",
        "x": 2650,
        "y": 2360,
        "wires": [
            [
                "108ec0e9643720e5"
            ]
        ]
    },
    {
        "id": "078fad69797fd732",
        "type": "s7 in",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "d4708387f5f66b98",
        "endpoint": "",
        "mode": "single",
        "variable": "O_27_Cart_Stat",
        "diff": true,
        "name": "O_27_Cart_Stat",
        "x": 2250,
        "y": 2400,
        "wires": [
            [
                "1e7b48ca0f9a1b3f",
                "988c0f319f0d9b4d"
            ]
        ]
    },
    {
        "id": "1e7b48ca0f9a1b3f",
        "type": "delay",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "d4708387f5f66b98",
        "name": "Station Stop Time - 6s",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2470,
        "y": 2400,
        "wires": [
            [
                "9417023e81abca96"
            ]
        ]
    },
    {
        "id": "c8cbf0c50e6024ae",
        "type": "s7 in",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "cca5c20d8523848c",
        "endpoint": "",
        "mode": "single",
        "variable": "O_28_Cart_Stat",
        "diff": true,
        "name": "O_28_Cart_Stat",
        "x": 2250,
        "y": 2580,
        "wires": [
            [
                "c07ebad33d8c73ea",
                "4c284ae9ffac705b"
            ]
        ]
    },
    {
        "id": "c07ebad33d8c73ea",
        "type": "delay",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "cca5c20d8523848c",
        "name": "Station Stop Time - 5s",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2470,
        "y": 2580,
        "wires": [
            [
                "c90b1b0a76f874a6"
            ]
        ]
    },
    {
        "id": "0948c089b51a6794",
        "type": "s7 in",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88542df151e150a1",
        "endpoint": "",
        "mode": "single",
        "variable": "O_29_Cart_Stat",
        "diff": true,
        "name": "O_29_Cart_Stat",
        "x": 2250,
        "y": 2780,
        "wires": [
            [
                "ee775ba0ba8e44f1",
                "3397231052c64e49"
            ]
        ]
    },
    {
        "id": "ee775ba0ba8e44f1",
        "type": "delay",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88542df151e150a1",
        "name": "Station Stop Time - 5s",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2470,
        "y": 2780,
        "wires": [
            []
        ]
    },
    {
        "id": "585a9ba6c4651bb3",
        "type": "OpcUa-Item",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "cca5c20d8523848c",
        "item": "ns=10;s=C_28_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_28_Request",
        "x": 2650,
        "y": 2540,
        "wires": [
            [
                "108ec0e9643720e5"
            ]
        ]
    },
    {
        "id": "297e42975f1de742",
        "type": "OpcUa-Item",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88542df151e150a1",
        "item": "ns=11;s=C_29_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_29_Request",
        "x": 2650,
        "y": 2720,
        "wires": [
            [
                "108ec0e9643720e5"
            ]
        ]
    },
    {
        "id": "09774461e3e533fa",
        "type": "comment",
        "z": "1e403841a39b0138",
        "g": "c4c593ba6143c273",
        "name": "Start Process",
        "info": "",
        "x": 1130,
        "y": 280,
        "wires": []
    },
    {
        "id": "9a1e7b52288c61c9",
        "type": "link in",
        "z": "1e403841a39b0138",
        "g": "c4c593ba6143c273",
        "name": "link in 47",
        "links": [],
        "x": 95,
        "y": 280,
        "wires": [
            [
                "9ea9d79c09fb453b"
            ]
        ]
    },
    {
        "id": "27d1484bd603c6ad",
        "type": "function",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "c4c593ba6143c273",
        "name": "Server OPC Verification",
        "func": "if (msg.status == \"session active\") {\n    node.warn(\"Server connected!\")\n    return msg;\n} else {\n    node.warn(\"Server isn't connected\")\n    return null\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "9ea9d79c09fb453b",
        "type": "rbe",
        "z": "1e403841a39b0138",
        "g": "c4c593ba6143c273",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "status",
        "topi": "topic",
        "x": 190,
        "y": 280,
        "wires": [
            [
                "27d1484bd603c6ad"
            ]
        ]
    },
    {
        "id": "b7b9cec177a348f5",
        "type": "link out",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7d28714bf0311e7b",
        "name": "link out 6",
        "mode": "link",
        "links": [],
        "x": 2645,
        "y": 2220,
        "wires": []
    },
    {
        "id": "d44ab41deae9e0d2",
        "type": "link out",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7fa7577b502c30e1",
        "name": "link out 7",
        "mode": "link",
        "links": [],
        "x": 2635,
        "y": 2040,
        "wires": []
    },
    {
        "id": "9417023e81abca96",
        "type": "link out",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "d4708387f5f66b98",
        "name": "link out 8",
        "mode": "link",
        "links": [],
        "x": 2645,
        "y": 2400,
        "wires": []
    },
    {
        "id": "c90b1b0a76f874a6",
        "type": "link out",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "cca5c20d8523848c",
        "name": "link out 9",
        "mode": "link",
        "links": [],
        "x": 2645,
        "y": 2580,
        "wires": []
    },
    {
        "id": "e0bbd45bfdeb9df8",
        "type": "link in",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7fa7577b502c30e1",
        "name": "link in 51",
        "links": [],
        "x": 1985,
        "y": 1980,
        "wires": [
            [
                "3d1624709c3f966b"
            ]
        ]
    },
    {
        "id": "50db647f3394ee8b",
        "type": "link in",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7d28714bf0311e7b",
        "name": "link in 52",
        "links": [],
        "x": 1985,
        "y": 2160,
        "wires": [
            [
                "f53ad3fcc8ae497f"
            ]
        ]
    },
    {
        "id": "c4bc08188533356e",
        "type": "link in",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "d4708387f5f66b98",
        "name": "link in 53",
        "links": [],
        "x": 1985,
        "y": 2340,
        "wires": [
            [
                "b950da2d8019b690"
            ]
        ]
    },
    {
        "id": "11f5f99447b3a062",
        "type": "link in",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "cca5c20d8523848c",
        "name": "link in 54",
        "links": [],
        "x": 1985,
        "y": 2520,
        "wires": [
            [
                "f992d17bc83a67cb"
            ]
        ]
    },
    {
        "id": "0c3effaae4bafd21",
        "type": "link in",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88542df151e150a1",
        "name": "link in 55",
        "links": [],
        "x": 1985,
        "y": 2720,
        "wires": [
            [
                "826c3c0d067e6ea2"
            ]
        ]
    },
    {
        "id": "b0edbe2679dd09ce",
        "type": "debug",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7d28714bf0311e7b",
        "name": "Vision",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2620,
        "y": 2140,
        "wires": []
    },
    {
        "id": "a294dfb952a7f131",
        "type": "debug",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "d4708387f5f66b98",
        "name": "Robot",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2620,
        "y": 2320,
        "wires": []
    },
    {
        "id": "907af835fe5baf32",
        "type": "debug",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "cca5c20d8523848c",
        "name": "Storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2630,
        "y": 2500,
        "wires": []
    },
    {
        "id": "1d842b89beafb050",
        "type": "debug",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88542df151e150a1",
        "name": "Sorting",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2630,
        "y": 2680,
        "wires": []
    },
    {
        "id": "3d1624709c3f966b",
        "type": "change",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7fa7577b502c30e1",
        "name": "Extract Processing",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Processing",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2120,
        "y": 1980,
        "wires": [
            [
                "63a00ab8dc3c0abe"
            ]
        ]
    },
    {
        "id": "f53ad3fcc8ae497f",
        "type": "change",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7d28714bf0311e7b",
        "name": "Extract Vision",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Vision",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2110,
        "y": 2160,
        "wires": [
            [
                "85d0de3271455ce0"
            ]
        ]
    },
    {
        "id": "b950da2d8019b690",
        "type": "change",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "d4708387f5f66b98",
        "name": "Extract Robot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Robot",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2110,
        "y": 2340,
        "wires": [
            [
                "a3a87f89997a68f3"
            ]
        ]
    },
    {
        "id": "f992d17bc83a67cb",
        "type": "change",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "cca5c20d8523848c",
        "name": "Extract Storage",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Storage",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2110,
        "y": 2520,
        "wires": [
            [
                "f8c6218005851a11"
            ]
        ]
    },
    {
        "id": "826c3c0d067e6ea2",
        "type": "change",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88542df151e150a1",
        "name": "Extract Sorting",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Sorting",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2110,
        "y": 2720,
        "wires": [
            [
                "83c5aaa04253f8a0"
            ]
        ]
    },
    {
        "id": "05b2816231022bb2",
        "type": "link in",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88206e9dfa28ad0f",
        "name": "Estação \"Distribution\"",
        "links": [],
        "x": 1985,
        "y": 1780,
        "wires": [
            [
                "9fbdf3975565eae5"
            ]
        ]
    },
    {
        "id": "b20c230ef4e02fc1",
        "type": "OpcUa-Item",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88206e9dfa28ad0f",
        "item": "ns=6;s=C_24_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_24_Request",
        "x": 2650,
        "y": 1800,
        "wires": [
            [
                "108ec0e9643720e5"
            ]
        ]
    },
    {
        "id": "5e13f30b3cddbb15",
        "type": "s7 in",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88206e9dfa28ad0f",
        "endpoint": "",
        "mode": "single",
        "variable": "O_24_Cart_Stat",
        "diff": true,
        "name": "O_24_Cart_Stat",
        "x": 2270,
        "y": 1860,
        "wires": [
            [
                "772a109f50ee7ad8",
                "71cc5653d2ee3c21"
            ]
        ]
    },
    {
        "id": "772a109f50ee7ad8",
        "type": "delay",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88206e9dfa28ad0f",
        "name": "Station stop time - 7s",
        "pauseType": "delay",
        "timeout": "7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2490,
        "y": 1860,
        "wires": [
            [
                "db1e85ddc3d6e716"
            ]
        ]
    },
    {
        "id": "db1e85ddc3d6e716",
        "type": "link out",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88206e9dfa28ad0f",
        "name": "link out 5",
        "mode": "link",
        "links": [],
        "x": 2655,
        "y": 1860,
        "wires": []
    },
    {
        "id": "117de5d5506a066f",
        "type": "debug",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88206e9dfa28ad0f",
        "name": "Distribution",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2640,
        "y": 1760,
        "wires": []
    },
    {
        "id": "1199bc0ea3d8368f",
        "type": "debug",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7fa7577b502c30e1",
        "name": "Processing",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2640,
        "y": 1960,
        "wires": []
    },
    {
        "id": "25bb237d12969f31",
        "type": "function",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88206e9dfa28ad0f",
        "name": "Stop at Distribution?",
        "func": "let estacao = \"Distribution\"; // Apenas para status visual (opcional)\n\n// Garante que msg.payload é booleano (true ou false)\nif (typeof msg.payload === \"boolean\") {\n    if (msg.payload === true) {\n        node.status({ fill: \"green\", shape: \"dot\", text: `Stopping at ${estacao}` });\n        return [msg, null];  // Continua o fluxo normal\n    } else {\n        node.status({ fill: \"red\", shape: \"ring\", text: `Skipping ${estacao}` });\n        return [null, msg];  // Pula para a próxima estação\n    }\n} else {\n    // Caso o payload não seja booleano (erro no fluxo)\n    node.status({ fill: \"yellow\", shape: \"ring\", text: `Invalid value for ${estacao}` });\n    msg.payload = { error: `Invalid boolean value for '${estacao}'.` };\n    return [null, msg];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 1780,
        "wires": [
            [
                "b20c230ef4e02fc1",
                "117de5d5506a066f"
            ],
            [
                "29765c485b5bdd9d",
                "3d1624709c3f966b"
            ]
        ]
    },
    {
        "id": "9fbdf3975565eae5",
        "type": "change",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88206e9dfa28ad0f",
        "name": "Extract Distribution",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Distribution",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2120,
        "y": 1780,
        "wires": [
            [
                "25bb237d12969f31"
            ]
        ]
    },
    {
        "id": "29765c485b5bdd9d",
        "type": "debug",
        "z": "1e403841a39b0138",
        "d": true,
        "name": "Distribution false",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2870,
        "y": 1860,
        "wires": []
    },
    {
        "id": "2282ecaaca2aed6d",
        "type": "inject",
        "z": "1e403841a39b0138",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2080,
        "y": 1700,
        "wires": [
            [
                "25bb237d12969f31"
            ]
        ]
    },
    {
        "id": "175ac4e846127c34",
        "type": "inject",
        "z": "1e403841a39b0138",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2080,
        "y": 1920,
        "wires": [
            [
                "63a00ab8dc3c0abe"
            ]
        ]
    },
    {
        "id": "fb6e2e7f4eff2b38",
        "type": "inject",
        "z": "1e403841a39b0138",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2080,
        "y": 2100,
        "wires": [
            [
                "85d0de3271455ce0"
            ]
        ]
    },
    {
        "id": "497e516bbee89727",
        "type": "inject",
        "z": "1e403841a39b0138",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2080,
        "y": 2280,
        "wires": [
            [
                "a3a87f89997a68f3"
            ]
        ]
    },
    {
        "id": "b9b8440d5ba6bf34",
        "type": "inject",
        "z": "1e403841a39b0138",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2080,
        "y": 2460,
        "wires": [
            [
                "f8c6218005851a11"
            ]
        ]
    },
    {
        "id": "af0b70d08d5226d5",
        "type": "inject",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88542df151e150a1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2080,
        "y": 2660,
        "wires": [
            [
                "83c5aaa04253f8a0"
            ]
        ]
    },
    {
        "id": "12d714e78f1b8185",
        "type": "inject",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88542df151e150a1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 2080,
        "y": 2680,
        "wires": [
            [
                "83c5aaa04253f8a0"
            ]
        ]
    },
    {
        "id": "7b9f70b602fae36a",
        "type": "inject",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "cca5c20d8523848c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 2080,
        "y": 2480,
        "wires": [
            [
                "f8c6218005851a11"
            ]
        ]
    },
    {
        "id": "85bf620d22a14ad9",
        "type": "inject",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "d4708387f5f66b98",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 2080,
        "y": 2300,
        "wires": [
            [
                "a3a87f89997a68f3"
            ]
        ]
    },
    {
        "id": "97da7d1fc436569f",
        "type": "inject",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7d28714bf0311e7b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 2080,
        "y": 2120,
        "wires": [
            [
                "85d0de3271455ce0"
            ]
        ]
    },
    {
        "id": "a5204af48c6cbf7c",
        "type": "inject",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "7fa7577b502c30e1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 2080,
        "y": 1940,
        "wires": [
            [
                "63a00ab8dc3c0abe"
            ]
        ]
    },
    {
        "id": "261c155db63f7585",
        "type": "inject",
        "z": "1e403841a39b0138",
        "d": true,
        "g": "88206e9dfa28ad0f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 2080,
        "y": 1720,
        "wires": [
            [
                "25bb237d12969f31"
            ]
        ]
    },
    {
        "id": "71cc5653d2ee3c21",
        "type": "debug",
        "z": "1e403841a39b0138",
        "d": true,
        "name": "Parada Distribution",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2880,
        "y": 1780,
        "wires": []
    },
    {
        "id": "ee5ca3be0c84352a",
        "type": "debug",
        "z": "1e403841a39b0138",
        "d": true,
        "name": "Parada Processing",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2880,
        "y": 1960,
        "wires": []
    },
    {
        "id": "8a844e215f74c5b7",
        "type": "debug",
        "z": "1e403841a39b0138",
        "d": true,
        "name": "Parada Vision",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2870,
        "y": 2140,
        "wires": []
    },
    {
        "id": "988c0f319f0d9b4d",
        "type": "debug",
        "z": "1e403841a39b0138",
        "d": true,
        "name": "Parada Robot",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2870,
        "y": 2360,
        "wires": []
    },
    {
        "id": "4c284ae9ffac705b",
        "type": "debug",
        "z": "1e403841a39b0138",
        "d": true,
        "name": "Parada Storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2870,
        "y": 2560,
        "wires": []
    },
    {
        "id": "3397231052c64e49",
        "type": "debug",
        "z": "1e403841a39b0138",
        "d": true,
        "name": "Parada Sorting",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2870,
        "y": 2740,
        "wires": []
    },
    {
        "id": "859bf3b0eeb49377",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "c4c593ba6143c273",
        "name": "link out 15",
        "mode": "link",
        "links": [],
        "x": 815,
        "y": 300,
        "wires": []
    },
    {
        "id": "d53547090319a391",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "c4c593ba6143c273",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 400,
        "wires": []
    },
    {
        "id": "21392db4f850da89",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Construir Rota Ordenada",
        "func": "// --- CONSTRUIR ROTA (VERSÃO FINAL) ---\nlet entrada = msg.payload;\nlet colunasStr = msg.columns;\n\nif (!entrada || !colunasStr) {\n    node.error(\"Erro: msg.payload ou msg.columns não encontrados.\", msg);\n    return null;\n}\n\nlet ordemEstacoes = colunasStr.split(',').slice(1);\nlet rotaDoCart = [];\n\nfor (let i = 0; i < ordemEstacoes.length; i++) {\n    let nomeEstacao = ordemEstacoes[i].trim();\n    if (entrada.hasOwnProperty(nomeEstacao) && entrada[nomeEstacao] === true) {\n        rotaDoCart.push(nomeEstacao);\n    }\n}\n\n// MUDANÇA IMPORTANTE: Colocamos a rota diretamente no payload\nmsg.payload = {\n    \"route\": rotaDoCart\n};\n\nnode.log(`Rota passada diretamente na mensagem: ${JSON.stringify(rotaDoCart)}`);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 680,
        "wires": [
            [
                "5e2925ac431c770b",
                "b82b2368236a53ce"
            ]
        ]
    },
    {
        "id": "5e2925ac431c770b",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "INICIAR ROTEAMENTO",
        "func": "// --- INICIAR ROTEAMENTO (VERSÃO FINAL) ---\n\n// MUDANÇA IMPORTANTE: Lemos a rota diretamente do payload\nlet route = msg.payload.route;\n\nif (!route || route.length === 0) {\n    node.error(\"ERRO: Rota não encontrada na mensagem ou está vazia.\", msg);\n    return null;\n}\n\nlet nextStation = route[0];\n\n// Ainda salvamos o índice no contexto para os próximos passos\nflow.set('currentStationIndex', 0);\n// E também a rota completa, para ser usada pela \"Determinar Próxima Estação\"\nflow.set('cartRoute', route);\n\n// Prepara a mensagem para o nó Switch\nmsg.payload = { \"nextStation\": nextStation };\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 680,
        "wires": [
            [
                "a57fd76ebd790cc2",
                "ccba6683b9683afb"
            ]
        ]
    },
    {
        "id": "a57fd76ebd790cc2",
        "type": "switch",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "",
        "property": "payload.nextStation",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Distribution",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Processing",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Vision",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Robot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Storage",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Sorting",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 910,
        "y": 680,
        "wires": [
            [
                "cc21937191be6398",
                "c915001fb8a850f2"
            ],
            [
                "adccb81f6d217fe0",
                "2b5242c9a9ceb0d1"
            ],
            [
                "dc8604ffb5443109",
                "df194bb8a4a49c30"
            ],
            [
                "6f7978eff02f82d3",
                "61d259312317c2c0"
            ],
            [
                "bebbda0a9eb964be",
                "191d4c3ed16add23"
            ],
            [
                "acbb2f7e57522769",
                "8ff2c1dbca6313f5"
            ],
            [
                "752760c7ac0ef6ef"
            ]
        ]
    },
    {
        "id": "cc21937191be6398",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 22",
        "mode": "link",
        "links": [
            "ab160bafdeafbfa2"
        ],
        "x": 1055,
        "y": 560,
        "wires": []
    },
    {
        "id": "adccb81f6d217fe0",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 23",
        "mode": "link",
        "links": [
            "5b6f2674a763676b"
        ],
        "x": 1055,
        "y": 600,
        "wires": []
    },
    {
        "id": "dc8604ffb5443109",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 24",
        "mode": "link",
        "links": [
            "5419a414dd73bf29"
        ],
        "x": 1055,
        "y": 640,
        "wires": []
    },
    {
        "id": "6f7978eff02f82d3",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 25",
        "mode": "link",
        "links": [
            "fff70c2523b74520"
        ],
        "x": 1055,
        "y": 680,
        "wires": []
    },
    {
        "id": "bebbda0a9eb964be",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 26",
        "mode": "link",
        "links": [
            "681985bfdf8b9a79"
        ],
        "x": 1055,
        "y": 720,
        "wires": []
    },
    {
        "id": "acbb2f7e57522769",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 27",
        "mode": "link",
        "links": [
            "1e20fcaccb497a49"
        ],
        "x": 1055,
        "y": 760,
        "wires": []
    },
    {
        "id": "4e7784f548135bc5",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Distribution",
        "func": "// --- VERSÃO DE DEPURAÇÃO (\"Sherlock Holmes\") para a Função da Estação ---\n\nlet currentStationName = \"Distribution\";\n\n//-----------------------------------------------------\n// Lógica para mensagem de COMANDO (do Switch)\n//-----------------------------------------------------\nif (msg.payload && msg.payload.nextStation === currentStationName) {\n    node.warn(`[${currentStationName}] COMANDO RECEBIDO: Roteador autorizou o cart. Armado e esperando CLP.`);\n    \n    flow.set('expected_clp_for_station', currentStationName); \n    flow.set(`msgFor_${currentStationName}`, msg);\n    \n    // Não envia a mensagem ainda, espera pelo CLP.\n    return null; // Usamos return null quando a função tem só 1 saída.\n}\n\n//-----------------------------------------------------\n// Lógica para mensagem de STATUS (do CLP)\n//-----------------------------------------------------\nif (typeof msg.topic === \"string\" && msg.topic.includes(\"_Cart_Stat\") && msg.payload === true) {\n    node.warn(`[${currentStationName}] SINAL DO CLP RECEBIDO: Tópico = ${msg.topic}`);\n\n    let expectedStation = flow.get('expected_clp_for_station');\n    node.warn(`[${currentStationName}] Verificando se o sinal era esperado. Estação esperada: '${expectedStation}'`);\n    \n    // Verifica se esta estação é a que está esperando o sinal do CLP\n    if (expectedStation === currentStationName) {\n        node.warn(`[${currentStationName}] SINAL ACEITO! Recuperando mensagem do cart para iniciar a operação.`);\n        \n        let msgToProcess = flow.get(`msgFor_${currentStationName}`);\n\n        if (msgToProcess) {\n            flow.set('expected_clp_for_station', null); \n            flow.set(`msgFor_${currentStationName}`, null);\n            \n            // Dispara a operação interna da estação (Saída 1)\n            node.warn(`[${currentStationName}] DISPARANDO OPERAÇÃO!`);\n            return [msgToProcess, null]; \n        } else {\n            node.error(`[${currentStationName}] ERRO LÓGICO: Sinal do CLP chegou, mas a mensagem do roteador não estava armazenada.`);\n            return null;\n        }\n    } else {\n        node.warn(`[${currentStationName}] SINAL REJEITADO! Sinal do CLP chegou fora de sequência ou é para outra estação.`);\n        // Se o sinal não era para esta estação, simplesmente o ignoramos.\n        return null; \n    }\n}\n\n// Para qualquer outra mensagem inesperada, não faz nada.\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 800,
        "wires": [
            [
                "bf5f5f4f9434fc3d",
                "26974897695982fc"
            ],
            [
                "d3a3d2dbfa5b2749"
            ]
        ]
    },
    {
        "id": "ab160bafdeafbfa2",
        "type": "link in",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link in 85",
        "links": [
            "cc21937191be6398"
        ],
        "x": 145,
        "y": 800,
        "wires": [
            [
                "4e7784f548135bc5"
            ]
        ]
    },
    {
        "id": "be466d8356cbb01c",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Sorting",
        "func": "// --- VERSÃO DE DEPURAÇÃO (\"Sherlock Holmes\") para a Função da Estação ---\n\nlet currentStationName = \"Sorting\";\n\n//-----------------------------------------------------\n// Lógica para mensagem de COMANDO (do Switch)\n//-----------------------------------------------------\nif (msg.payload && msg.payload.nextStation === currentStationName) {\n    node.warn(`[${currentStationName}] COMANDO RECEBIDO: Roteador autorizou o cart. Armado e esperando CLP.`);\n\n    flow.set('expected_clp_for_station', currentStationName);\n    flow.set(`msgFor_${currentStationName}`, msg);\n\n    // Não envia a mensagem ainda, espera pelo CLP.\n    return null; // Usamos return null quando a função tem só 1 saída.\n}\n\n//-----------------------------------------------------\n// Lógica para mensagem de STATUS (do CLP)\n//-----------------------------------------------------\nif (typeof msg.topic === \"string\" && msg.topic.includes(\"_Cart_Stat\") && msg.payload === true) {\n    node.warn(`[${currentStationName}] SINAL DO CLP RECEBIDO: Tópico = ${msg.topic}`);\n\n    let expectedStation = flow.get('expected_clp_for_station');\n    node.warn(`[${currentStationName}] Verificando se o sinal era esperado. Estação esperada: '${expectedStation}'`);\n\n    // Verifica se esta estação é a que está esperando o sinal do CLP\n    if (expectedStation === currentStationName) {\n        node.warn(`[${currentStationName}] SINAL ACEITO! Recuperando mensagem do cart para iniciar a operação.`);\n\n        let msgToProcess = flow.get(`msgFor_${currentStationName}`);\n\n        if (msgToProcess) {\n            flow.set('expected_clp_for_station', null);\n            flow.set(`msgFor_${currentStationName}`, null);\n\n            // Dispara a operação interna da estação (Saída 1)\n            node.warn(`[${currentStationName}] DISPARANDO OPERAÇÃO!`);\n            return [msgToProcess, null];\n        } else {\n            node.error(`[${currentStationName}] ERRO LÓGICO: Sinal do CLP chegou, mas a mensagem do roteador não estava armazenada.`);\n            return null;\n        }\n    } else {\n        node.warn(`[${currentStationName}] SINAL REJEITADO! Sinal do CLP chegou fora de sequência ou é para outra estação.`);\n        // Se o sinal não era para esta estação, simplesmente o ignoramos.\n        return null;\n    }\n}\n\n// Para qualquer outra mensagem inesperada, não faz nada.\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1200,
        "wires": [
            [
                "573ccfc8080a7491"
            ],
            [
                "3fe9b4638b816460"
            ]
        ]
    },
    {
        "id": "1e20fcaccb497a49",
        "type": "link in",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link in 86",
        "links": [
            "acbb2f7e57522769"
        ],
        "x": 145,
        "y": 1200,
        "wires": [
            [
                "be466d8356cbb01c"
            ]
        ]
    },
    {
        "id": "cf090b9cf9ef0b7d",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Processing",
        "func": "// --- VERSÃO DE DEPURAÇÃO (\"Sherlock Holmes\") para a Função da Estação ---\n\nlet currentStationName = \"Processing\";\n\n//-----------------------------------------------------\n// Lógica para mensagem de COMANDO (do Switch)\n//-----------------------------------------------------\nif (msg.payload && msg.payload.nextStation === currentStationName) {\n    node.warn(`[${currentStationName}] COMANDO RECEBIDO: Roteador autorizou o cart. Armado e esperando CLP.`);\n\n    flow.set('expected_clp_for_station', currentStationName);\n    flow.set(`msgFor_${currentStationName}`, msg);\n\n    // Não envia a mensagem ainda, espera pelo CLP.\n    return null; // Usamos return null quando a função tem só 1 saída.\n}\n\n//-----------------------------------------------------\n// Lógica para mensagem de STATUS (do CLP)\n//-----------------------------------------------------\nif (typeof msg.topic === \"string\" && msg.topic.includes(\"_Cart_Stat\") && msg.payload === true) {\n    node.warn(`[${currentStationName}] SINAL DO CLP RECEBIDO: Tópico = ${msg.topic}`);\n\n    let expectedStation = flow.get('expected_clp_for_station');\n    node.warn(`[${currentStationName}] Verificando se o sinal era esperado. Estação esperada: '${expectedStation}'`);\n\n    // Verifica se esta estação é a que está esperando o sinal do CLP\n    if (expectedStation === currentStationName) {\n        node.warn(`[${currentStationName}] SINAL ACEITO! Recuperando mensagem do cart para iniciar a operação.`);\n\n        let msgToProcess = flow.get(`msgFor_${currentStationName}`);\n\n        if (msgToProcess) {\n            flow.set('expected_clp_for_station', null);\n            flow.set(`msgFor_${currentStationName}`, null);\n\n            // Dispara a operação interna da estação (Saída 1)\n            node.warn(`[${currentStationName}] DISPARANDO OPERAÇÃO!`);\n            return [msgToProcess, null];\n        } else {\n            node.error(`[${currentStationName}] ERRO LÓGICO: Sinal do CLP chegou, mas a mensagem do roteador não estava armazenada.`);\n            return null;\n        }\n    } else {\n        node.warn(`[${currentStationName}] SINAL REJEITADO! Sinal do CLP chegou fora de sequência ou é para outra estação.`);\n        // Se o sinal não era para esta estação, simplesmente o ignoramos.\n        return null;\n    }\n}\n\n// Para qualquer outra mensagem inesperada, não faz nada.\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 880,
        "wires": [
            [
                "44bb715f6102601c",
                "3ca9cb16a9b41db2"
            ],
            [
                "7a51e29f63fab44d"
            ]
        ]
    },
    {
        "id": "5b6f2674a763676b",
        "type": "link in",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link in 87",
        "links": [
            "adccb81f6d217fe0"
        ],
        "x": 145,
        "y": 880,
        "wires": [
            [
                "cf090b9cf9ef0b7d"
            ]
        ]
    },
    {
        "id": "da9cbfc7933f7398",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Vision",
        "func": "// --- VERSÃO DE DEPURAÇÃO (\"Sherlock Holmes\") para a Função da Estação ---\n\nlet currentStationName = \"Vision\";\n\n//-----------------------------------------------------\n// Lógica para mensagem de COMANDO (do Switch)\n//-----------------------------------------------------\nif (msg.payload && msg.payload.nextStation === currentStationName) {\n    node.warn(`[${currentStationName}] COMANDO RECEBIDO: Roteador autorizou o cart. Armado e esperando CLP.`);\n\n    flow.set('expected_clp_for_station', currentStationName);\n    flow.set(`msgFor_${currentStationName}`, msg);\n\n    // Não envia a mensagem ainda, espera pelo CLP.\n    return null; // Usamos return null quando a função tem só 1 saída.\n}\n\n//-----------------------------------------------------\n// Lógica para mensagem de STATUS (do CLP)\n//-----------------------------------------------------\nif (typeof msg.topic === \"string\" && msg.topic.includes(\"_Cart_Stat\") && msg.payload === true) {\n    node.warn(`[${currentStationName}] SINAL DO CLP RECEBIDO: Tópico = ${msg.topic}`);\n\n    let expectedStation = flow.get('expected_clp_for_station');\n    node.warn(`[${currentStationName}] Verificando se o sinal era esperado. Estação esperada: '${expectedStation}'`);\n\n    // Verifica se esta estação é a que está esperando o sinal do CLP\n    if (expectedStation === currentStationName) {\n        node.warn(`[${currentStationName}] SINAL ACEITO! Recuperando mensagem do cart para iniciar a operação.`);\n\n        let msgToProcess = flow.get(`msgFor_${currentStationName}`);\n\n        if (msgToProcess) {\n            flow.set('expected_clp_for_station', null);\n            flow.set(`msgFor_${currentStationName}`, null);\n\n            // Dispara a operação interna da estação (Saída 1)\n            node.warn(`[${currentStationName}] DISPARANDO OPERAÇÃO!`);\n            return [msgToProcess, null];\n        } else {\n            node.error(`[${currentStationName}] ERRO LÓGICO: Sinal do CLP chegou, mas a mensagem do roteador não estava armazenada.`);\n            return null;\n        }\n    } else {\n        node.warn(`[${currentStationName}] SINAL REJEITADO! Sinal do CLP chegou fora de sequência ou é para outra estação.`);\n        // Se o sinal não era para esta estação, simplesmente o ignoramos.\n        return null;\n    }\n}\n\n// Para qualquer outra mensagem inesperada, não faz nada.\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 960,
        "wires": [
            [
                "dd53e3ed4f19bdc3"
            ],
            [
                "456eb9eb2d350289"
            ]
        ]
    },
    {
        "id": "5419a414dd73bf29",
        "type": "link in",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link in 88",
        "links": [
            "dc8604ffb5443109"
        ],
        "x": 145,
        "y": 960,
        "wires": [
            [
                "da9cbfc7933f7398"
            ]
        ]
    },
    {
        "id": "a0421bed281fcf31",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Robot",
        "func": "// --- VERSÃO DE DEPURAÇÃO (\"Sherlock Holmes\") para a Função da Estação ---\n\nlet currentStationName = \"Robot\";\n\n//-----------------------------------------------------\n// Lógica para mensagem de COMANDO (do Switch)\n//-----------------------------------------------------\nif (msg.payload && msg.payload.nextStation === currentStationName) {\n    node.warn(`[${currentStationName}] COMANDO RECEBIDO: Roteador autorizou o cart. Armado e esperando CLP.`);\n    \n    flow.set('expected_clp_for_station', currentStationName); \n    flow.set(`msgFor_${currentStationName}`, msg);\n    \n    // Não envia a mensagem ainda, espera pelo CLP.\n    return null; // Usamos return null quando a função tem só 1 saída.\n}\n\n//-----------------------------------------------------\n// Lógica para mensagem de STATUS (do CLP)\n//-----------------------------------------------------\nif (typeof msg.topic === \"string\" && msg.topic.includes(\"_Cart_Stat\") && msg.payload === true) {\n    node.warn(`[${currentStationName}] SINAL DO CLP RECEBIDO: Tópico = ${msg.topic}`);\n\n    let expectedStation = flow.get('expected_clp_for_station');\n    node.warn(`[${currentStationName}] Verificando se o sinal era esperado. Estação esperada: '${expectedStation}'`);\n    \n    // Verifica se esta estação é a que está esperando o sinal do CLP\n    if (expectedStation === currentStationName) {\n        node.warn(`[${currentStationName}] SINAL ACEITO! Recuperando mensagem do cart para iniciar a operação.`);\n        \n        let msgToProcess = flow.get(`msgFor_${currentStationName}`);\n\n        if (msgToProcess) {\n            flow.set('expected_clp_for_station', null); \n            flow.set(`msgFor_${currentStationName}`, null);\n            \n            // Dispara a operação interna da estação (Saída 1)\n            node.warn(`[${currentStationName}] DISPARANDO OPERAÇÃO!`);\n            return [msgToProcess, null]; \n        } else {\n            node.error(`[${currentStationName}] ERRO LÓGICO: Sinal do CLP chegou, mas a mensagem do roteador não estava armazenada.`);\n            return null;\n        }\n    } else {\n        node.warn(`[${currentStationName}] SINAL REJEITADO! Sinal do CLP chegou fora de sequência ou é para outra estação.`);\n        // Se o sinal não era para esta estação, simplesmente o ignoramos.\n        return null; \n    }\n}\n\n// Para qualquer outra mensagem inesperada, não faz nada.\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1040,
        "wires": [
            [
                "4206964cc2972305"
            ],
            [
                "e73a67afa25b9c20"
            ]
        ]
    },
    {
        "id": "fff70c2523b74520",
        "type": "link in",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link in 89",
        "links": [
            "6f7978eff02f82d3"
        ],
        "x": 145,
        "y": 1040,
        "wires": [
            [
                "a0421bed281fcf31"
            ]
        ]
    },
    {
        "id": "62a55c0b5f150a81",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Storage",
        "func": "// --- VERSÃO DE DEPURAÇÃO (\"Sherlock Holmes\") para a Função da Estação ---\n\nlet currentStationName = \"Storage\";\n\n//-----------------------------------------------------\n// Lógica para mensagem de COMANDO (do Switch)\n//-----------------------------------------------------\nif (msg.payload && msg.payload.nextStation === currentStationName) {\n    node.warn(`[${currentStationName}] COMANDO RECEBIDO: Roteador autorizou o cart. Armado e esperando CLP.`);\n\n    flow.set('expected_clp_for_station', currentStationName);\n    flow.set(`msgFor_${currentStationName}`, msg);\n\n    // Não envia a mensagem ainda, espera pelo CLP.\n    return null; // Usamos return null quando a função tem só 1 saída.\n}\n\n//-----------------------------------------------------\n// Lógica para mensagem de STATUS (do CLP)\n//-----------------------------------------------------\nif (typeof msg.topic === \"string\" && msg.topic.includes(\"_Cart_Stat\") && msg.payload === true) {\n    node.warn(`[${currentStationName}] SINAL DO CLP RECEBIDO: Tópico = ${msg.topic}`);\n\n    let expectedStation = flow.get('expected_clp_for_station');\n    node.warn(`[${currentStationName}] Verificando se o sinal era esperado. Estação esperada: '${expectedStation}'`);\n\n    // Verifica se esta estação é a que está esperando o sinal do CLP\n    if (expectedStation === currentStationName) {\n        node.warn(`[${currentStationName}] SINAL ACEITO! Recuperando mensagem do cart para iniciar a operação.`);\n\n        let msgToProcess = flow.get(`msgFor_${currentStationName}`);\n\n        if (msgToProcess) {\n            flow.set('expected_clp_for_station', null);\n            flow.set(`msgFor_${currentStationName}`, null);\n\n            // Dispara a operação interna da estação (Saída 1)\n            node.warn(`[${currentStationName}] DISPARANDO OPERAÇÃO!`);\n            return [msgToProcess, null];\n        } else {\n            node.error(`[${currentStationName}] ERRO LÓGICO: Sinal do CLP chegou, mas a mensagem do roteador não estava armazenada.`);\n            return null;\n        }\n    } else {\n        node.warn(`[${currentStationName}] SINAL REJEITADO! Sinal do CLP chegou fora de sequência ou é para outra estação.`);\n        // Se o sinal não era para esta estação, simplesmente o ignoramos.\n        return null;\n    }\n}\n\n// Para qualquer outra mensagem inesperada, não faz nada.\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1120,
        "wires": [
            [
                "17bb6569f492215e"
            ],
            [
                "09619d163c37bd20"
            ]
        ]
    },
    {
        "id": "681985bfdf8b9a79",
        "type": "link in",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link in 90",
        "links": [
            "bebbda0a9eb964be"
        ],
        "x": 145,
        "y": 1120,
        "wires": [
            [
                "62a55c0b5f150a81"
            ]
        ]
    },
    {
        "id": "752760c7ac0ef6ef",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Fim do Processo",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 800,
        "wires": []
    },
    {
        "id": "d3a3d2dbfa5b2749",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Debug Distribution",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 840,
        "wires": []
    },
    {
        "id": "7a51e29f63fab44d",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Debug Processing",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 920,
        "wires": []
    },
    {
        "id": "456eb9eb2d350289",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Debug Vision",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e73a67afa25b9c20",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Debug Robot",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 1080,
        "wires": []
    },
    {
        "id": "09619d163c37bd20",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Debug Storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 1160,
        "wires": []
    },
    {
        "id": "3fe9b4638b816460",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Debug Sorting",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 1240,
        "wires": []
    },
    {
        "id": "4ca9c248fdfa5847",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Determinar próxima estação",
        "func": "if (flow.get('processIsActive') !== true) {\n    return null; \n}\n\nlet route = flow.get('cartRoute');\nlet currentStationIndex = flow.get('currentStationIndex');\n\nlet nextIndex = currentStationIndex + 1;\n\nif (route && nextIndex < route.length) {\n    let nextStation = route[nextIndex];\n\n    flow.set('currentStationIndex', nextIndex);\n    msg.payload = { \"nextStation\": nextStation };\n\n} else {\n\n    flow.set('processIsActive', false);\n\n    flow.set('cartRoute', null);\n    flow.set('currentStationIndex', -1);\n    msg.payload = { \"nextStation\": null };\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1000,
        "wires": [
            [
                "1e2107b52160592c",
                "0589a7c356a375a7"
            ]
        ]
    },
    {
        "id": "c43ac335b6a18ec9",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 28",
        "mode": "link",
        "links": [
            "c92c25c96c9500c9",
            "17b00d5072f43677"
        ],
        "x": 665,
        "y": 800,
        "wires": []
    },
    {
        "id": "9edef44c047648d3",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 29",
        "mode": "link",
        "links": [
            "c92c25c96c9500c9"
        ],
        "x": 665,
        "y": 880,
        "wires": []
    },
    {
        "id": "058b65ad69510edb",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 30",
        "mode": "link",
        "links": [
            "c92c25c96c9500c9"
        ],
        "x": 665,
        "y": 960,
        "wires": []
    },
    {
        "id": "e8180b744076f4ef",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 31",
        "mode": "link",
        "links": [
            "c92c25c96c9500c9"
        ],
        "x": 665,
        "y": 1040,
        "wires": []
    },
    {
        "id": "839b4c048f7d1cc8",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 32",
        "mode": "link",
        "links": [
            "c92c25c96c9500c9"
        ],
        "x": 665,
        "y": 1120,
        "wires": []
    },
    {
        "id": "902740288a237cc7",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 33",
        "mode": "link",
        "links": [
            "c92c25c96c9500c9"
        ],
        "x": 665,
        "y": 1200,
        "wires": []
    },
    {
        "id": "c92c25c96c9500c9",
        "type": "link in",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link in 91",
        "links": [
            "9edef44c047648d3",
            "058b65ad69510edb",
            "e8180b744076f4ef",
            "839b4c048f7d1cc8",
            "902740288a237cc7",
            "c43ac335b6a18ec9"
        ],
        "x": 875,
        "y": 1000,
        "wires": [
            [
                "4ca9c248fdfa5847"
            ]
        ]
    },
    {
        "id": "1e2107b52160592c",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 34",
        "mode": "link",
        "links": [
            "c3c756b6bc463790"
        ],
        "x": 1215,
        "y": 1000,
        "wires": []
    },
    {
        "id": "c3c756b6bc463790",
        "type": "link in",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link in 92",
        "links": [
            "1e2107b52160592c"
        ],
        "x": 795,
        "y": 640,
        "wires": [
            [
                "a57fd76ebd790cc2"
            ]
        ]
    },
    {
        "id": "b82b2368236a53ce",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 620,
        "wires": []
    },
    {
        "id": "0589a7c356a375a7",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1080,
        "wires": []
    },
    {
        "id": "abeeadc18f4d2228",
        "type": "function",
        "z": "1e403841a39b0138",
        "name": "INICIAR ROTEAMENTO",
        "func": "// --- Versão Final e Limpa ---\n\n// Pega a rota do contexto do fluxo.\nlet route = flow.get('cartRoute');\n\n// Se a rota não existir ou estiver vazia, para o fluxo.\nif (!route || route.length === 0) {\n    return null;\n}\n\n// Pega a primeira estação da lista.\nlet nextStation = route[0];\n\n// Define o índice da estação atual no contexto.\nflow.set('currentStationIndex', 0);\n\n// Cria o payload de saída para o nó Switch.\nmsg.payload = { \"nextStation\": nextStation };\n\n// Retorna a mensagem para o próximo nó.\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "467025f2331e5fe3",
        "type": "inject",
        "z": "1e403841a39b0138",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1480,
        "y": 1280,
        "wires": [
            [
                "c27c6cfa5e71a191"
            ]
        ]
    },
    {
        "id": "c27c6cfa5e71a191",
        "type": "function",
        "z": "1e403841a39b0138",
        "name": "function 5",
        "func": "// Este código simula a primeira função, salvando uma rota de teste no contexto.\nlet rotaTeste = [\"EstacaoTeste1\", \"EstacaoTeste2\", \"EstacaoTeste3\"];\nflow.set('cartRoute', rotaTeste);\nnode.log(\"Rota de TESTE definida no contexto.\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 1280,
        "wires": [
            [
                "abeeadc18f4d2228"
            ]
        ]
    },
    {
        "id": "ccba6683b9683afb",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 780,
        "wires": []
    },
    {
        "id": "1c11c024f8970253",
        "type": "link in",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link in 93",
        "links": [
            "282176cff9080bc0"
        ],
        "x": 395,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "39d92c8b90c73082",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Iniciar e Resetar",
        "func": "// Função \"INICIAR & RESETAR\"\n\nnode.log(\"PROCESSO INICIADO: Limpando contexto e LIGANDO o disjuntor.\");\n\n// Limpa as variáveis de contexto do fluxo.\nflow.set('cartRoute', null);\nflow.set('currentStationIndex', -1);\n\n// LIGA O INTERRUPTOR GERAL DO PROCESSO\nflow.set('processIsActive', true);\n\n// Não precisamos mais da saída de reset, já que não funcionou.\n// Se o seu nó ainda tem 2 saídas, pode voltar para 1.\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 680,
        "wires": [
            [
                "21392db4f850da89"
            ],
            [
                "282176cff9080bc0"
            ]
        ]
    },
    {
        "id": "282176cff9080bc0",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "link out 35",
        "mode": "link",
        "links": [
            "1c11c024f8970253"
        ],
        "x": 325,
        "y": 720,
        "wires": []
    },
    {
        "id": "c915001fb8a850f2",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Saída para Distribution",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 520,
        "wires": []
    },
    {
        "id": "2b5242c9a9ceb0d1",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Saída para Processing",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 560,
        "wires": []
    },
    {
        "id": "df194bb8a4a49c30",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Saída para Vision",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 600,
        "wires": []
    },
    {
        "id": "61d259312317c2c0",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Saída para Robot",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 640,
        "wires": []
    },
    {
        "id": "191d4c3ed16add23",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Saída para Storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 680,
        "wires": []
    },
    {
        "id": "8ff2c1dbca6313f5",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "Saída para Sorting",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 720,
        "wires": []
    },
    {
        "id": "043bfe8854cf7c64",
        "type": "inject",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 520,
        "wires": [
            [
                "39d92c8b90c73082"
            ]
        ]
    },
    {
        "id": "8fc2dd37517cacad",
        "type": "inject",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "_Cart_Stat",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 840,
        "wires": [
            [
                "4e7784f548135bc5"
            ]
        ]
    },
    {
        "id": "d04bdb53047c95ac",
        "type": "inject",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "_Cart_Stat",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 920,
        "wires": [
            [
                "cf090b9cf9ef0b7d"
            ]
        ]
    },
    {
        "id": "7673e129cfe32489",
        "type": "inject",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "_Cart_Stat",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 1000,
        "wires": [
            [
                "da9cbfc7933f7398"
            ]
        ]
    },
    {
        "id": "81056c8f16df158b",
        "type": "inject",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "_Cart_Stat",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 1080,
        "wires": [
            [
                "a0421bed281fcf31"
            ]
        ]
    },
    {
        "id": "5fa9284daab62de2",
        "type": "inject",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "_Cart_Stat",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 1160,
        "wires": [
            [
                "62a55c0b5f150a81"
            ]
        ]
    },
    {
        "id": "b659389c3b0976d8",
        "type": "inject",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "_Cart_Stat",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 1240,
        "wires": [
            [
                "be466d8356cbb01c"
            ]
        ]
    },
    {
        "id": "44bb715f6102601c",
        "type": "OpcUa-Item",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "item": "ns=7;s=C_25_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_25_Request",
        "x": 520,
        "y": 880,
        "wires": [
            [
                "9edef44c047648d3",
                "3ca9cb16a9b41db2"
            ]
        ]
    },
    {
        "id": "dd53e3ed4f19bdc3",
        "type": "OpcUa-Item",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "item": "ns=8;s=C_26_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_26_Request",
        "x": 520,
        "y": 960,
        "wires": [
            [
                "058b65ad69510edb"
            ]
        ]
    },
    {
        "id": "4206964cc2972305",
        "type": "OpcUa-Item",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "item": "ns=9;s=C_27_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_27_Request",
        "x": 520,
        "y": 1040,
        "wires": [
            [
                "e8180b744076f4ef"
            ]
        ]
    },
    {
        "id": "17bb6569f492215e",
        "type": "OpcUa-Item",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "item": "ns=10;s=C_28_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_28_Request",
        "x": 520,
        "y": 1120,
        "wires": [
            [
                "839b4c048f7d1cc8"
            ]
        ]
    },
    {
        "id": "573ccfc8080a7491",
        "type": "OpcUa-Item",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "item": "ns=11;s=C_29_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_29_Request",
        "x": 520,
        "y": 1200,
        "wires": [
            [
                "902740288a237cc7"
            ]
        ]
    },
    {
        "id": "0d6056c607c1f3fa",
        "type": "link out",
        "z": "1e403841a39b0138",
        "g": "b1751377a9cbe2fc",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [],
        "x": 435,
        "y": 60,
        "wires": []
    },
    {
        "id": "459667caccbde980",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "b1751377a9cbe2fc",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 100,
        "wires": []
    },
    {
        "id": "19628f562e207eaa",
        "type": "mqtt in",
        "z": "1e403841a39b0138",
        "g": "b1751377a9cbe2fc",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b7ac41c0bcdf40b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 60,
        "wires": [
            [
                "862f50c650d020ca"
            ]
        ]
    },
    {
        "id": "862f50c650d020ca",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "b1751377a9cbe2fc",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 60,
        "wires": [
            [
                "0d6056c607c1f3fa",
                "459667caccbde980"
            ]
        ]
    },
    {
        "id": "17b00d5072f43677",
        "type": "link in",
        "z": "1e403841a39b0138",
        "g": "b1751377a9cbe2fc",
        "name": "S7 Actuators",
        "links": [
            "c43ac335b6a18ec9"
        ],
        "x": 165,
        "y": 100,
        "wires": [
            [
                "5f134fb0916b25a0"
            ]
        ]
    },
    {
        "id": "5f134fb0916b25a0",
        "type": "mqtt out",
        "z": "1e403841a39b0138",
        "g": "b1751377a9cbe2fc",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b7ac41c0bcdf40b1",
        "x": 270,
        "y": 100,
        "wires": []
    },
    {
        "id": "75bbe575c65422d4",
        "type": "function",
        "z": "1e403841a39b0138",
        "name": "Leitura",
        "func": "if (msg.topic === \"O_50_Part_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Part_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8d9d06a23f236631",
        "type": "function",
        "z": "1e403841a39b0138",
        "name": "Escrita",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "bf5f5f4f9434fc3d",
        "type": "function",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "C_24_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = \"C_24_Request\"\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 800,
        "wires": [
            [
                "c43ac335b6a18ec9",
                "26974897695982fc"
            ]
        ]
    },
    {
        "id": "26974897695982fc",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 760,
        "wires": []
    },
    {
        "id": "3ca9cb16a9b41db2",
        "type": "debug",
        "z": "1e403841a39b0138",
        "g": "7a8e6c2dbdf825d0",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 840,
        "wires": []
    },
    {
        "id": "dace153243a6fe72",
        "type": "function",
        "z": "1e403841a39b0138",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 200,
        "wires": [
            [
                "89f695489a63e644"
            ]
        ]
    },
    {
        "id": "89f695489a63e644",
        "type": "trigger",
        "z": "1e403841a39b0138",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 750,
        "y": 200,
        "wires": [
            [
                "b82f5fd8f751a9ab"
            ]
        ]
    },
    {
        "id": "b82f5fd8f751a9ab",
        "type": "file",
        "z": "1e403841a39b0138",
        "name": "Creates CSV Header",
        "filename": "C:\\ProjetoGemeo\\Routing.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 920,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "a27ba9d7d47983b6",
        "type": "debug",
        "z": "75d15dd5e1cdbad2",
        "g": "929287f4685e34d7",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "9ee378967d2b60c2",
        "type": "OpcUa-Server",
        "z": "75d15dd5e1cdbad2",
        "g": "929287f4685e34d7",
        "port": "53883",
        "name": "Server : Robot",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Robot/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Robot",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "a27ba9d7d47983b6"
            ]
        ]
    },
    {
        "id": "bea5fe25de7824f0",
        "type": "debug",
        "z": "75d15dd5e1cdbad2",
        "g": "a39d8d76c8a1fdd5",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "2c0cb36620379ffa",
        "type": "link out",
        "z": "75d15dd5e1cdbad2",
        "g": "a39d8d76c8a1fdd5",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [],
        "x": 825,
        "y": 60,
        "wires": []
    },
    {
        "id": "3854bc398efada6b",
        "type": "mqtt in",
        "z": "75d15dd5e1cdbad2",
        "g": "a39d8d76c8a1fdd5",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b7ac41c0bcdf40b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "06f0f6b6129d7e69"
            ]
        ]
    },
    {
        "id": "06f0f6b6129d7e69",
        "type": "function",
        "z": "75d15dd5e1cdbad2",
        "g": "a39d8d76c8a1fdd5",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "2c0cb36620379ffa",
                "bea5fe25de7824f0"
            ]
        ]
    },
    {
        "id": "c93c5dae8ccf05a5",
        "type": "mqtt out",
        "z": "75d15dd5e1cdbad2",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b7ac41c0bcdf40b1",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "b2de3df1446f5b8d",
        "type": "link in",
        "z": "75d15dd5e1cdbad2",
        "g": "a39d8d76c8a1fdd5",
        "name": "S7 Actuators",
        "links": [],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "c93c5dae8ccf05a5"
            ]
        ]
    },
    {
        "id": "4cfb118ef889b297",
        "type": "debug",
        "z": "94da80d1f610b831",
        "g": "c128e5a5cf820b20",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "661af5ebd4d13ab3",
        "type": "OpcUa-Server",
        "z": "94da80d1f610b831",
        "g": "c128e5a5cf820b20",
        "port": "53884",
        "name": "Server : Storage",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Storage/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Storage",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "4cfb118ef889b297"
            ]
        ]
    },
    {
        "id": "e4913d882cc504aa",
        "type": "debug",
        "z": "94da80d1f610b831",
        "g": "e7d1903cca52ebaa",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "78bfa36cd4e01b55",
        "type": "link out",
        "z": "94da80d1f610b831",
        "g": "e7d1903cca52ebaa",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "26f3ced601db515d",
        "type": "mqtt in",
        "z": "94da80d1f610b831",
        "g": "e7d1903cca52ebaa",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b7ac41c0bcdf40b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "83f53fddb5416907"
            ]
        ]
    },
    {
        "id": "83f53fddb5416907",
        "type": "function",
        "z": "94da80d1f610b831",
        "g": "e7d1903cca52ebaa",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "78bfa36cd4e01b55",
                "e4913d882cc504aa"
            ]
        ]
    },
    {
        "id": "923e7eec4fe8211c",
        "type": "mqtt out",
        "z": "94da80d1f610b831",
        "g": "e7d1903cca52ebaa",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b7ac41c0bcdf40b1",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "b9ba30c778e07b13",
        "type": "link in",
        "z": "94da80d1f610b831",
        "g": "e7d1903cca52ebaa",
        "name": "S7 Actuators",
        "links": [],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "923e7eec4fe8211c"
            ]
        ]
    },
    {
        "id": "52c90681338b0db6",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "item": "O_50_Part_Reserve",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Part_Reserve",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "d94eb9a252a835ed"
            ]
        ]
    },
    {
        "id": "fa75e582be0be436",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "item": "O_50_Claw_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_Cart",
        "x": 490,
        "y": 660,
        "wires": [
            [
                "d94eb9a252a835ed"
            ]
        ]
    },
    {
        "id": "06e9b91442ae7734",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "item": "O_50_Claw_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_Del",
        "x": 500,
        "y": 700,
        "wires": [
            [
                "d94eb9a252a835ed"
            ]
        ]
    },
    {
        "id": "6cd629aa134824a8",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "item": "O_50_Claw_Reserve",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_Reserve",
        "x": 480,
        "y": 740,
        "wires": [
            [
                "d94eb9a252a835ed"
            ]
        ]
    },
    {
        "id": "da763d711e23c2aa",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "item": "O_50_Claw_Low",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_Low",
        "x": 490,
        "y": 780,
        "wires": [
            [
                "d94eb9a252a835ed"
            ]
        ]
    },
    {
        "id": "a6c1fe44a1f67974",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "item": "O_50_Claw_High",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_High",
        "x": 490,
        "y": 820,
        "wires": [
            [
                "d94eb9a252a835ed"
            ]
        ]
    },
    {
        "id": "5c751f334bfb976a",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "item": "O_50_Part_in_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Part_in_Claw",
        "x": 480,
        "y": 860,
        "wires": [
            [
                "d94eb9a252a835ed"
            ]
        ]
    },
    {
        "id": "d94eb9a252a835ed",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "50 Physical Sensor",
        "mode": "link",
        "links": [
            "59418c3120d3cc95"
        ],
        "x": 665,
        "y": 740,
        "wires": []
    },
    {
        "id": "16497e5195e668f3",
        "type": "switch",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "50 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_50_Part_Reserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_Reserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_Low",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_High",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Part_in_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 740,
        "wires": [
            [
                "c62c4649a0f53bd6"
            ],
            [
                "21ed6950f37af7e3"
            ],
            [
                "fdb4f7f3d9e9ffd9"
            ],
            [
                "35a510a08ab9c0a1"
            ],
            [
                "124e8a98d6e53a1d"
            ],
            [
                "58664cf427d6950c"
            ],
            [
                "d71d677cf8d67847"
            ]
        ]
    },
    {
        "id": "c62c4649a0f53bd6",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "order": 0,
        "group": "7c3532b374fad5e8",
        "width": 0,
        "height": 0,
        "label": "Part in reserve position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Part_Reserve",
        "x": 1080,
        "y": 620,
        "wires": []
    },
    {
        "id": "21ed6950f37af7e3",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "order": 0,
        "group": "7c3532b374fad5e8",
        "width": 0,
        "height": 0,
        "label": "Claw at cart position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_Cart",
        "x": 1070,
        "y": 660,
        "wires": []
    },
    {
        "id": "fdb4f7f3d9e9ffd9",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "order": 0,
        "group": "7c3532b374fad5e8",
        "width": 0,
        "height": 0,
        "label": "Claw at delivery position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_Del",
        "x": 1060,
        "y": 700,
        "wires": []
    },
    {
        "id": "35a510a08ab9c0a1",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "order": 0,
        "group": "7c3532b374fad5e8",
        "width": 0,
        "height": 0,
        "label": "Claw at reserve position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_Reserve",
        "x": 1080,
        "y": 740,
        "wires": []
    },
    {
        "id": "124e8a98d6e53a1d",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "order": 0,
        "group": "7c3532b374fad5e8",
        "width": 0,
        "height": 0,
        "label": "Claw Low",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_Low",
        "x": 1070,
        "y": 780,
        "wires": []
    },
    {
        "id": "58664cf427d6950c",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "order": 0,
        "group": "7c3532b374fad5e8",
        "width": 0,
        "height": 0,
        "label": "Claw high",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_High",
        "x": 1070,
        "y": 820,
        "wires": []
    },
    {
        "id": "d71d677cf8d67847",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "order": 0,
        "group": "7c3532b374fad5e8",
        "width": 0,
        "height": 0,
        "label": "Part in claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Part_in_Claw",
        "x": 1080,
        "y": 860,
        "wires": []
    },
    {
        "id": "d5b4a2e9b9105474",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_50_Part_Reserve\" : false,\n            \"O_50_Claw_Cart\" : false,\n            \"O_50_Claw_Del\" : false,\n            \"O_50_Claw_Reserve\" : false,\n            \"O_50_Claw_Low\" : false,\n            \"O_50_Claw_High\" : false,\n            \"O_50_Part_in_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "666fe40b54438d47"
            ]
        ]
    },
    {
        "id": "5fc5412f9f6d69a8",
        "type": "OpcUa-Client",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "endpoint": "9d31d5774d948371",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "e66aa037b4b63e26",
                "884640f56ead6be1"
            ],
            [
                "d5b4a2e9b9105474"
            ]
        ]
    },
    {
        "id": "666fe40b54438d47",
        "type": "trigger",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "aa09fcc5cede5b90"
            ]
        ]
    },
    {
        "id": "0e858fe06deb4aba",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "5fc5412f9f6d69a8"
            ]
        ]
    },
    {
        "id": "e66aa037b4b63e26",
        "type": "debug",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "50 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 580,
        "wires": []
    },
    {
        "id": "aa09fcc5cede5b90",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "c3806d5f0976bf13"
            ]
        ]
    },
    {
        "id": "58dd4148d3e8a16e",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "0e858fe06deb4aba"
            ]
        ]
    },
    {
        "id": "c3806d5f0976bf13",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "0782b24a2f5b6418"
            ]
        ]
    },
    {
        "id": "0782b24a2f5b6418",
        "type": "file in",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "58dd4148d3e8a16e"
            ]
        ]
    },
    {
        "id": "04a1132bc89deefb",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "item": "O_51_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Start",
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "941cebef60742f1f"
            ]
        ]
    },
    {
        "id": "823ff8048fedd88b",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "item": "O_51_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Stop",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "941cebef60742f1f"
            ]
        ]
    },
    {
        "id": "827d8b9d32f11653",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "item": "O_51_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Key_Pos",
        "x": 480,
        "y": 1120,
        "wires": [
            [
                "941cebef60742f1f"
            ]
        ]
    },
    {
        "id": "4b63f8cfbfbfbb04",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "item": "O_51_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Reset",
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "941cebef60742f1f"
            ]
        ]
    },
    {
        "id": "34afd15958660a64",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "item": "O_51_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Panel_I4",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "941cebef60742f1f"
            ]
        ]
    },
    {
        "id": "0900888e8f7e9879",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "item": "O_51_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Panel_I5",
        "x": 480,
        "y": 1240,
        "wires": [
            [
                "941cebef60742f1f"
            ]
        ]
    },
    {
        "id": "cf834fdf886e137f",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "item": "O_51_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Panel_I6",
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "941cebef60742f1f"
            ]
        ]
    },
    {
        "id": "941cebef60742f1f",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "50 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "59418c3120d3cc95"
        ],
        "x": 645,
        "y": 1180,
        "wires": []
    },
    {
        "id": "3baa9c7ec43146f6",
        "type": "switch",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "50 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_51_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1180,
        "wires": [
            [
                "b5a4110ec4d54889"
            ],
            [
                "f4bffe79633b4e57"
            ],
            [
                "ba206150236b1ac0"
            ],
            [
                "874c8b114165af4f"
            ],
            [
                "7acf02099190cc85"
            ],
            [
                "ccfe95543c7a37e6"
            ],
            [
                "60fcc650078c851e"
            ],
            [
                "5f0bdc6067802942"
            ]
        ]
    },
    {
        "id": "b5a4110ec4d54889",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "order": 0,
        "group": "253b98b922bb0a07",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Start",
        "x": 1050,
        "y": 1040,
        "wires": []
    },
    {
        "id": "f4bffe79633b4e57",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "order": 0,
        "group": "253b98b922bb0a07",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Stop",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ba206150236b1ac0",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "order": 0,
        "group": "253b98b922bb0a07",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Key_Pos",
        "x": 1060,
        "y": 1120,
        "wires": []
    },
    {
        "id": "874c8b114165af4f",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "order": 0,
        "group": "253b98b922bb0a07",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Reset",
        "x": 1050,
        "y": 1160,
        "wires": []
    },
    {
        "id": "7acf02099190cc85",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "order": 0,
        "group": "253b98b922bb0a07",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Panel_I4",
        "x": 1060,
        "y": 1200,
        "wires": []
    },
    {
        "id": "ccfe95543c7a37e6",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "order": 0,
        "group": "253b98b922bb0a07",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Panel_I5",
        "x": 1060,
        "y": 1240,
        "wires": []
    },
    {
        "id": "60fcc650078c851e",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "order": 0,
        "group": "253b98b922bb0a07",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Panel_I6",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "34f5e925d90c245a",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "item": "O_51_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Panel_I7",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "941cebef60742f1f"
            ]
        ]
    },
    {
        "id": "5f0bdc6067802942",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "order": 0,
        "group": "253b98b922bb0a07",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Panel_I7",
        "x": 1060,
        "y": 1320,
        "wires": []
    },
    {
        "id": "890dd195ec90baeb",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 960,
        "wires": [
            [
                "327bd3b81b3b0fdd"
            ]
        ]
    },
    {
        "id": "8e69567ef73f85cf",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 960,
        "wires": [
            [
                "890dd195ec90baeb"
            ]
        ]
    },
    {
        "id": "327bd3b81b3b0fdd",
        "type": "OpcUa-Client",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "endpoint": "9d31d5774d948371",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 960,
        "wires": [
            [
                "23c3a14c0dcd06e0",
                "d94de5cf5f9134f8"
            ],
            [
                "5691271c21dd622d"
            ]
        ]
    },
    {
        "id": "715805d9070728c0",
        "type": "file in",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 960,
        "wires": [
            [
                "8e69567ef73f85cf"
            ]
        ]
    },
    {
        "id": "23c3a14c0dcd06e0",
        "type": "debug",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "50 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1000,
        "wires": []
    },
    {
        "id": "5691271c21dd622d",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_51_Start\" : false,\n            \"O_51_Stop\" : false,\n            \"O_51_Key_Pos\" : false,\n            \"O_51_Reset\" : false,\n            \"O_51_Panel_I4\" : false,\n            \"O_51_Panel_I5\" : false,\n            \"O_51_Panel_I6\" : false,\n            \"O_51_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 960,
        "wires": [
            [
                "1308d9d7a4e3924e"
            ]
        ]
    },
    {
        "id": "77ad1086c5618b8e",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 960,
        "wires": [
            [
                "715805d9070728c0"
            ]
        ]
    },
    {
        "id": "1308d9d7a4e3924e",
        "type": "trigger",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 960,
        "wires": [
            [
                "1f5098be73e65a76"
            ]
        ]
    },
    {
        "id": "1f5098be73e65a76",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 960,
        "wires": [
            [
                "77ad1086c5618b8e"
            ]
        ]
    },
    {
        "id": "c90d6f1e203d8242",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "item": "I_50_Claw_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "I_50_Claw_2_Del",
        "x": 470,
        "y": 1500,
        "wires": [
            [
                "2d0acc2748853355"
            ]
        ]
    },
    {
        "id": "12bbd4de68b521a6",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "item": "I_50_Claw_2_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "I_50_Claw_2_Cart",
        "x": 470,
        "y": 1540,
        "wires": [
            [
                "2d0acc2748853355"
            ]
        ]
    },
    {
        "id": "0c8e0ec0fcda64a5",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "item": "I_50_Claw_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "I_50_Claw_Down",
        "x": 470,
        "y": 1580,
        "wires": [
            [
                "2d0acc2748853355"
            ]
        ]
    },
    {
        "id": "1a85c905aef4220e",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "item": "I_50_Close_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "I_50_Close_Claw",
        "x": 470,
        "y": 1620,
        "wires": [
            [
                "2d0acc2748853355"
            ]
        ]
    },
    {
        "id": "2d0acc2748853355",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "50 Physical Actuators",
        "mode": "link",
        "links": [
            "59418c3120d3cc95"
        ],
        "x": 645,
        "y": 1560,
        "wires": []
    },
    {
        "id": "29f1a1b5e95cc132",
        "type": "switch",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "50 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_50_Claw_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_50_Claw_2_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_50_Claw_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_50_Close_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 1560,
        "wires": [
            [
                "d60f52da09078155"
            ],
            [
                "e7a008eab3e52815"
            ],
            [
                "c4f9cce1ed4de86a"
            ],
            [
                "217d023a5a15dcc8"
            ]
        ]
    },
    {
        "id": "283d72da5ef4445f",
        "type": "ui_switch",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "I_50_Claw_2_Del",
        "label": "Moves claw to delivery position",
        "tooltip": "",
        "group": "4770dcc7dac439f1",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1500,
        "wires": [
            [
                "c90d6f1e203d8242"
            ]
        ]
    },
    {
        "id": "0cf946e22f19c6a7",
        "type": "ui_switch",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "I_50_Claw_2_Cart",
        "label": "Moves claw to cart position",
        "tooltip": "",
        "group": "4770dcc7dac439f1",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1540,
        "wires": [
            [
                "12bbd4de68b521a6"
            ]
        ]
    },
    {
        "id": "7ac153f3dda06d37",
        "type": "ui_switch",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "I_50_Claw_Down",
        "label": "Lowers claw",
        "tooltip": "",
        "group": "4770dcc7dac439f1",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1580,
        "wires": [
            [
                "0c8e0ec0fcda64a5"
            ]
        ]
    },
    {
        "id": "7778de6f657fc120",
        "type": "ui_switch",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "I_50_Close_Claw",
        "label": "Closes claw",
        "tooltip": "",
        "group": "4770dcc7dac439f1",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1620,
        "wires": [
            [
                "1a85c905aef4220e"
            ]
        ]
    },
    {
        "id": "2152d45c6b01dfd0",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1420,
        "wires": [
            [
                "6c02613f7ceca4ae"
            ]
        ]
    },
    {
        "id": "3cfb48ca2b5a2b62",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "2152d45c6b01dfd0"
            ]
        ]
    },
    {
        "id": "6c02613f7ceca4ae",
        "type": "OpcUa-Client",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "endpoint": "9d31d5774d948371",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1420,
        "wires": [
            [
                "d2582617fefdd494",
                "5935b0b06a396b2f"
            ],
            [
                "d8ad66cf18651604"
            ]
        ]
    },
    {
        "id": "8c46ee163cf14392",
        "type": "file in",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "3cfb48ca2b5a2b62"
            ]
        ]
    },
    {
        "id": "d2582617fefdd494",
        "type": "debug",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "50 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1460,
        "wires": []
    },
    {
        "id": "d8ad66cf18651604",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_50_Claw_2_Del\" : false,\n            \"I_50_Claw_2_Cart\" : false,\n            \"I_50_Claw_Down\" : false,\n            \"I_50_Close_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1420,
        "wires": [
            [
                "c00cd614944753e4"
            ]
        ]
    },
    {
        "id": "ac3923236cffccde",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "8c46ee163cf14392"
            ]
        ]
    },
    {
        "id": "c00cd614944753e4",
        "type": "trigger",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1420,
        "wires": [
            [
                "a32230afbca289f4"
            ]
        ]
    },
    {
        "id": "a32230afbca289f4",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1420,
        "wires": [
            [
                "ac3923236cffccde"
            ]
        ]
    },
    {
        "id": "4932565303106bb1",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "item": "I_51_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Led_Start",
        "x": 480,
        "y": 1800,
        "wires": [
            [
                "0e2c1e3a6bb6938c"
            ]
        ]
    },
    {
        "id": "395b0acd6d055d35",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "item": "I_51_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Led_Reset",
        "x": 480,
        "y": 1840,
        "wires": [
            [
                "0e2c1e3a6bb6938c"
            ]
        ]
    },
    {
        "id": "9040ef038b12db8f",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "item": "I_51_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Led_Extra1",
        "x": 470,
        "y": 1880,
        "wires": [
            [
                "0e2c1e3a6bb6938c"
            ]
        ]
    },
    {
        "id": "dbf4ace945ca467f",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "item": "I_51_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Led_Extra2",
        "x": 470,
        "y": 1920,
        "wires": [
            [
                "0e2c1e3a6bb6938c"
            ]
        ]
    },
    {
        "id": "ea8fbfdce25d5dba",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "item": "I_51_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Panel_O4",
        "x": 480,
        "y": 1960,
        "wires": [
            [
                "0e2c1e3a6bb6938c"
            ]
        ]
    },
    {
        "id": "0e2c1e3a6bb6938c",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "50 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "59418c3120d3cc95"
        ],
        "x": 645,
        "y": 1940,
        "wires": []
    },
    {
        "id": "fdb79c9bc21c603d",
        "type": "switch",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "50 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_51_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1940,
        "wires": [
            [
                "982ac2a06f98f550"
            ],
            [
                "1848c8f89260242e"
            ],
            [
                "523591222f4fcb69"
            ],
            [
                "1d328e7976d50e3a"
            ],
            [
                "75276484c67886e6"
            ],
            [
                "5f7b688fc5bbf6fa"
            ],
            [
                "0eb4d73e14576825"
            ],
            [
                "02768a4e50acfee7"
            ]
        ]
    },
    {
        "id": "24ad93a664a6d030",
        "type": "ui_switch",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "bb83383da337bbb5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1800,
        "wires": [
            [
                "4932565303106bb1"
            ]
        ]
    },
    {
        "id": "c3232edb634b695b",
        "type": "ui_switch",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "bb83383da337bbb5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1840,
        "wires": [
            [
                "395b0acd6d055d35"
            ]
        ]
    },
    {
        "id": "5cf3badfb8247326",
        "type": "ui_switch",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "bb83383da337bbb5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1880,
        "wires": [
            [
                "9040ef038b12db8f"
            ]
        ]
    },
    {
        "id": "1ae827a107c51466",
        "type": "ui_switch",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "bb83383da337bbb5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1920,
        "wires": [
            [
                "dbf4ace945ca467f"
            ]
        ]
    },
    {
        "id": "9f5b8a03d9bc2a70",
        "type": "ui_switch",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "bb83383da337bbb5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1960,
        "wires": [
            [
                "ea8fbfdce25d5dba"
            ]
        ]
    },
    {
        "id": "2e98440344720373",
        "type": "ui_switch",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "bb83383da337bbb5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2000,
        "wires": [
            [
                "6d6f324dd05c5001"
            ]
        ]
    },
    {
        "id": "6d6f324dd05c5001",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "item": "I_51_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Panel_O5",
        "x": 480,
        "y": 2000,
        "wires": [
            [
                "0e2c1e3a6bb6938c"
            ]
        ]
    },
    {
        "id": "b2f58b0948e12510",
        "type": "ui_switch",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "bb83383da337bbb5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2040,
        "wires": [
            [
                "5be335cc59ca22ce"
            ]
        ]
    },
    {
        "id": "5be335cc59ca22ce",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "item": "I_51_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Panel_O6",
        "x": 480,
        "y": 2040,
        "wires": [
            [
                "0e2c1e3a6bb6938c"
            ]
        ]
    },
    {
        "id": "c585922a596b9b0a",
        "type": "ui_switch",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "bb83383da337bbb5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2080,
        "wires": [
            [
                "c0f93b185c23564e"
            ]
        ]
    },
    {
        "id": "c0f93b185c23564e",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "item": "I_51_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Panel_O7",
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "0e2c1e3a6bb6938c"
            ]
        ]
    },
    {
        "id": "d8a598e18ee804be",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1720,
        "wires": [
            [
                "58c754b84f68c5a8"
            ]
        ]
    },
    {
        "id": "e35eb16267079e57",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1720,
        "wires": [
            [
                "d8a598e18ee804be"
            ]
        ]
    },
    {
        "id": "58c754b84f68c5a8",
        "type": "OpcUa-Client",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "endpoint": "9d31d5774d948371",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1720,
        "wires": [
            [
                "0e7f84bcb6eead03",
                "d955317eb9861d2b"
            ],
            [
                "94c2e962df6e1fce"
            ]
        ]
    },
    {
        "id": "329c715ea8f24a87",
        "type": "file in",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1720,
        "wires": [
            [
                "e35eb16267079e57"
            ]
        ]
    },
    {
        "id": "0e7f84bcb6eead03",
        "type": "debug",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "50 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1760,
        "wires": []
    },
    {
        "id": "94c2e962df6e1fce",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_51_Led_Start\" : false,\n            \"I_51_Led_Reset\" : false,\n            \"I_51_Led_Extra1\" : false,\n            \"I_51_Led_Extra2\" : false,\n            \"I_51_Panel_O4\" : false,\n            \"I_51_Panel_O5\" : false,\n            \"I_51_Panel_O6\" : false,\n            \"I_51_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1720,
        "wires": [
            [
                "0798297230126185"
            ]
        ]
    },
    {
        "id": "f6ee371f515e8e77",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1720,
        "wires": [
            [
                "329c715ea8f24a87"
            ]
        ]
    },
    {
        "id": "0798297230126185",
        "type": "trigger",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1720,
        "wires": [
            [
                "8d66f1a32e3eb699"
            ]
        ]
    },
    {
        "id": "8d66f1a32e3eb699",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1720,
        "wires": [
            [
                "f6ee371f515e8e77"
            ]
        ]
    },
    {
        "id": "27709156df73d551",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "item": "F_52_Claw_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "F_52_Claw_2_Del",
        "x": 470,
        "y": 2260,
        "wires": [
            [
                "aec4af013003bb47"
            ]
        ]
    },
    {
        "id": "68fced3bfe4ca99b",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "item": "F_52_Claw_2_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "F_52_Claw_2_Cart",
        "x": 470,
        "y": 2300,
        "wires": [
            [
                "aec4af013003bb47"
            ]
        ]
    },
    {
        "id": "3beafbfe2d0d87b0",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "item": "F_52_Claw_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "F_52_Claw_Down",
        "x": 470,
        "y": 2340,
        "wires": [
            [
                "aec4af013003bb47"
            ]
        ]
    },
    {
        "id": "df6acc31ae76e248",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "item": "F_52_Close_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "F_52_Close_Claw",
        "x": 470,
        "y": 2380,
        "wires": [
            [
                "aec4af013003bb47"
            ]
        ]
    },
    {
        "id": "aec4af013003bb47",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "50 Physical Feedback",
        "mode": "link",
        "links": [
            "59418c3120d3cc95"
        ],
        "x": 645,
        "y": 2320,
        "wires": []
    },
    {
        "id": "39f122a428b9178d",
        "type": "switch",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "50 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_52_Claw_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_52_Claw_2_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_52_Claw_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_52_Close_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 2320,
        "wires": [
            [
                "cb7f074a8b90f75f"
            ],
            [
                "3a5e9f6a1bc2886e"
            ],
            [
                "28a054bdba2529f7"
            ],
            [
                "52ae403c1f62f6c0"
            ]
        ]
    },
    {
        "id": "cb7f074a8b90f75f",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "order": 0,
        "group": "c16469d40b10f9c7",
        "width": 0,
        "height": 0,
        "label": "Moves claw to delivery position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_52_Claw_2_Del",
        "x": 1070,
        "y": 2260,
        "wires": []
    },
    {
        "id": "3a5e9f6a1bc2886e",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "order": 0,
        "group": "c16469d40b10f9c7",
        "width": 0,
        "height": 0,
        "label": "Moves claw to cart position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_52_Claw_2_Cart",
        "x": 1070,
        "y": 2300,
        "wires": []
    },
    {
        "id": "28a054bdba2529f7",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "order": 0,
        "group": "c16469d40b10f9c7",
        "width": 0,
        "height": 0,
        "label": "Lowers claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_52_Claw_Down",
        "x": 1070,
        "y": 2340,
        "wires": []
    },
    {
        "id": "52ae403c1f62f6c0",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "order": 0,
        "group": "c16469d40b10f9c7",
        "width": 0,
        "height": 0,
        "label": "Closes claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_52_Close_Claw",
        "x": 1070,
        "y": 2380,
        "wires": []
    },
    {
        "id": "e50635e5196a72a2",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2180,
        "wires": [
            [
                "a662b82beb1e7644"
            ]
        ]
    },
    {
        "id": "efa11c89abf9dbc9",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2180,
        "wires": [
            [
                "e50635e5196a72a2"
            ]
        ]
    },
    {
        "id": "a662b82beb1e7644",
        "type": "OpcUa-Client",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "endpoint": "9d31d5774d948371",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2180,
        "wires": [
            [
                "6cf91a6a3dce6fd9",
                "bc0d64b3b37a8ef8"
            ],
            [
                "e0f74c32161a1d3b"
            ]
        ]
    },
    {
        "id": "0ecc557b2b7a24e9",
        "type": "file in",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2180,
        "wires": [
            [
                "efa11c89abf9dbc9"
            ]
        ]
    },
    {
        "id": "6cf91a6a3dce6fd9",
        "type": "debug",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "50 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2220,
        "wires": []
    },
    {
        "id": "e0f74c32161a1d3b",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_52_Claw_2_Del\" : false,\n            \"F_52_Claw_2_Cart\" : false,\n            \"F_52_Claw_Down\" : false,\n            \"F_52_Close_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2180,
        "wires": [
            [
                "f04853dc0f3b11b3"
            ]
        ]
    },
    {
        "id": "1c1e68cc13e9c661",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2180,
        "wires": [
            [
                "0ecc557b2b7a24e9"
            ]
        ]
    },
    {
        "id": "f04853dc0f3b11b3",
        "type": "trigger",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2180,
        "wires": [
            [
                "98a7c349b47230d6"
            ]
        ]
    },
    {
        "id": "98a7c349b47230d6",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2180,
        "wires": [
            [
                "1c1e68cc13e9c661"
            ]
        ]
    },
    {
        "id": "74634e74a4a450a8",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "item": "F_53_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Led_Start",
        "x": 480,
        "y": 2560,
        "wires": [
            [
                "4fccd3148f188d97"
            ]
        ]
    },
    {
        "id": "c676ad667d9e6eb5",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "item": "F_53_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Led_Reset",
        "x": 470,
        "y": 2600,
        "wires": [
            [
                "4fccd3148f188d97"
            ]
        ]
    },
    {
        "id": "b1488b1c933f7a39",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "item": "F_53_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Led_Extra1",
        "x": 470,
        "y": 2640,
        "wires": [
            [
                "4fccd3148f188d97"
            ]
        ]
    },
    {
        "id": "29cb27117f85aa76",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "item": "F_53_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Led_Extra2",
        "x": 470,
        "y": 2680,
        "wires": [
            [
                "4fccd3148f188d97"
            ]
        ]
    },
    {
        "id": "c51be57fc9a65f0e",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "item": "F_53_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Panel_O4",
        "x": 480,
        "y": 2720,
        "wires": [
            [
                "4fccd3148f188d97"
            ]
        ]
    },
    {
        "id": "ca6e48148ed76ed8",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "item": "F_53_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Panel_O5",
        "x": 480,
        "y": 2760,
        "wires": [
            [
                "4fccd3148f188d97"
            ]
        ]
    },
    {
        "id": "1d05913b589bee96",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "item": "F_53_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Panel_O6",
        "x": 480,
        "y": 2800,
        "wires": [
            [
                "4fccd3148f188d97"
            ]
        ]
    },
    {
        "id": "4fccd3148f188d97",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "90 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "59418c3120d3cc95"
        ],
        "x": 645,
        "y": 2700,
        "wires": []
    },
    {
        "id": "1875c813e04a3ba9",
        "type": "switch",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "50 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_53_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2700,
        "wires": [
            [
                "52097cf08b4d28f0"
            ],
            [
                "617beeeaa34f099e"
            ],
            [
                "e1fbe79f8b15991b"
            ],
            [
                "f51ce4be0b4cd474"
            ],
            [
                "7c2d7ae2560e4f95"
            ],
            [
                "b5fd1defd73b170b"
            ],
            [
                "50b6c05a4db7113a"
            ],
            [
                "dad5711fb2335d18"
            ]
        ]
    },
    {
        "id": "52097cf08b4d28f0",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "order": 0,
        "group": "2b05692ef7caf42d",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Led_Start",
        "x": 1060,
        "y": 2560,
        "wires": []
    },
    {
        "id": "617beeeaa34f099e",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "order": 0,
        "group": "2b05692ef7caf42d",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Led_Reset",
        "x": 1070,
        "y": 2600,
        "wires": []
    },
    {
        "id": "e1fbe79f8b15991b",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "order": 0,
        "group": "2b05692ef7caf42d",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Led_Extra1",
        "x": 1070,
        "y": 2640,
        "wires": []
    },
    {
        "id": "f51ce4be0b4cd474",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "order": 0,
        "group": "2b05692ef7caf42d",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Led_Extra2",
        "x": 1070,
        "y": 2680,
        "wires": []
    },
    {
        "id": "7c2d7ae2560e4f95",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "order": 0,
        "group": "2b05692ef7caf42d",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Panel_O4",
        "x": 1060,
        "y": 2720,
        "wires": []
    },
    {
        "id": "b5fd1defd73b170b",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "order": 0,
        "group": "2b05692ef7caf42d",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Panel_O5",
        "x": 1060,
        "y": 2760,
        "wires": []
    },
    {
        "id": "50b6c05a4db7113a",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "order": 0,
        "group": "2b05692ef7caf42d",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Panel_O6",
        "x": 1060,
        "y": 2800,
        "wires": []
    },
    {
        "id": "69b67e6358a6aa77",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "item": "F_53_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Panel_O7",
        "x": 480,
        "y": 2840,
        "wires": [
            [
                "4fccd3148f188d97"
            ]
        ]
    },
    {
        "id": "dad5711fb2335d18",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "order": 0,
        "group": "2b05692ef7caf42d",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Panel_O7",
        "x": 1060,
        "y": 2840,
        "wires": []
    },
    {
        "id": "57f440496d9b24a5",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2480,
        "wires": [
            [
                "3525bef10c49e306"
            ]
        ]
    },
    {
        "id": "e3213516761771d4",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2480,
        "wires": [
            [
                "57f440496d9b24a5"
            ]
        ]
    },
    {
        "id": "3525bef10c49e306",
        "type": "OpcUa-Client",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "endpoint": "9d31d5774d948371",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2480,
        "wires": [
            [
                "40811d69293b2794",
                "514333f58467efa4"
            ],
            [
                "cfc452211782f920"
            ]
        ]
    },
    {
        "id": "298de32c71389899",
        "type": "file in",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2480,
        "wires": [
            [
                "e3213516761771d4"
            ]
        ]
    },
    {
        "id": "40811d69293b2794",
        "type": "debug",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "50 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2520,
        "wires": []
    },
    {
        "id": "cfc452211782f920",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_53_Led_Start\" : false,\n            \"F_53_Led_Reset\" : false,\n            \"F_53_Led_Extra1\" : false,\n            \"F_53_Led_Extra2\" : false,\n            \"F_53_Panel_O4\" : false,\n            \"F_53_Panel_O5\" : false,\n            \"F_53_Panel_O6\" : false,\n            \"F_53_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2480,
        "wires": [
            [
                "da4643f308c40041"
            ]
        ]
    },
    {
        "id": "fd6b63621149bddb",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2480,
        "wires": [
            [
                "298de32c71389899"
            ]
        ]
    },
    {
        "id": "da4643f308c40041",
        "type": "trigger",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2480,
        "wires": [
            [
                "c71f51fb3429fa6b"
            ]
        ]
    },
    {
        "id": "c71f51fb3429fa6b",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2480,
        "wires": [
            [
                "fd6b63621149bddb"
            ]
        ]
    },
    {
        "id": "bcc9c1d63bf56c01",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "item": "C_52_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_52_Profibus",
        "x": 620,
        "y": 3020,
        "wires": [
            [
                "918905a43357d5f0"
            ]
        ]
    },
    {
        "id": "f9ae3dc9f047f555",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "item": "C_55_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_55_Initialization",
        "x": 610,
        "y": 3060,
        "wires": [
            [
                "918905a43357d5f0"
            ]
        ]
    },
    {
        "id": "5113d4e879ec3c98",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "item": "C_55_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "C_55_Start",
        "x": 630,
        "y": 3100,
        "wires": [
            [
                "918905a43357d5f0"
            ]
        ]
    },
    {
        "id": "de9e2bd37ff8e9ae",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "item": "C_55_Cart2Del",
        "datatype": "Boolean",
        "value": "",
        "name": "C_55_Cart2Del",
        "x": 620,
        "y": 3140,
        "wires": [
            [
                "918905a43357d5f0"
            ]
        ]
    },
    {
        "id": "8b2b1fa64c45d144",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "item": "C_55_Del2Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "C_55_Del2Cart",
        "x": 620,
        "y": 3180,
        "wires": [
            [
                "918905a43357d5f0"
            ]
        ]
    },
    {
        "id": "918905a43357d5f0",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "50 Control",
        "mode": "link",
        "links": [
            "59418c3120d3cc95"
        ],
        "x": 795,
        "y": 3100,
        "wires": []
    },
    {
        "id": "b299e89671983078",
        "type": "switch",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "50 C",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_52_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_55_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_55_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_55_Cart2Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_55_Del2Cart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 990,
        "y": 3100,
        "wires": [
            [
                "9a5ff89532e00246"
            ],
            [
                "0d62920c0c3b2d6e"
            ],
            [
                "282b46536c6ad209"
            ],
            [
                "3493ab1a995ad7ca"
            ],
            [
                "0552af8081da6f19"
            ]
        ]
    },
    {
        "id": "9a5ff89532e00246",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "order": 2,
        "group": "829bd971df6e4aa4",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_52_Profibus",
        "x": 1180,
        "y": 3020,
        "wires": []
    },
    {
        "id": "0d62920c0c3b2d6e",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "order": 1,
        "group": "829bd971df6e4aa4",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_55_Initialization",
        "x": 1190,
        "y": 3060,
        "wires": []
    },
    {
        "id": "fd0d404e8d8289f7",
        "type": "ui_dropdown",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "829bd971df6e4aa4",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Cart to Delivery Mode",
                "value": "C_55_Cart2Del",
                "type": "str"
            },
            {
                "label": "Delivery to Cart Mode",
                "value": "C_55_Del2Cart",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 3160,
        "wires": [
            [
                "c6377946b1368668",
                "1e14f65d9534b356"
            ]
        ]
    },
    {
        "id": "c6377946b1368668",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "C_55_Cart2Del",
        "func": "if (msg.payload === \"C_55_Cart2Del\") \nreturn { payload: true, topic: \"C_55_Cart2Del\"};\nelse return { payload: false, topic: \"C_55_Cart2Del\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3140,
        "wires": [
            [
                "de9e2bd37ff8e9ae"
            ]
        ]
    },
    {
        "id": "1e14f65d9534b356",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "C_55_Del2Cart",
        "func": "if (msg.payload === \"C_55_Del2Cart\") \nreturn { payload: true, topic: \"C_55_Del2Cart\"};\nelse return { payload: false, topic: \"C_55_Del2Cart\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3180,
        "wires": [
            [
                "8b2b1fa64c45d144"
            ]
        ]
    },
    {
        "id": "6aa1901e66c02987",
        "type": "inject",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_55_Cart2Del",
        "payloadType": "str",
        "x": 190,
        "y": 3200,
        "wires": [
            [
                "fd0d404e8d8289f7"
            ]
        ]
    },
    {
        "id": "759ad7e67814bdf3",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2940,
        "wires": [
            [
                "3c75eeb1bc4502f8"
            ]
        ]
    },
    {
        "id": "798799209cbed063",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2940,
        "wires": [
            [
                "759ad7e67814bdf3"
            ]
        ]
    },
    {
        "id": "3c75eeb1bc4502f8",
        "type": "OpcUa-Client",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "endpoint": "9d31d5774d948371",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2940,
        "wires": [
            [
                "4d572706ee82b5a6",
                "6c3727eb9946fc16"
            ],
            [
                "add3f083e5ee1a12"
            ]
        ]
    },
    {
        "id": "923cbb395f3474a3",
        "type": "file in",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2940,
        "wires": [
            [
                "798799209cbed063"
            ]
        ]
    },
    {
        "id": "4d572706ee82b5a6",
        "type": "debug",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "50 C",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2980,
        "wires": []
    },
    {
        "id": "add3f083e5ee1a12",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_52_Profibus\" : false,\n            \"C_55_Initialization\" : false,\n            \"C_55_Start\" : false,\n            \"C_55_Cart2Del\" : false,\n            \"C_55_Del2Cart\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2940,
        "wires": [
            [
                "247f13d162a73702"
            ]
        ]
    },
    {
        "id": "a9b34ec02e14178a",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2940,
        "wires": [
            [
                "923cbb395f3474a3"
            ]
        ]
    },
    {
        "id": "247f13d162a73702",
        "type": "trigger",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2940,
        "wires": [
            [
                "39a74915179f38c1"
            ]
        ]
    },
    {
        "id": "39a74915179f38c1",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2940,
        "wires": [
            [
                "a9b34ec02e14178a"
            ]
        ]
    },
    {
        "id": "0672d35396d58bf0",
        "type": "ui_switch",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "C_55_Start",
        "label": "Start",
        "tooltip": "Start Production",
        "group": "829bd971df6e4aa4",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 3100,
        "wires": [
            [
                "5113d4e879ec3c98"
            ]
        ]
    },
    {
        "id": "3d98cdcb2e3017c4",
        "type": "comment",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "75d7af72df20e833",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "3742cb2ba445370e"
            ]
        ]
    },
    {
        "id": "3742cb2ba445370e",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Handling1_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "7f35c67aa2e45926"
            ]
        ]
    },
    {
        "id": "2345c368454a09b4",
        "type": "file",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "63a95b6518d215b1",
        "type": "comment",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "7f35c67aa2e45926",
        "type": "OpcUa-Client",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "endpoint": "9d31d5774d948371",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "1a27b272cf798c6e"
            ],
            [
                "28b4e61508b2d440",
                "629ee6227dba217c"
            ]
        ]
    },
    {
        "id": "1a27b272cf798c6e",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "a946bfcb9ba82708",
                "162cf5876d2ec39a"
            ]
        ]
    },
    {
        "id": "a946bfcb9ba82708",
        "type": "file",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "162cf5876d2ec39a",
        "type": "debug",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "6bc956b029eab897",
        "type": "comment",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "f17b42f2f4061f8e",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "0d8cdcb81e5f40db"
            ]
        ]
    },
    {
        "id": "d5ac1d9ddb4beb89",
        "type": "OpcUa-Client",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "endpoint": "9d31d5774d948371",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "60fe4fb93abb7d9f"
            ],
            []
        ]
    },
    {
        "id": "60fe4fb93abb7d9f",
        "type": "debug",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "59418c3120d3cc95",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Write_Hand1",
        "links": [
            "d94eb9a252a835ed",
            "4fccd3148f188d97",
            "918905a43357d5f0",
            "941cebef60742f1f",
            "0e72ba4a67260460",
            "0e2c1e3a6bb6938c",
            "aec4af013003bb47",
            "2d0acc2748853355"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "4ef2219c49bd8fe6"
            ]
        ]
    },
    {
        "id": "4ef2219c49bd8fe6",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "e71fb34cf06b78d6"
            ]
        ]
    },
    {
        "id": "e71fb34cf06b78d6",
        "type": "file in",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "f17b42f2f4061f8e"
            ]
        ]
    },
    {
        "id": "0d8cdcb81e5f40db",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "d5ac1d9ddb4beb89"
            ]
        ]
    },
    {
        "id": "2dd2952036e7739b",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "CSV Link",
        "links": [
            "28b4e61508b2d440"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "3b119df290691c0b"
            ]
        ]
    },
    {
        "id": "3b119df290691c0b",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "9f50f15a9047f330"
            ]
        ]
    },
    {
        "id": "9f50f15a9047f330",
        "type": "trigger",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "2345c368454a09b4"
            ]
        ]
    },
    {
        "id": "28b4e61508b2d440",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "2dd2952036e7739b",
            "7fce618053606b85"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "7fce618053606b85",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "CSV Link",
        "links": [
            "28b4e61508b2d440"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "81947ef7e27a39a0"
            ]
        ]
    },
    {
        "id": "81947ef7e27a39a0",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_50_Part_Reserve\" : false,\n    \"O_50_Claw_Cart\" : false,\n    \"O_50_Claw_Del\" : false,\n    \"O_50_Claw_Reserve\" : false,\n    \"O_50_Claw_Low\" : false,\n    \"O_50_Claw_High\" : false,\n    \"O_50_Part_in_Claw\" : false,\n    \"O_51_Start\" : false,\n    \"O_51_Stop\" : false,\n    \"O_51_Key_Pos\" : false,\n    \"O_51_Reset\" : false,\n    \"O_51_Panel_I4\" : false,\n    \"O_51_Panel_I5\" : false,\n    \"O_51_Panel_I6\" : false,\n    \"O_51_Panel_I7\" : false,\n    \"F_52_Claw_2_Del\" : false,\n    \"F_52_Claw_2_Cart\" : false,\n    \"F_52_Claw_Down\" : false,\n    \"F_52_Close_Claw\" : false,\n    \"F_53_Led_Start\" : false,\n    \"F_53_Led_Reset\" : false,\n    \"F_53_Led_Extra1\" : false,\n    \"F_53_Led_Extra2\" : false,\n    \"F_53_Panel_O4\" : false,\n    \"F_53_Panel_O5\" : false,\n    \"F_53_Panel_O6\" : false,\n    \"F_53_Panel_O7\" : false,\n    \"A_54_Request\" : false,\n    \"A_54_No_Cart\" : false,\n    \"A_54_Cart_Full\" : false,\n    \"C_55_Initialization\" : false,\n    \"C_55_PD_Proc\" : false,\n    \"C_55_PD_Cart\" : false,\n    \"I_50_Claw_2_Del\" : false,\n    \"I_50_Claw_2_Cart\" : false,\n    \"I_50_Claw_Down\" : false,\n    \"I_50_Close_Claw\" : false,\n    \"I_51_Led_Start\" : false,\n    \"I_51_Led_Reset\" : false,\n    \"I_51_Led_Extra1\" : false,\n    \"I_51_Led_Extra2\" : false,\n    \"I_51_Panel_O4\" : false,\n    \"I_51_Panel_O5\" : false,\n    \"I_51_Panel_O6\" : false,\n    \"I_51_Panel_O7\" : false,\n    \"C_52_Profibus\" : false,\n    \"A_54_Cart_Stat\" : false,\n    \"A_54_Cart_Next\" : false,\n    \"A_54_Optic\" : false,\n    \"A_54_Count\" : false,\n    \"A_54_Pist_Bck\" : false,\n    \"A_54_Release_FB\" : false,\n    \"C_55_Start\" : false,\n    \"C_55_Cart2Del\" : false,\n    \"C_55_Del2Cart\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "361e74651bf883e8"
            ]
        ]
    },
    {
        "id": "361e74651bf883e8",
        "type": "trigger",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "75d7af72df20e833"
            ]
        ]
    },
    {
        "id": "4f37733dfa36b80b",
        "type": "debug",
        "z": "0897c1d9a1c086e1",
        "g": "b3799830ce2a1124",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "34dee94f057883cb",
        "type": "OpcUa-Server",
        "z": "0897c1d9a1c086e1",
        "g": "b3799830ce2a1124",
        "port": "53885",
        "name": "Server : Handling 1",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Handling1/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Handling1",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "4f37733dfa36b80b"
            ]
        ]
    },
    {
        "id": "13744070ac30f714",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "item": "A_54_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Cart_Stat",
        "x": 480,
        "y": 3380,
        "wires": [
            [
                "0e72ba4a67260460"
            ]
        ]
    },
    {
        "id": "76f67cc6180cc680",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "item": "A_54_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Cart_Next",
        "x": 470,
        "y": 3420,
        "wires": [
            [
                "0e72ba4a67260460"
            ]
        ]
    },
    {
        "id": "14b61d05aba4aed8",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "item": "A_54_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Optic",
        "x": 490,
        "y": 3460,
        "wires": [
            [
                "0e72ba4a67260460"
            ]
        ]
    },
    {
        "id": "5998a045dee51517",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "item": "A_54_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Count",
        "x": 490,
        "y": 3500,
        "wires": [
            [
                "0e72ba4a67260460"
            ]
        ]
    },
    {
        "id": "850c1ba4047a2cb9",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "item": "A_54_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Pist_Bck",
        "x": 480,
        "y": 3540,
        "wires": [
            [
                "0e72ba4a67260460"
            ]
        ]
    },
    {
        "id": "920c0e486e7aed51",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "item": "A_54_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Release_FB",
        "x": 470,
        "y": 3580,
        "wires": [
            [
                "0e72ba4a67260460"
            ]
        ]
    },
    {
        "id": "90336cfb677a9645",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "item": "A_54_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Request",
        "x": 480,
        "y": 3620,
        "wires": [
            [
                "0e72ba4a67260460"
            ]
        ]
    },
    {
        "id": "0e72ba4a67260460",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "50 AS-i",
        "mode": "link",
        "links": [
            "59418c3120d3cc95"
        ],
        "x": 645,
        "y": 3540,
        "wires": []
    },
    {
        "id": "b2b97c5d718fe003",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3300,
        "wires": [
            [
                "8bde4ad7af7305a5"
            ]
        ]
    },
    {
        "id": "8bde4ad7af7305a5",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3300,
        "wires": [
            [
                "d0399f822fae664a"
            ]
        ]
    },
    {
        "id": "d0399f822fae664a",
        "type": "file in",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3300,
        "wires": [
            [
                "2883cdb770d1069c"
            ]
        ]
    },
    {
        "id": "2883cdb770d1069c",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3300,
        "wires": [
            [
                "a2ba9b11115d3f6e"
            ]
        ]
    },
    {
        "id": "a2ba9b11115d3f6e",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3300,
        "wires": [
            [
                "716068cdb139130f"
            ]
        ]
    },
    {
        "id": "716068cdb139130f",
        "type": "OpcUa-Client",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "endpoint": "9d31d5774d948371",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3300,
        "wires": [
            [
                "40486899d39ef779",
                "9842c018ebec6948"
            ],
            [
                "2427b39b0318adb7"
            ]
        ]
    },
    {
        "id": "91e04ada696c56f5",
        "type": "switch",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "50 AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A_54_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_No_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Cart_Full",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 3540,
        "wires": [
            [
                "25a2cd0dfca666d8"
            ],
            [
                "fdf313754cf16ff2"
            ],
            [
                "29c55a5913a8ba41"
            ],
            [
                "1df9029f93ba3b23"
            ],
            [
                "ea735265b2612d5b"
            ],
            [
                "7047d5bce741c263"
            ],
            [
                "9fb765efae1a7f3a"
            ],
            [
                "026bec7c54e14f73"
            ],
            [
                "ee22392e4b8a6bb2"
            ]
        ]
    },
    {
        "id": "25a2cd0dfca666d8",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "order": 0,
        "group": "ec21593d344c789d",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Cart_Stat",
        "x": 1060,
        "y": 3380,
        "wires": []
    },
    {
        "id": "fdf313754cf16ff2",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "order": 0,
        "group": "ec21593d344c789d",
        "width": 0,
        "height": 0,
        "label": "Cart near next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Cart_Next",
        "x": 1070,
        "y": 3420,
        "wires": []
    },
    {
        "id": "29c55a5913a8ba41",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "order": 0,
        "group": "ec21593d344c789d",
        "width": 0,
        "height": 0,
        "label": "Optic sensor on station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Optic",
        "x": 1050,
        "y": 3460,
        "wires": []
    },
    {
        "id": "1df9029f93ba3b23",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "order": 0,
        "group": "ec21593d344c789d",
        "width": 0,
        "height": 0,
        "label": "Cart count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Count",
        "x": 1050,
        "y": 3500,
        "wires": []
    },
    {
        "id": "ea735265b2612d5b",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "order": 0,
        "group": "ec21593d344c789d",
        "width": 0,
        "height": 0,
        "label": "Piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Pist_Bck",
        "x": 1060,
        "y": 3540,
        "wires": []
    },
    {
        "id": "7047d5bce741c263",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "order": 0,
        "group": "ec21593d344c789d",
        "width": 0,
        "height": 0,
        "label": "Pin release feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Release_FB",
        "x": 1070,
        "y": 3580,
        "wires": []
    },
    {
        "id": "9fb765efae1a7f3a",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "order": 0,
        "group": "ec21593d344c789d",
        "width": 0,
        "height": 0,
        "label": "Request cart",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Request",
        "x": 1060,
        "y": 3620,
        "wires": []
    },
    {
        "id": "d844fdbc39ba327d",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "item": "A_54_No_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_No_Cart",
        "x": 480,
        "y": 3660,
        "wires": [
            [
                "0e72ba4a67260460"
            ]
        ]
    },
    {
        "id": "026bec7c54e14f73",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "order": 0,
        "group": "ec21593d344c789d",
        "width": 0,
        "height": 0,
        "label": "No Cart at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_No_Cart",
        "x": 1060,
        "y": 3660,
        "wires": []
    },
    {
        "id": "ee22392e4b8a6bb2",
        "type": "ui_led",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "order": 0,
        "group": "ec21593d344c789d",
        "width": 0,
        "height": 0,
        "label": "Cart Full at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Cart_Full",
        "x": 1060,
        "y": 3700,
        "wires": []
    },
    {
        "id": "232f1221f16d6668",
        "type": "OpcUa-Item",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "item": "A_54_Cart_Full",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Cart_Full",
        "x": 480,
        "y": 3700,
        "wires": [
            [
                "0e72ba4a67260460"
            ]
        ]
    },
    {
        "id": "40486899d39ef779",
        "type": "debug",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "50 AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 3340,
        "wires": []
    },
    {
        "id": "2427b39b0318adb7",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"A_54_Request\" : false,\n            \"A_54_No_Cart\" : false,\n            \"A_54_Cart_Full\" : false,\n            \"A_54_Cart_Stat\" : false,\n            \"A_54_Cart_Next\" : false,\n            \"A_54_Optic\" : false,\n            \"A_54_Count\" : false,\n            \"A_54_Pist_Bck\" : false,\n            \"A_54_Release_FB\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3300,
        "wires": [
            [
                "d20b242086e34d3f"
            ]
        ]
    },
    {
        "id": "d20b242086e34d3f",
        "type": "trigger",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3300,
        "wires": [
            [
                "b2b97c5d718fe003"
            ]
        ]
    },
    {
        "id": "67a7128efa2f1ce7",
        "type": "debug",
        "z": "0897c1d9a1c086e1",
        "g": "f93c4ce78db32fc6",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "23609963d3549473",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "f93c4ce78db32fc6",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "74a90a11c35d7dd7",
            "9886822457a042f0",
            "774c161521f5c2ee",
            "3daf9b7619c55cee",
            "c477937805da5f21",
            "3b8c9cd3b27a4777"
        ],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "51c70af75abb793e",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "Sub In 50 AS-i",
        "links": [
            "9842c018ebec6948"
        ],
        "x": 755,
        "y": 3540,
        "wires": [
            [
                "91e04ada696c56f5"
            ]
        ]
    },
    {
        "id": "9842c018ebec6948",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "Sub Out 50 AS-i",
        "mode": "link",
        "links": [
            "51c70af75abb793e"
        ],
        "x": 1295,
        "y": 3300,
        "wires": []
    },
    {
        "id": "919f9b10a6131455",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "A_54_Cart_Full",
        "func": "if (msg.topic === \"A_54_Cart_Full\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Cart_Full\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3700,
        "wires": [
            [
                "232f1221f16d6668"
            ]
        ]
    },
    {
        "id": "74a90a11c35d7dd7",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "S7 AS-i",
        "links": [
            "23609963d3549473"
        ],
        "x": 55,
        "y": 3540,
        "wires": [
            [
                "919f9b10a6131455",
                "ac95b86dc464f573",
                "bef93bb43d8bf38e",
                "082e7775e836f87d",
                "853134254438251e",
                "99ea1c3996a124cd",
                "2e4da75f2f03e892",
                "dfb1acbe38f5607a",
                "bc0caad6e192eba6"
            ]
        ]
    },
    {
        "id": "ac95b86dc464f573",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "A_54_No_Cart",
        "func": "if (msg.topic === \"A_54_No_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_No_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3660,
        "wires": [
            [
                "d844fdbc39ba327d"
            ]
        ]
    },
    {
        "id": "bef93bb43d8bf38e",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "A_54_Request",
        "func": "if (msg.topic === \"A_54_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3620,
        "wires": [
            [
                "90336cfb677a9645"
            ]
        ]
    },
    {
        "id": "082e7775e836f87d",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "A_54_Release_FB",
        "func": "if (msg.topic === \"A_54_Release_FB\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Release_FB\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3580,
        "wires": [
            [
                "920c0e486e7aed51"
            ]
        ]
    },
    {
        "id": "853134254438251e",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "A_54_Pist_Bck",
        "func": "if (msg.topic === \"A_54_Pist_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Pist_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3540,
        "wires": [
            [
                "850c1ba4047a2cb9"
            ]
        ]
    },
    {
        "id": "99ea1c3996a124cd",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "A_54_Count",
        "func": "if (msg.topic === \"A_54_Count\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Count\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3500,
        "wires": [
            [
                "5998a045dee51517"
            ]
        ]
    },
    {
        "id": "2e4da75f2f03e892",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "A_54_Optic",
        "func": "if (msg.topic === \"A_54_Optic\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Optic\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3460,
        "wires": [
            [
                "14b61d05aba4aed8"
            ]
        ]
    },
    {
        "id": "dfb1acbe38f5607a",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "A_54_Cart_Next",
        "func": "if (msg.topic === \"A_54_Cart_Next\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Cart_Next\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3420,
        "wires": [
            [
                "76f67cc6180cc680"
            ]
        ]
    },
    {
        "id": "bc0caad6e192eba6",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "A_54_Cart_Stat",
        "func": "if (msg.topic === \"A_54_Cart_Stat\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Cart_Stat\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3380,
        "wires": [
            [
                "13744070ac30f714"
            ]
        ]
    },
    {
        "id": "71f18e8e49e753a6",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "Sub In 50 C",
        "links": [
            "6c3727eb9946fc16"
        ],
        "x": 895,
        "y": 3100,
        "wires": [
            [
                "b299e89671983078"
            ]
        ]
    },
    {
        "id": "6c3727eb9946fc16",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "Sub Out 50 C",
        "mode": "link",
        "links": [
            "71f18e8e49e753a6"
        ],
        "x": 1295,
        "y": 2940,
        "wires": []
    },
    {
        "id": "9886822457a042f0",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "S7 C",
        "links": [
            "23609963d3549473"
        ],
        "x": 55,
        "y": 3040,
        "wires": [
            [
                "d4d296c6cff7f250",
                "7318b600278bdcc0"
            ]
        ]
    },
    {
        "id": "d4d296c6cff7f250",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "C_52_Profibus",
        "func": "if (msg.topic === \"C_52_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_52_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3020,
        "wires": [
            [
                "bcc9c1d63bf56c01"
            ]
        ]
    },
    {
        "id": "7318b600278bdcc0",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "C_55_Initialization",
        "func": "if (msg.topic === \"C_55_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_55_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3060,
        "wires": [
            [
                "f9ae3dc9f047f555"
            ]
        ]
    },
    {
        "id": "514333f58467efa4",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "Sub Out 50 AF",
        "mode": "link",
        "links": [
            "5facfa9096e9fef0"
        ],
        "x": 1295,
        "y": 2480,
        "wires": []
    },
    {
        "id": "5facfa9096e9fef0",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "Sub In 50 AF",
        "links": [
            "514333f58467efa4"
        ],
        "x": 775,
        "y": 2700,
        "wires": [
            [
                "1875c813e04a3ba9"
            ]
        ]
    },
    {
        "id": "774c161521f5c2ee",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "S7 AF",
        "links": [
            "23609963d3549473"
        ],
        "x": 55,
        "y": 2700,
        "wires": [
            [
                "7fd158d39a111c79",
                "66735f248a9f6c93",
                "649b6931a390524c",
                "e698cc8d7d0b9d9c",
                "108cd64913ca1dec",
                "32a24c1c612567a5",
                "c0f46ca8c1afe241",
                "a86053500467df2d"
            ]
        ]
    },
    {
        "id": "7fd158d39a111c79",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "name": "F_53_Panel_O7",
        "func": "if (msg.topic === \"F_53_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2840,
        "wires": [
            [
                "69b67e6358a6aa77"
            ]
        ]
    },
    {
        "id": "66735f248a9f6c93",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "name": "F_53_Panel_O6",
        "func": "if (msg.topic === \"F_53_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2800,
        "wires": [
            [
                "1d05913b589bee96"
            ]
        ]
    },
    {
        "id": "649b6931a390524c",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "name": "F_53_Panel_O5",
        "func": "if (msg.topic === \"F_53_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2760,
        "wires": [
            [
                "ca6e48148ed76ed8"
            ]
        ]
    },
    {
        "id": "e698cc8d7d0b9d9c",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "name": "F_53_Panel_O4",
        "func": "if (msg.topic === \"F_53_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2720,
        "wires": [
            [
                "c51be57fc9a65f0e"
            ]
        ]
    },
    {
        "id": "108cd64913ca1dec",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "name": "F_53_Led_Extra2",
        "func": "if (msg.topic === \"F_53_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2680,
        "wires": [
            [
                "29cb27117f85aa76"
            ]
        ]
    },
    {
        "id": "32a24c1c612567a5",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "name": "F_53_Led_Extra1",
        "func": "if (msg.topic === \"F_53_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2640,
        "wires": [
            [
                "b1488b1c933f7a39"
            ]
        ]
    },
    {
        "id": "c0f46ca8c1afe241",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "name": "F_53_Led_Reset",
        "func": "if (msg.topic === \"F_53_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2600,
        "wires": [
            [
                "c676ad667d9e6eb5"
            ]
        ]
    },
    {
        "id": "a86053500467df2d",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "name": "F_53_Led_Start",
        "func": "if (msg.topic === \"F_53_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2560,
        "wires": [
            [
                "74634e74a4a450a8"
            ]
        ]
    },
    {
        "id": "bc0d64b3b37a8ef8",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "Sub Out 50 PF",
        "mode": "link",
        "links": [
            "cd4ded7ac69329e5"
        ],
        "x": 1295,
        "y": 2180,
        "wires": []
    },
    {
        "id": "cd4ded7ac69329e5",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "Sub In 50 PF",
        "links": [
            "bc0d64b3b37a8ef8"
        ],
        "x": 775,
        "y": 2320,
        "wires": [
            [
                "39f122a428b9178d"
            ]
        ]
    },
    {
        "id": "10459864dcc3ec0b",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "F_52_Claw_2_Del",
        "func": "if (msg.topic === \"F_52_Claw_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_52_Claw_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2260,
        "wires": [
            [
                "27709156df73d551"
            ]
        ]
    },
    {
        "id": "c177e35f0482ceb9",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "F_52_Claw_2_Cart",
        "func": "if (msg.topic === \"F_52_Claw_2_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_52_Claw_2_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2300,
        "wires": [
            [
                "68fced3bfe4ca99b"
            ]
        ]
    },
    {
        "id": "f7e3da10acea41f0",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "F_52_Claw_Down",
        "func": "if (msg.topic === \"F_52_Claw_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_52_Claw_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2340,
        "wires": [
            [
                "3beafbfe2d0d87b0"
            ]
        ]
    },
    {
        "id": "a63498ae96bd8cac",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "F_52_Close_Claw",
        "func": "if (msg.topic === \"F_52_Close_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_52_Close_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2380,
        "wires": [
            [
                "df6acc31ae76e248"
            ]
        ]
    },
    {
        "id": "3daf9b7619c55cee",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "S7 PF",
        "links": [
            "23609963d3549473"
        ],
        "x": 55,
        "y": 2320,
        "wires": [
            [
                "a63498ae96bd8cac",
                "f7e3da10acea41f0",
                "c177e35f0482ceb9",
                "10459864dcc3ec0b"
            ]
        ]
    },
    {
        "id": "d955317eb9861d2b",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "Sub Out 50 AA",
        "mode": "link",
        "links": [
            "11b132e4f79e73cd"
        ],
        "x": 1295,
        "y": 1720,
        "wires": []
    },
    {
        "id": "11b132e4f79e73cd",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "Sub In 50 AA",
        "links": [
            "d955317eb9861d2b"
        ],
        "x": 775,
        "y": 1940,
        "wires": [
            [
                "fdb79c9bc21c603d"
            ]
        ]
    },
    {
        "id": "5935b0b06a396b2f",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "Sub Out 50 PA",
        "mode": "link",
        "links": [
            "b86c7e828437bdfe"
        ],
        "x": 1295,
        "y": 1420,
        "wires": []
    },
    {
        "id": "b86c7e828437bdfe",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "Sub In 50 PA",
        "links": [
            "5935b0b06a396b2f"
        ],
        "x": 775,
        "y": 1560,
        "wires": [
            [
                "29f1a1b5e95cc132"
            ]
        ]
    },
    {
        "id": "d94de5cf5f9134f8",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "Sub Out 50 AS",
        "mode": "link",
        "links": [
            "42b6c308ef73d108"
        ],
        "x": 1295,
        "y": 960,
        "wires": []
    },
    {
        "id": "42b6c308ef73d108",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "Sub In 50 AS",
        "links": [
            "d94de5cf5f9134f8"
        ],
        "x": 775,
        "y": 1180,
        "wires": [
            [
                "3baa9c7ec43146f6"
            ]
        ]
    },
    {
        "id": "c477937805da5f21",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "S7 AS",
        "links": [
            "23609963d3549473"
        ],
        "x": 55,
        "y": 1180,
        "wires": [
            [
                "c8cbedb289b1fbf7",
                "58d0b86bcd20010b",
                "c6a873646680a9e1",
                "2ab8cfd579e9ba44",
                "b4dbc9d9379497bf",
                "3f35d2acf5910513",
                "2cb5055cf0f56215",
                "a87f85b5a9d30cec"
            ]
        ]
    },
    {
        "id": "c8cbedb289b1fbf7",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "O_51_Panel_I7",
        "func": "if (msg.topic === \"O_51_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "34f5e925d90c245a"
            ]
        ]
    },
    {
        "id": "58d0b86bcd20010b",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "O_51_Panel_I6",
        "func": "if (msg.topic === \"O_51_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "cf834fdf886e137f"
            ]
        ]
    },
    {
        "id": "c6a873646680a9e1",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "O_51_Panel_I5",
        "func": "if (msg.topic === \"O_51_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1240,
        "wires": [
            [
                "0900888e8f7e9879"
            ]
        ]
    },
    {
        "id": "2ab8cfd579e9ba44",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "O_51_Panel_I4",
        "func": "if (msg.topic === \"O_51_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "34afd15958660a64"
            ]
        ]
    },
    {
        "id": "b4dbc9d9379497bf",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "O_51_Reset",
        "func": "if (msg.topic === \"O_51_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "4b63f8cfbfbfbb04"
            ]
        ]
    },
    {
        "id": "3f35d2acf5910513",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "O_51_Key_Pos",
        "func": "if (msg.topic === \"O_51_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "827d8b9d32f11653"
            ]
        ]
    },
    {
        "id": "2cb5055cf0f56215",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "O_51_Stop",
        "func": "if (msg.topic === \"O_51_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "823ff8048fedd88b"
            ]
        ]
    },
    {
        "id": "a87f85b5a9d30cec",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "O_51_Start",
        "func": "if (msg.topic === \"O_51_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "04a1132bc89deefb"
            ]
        ]
    },
    {
        "id": "27f6585d56434c5c",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "Sub In 50 PS",
        "links": [
            "884640f56ead6be1"
        ],
        "x": 775,
        "y": 740,
        "wires": [
            [
                "16497e5195e668f3"
            ]
        ]
    },
    {
        "id": "884640f56ead6be1",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "Sub Out 50 PS",
        "mode": "link",
        "links": [
            "27f6585d56434c5c"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "3b8c9cd3b27a4777",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "S7 PS",
        "links": [
            "23609963d3549473"
        ],
        "x": 55,
        "y": 760,
        "wires": [
            [
                "3627c17561c8547f",
                "6562f623920fe675",
                "f8889accf86e0a1d",
                "96eb2c34d287d889",
                "70df84f9f2d3b036",
                "f18bf76280dae088",
                "0c7cbad33415d994"
            ]
        ]
    },
    {
        "id": "3627c17561c8547f",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "O_50_Part_in_Claw",
        "func": "if (msg.topic === \"O_50_Part_in_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Part_in_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 860,
        "wires": [
            [
                "5c751f334bfb976a"
            ]
        ]
    },
    {
        "id": "6562f623920fe675",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "O_50_Claw_High",
        "func": "if (msg.topic === \"O_50_Claw_High\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_High\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 820,
        "wires": [
            [
                "a6c1fe44a1f67974"
            ]
        ]
    },
    {
        "id": "f8889accf86e0a1d",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "O_50_Claw_Low",
        "func": "if (msg.topic === \"O_50_Claw_Low\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_Low\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 780,
        "wires": [
            [
                "da763d711e23c2aa"
            ]
        ]
    },
    {
        "id": "96eb2c34d287d889",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "O_50_Claw_Reserve",
        "func": "if (msg.topic === \"O_50_Claw_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 740,
        "wires": [
            [
                "6cd629aa134824a8"
            ]
        ]
    },
    {
        "id": "70df84f9f2d3b036",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "O_50_Claw_Del",
        "func": "if (msg.topic === \"O_50_Claw_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 700,
        "wires": [
            [
                "06e9b91442ae7734"
            ]
        ]
    },
    {
        "id": "f18bf76280dae088",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "O_50_Claw_Cart",
        "func": "if (msg.topic === \"O_50_Claw_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 660,
        "wires": [
            [
                "fa75e582be0be436"
            ]
        ]
    },
    {
        "id": "0c7cbad33415d994",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "O_50_Part_Reserve",
        "func": "if (msg.topic === \"O_50_Part_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Part_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 620,
        "wires": [
            [
                "52c90681338b0db6"
            ]
        ]
    },
    {
        "id": "7211136af0bafa9e",
        "type": "mqtt in",
        "z": "0897c1d9a1c086e1",
        "g": "f93c4ce78db32fc6",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b7ac41c0bcdf40b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "a7e6ec67406974d3"
            ]
        ]
    },
    {
        "id": "a7e6ec67406974d3",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "f93c4ce78db32fc6",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "23609963d3549473",
                "67a7128efa2f1ce7"
            ]
        ]
    },
    {
        "id": "629ee6227dba217c",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "d2d8b71a2a0cfec4"
            ]
        ]
    },
    {
        "id": "d2d8b71a2a0cfec4",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "014bebdbda8b26d1",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "b98a5365ac493d24",
            "cfc703cad0f994ef",
            "e21776c61d49363d",
            "fce045bb66311fde",
            "5d7f8b1b8301e38e",
            "02c9974c99bca153",
            "28cbcaa1bf47702e",
            "d5a0f49ac7e31adb"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "b98a5365ac493d24",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "e8ca79a8c374701b",
        "name": "Read PS",
        "links": [
            "d2d8b71a2a0cfec4"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "d5b4a2e9b9105474"
            ]
        ]
    },
    {
        "id": "cfc703cad0f994ef",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "0cd830752355c083",
        "name": "Read AS",
        "links": [
            "d2d8b71a2a0cfec4"
        ],
        "x": 55,
        "y": 960,
        "wires": [
            [
                "5691271c21dd622d"
            ]
        ]
    },
    {
        "id": "e21776c61d49363d",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "Read PA",
        "links": [
            "d2d8b71a2a0cfec4"
        ],
        "x": 55,
        "y": 1420,
        "wires": [
            [
                "d8ad66cf18651604"
            ]
        ]
    },
    {
        "id": "fce045bb66311fde",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "Read S",
        "links": [
            "d2d8b71a2a0cfec4"
        ],
        "x": 55,
        "y": 1720,
        "wires": [
            [
                "94c2e962df6e1fce"
            ]
        ]
    },
    {
        "id": "5d7f8b1b8301e38e",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "19d92a04f9a68f32",
        "name": "Read PF",
        "links": [
            "d2d8b71a2a0cfec4"
        ],
        "x": 55,
        "y": 2180,
        "wires": [
            [
                "e0f74c32161a1d3b"
            ]
        ]
    },
    {
        "id": "02c9974c99bca153",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "40fa31564ac66078",
        "name": "Read AF",
        "links": [
            "d2d8b71a2a0cfec4"
        ],
        "x": 55,
        "y": 2480,
        "wires": [
            [
                "cfc452211782f920"
            ]
        ]
    },
    {
        "id": "28cbcaa1bf47702e",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "Read C",
        "links": [
            "d2d8b71a2a0cfec4"
        ],
        "x": 55,
        "y": 2940,
        "wires": [
            [
                "add3f083e5ee1a12"
            ]
        ]
    },
    {
        "id": "d5a0f49ac7e31adb",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "f15fd7c71d1cf616",
        "name": "Read S",
        "links": [
            "d2d8b71a2a0cfec4"
        ],
        "x": 55,
        "y": 3300,
        "wires": [
            [
                "2427b39b0318adb7"
            ]
        ]
    },
    {
        "id": "d5ed8aeecc1db212",
        "type": "mqtt out",
        "z": "0897c1d9a1c086e1",
        "g": "f93c4ce78db32fc6",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b7ac41c0bcdf40b1",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "1c442b5fd5e89e43",
        "type": "link in",
        "z": "0897c1d9a1c086e1",
        "g": "f93c4ce78db32fc6",
        "name": "S7 Actuators",
        "links": [
            "c29ecd68b3db03f3",
            "878248241ef9c85b",
            "9f59ea14821fadae"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "d5ed8aeecc1db212"
            ]
        ]
    },
    {
        "id": "d60f52da09078155",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "I_50_Claw_2_Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1500,
        "wires": [
            [
                "c29ecd68b3db03f3"
            ]
        ]
    },
    {
        "id": "e7a008eab3e52815",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "I_50_Claw_2_Cart",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1540,
        "wires": [
            [
                "c29ecd68b3db03f3"
            ]
        ]
    },
    {
        "id": "c4f9cce1ed4de86a",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "I_50_Claw_Down",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1580,
        "wires": [
            [
                "c29ecd68b3db03f3"
            ]
        ]
    },
    {
        "id": "217d023a5a15dcc8",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "I_50_Close_Claw",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1620,
        "wires": [
            [
                "c29ecd68b3db03f3"
            ]
        ]
    },
    {
        "id": "c29ecd68b3db03f3",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "6289d52ae68301c4",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "1c442b5fd5e89e43"
        ],
        "x": 1235,
        "y": 1560,
        "wires": []
    },
    {
        "id": "982ac2a06f98f550",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1800,
        "wires": [
            [
                "878248241ef9c85b"
            ]
        ]
    },
    {
        "id": "1848c8f89260242e",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1840,
        "wires": [
            [
                "878248241ef9c85b"
            ]
        ]
    },
    {
        "id": "523591222f4fcb69",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1880,
        "wires": [
            [
                "878248241ef9c85b"
            ]
        ]
    },
    {
        "id": "1d328e7976d50e3a",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1920,
        "wires": [
            [
                "878248241ef9c85b"
            ]
        ]
    },
    {
        "id": "75276484c67886e6",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1960,
        "wires": [
            [
                "878248241ef9c85b"
            ]
        ]
    },
    {
        "id": "5f7b688fc5bbf6fa",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2000,
        "wires": [
            [
                "878248241ef9c85b"
            ]
        ]
    },
    {
        "id": "0eb4d73e14576825",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2040,
        "wires": [
            [
                "878248241ef9c85b"
            ]
        ]
    },
    {
        "id": "02768a4e50acfee7",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "9fd5525afdee172c",
        "name": "I_51_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2080,
        "wires": [
            [
                "878248241ef9c85b"
            ]
        ]
    },
    {
        "id": "878248241ef9c85b",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "1c442b5fd5e89e43"
        ],
        "x": 1225,
        "y": 1940,
        "wires": []
    },
    {
        "id": "282b46536c6ad209",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "C_55_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 3100,
        "wires": [
            [
                "9f59ea14821fadae"
            ]
        ]
    },
    {
        "id": "3493ab1a995ad7ca",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "C_55_Cart2Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 3140,
        "wires": [
            [
                "9f59ea14821fadae"
            ]
        ]
    },
    {
        "id": "0552af8081da6f19",
        "type": "function",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "C_55_Del2Cart",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 3180,
        "wires": [
            [
                "9f59ea14821fadae"
            ]
        ]
    },
    {
        "id": "9f59ea14821fadae",
        "type": "link out",
        "z": "0897c1d9a1c086e1",
        "g": "96461107ceb69d82",
        "name": "S7 C",
        "mode": "link",
        "links": [
            "1c442b5fd5e89e43"
        ],
        "x": 1365,
        "y": 3100,
        "wires": []
    },
    {
        "id": "bf608a64593de2c0",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "item": "O_60_SPart",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SPart",
        "x": 490,
        "y": 620,
        "wires": [
            [
                "588ff1e231f8c50c"
            ]
        ]
    },
    {
        "id": "38c91ba6e51aa367",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "item": "O_60_SInd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SInd",
        "x": 490,
        "y": 660,
        "wires": [
            [
                "588ff1e231f8c50c"
            ]
        ]
    },
    {
        "id": "f5426764ab493c94",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "item": "O_60_SPhoto",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SPhoto",
        "x": 480,
        "y": 700,
        "wires": [
            [
                "588ff1e231f8c50c"
            ]
        ]
    },
    {
        "id": "1313015487160fe0",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "item": "O_60_Part_Pass",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_Part_Pass",
        "x": 470,
        "y": 740,
        "wires": [
            [
                "588ff1e231f8c50c"
            ]
        ]
    },
    {
        "id": "7fa010a7c6cbf1b3",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "item": "O_60_SL1_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SL1_Bck",
        "x": 480,
        "y": 780,
        "wires": [
            [
                "588ff1e231f8c50c"
            ]
        ]
    },
    {
        "id": "81a51c02c2c9efab",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "item": "O_60_SL1_Fwd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SL1_Fwd",
        "x": 480,
        "y": 820,
        "wires": [
            [
                "588ff1e231f8c50c"
            ]
        ]
    },
    {
        "id": "e5f534a25519de70",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "item": "O_60_SL2_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SL2_Bck",
        "x": 480,
        "y": 860,
        "wires": [
            [
                "588ff1e231f8c50c"
            ]
        ]
    },
    {
        "id": "588ff1e231f8c50c",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "60 Physical Sensor",
        "mode": "link",
        "links": [
            "9b93210289261178",
            "db0aed47d59b3cfb"
        ],
        "x": 645,
        "y": 760,
        "wires": []
    },
    {
        "id": "7c2712ee9790ac86",
        "type": "switch",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "60 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_60_SPart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SInd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SPhoto",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_Part_Pass",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SL1_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SL1_Fwd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SL2_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SL2_Fwd",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 760,
        "wires": [
            [
                "113420e6e3dbd550"
            ],
            [
                "f9391d9cb9ad760c"
            ],
            [
                "745ccb7bf27f2a61"
            ],
            [
                "84c385caa49fcfed"
            ],
            [
                "0929e774fbeaeb57"
            ],
            [
                "9f7389638e10738e"
            ],
            [
                "e28b8565eeef24d8"
            ],
            [
                "50bc38d528c9ac9b"
            ]
        ]
    },
    {
        "id": "113420e6e3dbd550",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "order": 0,
        "group": "894a03fce94da0d7",
        "width": 0,
        "height": 0,
        "label": "Part sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SPart",
        "x": 1050,
        "y": 620,
        "wires": []
    },
    {
        "id": "f9391d9cb9ad760c",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "order": 0,
        "group": "894a03fce94da0d7",
        "width": 0,
        "height": 0,
        "label": "Inductive sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SInd",
        "x": 1050,
        "y": 660,
        "wires": []
    },
    {
        "id": "745ccb7bf27f2a61",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "order": 0,
        "group": "894a03fce94da0d7",
        "width": 0,
        "height": 0,
        "label": "Photoelectric sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SPhoto",
        "x": 1060,
        "y": 700,
        "wires": []
    },
    {
        "id": "84c385caa49fcfed",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "order": 0,
        "group": "894a03fce94da0d7",
        "width": 0,
        "height": 0,
        "label": "Part has passed the identify",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_Part_Pass",
        "x": 1070,
        "y": 740,
        "wires": []
    },
    {
        "id": "0929e774fbeaeb57",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "order": 0,
        "group": "894a03fce94da0d7",
        "width": 0,
        "height": 0,
        "label": "Lever1 back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SL1_Bck",
        "x": 1060,
        "y": 780,
        "wires": []
    },
    {
        "id": "9f7389638e10738e",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "order": 0,
        "group": "894a03fce94da0d7",
        "width": 0,
        "height": 0,
        "label": "Lever1 forward position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SL1_Fwd",
        "x": 1060,
        "y": 820,
        "wires": []
    },
    {
        "id": "e28b8565eeef24d8",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "order": 0,
        "group": "894a03fce94da0d7",
        "width": 0,
        "height": 0,
        "label": "Lever2 back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SL2_Bck",
        "x": 1060,
        "y": 860,
        "wires": []
    },
    {
        "id": "b27ad35cbbb805b6",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_60_SPart\" : false,\n            \"O_60_SInd\" : false,\n            \"O_60_SPhoto\" : false,\n            \"O_60_Part_Pass\" : false,\n            \"O_60_SL1_Bck\" : false,\n            \"O_60_SL1_Fwd\" : false,\n            \"O_60_SL2_Bck\" : false,\n            \"O_60_SL2_Fwd\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "454162cef02d9f04"
            ]
        ]
    },
    {
        "id": "d1f8c29c262c1223",
        "type": "OpcUa-Client",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "endpoint": "05bef22ae7459f80",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "4f2209ef442deb5f",
                "576ffbdb9401369b"
            ],
            [
                "b27ad35cbbb805b6"
            ]
        ]
    },
    {
        "id": "454162cef02d9f04",
        "type": "trigger",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "86966b3fdd0e2e14"
            ]
        ]
    },
    {
        "id": "f431e36f786636d6",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "d1f8c29c262c1223"
            ]
        ]
    },
    {
        "id": "4f2209ef442deb5f",
        "type": "debug",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "60 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 580,
        "wires": []
    },
    {
        "id": "86966b3fdd0e2e14",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "34690cf76e936a30"
            ]
        ]
    },
    {
        "id": "a25bbc29bde7d83e",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "f431e36f786636d6"
            ]
        ]
    },
    {
        "id": "34690cf76e936a30",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "6173bb129d946c01"
            ]
        ]
    },
    {
        "id": "6173bb129d946c01",
        "type": "file in",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "a25bbc29bde7d83e"
            ]
        ]
    },
    {
        "id": "5e6899f4d2c99789",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "item": "O_61_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Start",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "e762c7fc8ad6bc5f"
            ]
        ]
    },
    {
        "id": "c81ac7be108bb97c",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "item": "O_61_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Stop",
        "x": 490,
        "y": 1120,
        "wires": [
            [
                "e762c7fc8ad6bc5f"
            ]
        ]
    },
    {
        "id": "5ff68e2e4bf14858",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "item": "O_61_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Key_Pos",
        "x": 480,
        "y": 1160,
        "wires": [
            [
                "e762c7fc8ad6bc5f"
            ]
        ]
    },
    {
        "id": "8b671ecec756394a",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "item": "O_61_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Reset",
        "x": 490,
        "y": 1200,
        "wires": [
            [
                "e762c7fc8ad6bc5f"
            ]
        ]
    },
    {
        "id": "b761c6d37c024265",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "item": "O_61_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Panel_I4",
        "x": 480,
        "y": 1240,
        "wires": [
            [
                "e762c7fc8ad6bc5f"
            ]
        ]
    },
    {
        "id": "8eb6cda3345aadef",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "item": "O_61_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Panel_I5",
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "e762c7fc8ad6bc5f"
            ]
        ]
    },
    {
        "id": "9a9b0eded5c335df",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "item": "O_61_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Panel_I6",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "e762c7fc8ad6bc5f"
            ]
        ]
    },
    {
        "id": "e762c7fc8ad6bc5f",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "60 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "9b93210289261178",
            "db0aed47d59b3cfb"
        ],
        "x": 645,
        "y": 1220,
        "wires": []
    },
    {
        "id": "fb280740d6d8898f",
        "type": "switch",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "60 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_61_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1220,
        "wires": [
            [
                "b5acccad80ef991d"
            ],
            [
                "9f9411a8fcedd7a4"
            ],
            [
                "4073cfd025d540c7"
            ],
            [
                "c5dd2eb969d6e160"
            ],
            [
                "09cfb270b0578fcc"
            ],
            [
                "72cc753b28d71c0a"
            ],
            [
                "39fc9b7ec304bc61"
            ],
            [
                "a4b34a64c8a84a06"
            ]
        ]
    },
    {
        "id": "b5acccad80ef991d",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "order": 0,
        "group": "40e7bc8223cf7e48",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Start",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "9f9411a8fcedd7a4",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "order": 0,
        "group": "40e7bc8223cf7e48",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Stop",
        "x": 1050,
        "y": 1120,
        "wires": []
    },
    {
        "id": "4073cfd025d540c7",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "order": 0,
        "group": "40e7bc8223cf7e48",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Key_Pos",
        "x": 1060,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c5dd2eb969d6e160",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "order": 0,
        "group": "40e7bc8223cf7e48",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Reset",
        "x": 1050,
        "y": 1200,
        "wires": []
    },
    {
        "id": "09cfb270b0578fcc",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "order": 0,
        "group": "40e7bc8223cf7e48",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Panel_I4",
        "x": 1060,
        "y": 1240,
        "wires": []
    },
    {
        "id": "72cc753b28d71c0a",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "order": 0,
        "group": "40e7bc8223cf7e48",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Panel_I5",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "39fc9b7ec304bc61",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "order": 0,
        "group": "40e7bc8223cf7e48",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Panel_I6",
        "x": 1060,
        "y": 1320,
        "wires": []
    },
    {
        "id": "93a439eacae140c0",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "item": "O_61_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Panel_I7",
        "x": 480,
        "y": 1360,
        "wires": [
            [
                "e762c7fc8ad6bc5f"
            ]
        ]
    },
    {
        "id": "a4b34a64c8a84a06",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "order": 0,
        "group": "40e7bc8223cf7e48",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Panel_I7",
        "x": 1060,
        "y": 1360,
        "wires": []
    },
    {
        "id": "16c9752332ab3735",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1000,
        "wires": [
            [
                "c17b9c2e446b3df8"
            ]
        ]
    },
    {
        "id": "814a2c554c5bb648",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1000,
        "wires": [
            [
                "16c9752332ab3735"
            ]
        ]
    },
    {
        "id": "c17b9c2e446b3df8",
        "type": "OpcUa-Client",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "endpoint": "05bef22ae7459f80",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1000,
        "wires": [
            [
                "7e274a43cde3dd49",
                "76fb7fbbcb8f8abb"
            ],
            [
                "24b0429aa4a03664"
            ]
        ]
    },
    {
        "id": "b6f69bd652a7ba99",
        "type": "file in",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1000,
        "wires": [
            [
                "814a2c554c5bb648"
            ]
        ]
    },
    {
        "id": "7e274a43cde3dd49",
        "type": "debug",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "60 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1040,
        "wires": []
    },
    {
        "id": "24b0429aa4a03664",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_61_Start\" : false,\n            \"O_61_Stop\" : false,\n            \"O_61_Key_Pos\" : false,\n            \"O_61_Reset\" : false,\n            \"O_61_Panel_I4\" : false,\n            \"O_61_Panel_I5\" : false,\n            \"O_61_Panel_I6\" : false,\n            \"O_61_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1000,
        "wires": [
            [
                "b57b9f033a42571e"
            ]
        ]
    },
    {
        "id": "d9c7aa5b6a44c265",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1000,
        "wires": [
            [
                "b6f69bd652a7ba99"
            ]
        ]
    },
    {
        "id": "b57b9f033a42571e",
        "type": "trigger",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1000,
        "wires": [
            [
                "c091f1d02cbf4d62"
            ]
        ]
    },
    {
        "id": "c091f1d02cbf4d62",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1000,
        "wires": [
            [
                "d9c7aa5b6a44c265"
            ]
        ]
    },
    {
        "id": "bf1d6cfe67a1abd5",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "item": "I_60_Conveyor",
        "datatype": "Boolean",
        "value": "",
        "name": "I_60_Conveyor",
        "x": 480,
        "y": 1540,
        "wires": [
            [
                "4f02d08ef40d050e"
            ]
        ]
    },
    {
        "id": "59186de199362054",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "item": "I_60_P1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_60_P1",
        "x": 500,
        "y": 1580,
        "wires": [
            [
                "4f02d08ef40d050e"
            ]
        ]
    },
    {
        "id": "7d9883bd58c22555",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "item": "I_60_P2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_60_P2",
        "x": 500,
        "y": 1620,
        "wires": [
            [
                "4f02d08ef40d050e"
            ]
        ]
    },
    {
        "id": "0ee7f45fbd029248",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "item": "I_60_Identify",
        "datatype": "Boolean",
        "value": "",
        "name": "I_60_Identify",
        "x": 490,
        "y": 1660,
        "wires": [
            [
                "4f02d08ef40d050e"
            ]
        ]
    },
    {
        "id": "4f02d08ef40d050e",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "60 Physical Actuators",
        "mode": "link",
        "links": [
            "9b93210289261178",
            "db0aed47d59b3cfb"
        ],
        "x": 645,
        "y": 1600,
        "wires": []
    },
    {
        "id": "3a9d057e0ed5074b",
        "type": "switch",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "60 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_60_Conveyor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_60_P1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_60_P2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_60_Identify",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 1600,
        "wires": [
            [
                "53ba8274a8c6b727"
            ],
            [
                "0164085549900b45"
            ],
            [
                "1d3b7db235c80f1f"
            ],
            [
                "556260e7925a6bd8"
            ]
        ]
    },
    {
        "id": "980f26575ceb3085",
        "type": "ui_switch",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "I_60_Conveyor",
        "label": "Conveyor on",
        "tooltip": "",
        "group": "8b3e4c954f472288",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1540,
        "wires": [
            [
                "bf1d6cfe67a1abd5"
            ]
        ]
    },
    {
        "id": "6e2f832fb2494b90",
        "type": "ui_switch",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "I_60_P1",
        "label": "Pushes Lever 1 forward",
        "tooltip": "",
        "group": "8b3e4c954f472288",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 180,
        "y": 1580,
        "wires": [
            [
                "59186de199362054"
            ]
        ]
    },
    {
        "id": "3b2c164da4e41f8a",
        "type": "ui_switch",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "I_60_P2",
        "label": "Pushes Lever 2 forward",
        "tooltip": "",
        "group": "8b3e4c954f472288",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 180,
        "y": 1620,
        "wires": [
            [
                "7d9883bd58c22555"
            ]
        ]
    },
    {
        "id": "f72a9ca980d5f86f",
        "type": "ui_switch",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "I_60_Identify",
        "label": "Identify pin",
        "tooltip": "",
        "group": "8b3e4c954f472288",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 1660,
        "wires": [
            [
                "0ee7f45fbd029248"
            ]
        ]
    },
    {
        "id": "b01e4c78fe8c5d72",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1460,
        "wires": [
            [
                "70afef8cf9f4cfab"
            ]
        ]
    },
    {
        "id": "7052ea6f6d171881",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1460,
        "wires": [
            [
                "b01e4c78fe8c5d72"
            ]
        ]
    },
    {
        "id": "70afef8cf9f4cfab",
        "type": "OpcUa-Client",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "endpoint": "05bef22ae7459f80",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1460,
        "wires": [
            [
                "25ff7b6b4ca3473c",
                "2204576d673268ee"
            ],
            [
                "20f614753e0a59b8"
            ]
        ]
    },
    {
        "id": "2e2453a584f23d88",
        "type": "file in",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1460,
        "wires": [
            [
                "7052ea6f6d171881"
            ]
        ]
    },
    {
        "id": "25ff7b6b4ca3473c",
        "type": "debug",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "60 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1500,
        "wires": []
    },
    {
        "id": "20f614753e0a59b8",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_60_Conveyor\" : false,\n            \"I_60_P1\" : false,\n            \"I_60_P2\" : false,\n            \"I_60_Identify\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1460,
        "wires": [
            [
                "1039ea75e10a60e5"
            ]
        ]
    },
    {
        "id": "1e749a82a1e68f7d",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1460,
        "wires": [
            [
                "2e2453a584f23d88"
            ]
        ]
    },
    {
        "id": "1039ea75e10a60e5",
        "type": "trigger",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1460,
        "wires": [
            [
                "4f7659a99a14cade"
            ]
        ]
    },
    {
        "id": "4f7659a99a14cade",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1460,
        "wires": [
            [
                "1e749a82a1e68f7d"
            ]
        ]
    },
    {
        "id": "38d46510dd789151",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "item": "I_61_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Led_Start",
        "x": 480,
        "y": 1840,
        "wires": [
            [
                "75e3fa05cd349eed"
            ]
        ]
    },
    {
        "id": "74b477d2c6bae8ae",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "item": "I_61_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Led_Reset",
        "x": 480,
        "y": 1880,
        "wires": [
            [
                "75e3fa05cd349eed"
            ]
        ]
    },
    {
        "id": "b4818e9a49289668",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "item": "I_61_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Led_Extra1",
        "x": 470,
        "y": 1920,
        "wires": [
            [
                "75e3fa05cd349eed"
            ]
        ]
    },
    {
        "id": "a64d9dfc5c09fcc1",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "item": "I_61_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Led_Extra2",
        "x": 470,
        "y": 1960,
        "wires": [
            [
                "75e3fa05cd349eed"
            ]
        ]
    },
    {
        "id": "e0ced259e971db08",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "item": "I_61_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Panel_O4",
        "x": 480,
        "y": 2000,
        "wires": [
            [
                "75e3fa05cd349eed"
            ]
        ]
    },
    {
        "id": "75e3fa05cd349eed",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "60 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "9b93210289261178",
            "db0aed47d59b3cfb"
        ],
        "x": 645,
        "y": 1980,
        "wires": []
    },
    {
        "id": "6d48469e421cd439",
        "type": "switch",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "60 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_61_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1980,
        "wires": [
            [
                "56db99fb689a3c69"
            ],
            [
                "2333b678702ac845"
            ],
            [
                "7b8929d6be0dedd3"
            ],
            [
                "7bb82c578d5bdf78"
            ],
            [
                "c26d790d63739dec"
            ],
            [
                "ccdd7182347d2665"
            ],
            [
                "705ff21c46bfe124"
            ],
            [
                "2de48ac9d9f7c3f2"
            ]
        ]
    },
    {
        "id": "251bddcccc3d4a3f",
        "type": "ui_switch",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "4dfdd4b1871d085b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1840,
        "wires": [
            [
                "38d46510dd789151"
            ]
        ]
    },
    {
        "id": "97c3a196c8f8600e",
        "type": "ui_switch",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "4dfdd4b1871d085b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1880,
        "wires": [
            [
                "74b477d2c6bae8ae"
            ]
        ]
    },
    {
        "id": "85f15eb0dbd302ce",
        "type": "ui_switch",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "4dfdd4b1871d085b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1920,
        "wires": [
            [
                "b4818e9a49289668"
            ]
        ]
    },
    {
        "id": "38884d340fd14980",
        "type": "ui_switch",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "4dfdd4b1871d085b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1960,
        "wires": [
            [
                "a64d9dfc5c09fcc1"
            ]
        ]
    },
    {
        "id": "153080d8786e7a00",
        "type": "ui_switch",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "4dfdd4b1871d085b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2000,
        "wires": [
            [
                "e0ced259e971db08"
            ]
        ]
    },
    {
        "id": "23aaa702ab495435",
        "type": "ui_switch",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "4dfdd4b1871d085b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2040,
        "wires": [
            [
                "5ac9cd6478d08765"
            ]
        ]
    },
    {
        "id": "5ac9cd6478d08765",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "item": "I_61_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Panel_O5",
        "x": 480,
        "y": 2040,
        "wires": [
            [
                "75e3fa05cd349eed"
            ]
        ]
    },
    {
        "id": "c0b981a8548d7f90",
        "type": "ui_switch",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "4dfdd4b1871d085b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2080,
        "wires": [
            [
                "cad3ebce2040101b"
            ]
        ]
    },
    {
        "id": "cad3ebce2040101b",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "item": "I_61_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Panel_O6",
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "75e3fa05cd349eed"
            ]
        ]
    },
    {
        "id": "99471e2c984872ff",
        "type": "ui_switch",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "4dfdd4b1871d085b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2120,
        "wires": [
            [
                "3061ebd94acaca51"
            ]
        ]
    },
    {
        "id": "3061ebd94acaca51",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "item": "I_61_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Panel_O7",
        "x": 480,
        "y": 2120,
        "wires": [
            [
                "75e3fa05cd349eed"
            ]
        ]
    },
    {
        "id": "88d8d6264ffb577c",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1760,
        "wires": [
            [
                "b2e935e24c721886"
            ]
        ]
    },
    {
        "id": "73b2b19bb23e24e0",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1760,
        "wires": [
            [
                "88d8d6264ffb577c"
            ]
        ]
    },
    {
        "id": "b2e935e24c721886",
        "type": "OpcUa-Client",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "endpoint": "05bef22ae7459f80",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1760,
        "wires": [
            [
                "4853ee4c3f48c11c",
                "beebd08669055273"
            ],
            [
                "5ce8c9570b0591ae"
            ]
        ]
    },
    {
        "id": "74593aba597830ff",
        "type": "file in",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1760,
        "wires": [
            [
                "73b2b19bb23e24e0"
            ]
        ]
    },
    {
        "id": "4853ee4c3f48c11c",
        "type": "debug",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "60 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1800,
        "wires": []
    },
    {
        "id": "5ce8c9570b0591ae",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_61_Led_Start\" : false,\n            \"I_61_Led_Reset\" : false,\n            \"I_61_Led_Extra1\" : false,\n            \"I_61_Led_Extra2\" : false,\n            \"I_61_Panel_O4\" : false,\n            \"I_61_Panel_O5\" : false,\n            \"I_61_Panel_O6\" : false,\n            \"I_61_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1760,
        "wires": [
            [
                "44c9dba54a1f82f2"
            ]
        ]
    },
    {
        "id": "fb0bbbd263c6c0a5",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1760,
        "wires": [
            [
                "74593aba597830ff"
            ]
        ]
    },
    {
        "id": "44c9dba54a1f82f2",
        "type": "trigger",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1760,
        "wires": [
            [
                "1ff65f3b99354fa7"
            ]
        ]
    },
    {
        "id": "1ff65f3b99354fa7",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1760,
        "wires": [
            [
                "fb0bbbd263c6c0a5"
            ]
        ]
    },
    {
        "id": "34c7c3dfa0b5e6c9",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "item": "F_62_Conveyor",
        "datatype": "Boolean",
        "value": "",
        "name": "F_62_Conveyor",
        "x": 480,
        "y": 2300,
        "wires": [
            [
                "017710489c9c7ebb"
            ]
        ]
    },
    {
        "id": "9110925400ce6f80",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "item": "F_62_P1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_62_P1",
        "x": 500,
        "y": 2340,
        "wires": [
            [
                "017710489c9c7ebb"
            ]
        ]
    },
    {
        "id": "9a34064e5147321d",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "item": "F_62_P2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_62_P2",
        "x": 500,
        "y": 2380,
        "wires": [
            [
                "017710489c9c7ebb"
            ]
        ]
    },
    {
        "id": "248a5eec6e5b50f2",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "item": "F_62_Identify",
        "datatype": "Boolean",
        "value": "",
        "name": "F_62_Identify",
        "x": 480,
        "y": 2420,
        "wires": [
            [
                "017710489c9c7ebb"
            ]
        ]
    },
    {
        "id": "017710489c9c7ebb",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "60 Physical Feedback",
        "mode": "link",
        "links": [
            "9b93210289261178",
            "db0aed47d59b3cfb"
        ],
        "x": 645,
        "y": 2360,
        "wires": []
    },
    {
        "id": "83fda3885af854c4",
        "type": "switch",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "60 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_62_Conveyor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_62_P1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_62_P2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_62_Identify",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 2360,
        "wires": [
            [
                "5ce4abf5f3a97baa"
            ],
            [
                "57801eb7f1e6cd6a"
            ],
            [
                "95ae32399383dfd9"
            ],
            [
                "d6cacedc068fd041"
            ]
        ]
    },
    {
        "id": "5ce4abf5f3a97baa",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "order": 0,
        "group": "ecd89844f6f2cd8c",
        "width": 0,
        "height": 0,
        "label": "Conveyor on",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_62_Conveyor",
        "x": 1060,
        "y": 2300,
        "wires": []
    },
    {
        "id": "57801eb7f1e6cd6a",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "order": 0,
        "group": "ecd89844f6f2cd8c",
        "width": 0,
        "height": 0,
        "label": "Pushes Lever 1 forward",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_62_P1",
        "x": 1040,
        "y": 2340,
        "wires": []
    },
    {
        "id": "95ae32399383dfd9",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "order": 0,
        "group": "ecd89844f6f2cd8c",
        "width": 0,
        "height": 0,
        "label": "Pushes Lever 2 forward",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_62_P2",
        "x": 1040,
        "y": 2380,
        "wires": []
    },
    {
        "id": "d6cacedc068fd041",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "order": 0,
        "group": "ecd89844f6f2cd8c",
        "width": 0,
        "height": 0,
        "label": "Identify pin",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_62_Identify",
        "x": 1060,
        "y": 2420,
        "wires": []
    },
    {
        "id": "3abbca30dea1e8fc",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2220,
        "wires": [
            [
                "e9756f6fbaee2703"
            ]
        ]
    },
    {
        "id": "b322d2458c820985",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2220,
        "wires": [
            [
                "3abbca30dea1e8fc"
            ]
        ]
    },
    {
        "id": "e9756f6fbaee2703",
        "type": "OpcUa-Client",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "endpoint": "05bef22ae7459f80",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2220,
        "wires": [
            [
                "5756cf867aa49eab",
                "9e436853a6dae939"
            ],
            [
                "dab5b60bd9098311"
            ]
        ]
    },
    {
        "id": "47f906d8f75ef319",
        "type": "file in",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2220,
        "wires": [
            [
                "b322d2458c820985"
            ]
        ]
    },
    {
        "id": "5756cf867aa49eab",
        "type": "debug",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "60 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2260,
        "wires": []
    },
    {
        "id": "dab5b60bd9098311",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_62_Conveyor\" : false,\n            \"F_62_P1\" : false,\n            \"F_62_P2\" : false,\n            \"F_62_Identify\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2220,
        "wires": [
            [
                "8581085215ec43d4"
            ]
        ]
    },
    {
        "id": "0fc646af42159792",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2220,
        "wires": [
            [
                "47f906d8f75ef319"
            ]
        ]
    },
    {
        "id": "8581085215ec43d4",
        "type": "trigger",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2220,
        "wires": [
            [
                "fd8e5c57da6a57a2"
            ]
        ]
    },
    {
        "id": "fd8e5c57da6a57a2",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2220,
        "wires": [
            [
                "0fc646af42159792"
            ]
        ]
    },
    {
        "id": "cd51a7e4774dbb1f",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "item": "F_63_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Led_Start",
        "x": 480,
        "y": 2600,
        "wires": [
            [
                "0d72a9393f93485a"
            ]
        ]
    },
    {
        "id": "23fbcc5ab87d9a02",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "item": "F_63_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Led_Reset",
        "x": 470,
        "y": 2640,
        "wires": [
            [
                "0d72a9393f93485a"
            ]
        ]
    },
    {
        "id": "adcc7e9af493754e",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "item": "F_63_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Led_Extra1",
        "x": 470,
        "y": 2680,
        "wires": [
            [
                "0d72a9393f93485a"
            ]
        ]
    },
    {
        "id": "9d89664ba6eab83c",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "item": "F_63_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Led_Extra2",
        "x": 470,
        "y": 2720,
        "wires": [
            [
                "0d72a9393f93485a"
            ]
        ]
    },
    {
        "id": "97e5f1a360bd267d",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "item": "F_63_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Panel_O4",
        "x": 480,
        "y": 2760,
        "wires": [
            [
                "0d72a9393f93485a"
            ]
        ]
    },
    {
        "id": "de298b08c53d9b0c",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "item": "F_63_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Panel_O5",
        "x": 480,
        "y": 2800,
        "wires": [
            [
                "0d72a9393f93485a"
            ]
        ]
    },
    {
        "id": "7a75972c54c97678",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "item": "F_63_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Panel_O6",
        "x": 480,
        "y": 2840,
        "wires": [
            [
                "0d72a9393f93485a"
            ]
        ]
    },
    {
        "id": "0d72a9393f93485a",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "60 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "9b93210289261178",
            "db0aed47d59b3cfb"
        ],
        "x": 645,
        "y": 2740,
        "wires": []
    },
    {
        "id": "c20f5f84612a7f48",
        "type": "switch",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "60 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_63_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2740,
        "wires": [
            [
                "a592f4171911bd74"
            ],
            [
                "4921f38347d8ad2d"
            ],
            [
                "99f33929e55bb0dd"
            ],
            [
                "193bf44ada70cf74"
            ],
            [
                "022aedba1166e829"
            ],
            [
                "5a693e6cabbd94b1"
            ],
            [
                "61ea6969de0d26bb"
            ],
            [
                "b40901b93a1778ab"
            ]
        ]
    },
    {
        "id": "a592f4171911bd74",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "order": 0,
        "group": "c238b18dd02b43b1",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Led_Start",
        "x": 1060,
        "y": 2600,
        "wires": []
    },
    {
        "id": "4921f38347d8ad2d",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "order": 0,
        "group": "c238b18dd02b43b1",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Led_Reset",
        "x": 1070,
        "y": 2640,
        "wires": []
    },
    {
        "id": "99f33929e55bb0dd",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "order": 0,
        "group": "c238b18dd02b43b1",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Led_Extra1",
        "x": 1070,
        "y": 2680,
        "wires": []
    },
    {
        "id": "193bf44ada70cf74",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "order": 0,
        "group": "c238b18dd02b43b1",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Led_Extra2",
        "x": 1070,
        "y": 2720,
        "wires": []
    },
    {
        "id": "022aedba1166e829",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "order": 0,
        "group": "c238b18dd02b43b1",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Panel_O4",
        "x": 1060,
        "y": 2760,
        "wires": []
    },
    {
        "id": "5a693e6cabbd94b1",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "order": 0,
        "group": "c238b18dd02b43b1",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Panel_O5",
        "x": 1060,
        "y": 2800,
        "wires": []
    },
    {
        "id": "61ea6969de0d26bb",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "order": 0,
        "group": "c238b18dd02b43b1",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Panel_O6",
        "x": 1060,
        "y": 2840,
        "wires": []
    },
    {
        "id": "d0988a583525a6b9",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "item": "F_63_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Panel_O7",
        "x": 480,
        "y": 2880,
        "wires": [
            [
                "0d72a9393f93485a"
            ]
        ]
    },
    {
        "id": "b40901b93a1778ab",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "order": 0,
        "group": "c238b18dd02b43b1",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Panel_O7",
        "x": 1060,
        "y": 2880,
        "wires": []
    },
    {
        "id": "c10241d4afe5c195",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2520,
        "wires": [
            [
                "3c5d075aabdf4bff"
            ]
        ]
    },
    {
        "id": "d2c08923223489b2",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2520,
        "wires": [
            [
                "c10241d4afe5c195"
            ]
        ]
    },
    {
        "id": "3c5d075aabdf4bff",
        "type": "OpcUa-Client",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "endpoint": "05bef22ae7459f80",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2520,
        "wires": [
            [
                "37ff00d3954fc344",
                "665e2e9acef80d31"
            ],
            [
                "ba6ca5f9efac6140"
            ]
        ]
    },
    {
        "id": "4b2b07e7e68e1c7f",
        "type": "file in",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2520,
        "wires": [
            [
                "d2c08923223489b2"
            ]
        ]
    },
    {
        "id": "37ff00d3954fc344",
        "type": "debug",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "60 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2560,
        "wires": []
    },
    {
        "id": "ba6ca5f9efac6140",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_63_Led_Start\" : false,\n            \"F_63_Led_Reset\" : false,\n            \"F_63_Led_Extra1\" : false,\n            \"F_63_Led_Extra2\" : false,\n            \"F_63_Panel_O4\" : false,\n            \"F_63_Panel_O5\" : false,\n            \"F_63_Panel_O6\" : false,\n            \"F_63_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2520,
        "wires": [
            [
                "8677d24e48f57d4c"
            ]
        ]
    },
    {
        "id": "b11565b91aa4dd7f",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2520,
        "wires": [
            [
                "4b2b07e7e68e1c7f"
            ]
        ]
    },
    {
        "id": "8677d24e48f57d4c",
        "type": "trigger",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2520,
        "wires": [
            [
                "e47647ca0716e53d"
            ]
        ]
    },
    {
        "id": "e47647ca0716e53d",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2520,
        "wires": [
            [
                "b11565b91aa4dd7f"
            ]
        ]
    },
    {
        "id": "73a4b2be57abe91e",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "item": "C_62_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_62_Profibus",
        "x": 640,
        "y": 3060,
        "wires": [
            [
                "ff33ce122066d2c6"
            ]
        ]
    },
    {
        "id": "ed9ce3e4b02de320",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "item": "C_65_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_Initialization",
        "x": 630,
        "y": 3100,
        "wires": [
            [
                "ff33ce122066d2c6"
            ]
        ]
    },
    {
        "id": "a1ae521e1ea631ac",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "item": "C_65_RBS_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_RBS_Output",
        "x": 630,
        "y": 3340,
        "wires": [
            [
                "b4002d78d1ef9815"
            ]
        ]
    },
    {
        "id": "418c1339da3805e1",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "item": "C_65_RSB_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_RSB_Output",
        "x": 630,
        "y": 3380,
        "wires": [
            [
                "b4002d78d1ef9815"
            ]
        ]
    },
    {
        "id": "ff33ce122066d2c6",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "60 Control Read",
        "mode": "link",
        "links": [
            "9b93210289261178",
            "db0aed47d59b3cfb"
        ],
        "x": 805,
        "y": 3120,
        "wires": []
    },
    {
        "id": "a4e2149a1529f977",
        "type": "switch",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "60 CR",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_62_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_ID_1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_ID_2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 990,
        "y": 3120,
        "wires": [
            [
                "9a8909e7fc624a94"
            ],
            [
                "9a6572b7fc12102b"
            ],
            [
                "124a52f6520a98ac"
            ],
            [
                "bcbe6558fad14d82"
            ]
        ]
    },
    {
        "id": "9a8909e7fc624a94",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "order": 2,
        "group": "e97defc61512c537",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_62_Profibus",
        "x": 1180,
        "y": 3060,
        "wires": []
    },
    {
        "id": "9a6572b7fc12102b",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "order": 1,
        "group": "e97defc61512c537",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_65_Initialization",
        "x": 1190,
        "y": 3100,
        "wires": []
    },
    {
        "id": "eb26bd6ca51f3f10",
        "type": "ui_dropdown",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "e97defc61512c537",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Red-Black-Silver Output",
                "value": "C_65_RBS_Output",
                "type": "str"
            },
            {
                "label": "Red-Silver-Black Output",
                "value": "C_65_RSB_Output",
                "type": "str"
            },
            {
                "label": "Black-Red-Silver Output",
                "value": "C_65_BRS_Output",
                "type": "str"
            },
            {
                "label": "Black-Silver-Red Output",
                "value": "C_65_BSR_Output",
                "type": "str"
            },
            {
                "label": "Silver-Red-Black Output",
                "value": "C_65_SRB_Output",
                "type": "str"
            },
            {
                "label": "Silver-Black_Red Output",
                "value": "C_65_SBR_Output",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 3440,
        "wires": [
            [
                "d9386122c5c815f4",
                "ffd0d826f6bf221f",
                "035509c374bb3390",
                "bd1f691ddebf9911",
                "28e7dd93d0edb6e6",
                "71d4cfa8325bb30b"
            ]
        ]
    },
    {
        "id": "d9386122c5c815f4",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_RBS_Output",
        "func": "if (msg.payload === \"C_65_RBS_Output\") \nreturn { payload: true, topic: \"C_65_RBS_Output\"};\nelse return { payload: false, topic: \"C_65_RBS_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3340,
        "wires": [
            [
                "a1ae521e1ea631ac"
            ]
        ]
    },
    {
        "id": "ffd0d826f6bf221f",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_RSB_Output",
        "func": "if (msg.payload === \"C_65_RSB_Output\") \nreturn { payload: true, topic: \"C_65_RSB_Output\"};\nelse return { payload: false, topic: \"C_65_RSB_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3380,
        "wires": [
            [
                "418c1339da3805e1"
            ]
        ]
    },
    {
        "id": "41963c9c8a73a559",
        "type": "inject",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_65_RBS_Output",
        "payloadType": "str",
        "x": 190,
        "y": 3480,
        "wires": [
            [
                "eb26bd6ca51f3f10"
            ]
        ]
    },
    {
        "id": "e2f15a21f4d7ce0e",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2980,
        "wires": [
            [
                "03d575ddd2f5b3c4"
            ]
        ]
    },
    {
        "id": "836b8ea9ac958332",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2980,
        "wires": [
            [
                "e2f15a21f4d7ce0e"
            ]
        ]
    },
    {
        "id": "03d575ddd2f5b3c4",
        "type": "OpcUa-Client",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "endpoint": "05bef22ae7459f80",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2980,
        "wires": [
            [
                "c24899998a0bb78c",
                "b6107042561e022f"
            ],
            [
                "6342d3ae3fa9ac1e"
            ]
        ]
    },
    {
        "id": "3a99d297cf631553",
        "type": "file in",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2980,
        "wires": [
            [
                "836b8ea9ac958332"
            ]
        ]
    },
    {
        "id": "c24899998a0bb78c",
        "type": "debug",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "60 CR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3020,
        "wires": []
    },
    {
        "id": "6342d3ae3fa9ac1e",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_65_Initialization\" : false,\n            \"C_65_ID_1\" : false,\n            \"C_65_ID_2\" : false,\n            \"C_62_Profibus\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2980,
        "wires": [
            [
                "f672e9feb10c0559"
            ]
        ]
    },
    {
        "id": "d5fa136cb37bfd12",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2980,
        "wires": [
            [
                "3a99d297cf631553"
            ]
        ]
    },
    {
        "id": "f672e9feb10c0559",
        "type": "trigger",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2980,
        "wires": [
            [
                "4c9634f984095b3c"
            ]
        ]
    },
    {
        "id": "4c9634f984095b3c",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2980,
        "wires": [
            [
                "d5fa136cb37bfd12"
            ]
        ]
    },
    {
        "id": "0453d51308acca31",
        "type": "comment",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "1f049f585c48af1a",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "7ba175210a58ce65"
            ]
        ]
    },
    {
        "id": "7ba175210a58ce65",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Sorting_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "08017a84c32fc237"
            ]
        ]
    },
    {
        "id": "c97db8721ea139d7",
        "type": "file",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "697448320aebd1b8",
        "type": "comment",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "08017a84c32fc237",
        "type": "OpcUa-Client",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "endpoint": "05bef22ae7459f80",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "29a8309d3f8b0a08"
            ],
            [
                "f36959cbea01c894",
                "a7b92ecc4f25a79a"
            ]
        ]
    },
    {
        "id": "29a8309d3f8b0a08",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "433b7da3227f53e2",
                "34e41c65d6e84e71"
            ]
        ]
    },
    {
        "id": "433b7da3227f53e2",
        "type": "file",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "34e41c65d6e84e71",
        "type": "debug",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "76f65b415eb3aa5d",
        "type": "comment",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "f61ee2054fae22c5",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "81bb7b5d4f3a56ee"
            ]
        ]
    },
    {
        "id": "e8bfa5d025e230dc",
        "type": "OpcUa-Client",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "endpoint": "05bef22ae7459f80",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "e87e2603f317e4e6"
            ],
            []
        ]
    },
    {
        "id": "e87e2603f317e4e6",
        "type": "debug",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "9b93210289261178",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Write_Sort",
        "links": [
            "75e3fa05cd349eed",
            "ff33ce122066d2c6",
            "017710489c9c7ebb",
            "0d72a9393f93485a",
            "4f02d08ef40d050e",
            "e762c7fc8ad6bc5f",
            "588ff1e231f8c50c",
            "b4002d78d1ef9815"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "df2b0afbe97ef28f"
            ]
        ]
    },
    {
        "id": "df2b0afbe97ef28f",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "bb71494467187278"
            ]
        ]
    },
    {
        "id": "bb71494467187278",
        "type": "file in",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "f61ee2054fae22c5"
            ]
        ]
    },
    {
        "id": "81bb7b5d4f3a56ee",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "e8bfa5d025e230dc"
            ]
        ]
    },
    {
        "id": "2c18e4c4529e3041",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "CSV Link",
        "links": [
            "f36959cbea01c894"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "c98bb1df658bbbfa"
            ]
        ]
    },
    {
        "id": "c98bb1df658bbbfa",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "f3126d26562bbfa1"
            ]
        ]
    },
    {
        "id": "f3126d26562bbfa1",
        "type": "trigger",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "c97db8721ea139d7"
            ]
        ]
    },
    {
        "id": "f36959cbea01c894",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "2c18e4c4529e3041",
            "2acfeb6a7b6d0702"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "2acfeb6a7b6d0702",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "CSV Link",
        "links": [
            "f36959cbea01c894"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "85c118dfa8919f4f"
            ]
        ]
    },
    {
        "id": "85c118dfa8919f4f",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_60_SPart\" : false,\n    \"O_60_SInd\" : false,\n    \"O_60_SPhoto\" : false,\n    \"O_60_Part_Pass\" : false,\n    \"O_60_SL1_Bck\" : false,\n    \"O_60_SL1_Fwd\" : false,\n    \"O_60_SL2_Bck\" : false,\n    \"O_60_SL2_Fwd\" : false,\n    \"O_61_Start\" : false,\n    \"O_61_Stop\" : false,\n    \"O_61_Key_Pos\" : false,\n    \"O_61_Reset\" : false,\n    \"O_61_Panel_I4\" : false,\n    \"O_61_Panel_I5\" : false,\n    \"O_61_Panel_I6\" : false,\n    \"O_61_Panel_I7\" : false,\n    \"F_62_Conveyor\" : false,\n    \"F_62_P1\" : false,\n    \"F_62_P2\" : false,\n    \"F_62_Identify\" : false,\n    \"F_63_Led_Start\" : false,\n    \"F_63_Led_Reset\" : false,\n    \"F_63_Led_Extra1\" : false,\n    \"F_63_Led_Extra2\" : false,\n    \"F_63_Panel_O4\" : false,\n    \"F_63_Panel_O5\" : false,\n    \"F_63_Panel_O6\" : false,\n    \"F_63_Panel_O7\" : false,\n    \"C_65_Initialization\" : false,\n    \"C_65_ID_1\" : false,\n    \"C_65_ID_2\" : false,\n    \"I_60_Conveyor\" : false,\n    \"I_60_P1\" : false,\n    \"I_60_P2\" : false,\n    \"I_60_Identify\" : false,\n    \"I_61_Led_Start\" : false,\n    \"I_61_Led_Reset\" : false,\n    \"I_61_Led_Extra1\" : false,\n    \"I_61_Led_Extra2\" : false,\n    \"I_61_Panel_O4\" : false,\n    \"I_61_Panel_O5\" : false,\n    \"I_61_Panel_O6\" : false,\n    \"I_61_Panel_O7\" : false,\n    \"C_62_Profibus\" : false,\n    \"C_65_RBS_Output\" : false,\n    \"C_65_RSB_Output\" : false,\n    \"C_65_BRS_Output\" : false,\n    \"C_65_BSR_Output\" : false,\n    \"C_65_SRB_Output\" : false,\n    \"C_65_SBR_Output\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "c4133e97aba4f1c8"
            ]
        ]
    },
    {
        "id": "c4133e97aba4f1c8",
        "type": "trigger",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "1f049f585c48af1a"
            ]
        ]
    },
    {
        "id": "b218d8c0f852ca22",
        "type": "debug",
        "z": "59f32dea3689223d",
        "g": "a4edc290a39abadc",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "b9308266b784f90a",
        "type": "OpcUa-Server",
        "z": "59f32dea3689223d",
        "g": "a4edc290a39abadc",
        "port": "53886",
        "name": "Server : Sorting",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Sorting/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Sorting",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "b218d8c0f852ca22"
            ]
        ]
    },
    {
        "id": "50bc38d528c9ac9b",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "order": 0,
        "group": "894a03fce94da0d7",
        "width": 0,
        "height": 0,
        "label": "Lever2 forward position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SL2_Fwd",
        "x": 1060,
        "y": 900,
        "wires": []
    },
    {
        "id": "42ba5376c88f2214",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "item": "O_60_SL2_Fwd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SL2_Fwd",
        "x": 480,
        "y": 900,
        "wires": [
            [
                "588ff1e231f8c50c"
            ]
        ]
    },
    {
        "id": "d57ba5f41bd8b8d4",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "item": "C_65_ID_1",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_ID_1",
        "x": 650,
        "y": 3140,
        "wires": [
            [
                "ff33ce122066d2c6"
            ]
        ]
    },
    {
        "id": "124a52f6520a98ac",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "order": 3,
        "group": "e97defc61512c537",
        "width": 0,
        "height": 0,
        "label": "Identified  - Bit 1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_65_ID_1",
        "x": 1170,
        "y": 3140,
        "wires": []
    },
    {
        "id": "036699d2a0a7f955",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "item": "C_65_ID_2",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_ID_2",
        "x": 650,
        "y": 3180,
        "wires": [
            [
                "ff33ce122066d2c6"
            ]
        ]
    },
    {
        "id": "bcbe6558fad14d82",
        "type": "ui_led",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "order": 4,
        "group": "e97defc61512c537",
        "width": 0,
        "height": 0,
        "label": "Identified  - Bit 2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_65_ID_2",
        "x": 1170,
        "y": 3180,
        "wires": []
    },
    {
        "id": "4d31e9b1b529cc2e",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_65_RBS_Output\" : false,\n            \"C_65_RSB_Output\" : false,\n            \"C_65_BRS_Output\" : false,\n            \"C_65_BSR_Output\" : false,\n            \"C_65_SRB_Output\" : false,\n            \"C_65_SBR_Output\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3260,
        "wires": [
            [
                "3aed2b732fe4d751"
            ]
        ]
    },
    {
        "id": "3aed2b732fe4d751",
        "type": "trigger",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3260,
        "wires": [
            [
                "fbea1ae5712cf11d"
            ]
        ]
    },
    {
        "id": "fbea1ae5712cf11d",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3260,
        "wires": [
            [
                "cb7fb7e8f5473cda"
            ]
        ]
    },
    {
        "id": "cb7fb7e8f5473cda",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3260,
        "wires": [
            [
                "111192b3be6217be"
            ]
        ]
    },
    {
        "id": "111192b3be6217be",
        "type": "file in",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "CSV",
        "filename": "C:\\ProjetoGemeo\\AAS\\Sorting\\Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3260,
        "wires": [
            [
                "630537aa1189b094"
            ]
        ]
    },
    {
        "id": "630537aa1189b094",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3260,
        "wires": [
            [
                "d16a0a4e0bd723ee"
            ]
        ]
    },
    {
        "id": "d16a0a4e0bd723ee",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3260,
        "wires": [
            [
                "25dfdcfc20be88b3"
            ]
        ]
    },
    {
        "id": "25dfdcfc20be88b3",
        "type": "OpcUa-Client",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "endpoint": "05bef22ae7459f80",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3260,
        "wires": [
            [
                "12747a84a37f414f",
                "f37f3abda663fbcb"
            ],
            [
                "4d31e9b1b529cc2e"
            ]
        ]
    },
    {
        "id": "12747a84a37f414f",
        "type": "debug",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "60 CW",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3300,
        "wires": []
    },
    {
        "id": "83ac5c6a62bb69fe",
        "type": "switch",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "60 CW",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_65_RBS_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_RSB_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_BRS_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_BSR_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_SRB_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_SBR_Output",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 990,
        "y": 3440,
        "wires": [
            [
                "b50161ef6afd78c6"
            ],
            [
                "3759d7c3b2e2f782"
            ],
            [
                "c89eab62bac35317"
            ],
            [
                "3c3c430c0a661f81"
            ],
            [
                "aff74f05f11a38ec"
            ],
            [
                "e12691c58064b450"
            ]
        ]
    },
    {
        "id": "b4002d78d1ef9815",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "60 Control Write",
        "mode": "link",
        "links": [
            "9b93210289261178",
            "db0aed47d59b3cfb"
        ],
        "x": 805,
        "y": 3440,
        "wires": []
    },
    {
        "id": "035509c374bb3390",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_BRS_Output",
        "func": "if (msg.payload === \"C_65_BRS_Output\") \nreturn { payload: true, topic: \"C_65_BRS_Output\"};\nelse return { payload: false, topic: \"C_65_BRS_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3420,
        "wires": [
            [
                "20ece7e1171de144"
            ]
        ]
    },
    {
        "id": "20ece7e1171de144",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "item": "C_65_BRS_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_BRS_Output",
        "x": 630,
        "y": 3420,
        "wires": [
            [
                "b4002d78d1ef9815"
            ]
        ]
    },
    {
        "id": "eae7a6362d2a2c8f",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "item": "C_65_BSR_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_BSR_Output",
        "x": 630,
        "y": 3460,
        "wires": [
            [
                "b4002d78d1ef9815"
            ]
        ]
    },
    {
        "id": "bd1f691ddebf9911",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_BSR_Output",
        "func": "if (msg.payload === \"C_65_BSR_Output\") \nreturn { payload: true, topic: \"C_65_BSR_Output\"};\nelse return { payload: false, topic: \"C_65_BSR_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3460,
        "wires": [
            [
                "eae7a6362d2a2c8f"
            ]
        ]
    },
    {
        "id": "28e7dd93d0edb6e6",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_SRB_Output",
        "func": "if (msg.payload === \"C_65_SRB_Output\") \nreturn { payload: true, topic: \"C_65_SRB_Output\"};\nelse return { payload: false, topic: \"C_65_SRB_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3500,
        "wires": [
            [
                "e712c7e63be412f8"
            ]
        ]
    },
    {
        "id": "e712c7e63be412f8",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "item": "C_65_SRB_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_SRB_Output",
        "x": 630,
        "y": 3500,
        "wires": [
            [
                "b4002d78d1ef9815"
            ]
        ]
    },
    {
        "id": "1cfdbe8199d7901b",
        "type": "OpcUa-Item",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "item": "C_65_SBR_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_SBR_Output",
        "x": 630,
        "y": 3540,
        "wires": [
            [
                "b4002d78d1ef9815"
            ]
        ]
    },
    {
        "id": "71d4cfa8325bb30b",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_SBR_Output",
        "func": "if (msg.payload === \"C_65_SBR_Output\") \nreturn { payload: true, topic: \"C_65_SBR_Output\"};\nelse return { payload: false, topic: \"C_65_SBR_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3540,
        "wires": [
            [
                "1cfdbe8199d7901b"
            ]
        ]
    },
    {
        "id": "e4ed89f1ced6a665",
        "type": "debug",
        "z": "59f32dea3689223d",
        "g": "2654790d3af52835",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "554e9f32286443a4",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "2654790d3af52835",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "6e0fbc7ce96fb387",
            "1b8912548de8e3f3",
            "d94141bcbaffa877",
            "73f8137211d24e4b",
            "6ab7570bb7342ef3"
        ],
        "x": 825,
        "y": 60,
        "wires": []
    },
    {
        "id": "0d5efce9a0014cc9",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "O_60_SPart",
        "func": "if (msg.topic === \"O_60_SPart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SPart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 620,
        "wires": [
            [
                "bf608a64593de2c0"
            ]
        ]
    },
    {
        "id": "785eb1f5942ad231",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "Sub In 60 PS",
        "links": [
            "576ffbdb9401369b"
        ],
        "x": 775,
        "y": 760,
        "wires": [
            [
                "7c2712ee9790ac86"
            ]
        ]
    },
    {
        "id": "576ffbdb9401369b",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "Sub Out 60 PS",
        "mode": "link",
        "links": [
            "785eb1f5942ad231"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "6e0fbc7ce96fb387",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "S7 PS",
        "links": [
            "554e9f32286443a4"
        ],
        "x": 55,
        "y": 760,
        "wires": [
            [
                "0d5efce9a0014cc9",
                "6937a0b3f8493c9b",
                "f748b81724e7c2aa",
                "77b9b7912b29e091",
                "2319f3cc79e5028c",
                "a4ec0574fcc2054a",
                "b5a2684c37bda512",
                "4c583af4142b954d"
            ]
        ]
    },
    {
        "id": "2319f3cc79e5028c",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "O_60_SL1_Bck",
        "func": "if (msg.topic === \"O_60_SL1_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SL1_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 780,
        "wires": [
            [
                "7fa010a7c6cbf1b3"
            ]
        ]
    },
    {
        "id": "6937a0b3f8493c9b",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "O_60_SInd",
        "func": "if (msg.topic === \"O_60_SInd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SInd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 660,
        "wires": [
            [
                "38c91ba6e51aa367"
            ]
        ]
    },
    {
        "id": "f748b81724e7c2aa",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "O_60_SPhoto",
        "func": "if (msg.topic === \"O_60_SPhoto\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SPhoto\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 700,
        "wires": [
            [
                "f5426764ab493c94"
            ]
        ]
    },
    {
        "id": "77b9b7912b29e091",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "O_60_Part_Pass",
        "func": "if (msg.topic === \"O_60_Part_Pass\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_Part_Pass\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 740,
        "wires": [
            [
                "1313015487160fe0"
            ]
        ]
    },
    {
        "id": "a4ec0574fcc2054a",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "O_60_SL1_Fwd",
        "func": "if (msg.topic === \"O_60_SL1_Fwd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SL1_Fwd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 820,
        "wires": [
            [
                "81a51c02c2c9efab"
            ]
        ]
    },
    {
        "id": "b5a2684c37bda512",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "O_60_SL2_Bck",
        "func": "if (msg.topic === \"O_60_SL2_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SL2_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 860,
        "wires": [
            [
                "e5f534a25519de70"
            ]
        ]
    },
    {
        "id": "4c583af4142b954d",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "O_60_SL2_Fwd",
        "func": "if (msg.topic === \"O_60_SL2_Fwd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SL2_Fwd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 900,
        "wires": [
            [
                "42ba5376c88f2214"
            ]
        ]
    },
    {
        "id": "76fb7fbbcb8f8abb",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "Sub Out 60 AS",
        "mode": "link",
        "links": [
            "9d31918fa4840582"
        ],
        "x": 1295,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9d31918fa4840582",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "Sub In 60 AS",
        "links": [
            "76fb7fbbcb8f8abb"
        ],
        "x": 775,
        "y": 1220,
        "wires": [
            [
                "fb280740d6d8898f"
            ]
        ]
    },
    {
        "id": "85d3236d308ece3c",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "O_61_Start",
        "func": "if (msg.topic === \"O_61_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "5e6899f4d2c99789"
            ]
        ]
    },
    {
        "id": "1b8912548de8e3f3",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "S7 AS",
        "links": [
            "554e9f32286443a4"
        ],
        "x": 55,
        "y": 1220,
        "wires": [
            [
                "85d3236d308ece3c",
                "e8402f7518fd69a7",
                "adb4e5da38b74194",
                "725966c93ef4aafe",
                "de8c3ee4c60e6084",
                "6489cc825616458a",
                "92b005d69ceb56bd",
                "13c133cb1cf36fde"
            ]
        ]
    },
    {
        "id": "de8c3ee4c60e6084",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "O_61_Panel_I4",
        "func": "if (msg.topic === \"O_61_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1240,
        "wires": [
            [
                "b761c6d37c024265"
            ]
        ]
    },
    {
        "id": "e8402f7518fd69a7",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "O_61_Stop",
        "func": "if (msg.topic === \"O_61_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1120,
        "wires": [
            [
                "c81ac7be108bb97c"
            ]
        ]
    },
    {
        "id": "adb4e5da38b74194",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "O_61_Key_Pos",
        "func": "if (msg.topic === \"O_61_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1160,
        "wires": [
            [
                "5ff68e2e4bf14858"
            ]
        ]
    },
    {
        "id": "725966c93ef4aafe",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "O_61_Reset",
        "func": "if (msg.topic === \"O_61_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1200,
        "wires": [
            [
                "8b671ecec756394a"
            ]
        ]
    },
    {
        "id": "6489cc825616458a",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "O_61_Panel_I5",
        "func": "if (msg.topic === \"O_61_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "8eb6cda3345aadef"
            ]
        ]
    },
    {
        "id": "92b005d69ceb56bd",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "O_61_Panel_I6",
        "func": "if (msg.topic === \"O_61_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "9a9b0eded5c335df"
            ]
        ]
    },
    {
        "id": "13c133cb1cf36fde",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "O_61_Panel_I7",
        "func": "if (msg.topic === \"O_61_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1360,
        "wires": [
            [
                "93a439eacae140c0"
            ]
        ]
    },
    {
        "id": "2204576d673268ee",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "Sub Out 60 PA",
        "mode": "link",
        "links": [
            "458a8b38faabbc51"
        ],
        "x": 1295,
        "y": 1460,
        "wires": []
    },
    {
        "id": "458a8b38faabbc51",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "Sub In 60 PA",
        "links": [
            "2204576d673268ee"
        ],
        "x": 775,
        "y": 1600,
        "wires": [
            [
                "3a9d057e0ed5074b"
            ]
        ]
    },
    {
        "id": "beebd08669055273",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "Sub Out 60 AA",
        "mode": "link",
        "links": [
            "07ea9e06e875582a"
        ],
        "x": 1295,
        "y": 1760,
        "wires": []
    },
    {
        "id": "07ea9e06e875582a",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "Sub In 60 AA",
        "links": [
            "beebd08669055273"
        ],
        "x": 775,
        "y": 1980,
        "wires": [
            [
                "6d48469e421cd439"
            ]
        ]
    },
    {
        "id": "9e436853a6dae939",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "Sub Out 60 PF",
        "mode": "link",
        "links": [
            "0705cb287e862de1"
        ],
        "x": 1295,
        "y": 2220,
        "wires": []
    },
    {
        "id": "0705cb287e862de1",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "Sub In 60 PF",
        "links": [
            "9e436853a6dae939"
        ],
        "x": 775,
        "y": 2360,
        "wires": [
            [
                "83fda3885af854c4"
            ]
        ]
    },
    {
        "id": "69a3e6e5cc48d850",
        "type": "function",
        "z": "59f32dea3689223d",
        "name": "F_62_Conveyor",
        "func": "if (msg.topic === \"F_62_Conveyor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_62_Conveyor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2300,
        "wires": [
            [
                "34c7c3dfa0b5e6c9"
            ]
        ]
    },
    {
        "id": "343462ca8e03aa29",
        "type": "function",
        "z": "59f32dea3689223d",
        "name": "F_62_P1",
        "func": "if (msg.topic === \"F_62_P1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_62_P1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 2340,
        "wires": [
            [
                "9110925400ce6f80"
            ]
        ]
    },
    {
        "id": "5bd9e24075f23c9e",
        "type": "function",
        "z": "59f32dea3689223d",
        "name": "F_62_P2",
        "func": "if (msg.topic === \"F_62_P2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_62_P2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 2380,
        "wires": [
            [
                "9a34064e5147321d"
            ]
        ]
    },
    {
        "id": "dde95c1bf0bb5a96",
        "type": "function",
        "z": "59f32dea3689223d",
        "name": "F_62_Identify",
        "func": "if (msg.topic === \"F_62_Identify\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_62_Identify\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2420,
        "wires": [
            [
                "248a5eec6e5b50f2"
            ]
        ]
    },
    {
        "id": "d94141bcbaffa877",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "S7 PF",
        "links": [
            "554e9f32286443a4"
        ],
        "x": 55,
        "y": 2360,
        "wires": [
            [
                "69a3e6e5cc48d850",
                "343462ca8e03aa29",
                "5bd9e24075f23c9e",
                "dde95c1bf0bb5a96"
            ]
        ]
    },
    {
        "id": "665e2e9acef80d31",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "Sub Out 60 AF",
        "mode": "link",
        "links": [
            "8e947a6a43157e24"
        ],
        "x": 1295,
        "y": 2520,
        "wires": []
    },
    {
        "id": "8e947a6a43157e24",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "Sub In 60 AF",
        "links": [
            "665e2e9acef80d31"
        ],
        "x": 775,
        "y": 2740,
        "wires": [
            [
                "c20f5f84612a7f48"
            ]
        ]
    },
    {
        "id": "408ab7c3d37b7ac3",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "F_63_Led_Start",
        "func": "if (msg.topic === \"F_63_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2600,
        "wires": [
            [
                "cd51a7e4774dbb1f"
            ]
        ]
    },
    {
        "id": "73f8137211d24e4b",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "S7 AF",
        "links": [
            "554e9f32286443a4"
        ],
        "x": 55,
        "y": 2740,
        "wires": [
            [
                "408ab7c3d37b7ac3",
                "0a262aeb1e6094d7",
                "f7c80813420b52a8",
                "32149aba989436ae",
                "ba1a909b89e8dbbe",
                "7ba18cc12f7dd999",
                "f8d7a44be0d2cf53",
                "dd02b5a5ae2574ae"
            ]
        ]
    },
    {
        "id": "ba1a909b89e8dbbe",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "F_63_Panel_O4",
        "func": "if (msg.topic === \"F_63_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2760,
        "wires": [
            [
                "97e5f1a360bd267d"
            ]
        ]
    },
    {
        "id": "0a262aeb1e6094d7",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "F_63_Led_Reset",
        "func": "if (msg.topic === \"F_63_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2640,
        "wires": [
            [
                "23fbcc5ab87d9a02"
            ]
        ]
    },
    {
        "id": "f7c80813420b52a8",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "F_63_Led_Extra1",
        "func": "if (msg.topic === \"F_63_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2680,
        "wires": [
            [
                "adcc7e9af493754e"
            ]
        ]
    },
    {
        "id": "32149aba989436ae",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "F_63_Led_Extra2",
        "func": "if (msg.topic === \"F_63_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2720,
        "wires": [
            [
                "9d89664ba6eab83c"
            ]
        ]
    },
    {
        "id": "7ba18cc12f7dd999",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "F_63_Panel_O5",
        "func": "if (msg.topic === \"F_63_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2800,
        "wires": [
            [
                "de298b08c53d9b0c"
            ]
        ]
    },
    {
        "id": "f8d7a44be0d2cf53",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "F_63_Panel_O6",
        "func": "if (msg.topic === \"F_63_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2840,
        "wires": [
            [
                "7a75972c54c97678"
            ]
        ]
    },
    {
        "id": "dd02b5a5ae2574ae",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "F_63_Panel_O7",
        "func": "if (msg.topic === \"F_63_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2880,
        "wires": [
            [
                "d0988a583525a6b9"
            ]
        ]
    },
    {
        "id": "b6107042561e022f",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Sub Out 60 CR",
        "mode": "link",
        "links": [
            "e216dc3342316f2b"
        ],
        "x": 1295,
        "y": 2980,
        "wires": []
    },
    {
        "id": "e216dc3342316f2b",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Sub In 60 CR",
        "links": [
            "b6107042561e022f"
        ],
        "x": 895,
        "y": 3120,
        "wires": [
            [
                "a4e2149a1529f977"
            ]
        ]
    },
    {
        "id": "ad8a63dc023f7a60",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_62_Profibus",
        "func": "if (msg.topic === \"C_62_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_62_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3060,
        "wires": [
            [
                "73a4b2be57abe91e"
            ]
        ]
    },
    {
        "id": "6eedc2139a760e1d",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_Initialization",
        "func": "if (msg.topic === \"C_65_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3100,
        "wires": [
            [
                "ed9ce3e4b02de320"
            ]
        ]
    },
    {
        "id": "75e8600366140357",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_ID_1",
        "func": "if (msg.topic === \"C_65_ID_1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_ID_1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3140,
        "wires": [
            [
                "d57ba5f41bd8b8d4"
            ]
        ]
    },
    {
        "id": "33f765229b92246e",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_ID_2",
        "func": "if (msg.topic === \"C_65_ID_2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_ID_2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3180,
        "wires": [
            [
                "036699d2a0a7f955"
            ]
        ]
    },
    {
        "id": "6ab7570bb7342ef3",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "S7 CR",
        "links": [
            "554e9f32286443a4"
        ],
        "x": 55,
        "y": 3120,
        "wires": [
            [
                "ad8a63dc023f7a60",
                "6eedc2139a760e1d",
                "75e8600366140357",
                "33f765229b92246e"
            ]
        ]
    },
    {
        "id": "f37f3abda663fbcb",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Sub Out 60 CW",
        "mode": "link",
        "links": [
            "b219f54873180bd7"
        ],
        "x": 1295,
        "y": 3260,
        "wires": []
    },
    {
        "id": "b219f54873180bd7",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Sub In 60 CW",
        "links": [
            "f37f3abda663fbcb"
        ],
        "x": 895,
        "y": 3440,
        "wires": [
            [
                "83ac5c6a62bb69fe"
            ]
        ]
    },
    {
        "id": "64cea3d093e1bbaf",
        "type": "mqtt in",
        "z": "59f32dea3689223d",
        "g": "2654790d3af52835",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b7ac41c0bcdf40b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "b4181d5af9da866f"
            ]
        ]
    },
    {
        "id": "b4181d5af9da866f",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2654790d3af52835",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "554e9f32286443a4",
                "e4ed89f1ced6a665"
            ]
        ]
    },
    {
        "id": "a7b92ecc4f25a79a",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "64ceeacafc05ecb9"
            ]
        ]
    },
    {
        "id": "64ceeacafc05ecb9",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "5309664df04e5069",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "a38718d5e8b9065d",
            "5999ba3802a396e9",
            "dc60891eee2674f5",
            "4efdcf61767925cc",
            "82c4b4cfd4e0fe33",
            "791a0d68e024742e",
            "aa5fe494638c0177",
            "820fc0e293720ba1"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "a38718d5e8b9065d",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "60830a2c7424fd8b",
        "name": "Read PS",
        "links": [
            "64ceeacafc05ecb9"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "b27ad35cbbb805b6"
            ]
        ]
    },
    {
        "id": "5999ba3802a396e9",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Read CW",
        "links": [
            "64ceeacafc05ecb9"
        ],
        "x": 55,
        "y": 3260,
        "wires": [
            [
                "4d31e9b1b529cc2e"
            ]
        ]
    },
    {
        "id": "dc60891eee2674f5",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "Read CR",
        "links": [
            "64ceeacafc05ecb9"
        ],
        "x": 55,
        "y": 2980,
        "wires": [
            [
                "6342d3ae3fa9ac1e"
            ]
        ]
    },
    {
        "id": "4efdcf61767925cc",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "ca4a2f746d6ad1e1",
        "name": "Read AF",
        "links": [
            "64ceeacafc05ecb9"
        ],
        "x": 55,
        "y": 2520,
        "wires": [
            [
                "ba6ca5f9efac6140"
            ]
        ]
    },
    {
        "id": "82c4b4cfd4e0fe33",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "85591bdb7f51a2ba",
        "name": "Read PF",
        "links": [
            "64ceeacafc05ecb9"
        ],
        "x": 55,
        "y": 2220,
        "wires": [
            [
                "dab5b60bd9098311"
            ]
        ]
    },
    {
        "id": "791a0d68e024742e",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "Read AA",
        "links": [
            "64ceeacafc05ecb9"
        ],
        "x": 55,
        "y": 1760,
        "wires": [
            [
                "5ce8c9570b0591ae"
            ]
        ]
    },
    {
        "id": "aa5fe494638c0177",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "Read PA",
        "links": [
            "64ceeacafc05ecb9"
        ],
        "x": 55,
        "y": 1460,
        "wires": [
            [
                "20f614753e0a59b8"
            ]
        ]
    },
    {
        "id": "820fc0e293720ba1",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "1ce1924906356292",
        "name": "Read AS",
        "links": [
            "64ceeacafc05ecb9"
        ],
        "x": 55,
        "y": 1000,
        "wires": [
            [
                "24b0429aa4a03664"
            ]
        ]
    },
    {
        "id": "951c6a83da15949b",
        "type": "mqtt out",
        "z": "59f32dea3689223d",
        "g": "2654790d3af52835",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b7ac41c0bcdf40b1",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "c9420386577341e7",
        "type": "link in",
        "z": "59f32dea3689223d",
        "g": "2654790d3af52835",
        "name": "S7 Actuators",
        "links": [
            "1f76bd5da25ea754",
            "7cfa3af249f1fe57",
            "63ed606384326aa6"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "951c6a83da15949b"
            ]
        ]
    },
    {
        "id": "53ba8274a8c6b727",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "I_60_Conveyor",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1540,
        "wires": [
            [
                "1f76bd5da25ea754"
            ]
        ]
    },
    {
        "id": "0164085549900b45",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "I_60_P1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1580,
        "wires": [
            [
                "1f76bd5da25ea754"
            ]
        ]
    },
    {
        "id": "1d3b7db235c80f1f",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "I_60_P2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1620,
        "wires": [
            [
                "1f76bd5da25ea754"
            ]
        ]
    },
    {
        "id": "556260e7925a6bd8",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "I_60_Identify",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1660,
        "wires": [
            [
                "1f76bd5da25ea754"
            ]
        ]
    },
    {
        "id": "1f76bd5da25ea754",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "be496ef488a803cb",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "c9420386577341e7"
        ],
        "x": 1235,
        "y": 1600,
        "wires": []
    },
    {
        "id": "56db99fb689a3c69",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1840,
        "wires": [
            [
                "7cfa3af249f1fe57"
            ]
        ]
    },
    {
        "id": "2333b678702ac845",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1880,
        "wires": [
            [
                "7cfa3af249f1fe57"
            ]
        ]
    },
    {
        "id": "7b8929d6be0dedd3",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1920,
        "wires": [
            [
                "7cfa3af249f1fe57"
            ]
        ]
    },
    {
        "id": "7bb82c578d5bdf78",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1960,
        "wires": [
            [
                "7cfa3af249f1fe57"
            ]
        ]
    },
    {
        "id": "c26d790d63739dec",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2000,
        "wires": [
            [
                "7cfa3af249f1fe57"
            ]
        ]
    },
    {
        "id": "ccdd7182347d2665",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2040,
        "wires": [
            [
                "7cfa3af249f1fe57"
            ]
        ]
    },
    {
        "id": "705ff21c46bfe124",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2080,
        "wires": [
            [
                "7cfa3af249f1fe57"
            ]
        ]
    },
    {
        "id": "2de48ac9d9f7c3f2",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "I_61_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2120,
        "wires": [
            [
                "7cfa3af249f1fe57"
            ]
        ]
    },
    {
        "id": "7cfa3af249f1fe57",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "2315de58e1a030bc",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "c9420386577341e7"
        ],
        "x": 1225,
        "y": 1980,
        "wires": []
    },
    {
        "id": "b50161ef6afd78c6",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_RBS_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3340,
        "wires": [
            [
                "63ed606384326aa6"
            ]
        ]
    },
    {
        "id": "3759d7c3b2e2f782",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_RSB_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3380,
        "wires": [
            [
                "63ed606384326aa6"
            ]
        ]
    },
    {
        "id": "c89eab62bac35317",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_BRS_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3420,
        "wires": [
            [
                "63ed606384326aa6"
            ]
        ]
    },
    {
        "id": "3c3c430c0a661f81",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_BSR_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3460,
        "wires": [
            [
                "63ed606384326aa6"
            ]
        ]
    },
    {
        "id": "aff74f05f11a38ec",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_SRB_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3500,
        "wires": [
            [
                "63ed606384326aa6"
            ]
        ]
    },
    {
        "id": "e12691c58064b450",
        "type": "function",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "C_65_SBR_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3540,
        "wires": [
            [
                "63ed606384326aa6"
            ]
        ]
    },
    {
        "id": "63ed606384326aa6",
        "type": "link out",
        "z": "59f32dea3689223d",
        "g": "dd2055101e4f48ec",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "c9420386577341e7"
        ],
        "x": 1365,
        "y": 3440,
        "wires": []
    },
    {
        "id": "a97e90b56a62740a",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "item": "O_70_SInductive",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_SInductive",
        "x": 470,
        "y": 620,
        "wires": [
            [
                "638c506dab58966d"
            ]
        ]
    },
    {
        "id": "862744f748253dde",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "item": "O_70_SPart",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_SPart",
        "x": 490,
        "y": 660,
        "wires": [
            [
                "638c506dab58966d"
            ]
        ]
    },
    {
        "id": "ea9a50706db0ea16",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "item": "O_70_SStation",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_SStation",
        "x": 480,
        "y": 700,
        "wires": [
            [
                "638c506dab58966d"
            ]
        ]
    },
    {
        "id": "d4b3e13de129e449",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "item": "O_70_SPart_Height",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_SPart_Height",
        "x": 460,
        "y": 740,
        "wires": [
            [
                "638c506dab58966d"
            ]
        ]
    },
    {
        "id": "97ecefed2c67ebf3",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "item": "O_70_Elev_High",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_Elev_High",
        "x": 470,
        "y": 780,
        "wires": [
            [
                "638c506dab58966d"
            ]
        ]
    },
    {
        "id": "2473b59670fcdaaa",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "item": "O_70_Elev_Low",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_Elev_Low",
        "x": 480,
        "y": 820,
        "wires": [
            [
                "638c506dab58966d"
            ]
        ]
    },
    {
        "id": "6b5f9fc00666a151",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "item": "O_70_Pist_Back",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_Pist_Back",
        "x": 470,
        "y": 860,
        "wires": [
            [
                "638c506dab58966d"
            ]
        ]
    },
    {
        "id": "638c506dab58966d",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "70 Physical Sensor",
        "mode": "link",
        "links": [
            "4d58e42d9ea6e2e0"
        ],
        "x": 645,
        "y": 740,
        "wires": []
    },
    {
        "id": "3fe2dff842491f9d",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "c45393125bd5565e"
            ]
        ]
    },
    {
        "id": "c45393125bd5565e",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "6ffb02f5ae61e2b5"
            ]
        ]
    },
    {
        "id": "6ffb02f5ae61e2b5",
        "type": "file in",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "3314b253d2f1ad33"
            ]
        ]
    },
    {
        "id": "3314b253d2f1ad33",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "d005240ad02ce9ef"
            ]
        ]
    },
    {
        "id": "d005240ad02ce9ef",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "4d767ac8b2e9063f"
            ]
        ]
    },
    {
        "id": "4d767ac8b2e9063f",
        "type": "OpcUa-Client",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "endpoint": "821e214759c2c88d",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "ebe9d62502738118",
                "46c4c3d66f88a690"
            ],
            [
                "7e3f8ce72460670b"
            ]
        ]
    },
    {
        "id": "2f06843d0b973b0d",
        "type": "switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "70 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_70_SInductive",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_SPart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_SStation",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_SPart_Height",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_Elev_High",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_Elev_Low",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_Pist_Back",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 740,
        "wires": [
            [
                "a274498f3b3f5ecd"
            ],
            [
                "39bc8a2d056eaf0c"
            ],
            [
                "f91a56c01e7dccf6"
            ],
            [
                "c6fcb6ec54933462"
            ],
            [
                "1db508a54d02bcef"
            ],
            [
                "6f94234eedf60212"
            ],
            [
                "0fdd01a3bde50a0b"
            ]
        ]
    },
    {
        "id": "a274498f3b3f5ecd",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "order": 0,
        "group": "99e81e95067b9e45",
        "width": 0,
        "height": 0,
        "label": "Inductive sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_SInductive",
        "x": 1070,
        "y": 620,
        "wires": []
    },
    {
        "id": "39bc8a2d056eaf0c",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "order": 0,
        "group": "99e81e95067b9e45",
        "width": 0,
        "height": 0,
        "label": "Part in elevator",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_SPart",
        "x": 1050,
        "y": 660,
        "wires": []
    },
    {
        "id": "f91a56c01e7dccf6",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "order": 0,
        "group": "99e81e95067b9e45",
        "width": 0,
        "height": 0,
        "label": "Station through",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_SStation",
        "x": 1060,
        "y": 700,
        "wires": []
    },
    {
        "id": "c6fcb6ec54933462",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "order": 0,
        "group": "99e81e95067b9e45",
        "width": 0,
        "height": 0,
        "label": "Part height sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_SPart_Height",
        "x": 1080,
        "y": 740,
        "wires": []
    },
    {
        "id": "1db508a54d02bcef",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "order": 0,
        "group": "99e81e95067b9e45",
        "width": 0,
        "height": 0,
        "label": "Elevator in high position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_Elev_High",
        "x": 1070,
        "y": 780,
        "wires": []
    },
    {
        "id": "6f94234eedf60212",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "order": 0,
        "group": "99e81e95067b9e45",
        "width": 0,
        "height": 0,
        "label": "Elevator in low position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_Elev_Low",
        "x": 1060,
        "y": 820,
        "wires": []
    },
    {
        "id": "0fdd01a3bde50a0b",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "order": 0,
        "group": "99e81e95067b9e45",
        "width": 0,
        "height": 0,
        "label": "Eject piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_Pist_Back",
        "x": 1070,
        "y": 860,
        "wires": []
    },
    {
        "id": "1cbe09737beee927",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "item": "O_71_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Start",
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "151289912bc53d35"
            ]
        ]
    },
    {
        "id": "38fa20a9a4fab507",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "item": "O_71_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Stop",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "151289912bc53d35"
            ]
        ]
    },
    {
        "id": "ee93662533ed3321",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "item": "O_71_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Key_Pos",
        "x": 480,
        "y": 1120,
        "wires": [
            [
                "151289912bc53d35"
            ]
        ]
    },
    {
        "id": "c08b28131ecf857c",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "item": "O_71_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Reset",
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "151289912bc53d35"
            ]
        ]
    },
    {
        "id": "c296caca3dd3fa28",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "item": "O_71_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Panel_I4",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "151289912bc53d35"
            ]
        ]
    },
    {
        "id": "42ca2045e02c9a41",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "item": "O_71_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Panel_I5",
        "x": 480,
        "y": 1240,
        "wires": [
            [
                "151289912bc53d35"
            ]
        ]
    },
    {
        "id": "3061b0c5690d3c36",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "item": "O_71_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Panel_I6",
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "151289912bc53d35"
            ]
        ]
    },
    {
        "id": "151289912bc53d35",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "70 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "4d58e42d9ea6e2e0"
        ],
        "x": 645,
        "y": 1180,
        "wires": []
    },
    {
        "id": "5d4edd51b247f00a",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 960,
        "wires": [
            [
                "561a55861adea393"
            ]
        ]
    },
    {
        "id": "561a55861adea393",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 960,
        "wires": [
            [
                "45a46c7ecfbfdd0e"
            ]
        ]
    },
    {
        "id": "45a46c7ecfbfdd0e",
        "type": "file in",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 960,
        "wires": [
            [
                "67509e6c13079a68"
            ]
        ]
    },
    {
        "id": "67509e6c13079a68",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 960,
        "wires": [
            [
                "4e54433753e49719"
            ]
        ]
    },
    {
        "id": "4e54433753e49719",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 960,
        "wires": [
            [
                "34f3741e84f4ab53"
            ]
        ]
    },
    {
        "id": "34f3741e84f4ab53",
        "type": "OpcUa-Client",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "endpoint": "821e214759c2c88d",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 960,
        "wires": [
            [
                "aa11bce66ee08da2",
                "96f91e8b2cdb9ec3"
            ],
            [
                "b3e513d383165d8c"
            ]
        ]
    },
    {
        "id": "66fdce3b1115c8cb",
        "type": "switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "70 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_71_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1180,
        "wires": [
            [
                "d66e218122c08739"
            ],
            [
                "5066c3d0b6f01c90"
            ],
            [
                "8b01d38633671f68"
            ],
            [
                "0746b3ec12c649c9"
            ],
            [
                "2d021c24bf46c842"
            ],
            [
                "60a7c3bc96b723df"
            ],
            [
                "f392cb3ee6f357d6"
            ],
            [
                "36ad7141b55e05b2"
            ]
        ]
    },
    {
        "id": "d66e218122c08739",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "order": 0,
        "group": "3926bb375e3ef913",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Start",
        "x": 1050,
        "y": 1040,
        "wires": []
    },
    {
        "id": "5066c3d0b6f01c90",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "order": 0,
        "group": "3926bb375e3ef913",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Stop",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "8b01d38633671f68",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "order": 0,
        "group": "3926bb375e3ef913",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Key_Pos",
        "x": 1060,
        "y": 1120,
        "wires": []
    },
    {
        "id": "0746b3ec12c649c9",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "order": 0,
        "group": "3926bb375e3ef913",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Reset",
        "x": 1050,
        "y": 1160,
        "wires": []
    },
    {
        "id": "2d021c24bf46c842",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "order": 0,
        "group": "3926bb375e3ef913",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Panel_I4",
        "x": 1060,
        "y": 1200,
        "wires": []
    },
    {
        "id": "60a7c3bc96b723df",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "order": 0,
        "group": "3926bb375e3ef913",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Panel_I5",
        "x": 1060,
        "y": 1240,
        "wires": []
    },
    {
        "id": "f392cb3ee6f357d6",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "order": 0,
        "group": "3926bb375e3ef913",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Panel_I6",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "0021ae387ac9ee34",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "item": "O_71_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Panel_I7",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "151289912bc53d35"
            ]
        ]
    },
    {
        "id": "36ad7141b55e05b2",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "order": 0,
        "group": "3926bb375e3ef913",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Panel_I7",
        "x": 1060,
        "y": 1320,
        "wires": []
    },
    {
        "id": "9d8f1361a3c61707",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "item": "I_70_Elev_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "I_70_Elev_Down",
        "x": 470,
        "y": 1500,
        "wires": [
            [
                "bf756f930492bb57"
            ]
        ]
    },
    {
        "id": "b98291cd48ee1a0c",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "item": "I_70_Elev_Up",
        "datatype": "Boolean",
        "value": "",
        "name": "I_70_Elev_Up",
        "x": 480,
        "y": 1540,
        "wires": [
            [
                "bf756f930492bb57"
            ]
        ]
    },
    {
        "id": "65efe14e6d052cc6",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "item": "I_70_Eject_Part",
        "datatype": "Boolean",
        "value": "",
        "name": "I_70_Eject_Part",
        "x": 480,
        "y": 1580,
        "wires": [
            [
                "bf756f930492bb57"
            ]
        ]
    },
    {
        "id": "e10d3000c399c8d1",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "item": "I_70_Air_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_70_Air_On",
        "x": 490,
        "y": 1620,
        "wires": [
            [
                "bf756f930492bb57"
            ]
        ]
    },
    {
        "id": "bf756f930492bb57",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "70 Physical Actuators",
        "mode": "link",
        "links": [
            "4d58e42d9ea6e2e0"
        ],
        "x": 645,
        "y": 1560,
        "wires": []
    },
    {
        "id": "45071e2766ca23c2",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1420,
        "wires": [
            [
                "7f045da7f0c9b484"
            ]
        ]
    },
    {
        "id": "7f045da7f0c9b484",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "0dfa404cc0511594"
            ]
        ]
    },
    {
        "id": "0dfa404cc0511594",
        "type": "file in",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "7ad8466c0b700a32"
            ]
        ]
    },
    {
        "id": "7ad8466c0b700a32",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "07872141a0bc6579"
            ]
        ]
    },
    {
        "id": "07872141a0bc6579",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1420,
        "wires": [
            [
                "2a7632d2e9df8224"
            ]
        ]
    },
    {
        "id": "2a7632d2e9df8224",
        "type": "OpcUa-Client",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "endpoint": "821e214759c2c88d",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1420,
        "wires": [
            [
                "b6b85f6044ab8494",
                "9613249b4a7665f9"
            ],
            [
                "de05a73cccca432d"
            ]
        ]
    },
    {
        "id": "086801c6e172419d",
        "type": "switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "70 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_70_Elev_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_70_Elev_Up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_70_Eject_Part",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_70_Air_On",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 1560,
        "wires": [
            [
                "50c5ce3aa6cbaec1"
            ],
            [
                "dde333ccb8e762c6"
            ],
            [
                "87baa20645efab95"
            ],
            [
                "74d381778a8708ad"
            ]
        ]
    },
    {
        "id": "188312dcc70890c2",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "I_70_Elev_Down",
        "label": "Lowers elevator",
        "tooltip": "",
        "group": "aa2e640ab6d2880c",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1500,
        "wires": [
            [
                "9d8f1361a3c61707"
            ]
        ]
    },
    {
        "id": "5687661df5f30b58",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "I_80_Suction_On",
        "label": "Rises elevator",
        "tooltip": "",
        "group": "aa2e640ab6d2880c",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1540,
        "wires": [
            [
                "b98291cd48ee1a0c"
            ]
        ]
    },
    {
        "id": "1ed3edcac4bdaaf5",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "I_70_Eject_Part",
        "label": "Eject parts",
        "tooltip": "",
        "group": "aa2e640ab6d2880c",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1580,
        "wires": [
            [
                "65efe14e6d052cc6"
            ]
        ]
    },
    {
        "id": "28d2ae6019578958",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "I_70_Air_On",
        "label": "Turns on air",
        "tooltip": "",
        "group": "aa2e640ab6d2880c",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 1620,
        "wires": [
            [
                "e10d3000c399c8d1"
            ]
        ]
    },
    {
        "id": "2f8a85b5a4e9811b",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "item": "I_71_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Led_Start",
        "x": 480,
        "y": 1800,
        "wires": [
            [
                "f9963cbe02999d13"
            ]
        ]
    },
    {
        "id": "ec63ee3a8cdafd55",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "item": "I_71_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Led_Reset",
        "x": 480,
        "y": 1840,
        "wires": [
            [
                "f9963cbe02999d13"
            ]
        ]
    },
    {
        "id": "b3703ac52929da57",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "item": "I_71_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Led_Extra1",
        "x": 470,
        "y": 1880,
        "wires": [
            [
                "f9963cbe02999d13"
            ]
        ]
    },
    {
        "id": "2ed27ce004f46378",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "item": "I_71_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Led_Extra2",
        "x": 470,
        "y": 1920,
        "wires": [
            [
                "f9963cbe02999d13"
            ]
        ]
    },
    {
        "id": "cb02d55173eb6d07",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "item": "I_71_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Panel_O4",
        "x": 480,
        "y": 1960,
        "wires": [
            [
                "f9963cbe02999d13"
            ]
        ]
    },
    {
        "id": "f9963cbe02999d13",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "70 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "4d58e42d9ea6e2e0"
        ],
        "x": 645,
        "y": 1940,
        "wires": []
    },
    {
        "id": "ded27f0562a15269",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1720,
        "wires": [
            [
                "ec2f8947a5adb7a7"
            ]
        ]
    },
    {
        "id": "ec2f8947a5adb7a7",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1720,
        "wires": [
            [
                "53da3ec32850feb2"
            ]
        ]
    },
    {
        "id": "53da3ec32850feb2",
        "type": "file in",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1720,
        "wires": [
            [
                "05d1e8e970059a87"
            ]
        ]
    },
    {
        "id": "05d1e8e970059a87",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1720,
        "wires": [
            [
                "7459abf9d2b83c6a"
            ]
        ]
    },
    {
        "id": "7459abf9d2b83c6a",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1720,
        "wires": [
            [
                "9754998a65d15bf7"
            ]
        ]
    },
    {
        "id": "9754998a65d15bf7",
        "type": "OpcUa-Client",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "endpoint": "821e214759c2c88d",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1720,
        "wires": [
            [
                "672767f298ae11c3",
                "c27c5c5c74d3ca9f"
            ],
            [
                "a50eb664a1fa5553"
            ]
        ]
    },
    {
        "id": "75df49ba06ee6c44",
        "type": "switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "70 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_71_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1940,
        "wires": [
            [
                "2349d3936975ea05"
            ],
            [
                "b05940a43153a65b"
            ],
            [
                "fe6156e25790eb29"
            ],
            [
                "48d9f9db0eb3c77f"
            ],
            [
                "b89959432850d4c1"
            ],
            [
                "4df62d7a30e1bd99"
            ],
            [
                "d4a21f1f65cfd01e"
            ],
            [
                "a692280ffd9b5152"
            ]
        ]
    },
    {
        "id": "2401c9d3ced4343a",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "1987ae589517adbd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1800,
        "wires": [
            [
                "2f8a85b5a4e9811b"
            ]
        ]
    },
    {
        "id": "47e543e312442bc3",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "1987ae589517adbd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1840,
        "wires": [
            [
                "ec63ee3a8cdafd55"
            ]
        ]
    },
    {
        "id": "cf71904842ce47d5",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "1987ae589517adbd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1880,
        "wires": [
            [
                "b3703ac52929da57"
            ]
        ]
    },
    {
        "id": "459e541055f44af7",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "1987ae589517adbd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1920,
        "wires": [
            [
                "2ed27ce004f46378"
            ]
        ]
    },
    {
        "id": "16666ee164ccf552",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "1987ae589517adbd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1960,
        "wires": [
            [
                "cb02d55173eb6d07"
            ]
        ]
    },
    {
        "id": "560528e711a845cc",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "1987ae589517adbd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2000,
        "wires": [
            [
                "4af97f6247983196"
            ]
        ]
    },
    {
        "id": "4af97f6247983196",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "item": "I_71_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Panel_O5",
        "x": 480,
        "y": 2000,
        "wires": [
            [
                "f9963cbe02999d13"
            ]
        ]
    },
    {
        "id": "e99eb169a48d4259",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "1987ae589517adbd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2040,
        "wires": [
            [
                "e3199c77a7aac31d"
            ]
        ]
    },
    {
        "id": "e3199c77a7aac31d",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "item": "I_71_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Panel_O6",
        "x": 480,
        "y": 2040,
        "wires": [
            [
                "f9963cbe02999d13"
            ]
        ]
    },
    {
        "id": "670faae6d3a94b03",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "1987ae589517adbd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2080,
        "wires": [
            [
                "c77d2750ee8e5665"
            ]
        ]
    },
    {
        "id": "c77d2750ee8e5665",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "item": "I_71_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Panel_O7",
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "f9963cbe02999d13"
            ]
        ]
    },
    {
        "id": "8b4b7d281502d225",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "item": "F_72_Elev_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "F_72_Elev_Down",
        "x": 470,
        "y": 2260,
        "wires": [
            [
                "0ba3296d694a082b"
            ]
        ]
    },
    {
        "id": "0b1bca3afce05c52",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "item": "F_72_Elev_Up",
        "datatype": "Boolean",
        "value": "",
        "name": "F_72_Elev_Up",
        "x": 480,
        "y": 2300,
        "wires": [
            [
                "0ba3296d694a082b"
            ]
        ]
    },
    {
        "id": "df5463b4e95a6d5e",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "item": "F_72_Eject_Part",
        "datatype": "Boolean",
        "value": "",
        "name": "F_72_Eject_Part",
        "x": 470,
        "y": 2340,
        "wires": [
            [
                "0ba3296d694a082b"
            ]
        ]
    },
    {
        "id": "bb47db2a8dab37d7",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "item": "F_72_Air_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_72_Air_On",
        "x": 490,
        "y": 2380,
        "wires": [
            [
                "0ba3296d694a082b"
            ]
        ]
    },
    {
        "id": "0ba3296d694a082b",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "70 Physical Feedback",
        "mode": "link",
        "links": [
            "4d58e42d9ea6e2e0"
        ],
        "x": 645,
        "y": 2320,
        "wires": []
    },
    {
        "id": "95c68b9eb7025a44",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2180,
        "wires": [
            [
                "10fb7e0046546a73"
            ]
        ]
    },
    {
        "id": "10fb7e0046546a73",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2180,
        "wires": [
            [
                "382470e90dc9db57"
            ]
        ]
    },
    {
        "id": "382470e90dc9db57",
        "type": "file in",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2180,
        "wires": [
            [
                "536670f580511f7a"
            ]
        ]
    },
    {
        "id": "536670f580511f7a",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2180,
        "wires": [
            [
                "e97499f6ca20111c"
            ]
        ]
    },
    {
        "id": "e97499f6ca20111c",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2180,
        "wires": [
            [
                "cf44703895cea6dd"
            ]
        ]
    },
    {
        "id": "cf44703895cea6dd",
        "type": "OpcUa-Client",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "endpoint": "821e214759c2c88d",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2180,
        "wires": [
            [
                "09ad200f911cd975",
                "8ec6a6e599d91939"
            ],
            [
                "bf57aafdf2ac7b50"
            ]
        ]
    },
    {
        "id": "a1d133e414302c66",
        "type": "switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "70 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_72_Elev_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_72_Elev_Up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_72_Eject_Part",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_72_Air_On",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 2320,
        "wires": [
            [
                "62118236f8850b69"
            ],
            [
                "9e0382b624739f64"
            ],
            [
                "c5d70330c2ad03d6"
            ],
            [
                "12f5c0da250b615c"
            ]
        ]
    },
    {
        "id": "62118236f8850b69",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "order": 0,
        "group": "df56b07a3248e1e8",
        "width": 0,
        "height": 0,
        "label": "Lowers elevator",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_72_Elev_Down",
        "x": 1070,
        "y": 2260,
        "wires": []
    },
    {
        "id": "9e0382b624739f64",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "order": 0,
        "group": "df56b07a3248e1e8",
        "width": 0,
        "height": 0,
        "label": "Rises elevator",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_72_Elev_Up",
        "x": 1060,
        "y": 2300,
        "wires": []
    },
    {
        "id": "c5d70330c2ad03d6",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "order": 0,
        "group": "df56b07a3248e1e8",
        "width": 0,
        "height": 0,
        "label": "Eject parts",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_72_Eject_Part",
        "x": 1070,
        "y": 2340,
        "wires": []
    },
    {
        "id": "12f5c0da250b615c",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "order": 0,
        "group": "df56b07a3248e1e8",
        "width": 0,
        "height": 0,
        "label": "Turns on air",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_72_Air_On",
        "x": 1050,
        "y": 2380,
        "wires": []
    },
    {
        "id": "12360e8240435f7a",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "item": "F_73_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Led_Start",
        "x": 480,
        "y": 2560,
        "wires": [
            [
                "4c0f56ca040fc213"
            ]
        ]
    },
    {
        "id": "ec71c9e256df43bc",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "item": "F_73_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Led_Reset",
        "x": 470,
        "y": 2600,
        "wires": [
            [
                "4c0f56ca040fc213"
            ]
        ]
    },
    {
        "id": "7132de261e9b4537",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "item": "F_73_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Led_Extra1",
        "x": 470,
        "y": 2640,
        "wires": [
            [
                "4c0f56ca040fc213"
            ]
        ]
    },
    {
        "id": "cd3040206958a8cf",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "item": "F_73_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Led_Extra2",
        "x": 470,
        "y": 2680,
        "wires": [
            [
                "4c0f56ca040fc213"
            ]
        ]
    },
    {
        "id": "71a4ca554db08da4",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "item": "F_73_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Panel_O4",
        "x": 480,
        "y": 2720,
        "wires": [
            [
                "4c0f56ca040fc213"
            ]
        ]
    },
    {
        "id": "c81363c7d85d0f25",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "item": "F_73_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Panel_O5",
        "x": 480,
        "y": 2760,
        "wires": [
            [
                "4c0f56ca040fc213"
            ]
        ]
    },
    {
        "id": "279fdf4653327040",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "item": "F_73_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Panel_O6",
        "x": 480,
        "y": 2800,
        "wires": [
            [
                "4c0f56ca040fc213"
            ]
        ]
    },
    {
        "id": "4c0f56ca040fc213",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "70 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "4d58e42d9ea6e2e0"
        ],
        "x": 645,
        "y": 2700,
        "wires": []
    },
    {
        "id": "c11705c28a546277",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2480,
        "wires": [
            [
                "9c2b3e579e335474"
            ]
        ]
    },
    {
        "id": "9c2b3e579e335474",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2480,
        "wires": [
            [
                "25e3739cf03226b9"
            ]
        ]
    },
    {
        "id": "25e3739cf03226b9",
        "type": "file in",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2480,
        "wires": [
            [
                "bba07baaa6edca1b"
            ]
        ]
    },
    {
        "id": "bba07baaa6edca1b",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2480,
        "wires": [
            [
                "bd675c710677b460"
            ]
        ]
    },
    {
        "id": "bd675c710677b460",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2480,
        "wires": [
            [
                "3005e5b70c21cccd"
            ]
        ]
    },
    {
        "id": "3005e5b70c21cccd",
        "type": "OpcUa-Client",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "endpoint": "821e214759c2c88d",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2480,
        "wires": [
            [
                "0de888bb0720ff39",
                "cd19d8967c09fc24"
            ],
            [
                "f3e1e6d00f535c77"
            ]
        ]
    },
    {
        "id": "5d3e6e9dcf97240d",
        "type": "switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "70 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_73_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2700,
        "wires": [
            [
                "3bf373b894c4b285"
            ],
            [
                "b734282c716ac03b"
            ],
            [
                "fe6a2f58c176226b"
            ],
            [
                "bf55358ea57d617b"
            ],
            [
                "b957f183615f0b9c"
            ],
            [
                "632283999d35a622"
            ],
            [
                "898b483490d2f93b"
            ],
            [
                "472567166858dc48"
            ]
        ]
    },
    {
        "id": "3bf373b894c4b285",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "order": 0,
        "group": "8a4d49a5c2f6f22b",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Led_Start",
        "x": 1060,
        "y": 2560,
        "wires": []
    },
    {
        "id": "b734282c716ac03b",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "order": 0,
        "group": "8a4d49a5c2f6f22b",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Led_Reset",
        "x": 1070,
        "y": 2600,
        "wires": []
    },
    {
        "id": "fe6a2f58c176226b",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "order": 0,
        "group": "8a4d49a5c2f6f22b",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Led_Extra1",
        "x": 1070,
        "y": 2640,
        "wires": []
    },
    {
        "id": "bf55358ea57d617b",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "order": 0,
        "group": "8a4d49a5c2f6f22b",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Led_Extra2",
        "x": 1070,
        "y": 2680,
        "wires": []
    },
    {
        "id": "b957f183615f0b9c",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "order": 0,
        "group": "8a4d49a5c2f6f22b",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Panel_O4",
        "x": 1060,
        "y": 2720,
        "wires": []
    },
    {
        "id": "632283999d35a622",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "order": 0,
        "group": "8a4d49a5c2f6f22b",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Panel_O5",
        "x": 1060,
        "y": 2760,
        "wires": []
    },
    {
        "id": "898b483490d2f93b",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "order": 0,
        "group": "8a4d49a5c2f6f22b",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Panel_O6",
        "x": 1060,
        "y": 2800,
        "wires": []
    },
    {
        "id": "0811e1b7b3c28f0d",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "item": "F_73_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Panel_O7",
        "x": 480,
        "y": 2840,
        "wires": [
            [
                "4c0f56ca040fc213"
            ]
        ]
    },
    {
        "id": "472567166858dc48",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "order": 0,
        "group": "8a4d49a5c2f6f22b",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Panel_O7",
        "x": 1060,
        "y": 2840,
        "wires": []
    },
    {
        "id": "2e99601bc1745924",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "item": "C_72_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_72_Profibus",
        "x": 640,
        "y": 3020,
        "wires": [
            [
                "4fd981ea34ff65ac"
            ]
        ]
    },
    {
        "id": "405980d50f99207f",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "item": "C_75_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_Initialization",
        "x": 630,
        "y": 3060,
        "wires": [
            [
                "4fd981ea34ff65ac"
            ]
        ]
    },
    {
        "id": "e0962740fb406885",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "item": "C_75_RQ_Delivery2",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_RQ_Delivery2",
        "x": 620,
        "y": 3440,
        "wires": [
            [
                "c679f615f1208f38"
            ]
        ]
    },
    {
        "id": "ad9f6e480c402bb9",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "item": "C_75_Identified",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_Identified",
        "x": 640,
        "y": 3480,
        "wires": [
            [
                "c679f615f1208f38"
            ]
        ]
    },
    {
        "id": "342e9fd2e34eb89a",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "item": "C_75_Requested",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_Requested",
        "x": 630,
        "y": 3520,
        "wires": [
            [
                "c679f615f1208f38"
            ]
        ]
    },
    {
        "id": "4fd981ea34ff65ac",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "70 Control",
        "mode": "link",
        "links": [
            "4d58e42d9ea6e2e0"
        ],
        "x": 795,
        "y": 3140,
        "wires": []
    },
    {
        "id": "72418fbb94301902",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2940,
        "wires": [
            [
                "415055d6a69eeab1"
            ]
        ]
    },
    {
        "id": "415055d6a69eeab1",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2940,
        "wires": [
            [
                "8abb3afa94d39850"
            ]
        ]
    },
    {
        "id": "8abb3afa94d39850",
        "type": "file in",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2940,
        "wires": [
            [
                "e65fb220d9ad32a8"
            ]
        ]
    },
    {
        "id": "e65fb220d9ad32a8",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2940,
        "wires": [
            [
                "36c95447ddabdb75"
            ]
        ]
    },
    {
        "id": "36c95447ddabdb75",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2940,
        "wires": [
            [
                "a8ce7029abfb6123"
            ]
        ]
    },
    {
        "id": "a8ce7029abfb6123",
        "type": "OpcUa-Client",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "endpoint": "821e214759c2c88d",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2940,
        "wires": [
            [
                "66b271e2e5f7b3c4",
                "abdaae9af381d914"
            ],
            [
                "3210f9b1429bdced"
            ]
        ]
    },
    {
        "id": "330bdfb949d89f15",
        "type": "switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "70 CR",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_72_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_ID_Delivery1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_ID_Delivery2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_Part_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_RQ_Part_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_RQ_Wrong",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 1010,
        "y": 3140,
        "wires": [
            [
                "c7fcde39faa4d0cb"
            ],
            [
                "34ab3a5ba0ac7f83"
            ],
            [
                "be2f0421d79c1b3a"
            ],
            [
                "011f822ce9c38475"
            ],
            [
                "58aff805d7a95447"
            ],
            [
                "352f51895b85fa45"
            ],
            [
                "61f1da78502515a1"
            ]
        ]
    },
    {
        "id": "c7fcde39faa4d0cb",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "order": 2,
        "group": "9f5f4c246a81b714",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_72_Profibus",
        "x": 1200,
        "y": 3020,
        "wires": []
    },
    {
        "id": "34ab3a5ba0ac7f83",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "order": 1,
        "group": "9f5f4c246a81b714",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_Initialization",
        "x": 1210,
        "y": 3060,
        "wires": []
    },
    {
        "id": "7bae5233f626e748",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_RQ_Delivery2",
        "label": "Requested Delivery - Bit 2",
        "tooltip": "Bit 2",
        "group": "9f5f4c246a81b714",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 220,
        "y": 3440,
        "wires": [
            [
                "e0962740fb406885"
            ]
        ]
    },
    {
        "id": "4bb7711a407aa94b",
        "type": "ui_dropdown",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "9f5f4c246a81b714",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Identified Delivery",
                "value": "C_75_Identified",
                "type": "str"
            },
            {
                "label": "Requested Delivery",
                "value": "C_75_Requested",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 3500,
        "wires": [
            [
                "ef564e6ca399d359",
                "a577adac2d008e75"
            ]
        ]
    },
    {
        "id": "ef564e6ca399d359",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_Identified",
        "func": "if (msg.payload === \"C_75_Identified\") return { payload: true, topic: \"C_75_Identified\"};\nelse return { payload: false, topic: \"C_75_Identified\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3480,
        "wires": [
            [
                "ad9f6e480c402bb9"
            ]
        ]
    },
    {
        "id": "a577adac2d008e75",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_Requested",
        "func": "if (msg.payload === \"C_75_Requested\") return { payload: true, topic: \"C_75_Requested\"};\nelse return { payload: false, topic: \"C_75_Requested\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3520,
        "wires": [
            [
                "342e9fd2e34eb89a"
            ]
        ]
    },
    {
        "id": "7a77ebb226db3f8a",
        "type": "comment",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "1def9163f1f98fbe",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "18986d9ca29bd90a"
            ]
        ]
    },
    {
        "id": "18986d9ca29bd90a",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Testing_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 340,
        "wires": [
            [
                "75aaedef5ed88961"
            ]
        ]
    },
    {
        "id": "84574c84653cd415",
        "type": "file",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5ce648d6857ebf3d",
        "type": "comment",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "75aaedef5ed88961",
        "type": "OpcUa-Client",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "endpoint": "821e214759c2c88d",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 850,
        "y": 340,
        "wires": [
            [
                "6d5071061bf737a8"
            ],
            [
                "31c1cb1bf2786985",
                "f1b4e2f681c56a5a"
            ]
        ]
    },
    {
        "id": "6d5071061bf737a8",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 320,
        "wires": [
            [
                "3803faeb283dbabc",
                "f7ea6a44635bdbad"
            ]
        ]
    },
    {
        "id": "3803faeb283dbabc",
        "type": "file",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1250,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "f7ea6a44635bdbad",
        "type": "debug",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 360,
        "wires": []
    },
    {
        "id": "35afe8baab7f666e",
        "type": "OpcUa-Client",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "endpoint": "821e214759c2c88d",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "4362e46d3476fdb4"
            ],
            []
        ]
    },
    {
        "id": "30b2fce2acad41fa",
        "type": "comment",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "4362e46d3476fdb4",
        "type": "debug",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "4d58e42d9ea6e2e0",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Write_Test",
        "links": [
            "638c506dab58966d",
            "f9963cbe02999d13",
            "0ba3296d694a082b",
            "bf756f930492bb57",
            "151289912bc53d35",
            "4fd981ea34ff65ac",
            "4c0f56ca040fc213",
            "7fbc03e50fb9cd52",
            "c679f615f1208f38"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "fdc5711f848a6fdc"
            ]
        ]
    },
    {
        "id": "fdc5711f848a6fdc",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "b585dc137b305dae"
            ]
        ]
    },
    {
        "id": "b585dc137b305dae",
        "type": "file in",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "7a496cc4bb6fea49"
            ]
        ]
    },
    {
        "id": "7a496cc4bb6fea49",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "f3742e86422ce055"
            ]
        ]
    },
    {
        "id": "f3742e86422ce055",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "35afe8baab7f666e"
            ]
        ]
    },
    {
        "id": "ff933e691ed37c2f",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3320,
        "wires": [
            [
                "8d5a0a6bc9b5e4db"
            ]
        ]
    },
    {
        "id": "8d5a0a6bc9b5e4db",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3320,
        "wires": [
            [
                "dba4907b0c737815"
            ]
        ]
    },
    {
        "id": "dba4907b0c737815",
        "type": "file in",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3320,
        "wires": [
            [
                "c6e438f01fcc68da"
            ]
        ]
    },
    {
        "id": "c6e438f01fcc68da",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3320,
        "wires": [
            [
                "dcc2fae9293f6422"
            ]
        ]
    },
    {
        "id": "dcc2fae9293f6422",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3320,
        "wires": [
            [
                "c2756a85f5afcd67"
            ]
        ]
    },
    {
        "id": "c2756a85f5afcd67",
        "type": "OpcUa-Client",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "endpoint": "821e214759c2c88d",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3320,
        "wires": [
            [
                "4d565312441017ee",
                "65e02974c04c8ec3"
            ],
            [
                "1ba5ebf2b092d832"
            ]
        ]
    },
    {
        "id": "c9839677598d8c89",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "item": "C_75_ID_Delivery1",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_ID_Delivery1",
        "x": 630,
        "y": 3100,
        "wires": [
            [
                "4fd981ea34ff65ac"
            ]
        ]
    },
    {
        "id": "7d89f263b61e9dfe",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "item": "C_75_ID_Delivery2",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_ID_Delivery2",
        "x": 630,
        "y": 3140,
        "wires": [
            [
                "4fd981ea34ff65ac"
            ]
        ]
    },
    {
        "id": "be2f0421d79c1b3a",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "order": 3,
        "group": "9f5f4c246a81b714",
        "width": 0,
        "height": 0,
        "label": "Identified Delivery - Bit 1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_ID_Delivery1",
        "x": 1210,
        "y": 3100,
        "wires": []
    },
    {
        "id": "011f822ce9c38475",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "order": 4,
        "group": "9f5f4c246a81b714",
        "width": 0,
        "height": 0,
        "label": "Identified Delivery - Bit 2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_ID_Delivery2",
        "x": 1210,
        "y": 3140,
        "wires": []
    },
    {
        "id": "80cceb22ba285a8f",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "item": "C_75_Part_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_Part_Del",
        "x": 640,
        "y": 3180,
        "wires": [
            [
                "4fd981ea34ff65ac"
            ]
        ]
    },
    {
        "id": "3d8c7af3b2451946",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "item": "C_75_RQ_Part_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_RQ_Part_Del",
        "x": 620,
        "y": 3220,
        "wires": [
            [
                "4fd981ea34ff65ac"
            ]
        ]
    },
    {
        "id": "5b82d71e63873092",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "item": "C_75_RQ_Wrong",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_RQ_Wrong",
        "x": 630,
        "y": 3260,
        "wires": [
            [
                "4fd981ea34ff65ac"
            ]
        ]
    },
    {
        "id": "58aff805d7a95447",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "order": 5,
        "group": "9f5f4c246a81b714",
        "width": 0,
        "height": 0,
        "label": "Part Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_Part_Del",
        "x": 1200,
        "y": 3180,
        "wires": []
    },
    {
        "id": "352f51895b85fa45",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "order": 6,
        "group": "9f5f4c246a81b714",
        "width": 0,
        "height": 0,
        "label": "Requested Part Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_RQ_Part_Del",
        "x": 1220,
        "y": 3220,
        "wires": []
    },
    {
        "id": "61f1da78502515a1",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "order": 7,
        "group": "9f5f4c246a81b714",
        "width": 0,
        "height": 0,
        "label": "Requested Wrong Part",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_RQ_Wrong",
        "x": 1210,
        "y": 3260,
        "wires": []
    },
    {
        "id": "72f6d249e2d1ebd0",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "item": "C_75_RQ_Delivery1",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_RQ_Delivery1",
        "x": 620,
        "y": 3400,
        "wires": [
            [
                "c679f615f1208f38"
            ]
        ]
    },
    {
        "id": "b861f6b595864373",
        "type": "ui_switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_RQ_Delivery1",
        "label": "Requested Delivery - Bit 1",
        "tooltip": "Bit 1",
        "group": "9f5f4c246a81b714",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 220,
        "y": 3400,
        "wires": [
            [
                "72f6d249e2d1ebd0"
            ]
        ]
    },
    {
        "id": "cb8de41f3a0f1541",
        "type": "switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "70 CW",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_75_RQ_Delivery1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_RQ_Delivery2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_Identified",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_Requested",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1010,
        "y": 3460,
        "wires": [
            [
                "b19cadc513e8c9a8"
            ],
            [
                "5969daa0e1f88ab1"
            ],
            [
                "b6278f9f424d8271"
            ],
            [
                "b70e9a8918035acf"
            ]
        ]
    },
    {
        "id": "17d8503c9024be99",
        "type": "inject",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_75_Identified",
        "payloadType": "str",
        "x": 190,
        "y": 3540,
        "wires": [
            [
                "4bb7711a407aa94b"
            ]
        ]
    },
    {
        "id": "7c7a83e8c69c3568",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "item": "A_74_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Cart_Stat",
        "x": 480,
        "y": 3720,
        "wires": [
            [
                "7fbc03e50fb9cd52"
            ]
        ]
    },
    {
        "id": "ddef01070c3113ce",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "item": "A_74_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Cart_Next",
        "x": 480,
        "y": 3760,
        "wires": [
            [
                "7fbc03e50fb9cd52"
            ]
        ]
    },
    {
        "id": "740f021d1d66824a",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "item": "A_74_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Optic",
        "x": 490,
        "y": 3800,
        "wires": [
            [
                "7fbc03e50fb9cd52"
            ]
        ]
    },
    {
        "id": "e19fae256febb82b",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "item": "A_74_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Count",
        "x": 490,
        "y": 3840,
        "wires": [
            [
                "7fbc03e50fb9cd52"
            ]
        ]
    },
    {
        "id": "35fa8456ed5d1523",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "item": "A_74_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Pist_Bck",
        "x": 480,
        "y": 3880,
        "wires": [
            [
                "7fbc03e50fb9cd52"
            ]
        ]
    },
    {
        "id": "40bded919ffc2963",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "item": "A_74_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Release_FB",
        "x": 470,
        "y": 3920,
        "wires": [
            [
                "7fbc03e50fb9cd52"
            ]
        ]
    },
    {
        "id": "7f0206565cabd60b",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "item": "A_74_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Request",
        "x": 480,
        "y": 3960,
        "wires": [
            [
                "7fbc03e50fb9cd52"
            ]
        ]
    },
    {
        "id": "7fbc03e50fb9cd52",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "70 AS-i",
        "mode": "link",
        "links": [
            "4d58e42d9ea6e2e0"
        ],
        "x": 645,
        "y": 3880,
        "wires": []
    },
    {
        "id": "da524a721705631c",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3640,
        "wires": [
            [
                "a48135c8d693cb62"
            ]
        ]
    },
    {
        "id": "a48135c8d693cb62",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3640,
        "wires": [
            [
                "571e8d46cb58c6be"
            ]
        ]
    },
    {
        "id": "571e8d46cb58c6be",
        "type": "file in",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3640,
        "wires": [
            [
                "606b8b8c8454691c"
            ]
        ]
    },
    {
        "id": "606b8b8c8454691c",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3640,
        "wires": [
            [
                "c9108f2c6abec259"
            ]
        ]
    },
    {
        "id": "c9108f2c6abec259",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3640,
        "wires": [
            [
                "dee4a4b7a8553b56"
            ]
        ]
    },
    {
        "id": "dee4a4b7a8553b56",
        "type": "OpcUa-Client",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "endpoint": "821e214759c2c88d",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3640,
        "wires": [
            [
                "064d3a255aa10fa6",
                "d90916bb5cc7acd4"
            ],
            [
                "c856fcb2c1dbe6a2"
            ]
        ]
    },
    {
        "id": "eb1fa97f7e65636d",
        "type": "switch",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "70 AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A_74_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_No_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Cart_Full",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 3880,
        "wires": [
            [
                "e936ab9c75eae237"
            ],
            [
                "818c32b8843252ea"
            ],
            [
                "49e7cb44a52af4f9"
            ],
            [
                "3155d2ba94e902bd"
            ],
            [
                "daab1106932918ec"
            ],
            [
                "b9aa2bfc5f5d2d07"
            ],
            [
                "177ae5af39463442"
            ],
            [
                "96bff5a0733de9a6"
            ],
            [
                "3dbf359eaebe4fec"
            ]
        ]
    },
    {
        "id": "e936ab9c75eae237",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "order": 0,
        "group": "90ad960b5d8708ba",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Cart_Stat",
        "x": 1060,
        "y": 3720,
        "wires": []
    },
    {
        "id": "818c32b8843252ea",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "order": 0,
        "group": "90ad960b5d8708ba",
        "width": 0,
        "height": 0,
        "label": "Cart near next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Cart_Next",
        "x": 1060,
        "y": 3760,
        "wires": []
    },
    {
        "id": "49e7cb44a52af4f9",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "order": 0,
        "group": "90ad960b5d8708ba",
        "width": 0,
        "height": 0,
        "label": "Optic sensor on station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Optic",
        "x": 1050,
        "y": 3800,
        "wires": []
    },
    {
        "id": "3155d2ba94e902bd",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "order": 0,
        "group": "90ad960b5d8708ba",
        "width": 0,
        "height": 0,
        "label": "Cart count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Count",
        "x": 1050,
        "y": 3840,
        "wires": []
    },
    {
        "id": "daab1106932918ec",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "order": 0,
        "group": "90ad960b5d8708ba",
        "width": 0,
        "height": 0,
        "label": "Piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Pist_Bck",
        "x": 1060,
        "y": 3880,
        "wires": []
    },
    {
        "id": "b9aa2bfc5f5d2d07",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "order": 0,
        "group": "90ad960b5d8708ba",
        "width": 0,
        "height": 0,
        "label": "Pin release feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Release_FB",
        "x": 1070,
        "y": 3920,
        "wires": []
    },
    {
        "id": "177ae5af39463442",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "order": 0,
        "group": "90ad960b5d8708ba",
        "width": 0,
        "height": 0,
        "label": "Request cart",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Request",
        "x": 1060,
        "y": 3960,
        "wires": []
    },
    {
        "id": "6040558ea933231a",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "item": "A_74_No_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_No_Cart",
        "x": 480,
        "y": 4000,
        "wires": [
            [
                "7fbc03e50fb9cd52"
            ]
        ]
    },
    {
        "id": "96bff5a0733de9a6",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "order": 0,
        "group": "90ad960b5d8708ba",
        "width": 0,
        "height": 0,
        "label": "No Cart at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_No_Cart",
        "x": 1060,
        "y": 4000,
        "wires": []
    },
    {
        "id": "3dbf359eaebe4fec",
        "type": "ui_led",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "order": 0,
        "group": "90ad960b5d8708ba",
        "width": 0,
        "height": 0,
        "label": "Cart Full at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Cart_Full",
        "x": 1060,
        "y": 4040,
        "wires": []
    },
    {
        "id": "cd8ef17cb223938e",
        "type": "OpcUa-Item",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "item": "A_74_Cart_Full",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Cart_Full",
        "x": 480,
        "y": 4040,
        "wires": [
            [
                "7fbc03e50fb9cd52"
            ]
        ]
    },
    {
        "id": "ebe9d62502738118",
        "type": "debug",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "70 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 580,
        "wires": []
    },
    {
        "id": "aa11bce66ee08da2",
        "type": "debug",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "70 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b6b85f6044ab8494",
        "type": "debug",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "70 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1460,
        "wires": []
    },
    {
        "id": "672767f298ae11c3",
        "type": "debug",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "70 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1760,
        "wires": []
    },
    {
        "id": "09ad200f911cd975",
        "type": "debug",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "70 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2220,
        "wires": []
    },
    {
        "id": "0de888bb0720ff39",
        "type": "debug",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "70 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2520,
        "wires": []
    },
    {
        "id": "66b271e2e5f7b3c4",
        "type": "debug",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "70 CR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2980,
        "wires": []
    },
    {
        "id": "4d565312441017ee",
        "type": "debug",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "70 CW",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3360,
        "wires": []
    },
    {
        "id": "064d3a255aa10fa6",
        "type": "debug",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "70 AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 3680,
        "wires": []
    },
    {
        "id": "7e3f8ce72460670b",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_70_SInductive\" : false,\n            \"O_70_SPart\" : false,\n            \"O_70_SStation\" : false,\n            \"O_70_SPart_Height\" : false,\n            \"O_70_Elev_High\" : false,\n            \"O_70_Elev_Low\" : false,\n            \"O_70_Pist_Back\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "191fd323dc7ba12c"
            ]
        ]
    },
    {
        "id": "191fd323dc7ba12c",
        "type": "trigger",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "3fe2dff842491f9d"
            ]
        ]
    },
    {
        "id": "b3e513d383165d8c",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_71_Start\" : false,\n            \"O_71_Stop\" : false,\n            \"O_71_Key_Pos\" : false,\n            \"O_71_Reset\" : false,\n            \"O_71_Panel_I4\" : false,\n            \"O_71_Panel_I5\" : false,\n            \"O_71_Panel_I6\" : false,\n            \"O_71_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 960,
        "wires": [
            [
                "d01adf5527e2449a"
            ]
        ]
    },
    {
        "id": "d01adf5527e2449a",
        "type": "trigger",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 960,
        "wires": [
            [
                "5d4edd51b247f00a"
            ]
        ]
    },
    {
        "id": "de05a73cccca432d",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_70_Elev_Down\" : false,\n            \"I_70_Elev_Up\" : false,\n            \"I_70_Eject_Part\" : false,\n            \"I_70_Air_On\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1420,
        "wires": [
            [
                "e1f2188817cd8e2b"
            ]
        ]
    },
    {
        "id": "e1f2188817cd8e2b",
        "type": "trigger",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1420,
        "wires": [
            [
                "45071e2766ca23c2"
            ]
        ]
    },
    {
        "id": "a50eb664a1fa5553",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_71_Led_Start\": false,\n            \"I_71_Led_Reset\": false,\n            \"I_71_Led_Extra1\": false,\n            \"I_71_Led_Extra2\": false,\n            \"I_71_Panel_O4\": false,\n            \"I_71_Panel_O5\": false,\n            \"I_71_Panel_O6\": false,\n            \"I_71_Panel_O7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1720,
        "wires": [
            [
                "0a11143006d4f516"
            ]
        ]
    },
    {
        "id": "0a11143006d4f516",
        "type": "trigger",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1720,
        "wires": [
            [
                "ded27f0562a15269"
            ]
        ]
    },
    {
        "id": "bf57aafdf2ac7b50",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_72_Elev_Down\" : false,\n            \"F_72_Elev_Up\" : false,\n            \"F_72_Eject_Part\" : false,\n            \"F_72_Air_On\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2180,
        "wires": [
            [
                "407b8e6a8bd67cf4"
            ]
        ]
    },
    {
        "id": "407b8e6a8bd67cf4",
        "type": "trigger",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2180,
        "wires": [
            [
                "95c68b9eb7025a44"
            ]
        ]
    },
    {
        "id": "f3e1e6d00f535c77",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_73_Led_Start\": false,\n            \"F_73_Led_Reset\": false,\n            \"F_73_Led_Extra1\": false,\n            \"F_73_Led_Extra2\": false,\n            \"F_73_Panel_O4\": false,\n            \"F_73_Panel_O5\": false,\n            \"F_73_Panel_O6\": false,\n            \"F_73_Panel_O7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2480,
        "wires": [
            [
                "939140573d5e216f"
            ]
        ]
    },
    {
        "id": "939140573d5e216f",
        "type": "trigger",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2480,
        "wires": [
            [
                "c11705c28a546277"
            ]
        ]
    },
    {
        "id": "3210f9b1429bdced",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_72_Profibus\" : false,\n            \"C_75_Initialization\" : false,\n            \"C_75_ID_Delivery1\" : false,\n            \"C_75_ID_Delivery2\" : false,\n            \"C_75_Part_Del\" : false,\n            \"C_75_RQ_Part_Del\" : false,\n            \"C_75_RQ_Wrong\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2940,
        "wires": [
            [
                "5a23a2141abd91cf"
            ]
        ]
    },
    {
        "id": "5a23a2141abd91cf",
        "type": "trigger",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2940,
        "wires": [
            [
                "72418fbb94301902"
            ]
        ]
    },
    {
        "id": "1ba5ebf2b092d832",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_75_RQ_Delivery1\" : false,\n            \"C_75_RQ_Delivery2\" : false,\n            \"C_75_Identified\" : false,\n            \"C_75_Requested\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3320,
        "wires": [
            [
                "f384ff02ee20a297"
            ]
        ]
    },
    {
        "id": "f384ff02ee20a297",
        "type": "trigger",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3320,
        "wires": [
            [
                "ff933e691ed37c2f"
            ]
        ]
    },
    {
        "id": "c856fcb2c1dbe6a2",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n                \"A_74_Request\": false,\n                \"A_74_No_Cart\": false,\n                \"A_74_Cart_Full\": false,\n                \"A_74_Cart_Stat\": false,\n                \"A_74_Cart_Next\": false,\n                \"A_74_Optic\": false,\n                \"A_74_Count\": false,\n                \"A_74_Pist_Bck\": false,\n                \"A_74_Release_FB\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3640,
        "wires": [
            [
                "e5006d52ab652249"
            ]
        ]
    },
    {
        "id": "e5006d52ab652249",
        "type": "trigger",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3640,
        "wires": [
            [
                "da524a721705631c"
            ]
        ]
    },
    {
        "id": "c679f615f1208f38",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "70 Control",
        "mode": "link",
        "links": [
            "4d58e42d9ea6e2e0"
        ],
        "x": 785,
        "y": 3460,
        "wires": []
    },
    {
        "id": "a5c54b4ada9bbef6",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_70_SInductive\" : false,\n    \"O_70_SPart\" : false,\n    \"O_70_SStation\" : false,\n    \"O_70_SPart_Height\" : false,\n    \"O_70_Elev_High\" : false,\n    \"O_70_Elev_Low\" : false,\n    \"O_70_Pist_Back\" : false,\n    \"O_71_Start\" : false,\n    \"O_71_Stop\" : false,\n    \"O_71_Key_Pos\" : false,\n    \"O_71_Reset\" : false,\n    \"O_71_Panel_I4\" : false,\n    \"O_71_Panel_I5\" : false,\n    \"O_71_Panel_I6\" : false,\n    \"O_71_Panel_I7\" : false,\n    \"F_72_Elev_Down\" : false,\n    \"F_72_Elev_Up\" : false,\n    \"F_72_Eject_Part\" : false,\n    \"F_72_Air_On\" : false,\n    \"F_73_Led_Start\" : false,\n    \"F_73_Led_Reset\" : false,\n    \"F_73_Led_Extra1\" : false,\n    \"F_73_Led_Extra2\" : false,\n    \"F_73_Panel_O4\" : false,\n    \"F_73_Panel_O5\" : false,\n    \"F_73_Panel_O6\" : false,\n    \"F_73_Panel_O7\" : false,\n    \"A_74_Request\" : false,\n    \"A_74_No_Cart\" : false,\n    \"A_74_Cart_Full\" : false,\n    \"C_75_Initialization\" : false,\n    \"C_75_ID_Delivery1\" : false,\n    \"C_75_ID_Delivery2\" : false,\n    \"C_75_Part_Del\" : false,\n    \"C_75_RQ_Part_Del\" : false,\n    \"C_75_RQ_Wrong\" : false,\n    \"C_75_Identified80\" : false,\n    \"C_75_Requested80\" : false,\n    \"I_70_Elev_Down\" : false,\n    \"I_70_Elev_Up\" : false,\n    \"I_70_Eject_Part\" : false,\n    \"I_70_Air_On\" : false,\n    \"I_71_Led_Start\" : false,\n    \"I_71_Led_Reset\" : false,\n    \"I_71_Led_Extra1\" : false,\n    \"I_71_Led_Extra2\" : false,\n    \"I_71_Panel_O4\" : false,\n    \"I_71_Panel_O5\" : false,\n    \"I_71_Panel_O6\" : false,\n    \"I_71_Panel_O7\" : false,\n    \"C_72_Profibus\" : false,\n    \"A_74_Cart_Stat\" : false,\n    \"A_74_Cart_Next\" : false,\n    \"A_74_Optic\" : false,\n    \"A_74_Count\" : false,\n    \"A_74_Pist_Bck\" : false,\n    \"A_74_Release_FB\" : false,\n    \"C_75_RQ_Delivery1\" : false,\n    \"C_75_RQ_Delivery2\" : false,\n    \"C_75_Identified\" : false,\n    \"C_75_Requested\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "5d5c5e571a9bd7eb"
            ]
        ]
    },
    {
        "id": "5d5c5e571a9bd7eb",
        "type": "trigger",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "1def9163f1f98fbe"
            ]
        ]
    },
    {
        "id": "02fb05a78c08f05c",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "1565ffd087be3562"
            ]
        ]
    },
    {
        "id": "1565ffd087be3562",
        "type": "trigger",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "84574c84653cd415"
            ]
        ]
    },
    {
        "id": "31c1cb1bf2786985",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "44f118cc82abc9a7",
            "7b8e340576a26067"
        ],
        "x": 975,
        "y": 360,
        "wires": []
    },
    {
        "id": "44f118cc82abc9a7",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "CSV Link",
        "links": [
            "31c1cb1bf2786985"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "02fb05a78c08f05c"
            ]
        ]
    },
    {
        "id": "7b8e340576a26067",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "CSV Link",
        "links": [
            "31c1cb1bf2786985"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "a5c54b4ada9bbef6"
            ]
        ]
    },
    {
        "id": "e41715d38878e30e",
        "type": "debug",
        "z": "c7e2c1b5cad83a3e",
        "g": "19adb3d64a075f2f",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "b773e666ea45a1ae",
        "type": "OpcUa-Server",
        "z": "c7e2c1b5cad83a3e",
        "g": "19adb3d64a075f2f",
        "port": "53887",
        "name": "Server: Testing",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Testing/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Testing",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "e41715d38878e30e"
            ]
        ]
    },
    {
        "id": "2f64dea547cf558a",
        "type": "debug",
        "z": "c7e2c1b5cad83a3e",
        "g": "e6f32531c35e260e",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "3d1acfd3af772223",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "e6f32531c35e260e",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "ef0574a96e0d3d1f",
            "316d886b8ee5e8a9",
            "ecf00c6e72249202",
            "7a1309016e7b6977",
            "33abbf0aab29ebc1",
            "216e270e7762b43c"
        ],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "28a6998487f08748",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "O_70_SInductive",
        "func": "if (msg.topic === \"O_70_SInductive\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_SInductive\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 620,
        "wires": [
            [
                "a97e90b56a62740a"
            ]
        ]
    },
    {
        "id": "316d886b8ee5e8a9",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "S7 PS",
        "links": [
            "3d1acfd3af772223"
        ],
        "x": 55,
        "y": 740,
        "wires": [
            [
                "28a6998487f08748",
                "a98f9406b3fb6580",
                "e81700aac119abe2",
                "cf41532160fa77e2",
                "2d405789ca8ab816",
                "55df0f11940cea9c",
                "52ae850dafe036ba"
            ]
        ]
    },
    {
        "id": "2d405789ca8ab816",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "O_70_Elev_High",
        "func": "if (msg.topic === \"O_70_Elev_High\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_Elev_High\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 780,
        "wires": [
            [
                "97ecefed2c67ebf3"
            ]
        ]
    },
    {
        "id": "a98f9406b3fb6580",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "O_70_SPart",
        "func": "if (msg.topic === \"O_70_SPart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_SPart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 660,
        "wires": [
            [
                "862744f748253dde"
            ]
        ]
    },
    {
        "id": "e81700aac119abe2",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "O_70_SStation",
        "func": "if (msg.topic === \"O_70_SStation\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_SStation\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 700,
        "wires": [
            [
                "ea9a50706db0ea16"
            ]
        ]
    },
    {
        "id": "cf41532160fa77e2",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "O_70_SPart_Height",
        "func": "if (msg.topic === \"O_70_SPart_Height\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_SPart_Height\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 740,
        "wires": [
            [
                "d4b3e13de129e449"
            ]
        ]
    },
    {
        "id": "55df0f11940cea9c",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "O_70_Elev_Low",
        "func": "if (msg.topic === \"O_70_Elev_Low\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_Elev_Low\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 820,
        "wires": [
            [
                "2473b59670fcdaaa"
            ]
        ]
    },
    {
        "id": "52ae850dafe036ba",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "O_70_Pist_Back",
        "func": "if (msg.topic === \"O_70_Pist_Back\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_Pist_Back\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 860,
        "wires": [
            [
                "6b5f9fc00666a151"
            ]
        ]
    },
    {
        "id": "43c8582a6728e153",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "Sub In 70 PS",
        "links": [
            "46c4c3d66f88a690"
        ],
        "x": 775,
        "y": 740,
        "wires": [
            [
                "2f06843d0b973b0d"
            ]
        ]
    },
    {
        "id": "46c4c3d66f88a690",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "Sub Out 70 PS",
        "mode": "link",
        "links": [
            "43c8582a6728e153"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "c3c539be88b2ff59",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "Sub In 70 AS",
        "links": [
            "96f91e8b2cdb9ec3"
        ],
        "x": 775,
        "y": 1180,
        "wires": [
            [
                "66fdce3b1115c8cb"
            ]
        ]
    },
    {
        "id": "96f91e8b2cdb9ec3",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "Sub Out 70 AS",
        "mode": "link",
        "links": [
            "c3c539be88b2ff59"
        ],
        "x": 1295,
        "y": 960,
        "wires": []
    },
    {
        "id": "aa05e15048552810",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "O_71_Start",
        "func": "if (msg.topic === \"O_71_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "1cbe09737beee927"
            ]
        ]
    },
    {
        "id": "ef0574a96e0d3d1f",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "S7 AS",
        "links": [
            "3d1acfd3af772223"
        ],
        "x": 55,
        "y": 1180,
        "wires": [
            [
                "aa05e15048552810",
                "1ebe574ea8e860a7",
                "6c60d5df07d7c401",
                "13435ce9ff419659",
                "9104d8717ec08d68",
                "b850d5c23630cc00",
                "da05800ebafcf794",
                "84069babb8ab55d8"
            ]
        ]
    },
    {
        "id": "9104d8717ec08d68",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "O_71_Panel_I4",
        "func": "if (msg.topic === \"O_71_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "c296caca3dd3fa28"
            ]
        ]
    },
    {
        "id": "1ebe574ea8e860a7",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "O_71_Stop",
        "func": "if (msg.topic === \"O_71_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "38fa20a9a4fab507"
            ]
        ]
    },
    {
        "id": "6c60d5df07d7c401",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "O_71_Key_Pos",
        "func": "if (msg.topic === \"O_71_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "ee93662533ed3321"
            ]
        ]
    },
    {
        "id": "13435ce9ff419659",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "O_71_Reset",
        "func": "if (msg.topic === \"O_71_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "c08b28131ecf857c"
            ]
        ]
    },
    {
        "id": "b850d5c23630cc00",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "O_71_Panel_I5",
        "func": "if (msg.topic === \"O_71_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1240,
        "wires": [
            [
                "42ca2045e02c9a41"
            ]
        ]
    },
    {
        "id": "da05800ebafcf794",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "O_71_Panel_I6",
        "func": "if (msg.topic === \"O_71_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "3061b0c5690d3c36"
            ]
        ]
    },
    {
        "id": "84069babb8ab55d8",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "O_71_Panel_I7",
        "func": "if (msg.topic === \"O_71_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "0021ae387ac9ee34"
            ]
        ]
    },
    {
        "id": "9613249b4a7665f9",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "Sub Out 70 PA",
        "mode": "link",
        "links": [
            "f8bedc05f28a351b"
        ],
        "x": 1295,
        "y": 1420,
        "wires": []
    },
    {
        "id": "f8bedc05f28a351b",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "Sub In 70 PA",
        "links": [
            "9613249b4a7665f9"
        ],
        "x": 775,
        "y": 1560,
        "wires": [
            [
                "086801c6e172419d"
            ]
        ]
    },
    {
        "id": "c27c5c5c74d3ca9f",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "Sub Out 70 AA",
        "mode": "link",
        "links": [
            "6c3573fb4b87517e"
        ],
        "x": 1295,
        "y": 1720,
        "wires": []
    },
    {
        "id": "6c3573fb4b87517e",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "Sub In 70 AA",
        "links": [
            "c27c5c5c74d3ca9f"
        ],
        "x": 775,
        "y": 1940,
        "wires": [
            [
                "75df49ba06ee6c44"
            ]
        ]
    },
    {
        "id": "8ec6a6e599d91939",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "Sub Out 70 PF",
        "mode": "link",
        "links": [
            "54037ccc9f54caeb"
        ],
        "x": 1295,
        "y": 2180,
        "wires": []
    },
    {
        "id": "54037ccc9f54caeb",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "Sub In 70 PF",
        "links": [
            "8ec6a6e599d91939"
        ],
        "x": 775,
        "y": 2320,
        "wires": [
            [
                "a1d133e414302c66"
            ]
        ]
    },
    {
        "id": "e3e32b4cd860988f",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "F_72_Elev_Down",
        "func": "if (msg.topic === \"F_72_Elev_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_72_Elev_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2260,
        "wires": [
            [
                "8b4b7d281502d225"
            ]
        ]
    },
    {
        "id": "ecf00c6e72249202",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "S7 PF",
        "links": [
            "3d1acfd3af772223"
        ],
        "x": 55,
        "y": 2320,
        "wires": [
            [
                "e3e32b4cd860988f",
                "78836b800fec0aae",
                "d1662026a52fcc42",
                "10106fb68f8df52b"
            ]
        ]
    },
    {
        "id": "78836b800fec0aae",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "F_72_Elev_Up",
        "func": "if (msg.topic === \"F_72_Elev_Up\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_72_Elev_Up\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2300,
        "wires": [
            [
                "0b1bca3afce05c52"
            ]
        ]
    },
    {
        "id": "d1662026a52fcc42",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "F_72_Eject_Part",
        "func": "if (msg.topic === \"F_72_Eject_Part\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_72_Eject_Part\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2340,
        "wires": [
            [
                "df5463b4e95a6d5e"
            ]
        ]
    },
    {
        "id": "10106fb68f8df52b",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "F_72_Air_On",
        "func": "if (msg.topic === \"F_72_Air_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_72_Air_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2380,
        "wires": [
            [
                "bb47db2a8dab37d7"
            ]
        ]
    },
    {
        "id": "cd19d8967c09fc24",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "Sub Out 70 AF",
        "mode": "link",
        "links": [
            "e2f86a4ab93e3916"
        ],
        "x": 1295,
        "y": 2480,
        "wires": []
    },
    {
        "id": "e2f86a4ab93e3916",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "Sub In 70 AF",
        "links": [
            "cd19d8967c09fc24"
        ],
        "x": 775,
        "y": 2700,
        "wires": [
            [
                "5d3e6e9dcf97240d"
            ]
        ]
    },
    {
        "id": "4c63580c2272a064",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "F_73_Led_Start",
        "func": "if (msg.topic === \"F_73_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2560,
        "wires": [
            [
                "12360e8240435f7a"
            ]
        ]
    },
    {
        "id": "7a1309016e7b6977",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "S7 AF",
        "links": [
            "3d1acfd3af772223"
        ],
        "x": 55,
        "y": 2700,
        "wires": [
            [
                "4c63580c2272a064",
                "1f58dbc8b0f7383a",
                "7353c59375c30c8d",
                "763eb359cd91aa1f",
                "6b2ca5ba19227e5d",
                "ef09c51c227b8c2d",
                "c12f6ecbe4aaebaa",
                "10f71563192e12a6"
            ]
        ]
    },
    {
        "id": "6b2ca5ba19227e5d",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "F_73_Panel_O4",
        "func": "if (msg.topic === \"F_73_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2720,
        "wires": [
            [
                "71a4ca554db08da4"
            ]
        ]
    },
    {
        "id": "1f58dbc8b0f7383a",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "F_73_Led_Reset",
        "func": "if (msg.topic === \"F_73_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2600,
        "wires": [
            [
                "ec71c9e256df43bc"
            ]
        ]
    },
    {
        "id": "7353c59375c30c8d",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "F_73_Led_Extra1",
        "func": "if (msg.topic === \"F_73_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2640,
        "wires": [
            [
                "7132de261e9b4537"
            ]
        ]
    },
    {
        "id": "763eb359cd91aa1f",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "F_73_Led_Extra2",
        "func": "if (msg.topic === \"F_73_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2680,
        "wires": [
            [
                "cd3040206958a8cf"
            ]
        ]
    },
    {
        "id": "ef09c51c227b8c2d",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "F_73_Panel_O5",
        "func": "if (msg.topic === \"F_73_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2760,
        "wires": [
            [
                "c81363c7d85d0f25"
            ]
        ]
    },
    {
        "id": "c12f6ecbe4aaebaa",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "F_73_Panel_O6",
        "func": "if (msg.topic === \"F_73_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2800,
        "wires": [
            [
                "279fdf4653327040"
            ]
        ]
    },
    {
        "id": "10f71563192e12a6",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "F_73_Panel_O7",
        "func": "if (msg.topic === \"F_73_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2840,
        "wires": [
            [
                "0811e1b7b3c28f0d"
            ]
        ]
    },
    {
        "id": "758f895cb618db92",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_72_Profibus",
        "func": "if (msg.topic === \"C_72_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_72_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3020,
        "wires": [
            [
                "2e99601bc1745924"
            ]
        ]
    },
    {
        "id": "33abbf0aab29ebc1",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "S7 CR",
        "links": [
            "3d1acfd3af772223"
        ],
        "x": 55,
        "y": 3140,
        "wires": [
            [
                "758f895cb618db92",
                "be9e87d6a2e65c4b",
                "b2b59fda9e016cdc",
                "154157524f85b46a",
                "3786c33df25fd5b7",
                "5c30a2034032432d",
                "cd364e8f59952ee3"
            ]
        ]
    },
    {
        "id": "3786c33df25fd5b7",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_Part_Del",
        "func": "if (msg.topic === \"C_75_Part_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_Part_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3180,
        "wires": [
            [
                "80cceb22ba285a8f"
            ]
        ]
    },
    {
        "id": "be9e87d6a2e65c4b",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_Initialization",
        "func": "if (msg.topic === \"C_75_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3060,
        "wires": [
            [
                "405980d50f99207f"
            ]
        ]
    },
    {
        "id": "b2b59fda9e016cdc",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_ID_Delivery1",
        "func": "if (msg.topic === \"C_75_ID_Delivery1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_ID_Delivery1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3100,
        "wires": [
            [
                "c9839677598d8c89"
            ]
        ]
    },
    {
        "id": "154157524f85b46a",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_ID_Delivery2",
        "func": "if (msg.topic === \"C_75_ID_Delivery2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_ID_Delivery2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3140,
        "wires": [
            [
                "7d89f263b61e9dfe"
            ]
        ]
    },
    {
        "id": "5c30a2034032432d",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_RQ_Part_Del",
        "func": "if (msg.topic === \"C_75_RQ_Part_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_RQ_Part_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 3220,
        "wires": [
            [
                "3d8c7af3b2451946"
            ]
        ]
    },
    {
        "id": "cd364e8f59952ee3",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_RQ_Wrong",
        "func": "if (msg.topic === \"C_75_RQ_Wrong\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_RQ_Wrong\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3260,
        "wires": [
            [
                "5b82d71e63873092"
            ]
        ]
    },
    {
        "id": "abdaae9af381d914",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Sub Out 70 CR",
        "mode": "link",
        "links": [
            "091bb59ff91efcf2"
        ],
        "x": 1295,
        "y": 2940,
        "wires": []
    },
    {
        "id": "091bb59ff91efcf2",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Sub In 70 CR",
        "links": [
            "abdaae9af381d914"
        ],
        "x": 915,
        "y": 3140,
        "wires": [
            [
                "330bdfb949d89f15"
            ]
        ]
    },
    {
        "id": "65e02974c04c8ec3",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Sub Out 70 CW",
        "mode": "link",
        "links": [
            "c1d9d70568ddaa08"
        ],
        "x": 1295,
        "y": 3320,
        "wires": []
    },
    {
        "id": "c1d9d70568ddaa08",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Sub In 70 CW",
        "links": [
            "65e02974c04c8ec3"
        ],
        "x": 915,
        "y": 3460,
        "wires": [
            [
                "cb8de41f3a0f1541"
            ]
        ]
    },
    {
        "id": "7d3169e58230eedc",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "A_74_Cart_Stat",
        "func": "if (msg.topic === \"A_74_Cart_Stat\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Cart_Stat\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3720,
        "wires": [
            [
                "7c7a83e8c69c3568"
            ]
        ]
    },
    {
        "id": "216e270e7762b43c",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "S7 AS-i",
        "links": [
            "3d1acfd3af772223"
        ],
        "x": 55,
        "y": 3880,
        "wires": [
            [
                "7d3169e58230eedc",
                "a367842895fed011",
                "d326c4981669858e",
                "c96e2a7a0ac1a0c5",
                "6e8d8435bcbdadd6",
                "485e6e3e057da4b9",
                "a834b0ba80b94bfa",
                "3ef81dad672b11d1",
                "4c6b531abc920152"
            ]
        ]
    },
    {
        "id": "6e8d8435bcbdadd6",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "A_74_Pist_Bck",
        "func": "if (msg.topic === \"A_74_Pist_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Pist_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3880,
        "wires": [
            [
                "35fa8456ed5d1523"
            ]
        ]
    },
    {
        "id": "a367842895fed011",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "A_74_Cart_Next",
        "func": "if (msg.topic === \"A_74_Cart_Next\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Cart_Next\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3760,
        "wires": [
            [
                "ddef01070c3113ce"
            ]
        ]
    },
    {
        "id": "d326c4981669858e",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "A_74_Optic",
        "func": "if (msg.topic === \"A_74_Optic\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Optic\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3800,
        "wires": [
            [
                "740f021d1d66824a"
            ]
        ]
    },
    {
        "id": "c96e2a7a0ac1a0c5",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "A_74_Count",
        "func": "if (msg.topic === \"A_74_Count\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Count\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3840,
        "wires": [
            [
                "e19fae256febb82b"
            ]
        ]
    },
    {
        "id": "485e6e3e057da4b9",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "A_74_Release_FB",
        "func": "if (msg.topic === \"A_74_Release_FB\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Release_FB\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3920,
        "wires": [
            [
                "40bded919ffc2963"
            ]
        ]
    },
    {
        "id": "a834b0ba80b94bfa",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "A_74_Request",
        "func": "if (msg.topic === \"A_74_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3960,
        "wires": [
            [
                "7f0206565cabd60b"
            ]
        ]
    },
    {
        "id": "3ef81dad672b11d1",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "A_74_No_Cart",
        "func": "if (msg.topic === \"A_74_No_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_No_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4000,
        "wires": [
            [
                "6040558ea933231a"
            ]
        ]
    },
    {
        "id": "4c6b531abc920152",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "A_74_Cart_Full",
        "func": "if (msg.topic === \"A_74_Cart_Full\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Cart_Full\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4040,
        "wires": [
            [
                "cd8ef17cb223938e"
            ]
        ]
    },
    {
        "id": "d90916bb5cc7acd4",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "Sub Out 70 AS-i",
        "mode": "link",
        "links": [
            "af45f14ce9910c4a"
        ],
        "x": 1295,
        "y": 3640,
        "wires": []
    },
    {
        "id": "af45f14ce9910c4a",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "Sub In 70 AS-i",
        "links": [
            "d90916bb5cc7acd4"
        ],
        "x": 755,
        "y": 3880,
        "wires": [
            [
                "eb1fa97f7e65636d"
            ]
        ]
    },
    {
        "id": "74995da7c17b0b50",
        "type": "mqtt in",
        "z": "c7e2c1b5cad83a3e",
        "g": "e6f32531c35e260e",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b7ac41c0bcdf40b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "3c1a14bbe5803092"
            ]
        ]
    },
    {
        "id": "3c1a14bbe5803092",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "e6f32531c35e260e",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "3d1acfd3af772223",
                "2f64dea547cf558a"
            ]
        ]
    },
    {
        "id": "f1b4e2f681c56a5a",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 400,
        "wires": [
            [
                "ac556d056992d8f4"
            ]
        ]
    },
    {
        "id": "ac556d056992d8f4",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "4d89eb271f846637",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "35308c64fcb16997",
            "9c9cacced9dae360",
            "a78401a289f0f61d",
            "dd23e750208b81aa",
            "8f2237ccb09d183c",
            "b12abbb1c807d5a8",
            "4227eaa6e6f0494c",
            "6145053793d0fd38",
            "876f02205aa942cc"
        ],
        "x": 1165,
        "y": 400,
        "wires": []
    },
    {
        "id": "35308c64fcb16997",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "67ca324be2fb8df8",
        "name": "Read S",
        "links": [
            "ac556d056992d8f4"
        ],
        "x": 55,
        "y": 3640,
        "wires": [
            [
                "c856fcb2c1dbe6a2"
            ]
        ]
    },
    {
        "id": "9c9cacced9dae360",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Read CR",
        "links": [
            "ac556d056992d8f4"
        ],
        "x": 55,
        "y": 2940,
        "wires": [
            [
                "3210f9b1429bdced"
            ]
        ]
    },
    {
        "id": "a78401a289f0f61d",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "Read CW",
        "links": [
            "ac556d056992d8f4"
        ],
        "x": 55,
        "y": 3320,
        "wires": [
            [
                "1ba5ebf2b092d832"
            ]
        ]
    },
    {
        "id": "dd23e750208b81aa",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "e01cd84c0cdee455",
        "name": "Read AF",
        "links": [
            "ac556d056992d8f4"
        ],
        "x": 55,
        "y": 2480,
        "wires": [
            [
                "f3e1e6d00f535c77"
            ]
        ]
    },
    {
        "id": "8f2237ccb09d183c",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "6ea4606e56d3592a",
        "name": "Read PF",
        "links": [
            "ac556d056992d8f4"
        ],
        "x": 55,
        "y": 2180,
        "wires": [
            [
                "bf57aafdf2ac7b50"
            ]
        ]
    },
    {
        "id": "b12abbb1c807d5a8",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "Read AA",
        "links": [
            "ac556d056992d8f4"
        ],
        "x": 55,
        "y": 1720,
        "wires": [
            [
                "a50eb664a1fa5553"
            ]
        ]
    },
    {
        "id": "4227eaa6e6f0494c",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "Read PA",
        "links": [
            "ac556d056992d8f4"
        ],
        "x": 55,
        "y": 1420,
        "wires": [
            [
                "de05a73cccca432d"
            ]
        ]
    },
    {
        "id": "6145053793d0fd38",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "01ce21657a315198",
        "name": "Read AS",
        "links": [
            "ac556d056992d8f4"
        ],
        "x": 55,
        "y": 960,
        "wires": [
            [
                "b3e513d383165d8c"
            ]
        ]
    },
    {
        "id": "876f02205aa942cc",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "e16e4b927dd38aa9",
        "name": "Read PS",
        "links": [
            "ac556d056992d8f4"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "7e3f8ce72460670b"
            ]
        ]
    },
    {
        "id": "f52ead3f2002073c",
        "type": "mqtt out",
        "z": "c7e2c1b5cad83a3e",
        "g": "e6f32531c35e260e",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b7ac41c0bcdf40b1",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "9df40d51ecb779b5",
        "type": "link in",
        "z": "c7e2c1b5cad83a3e",
        "g": "e6f32531c35e260e",
        "name": "S7 Actuators",
        "links": [
            "7dc87617f79ad763",
            "f07e2fc41233f579",
            "fe07f9115d939b4e"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "f52ead3f2002073c"
            ]
        ]
    },
    {
        "id": "50c5ce3aa6cbaec1",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "I_70_Elev_Down",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1500,
        "wires": [
            [
                "7dc87617f79ad763"
            ]
        ]
    },
    {
        "id": "dde333ccb8e762c6",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "I_70_Elev_Up",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1540,
        "wires": [
            [
                "7dc87617f79ad763"
            ]
        ]
    },
    {
        "id": "87baa20645efab95",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "I_70_Eject_Part",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1580,
        "wires": [
            [
                "7dc87617f79ad763"
            ]
        ]
    },
    {
        "id": "74d381778a8708ad",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "I_70_Air_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1620,
        "wires": [
            [
                "7dc87617f79ad763"
            ]
        ]
    },
    {
        "id": "7dc87617f79ad763",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "a8c983974cf6b0c8",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "9df40d51ecb779b5"
        ],
        "x": 1235,
        "y": 1560,
        "wires": []
    },
    {
        "id": "2349d3936975ea05",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1800,
        "wires": [
            [
                "f07e2fc41233f579"
            ]
        ]
    },
    {
        "id": "b05940a43153a65b",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1840,
        "wires": [
            [
                "f07e2fc41233f579"
            ]
        ]
    },
    {
        "id": "fe6156e25790eb29",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1880,
        "wires": [
            [
                "f07e2fc41233f579"
            ]
        ]
    },
    {
        "id": "48d9f9db0eb3c77f",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1920,
        "wires": [
            [
                "f07e2fc41233f579"
            ]
        ]
    },
    {
        "id": "b89959432850d4c1",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1960,
        "wires": [
            [
                "f07e2fc41233f579"
            ]
        ]
    },
    {
        "id": "4df62d7a30e1bd99",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2000,
        "wires": [
            [
                "f07e2fc41233f579"
            ]
        ]
    },
    {
        "id": "d4a21f1f65cfd01e",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2040,
        "wires": [
            [
                "f07e2fc41233f579"
            ]
        ]
    },
    {
        "id": "a692280ffd9b5152",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "I_71_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2080,
        "wires": [
            [
                "f07e2fc41233f579"
            ]
        ]
    },
    {
        "id": "f07e2fc41233f579",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "cb3906ed62de1d6d",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "9df40d51ecb779b5"
        ],
        "x": 1225,
        "y": 1940,
        "wires": []
    },
    {
        "id": "b19cadc513e8c9a8",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_RQ_Delivery1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 3400,
        "wires": [
            [
                "fe07f9115d939b4e"
            ]
        ]
    },
    {
        "id": "5969daa0e1f88ab1",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_RQ_Delivery2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 3440,
        "wires": [
            [
                "fe07f9115d939b4e"
            ]
        ]
    },
    {
        "id": "b6278f9f424d8271",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_Identified",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3480,
        "wires": [
            [
                "fe07f9115d939b4e"
            ]
        ]
    },
    {
        "id": "b70e9a8918035acf",
        "type": "function",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "C_75_Requested",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3520,
        "wires": [
            [
                "fe07f9115d939b4e"
            ]
        ]
    },
    {
        "id": "fe07f9115d939b4e",
        "type": "link out",
        "z": "c7e2c1b5cad83a3e",
        "g": "49ae933f55459fbf",
        "name": "S7 CW",
        "mode": "link",
        "links": [
            "9df40d51ecb779b5"
        ],
        "x": 1375,
        "y": 3460,
        "wires": []
    },
    {
        "id": "d2a73e5ec91d1e64",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "item": "O_80_Mag_Full",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Mag_Full",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "39a35b742c524ee9"
            ]
        ]
    },
    {
        "id": "5b5d8f750f9f5873",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "item": "O_80_Pist_Back",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Pist_Back",
        "x": 470,
        "y": 660,
        "wires": [
            [
                "39a35b742c524ee9"
            ]
        ]
    },
    {
        "id": "fa2aafcd887b7a68",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "item": "O_80_Pist_Fwd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Pist_Fwd",
        "x": 480,
        "y": 700,
        "wires": [
            [
                "39a35b742c524ee9"
            ]
        ]
    },
    {
        "id": "fa76f6d7aee5c231",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "item": "O_80_Part_Stuck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Part_Stuck",
        "x": 470,
        "y": 740,
        "wires": [
            [
                "39a35b742c524ee9"
            ]
        ]
    },
    {
        "id": "ba0274d5927980b1",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "item": "O_80_Arm_Mag",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Arm_Mag",
        "x": 480,
        "y": 780,
        "wires": [
            [
                "39a35b742c524ee9"
            ]
        ]
    },
    {
        "id": "8cc680b5ce77cebc",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "item": "O_80_Arm_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Arm_Del",
        "x": 480,
        "y": 820,
        "wires": [
            [
                "39a35b742c524ee9"
            ]
        ]
    },
    {
        "id": "fb023f1c8a48f911",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "item": "O_80_Mag_Empty",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Mag_Empty",
        "x": 470,
        "y": 860,
        "wires": [
            [
                "39a35b742c524ee9"
            ]
        ]
    },
    {
        "id": "39a35b742c524ee9",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "80 Physical Sensor",
        "mode": "link",
        "links": [
            "a72597f9fa9c5dce"
        ],
        "x": 645,
        "y": 740,
        "wires": []
    },
    {
        "id": "d749cfac11f690c7",
        "type": "switch",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "80 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_80_Mag_Full",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Pist_Back",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Pist_Fwd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Part_Stuck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Arm_Mag",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Arm_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Mag_Empty",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 740,
        "wires": [
            [
                "f46335436e38b871"
            ],
            [
                "63b9a74d0ec1da8c"
            ],
            [
                "d60dda31388af0d3"
            ],
            [
                "946ca0f475da40ce"
            ],
            [
                "05db08f13278196e"
            ],
            [
                "2887cc748089b892"
            ],
            [
                "9c292acb911664d0"
            ]
        ]
    },
    {
        "id": "f46335436e38b871",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "order": 0,
        "group": "09c7f509198eafca",
        "width": 0,
        "height": 0,
        "label": "Magazine full",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Mag_Full",
        "x": 1060,
        "y": 620,
        "wires": []
    },
    {
        "id": "63b9a74d0ec1da8c",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "order": 0,
        "group": "09c7f509198eafca",
        "width": 0,
        "height": 0,
        "label": "Piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Pist_Back",
        "x": 1070,
        "y": 660,
        "wires": []
    },
    {
        "id": "d60dda31388af0d3",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "order": 0,
        "group": "09c7f509198eafca",
        "width": 0,
        "height": 0,
        "label": "Piston in forward position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Pist_Fwd",
        "x": 1060,
        "y": 700,
        "wires": []
    },
    {
        "id": "946ca0f475da40ce",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "order": 0,
        "group": "09c7f509198eafca",
        "width": 0,
        "height": 0,
        "label": "Part stuck in arm",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Part_Stuck",
        "x": 1070,
        "y": 740,
        "wires": []
    },
    {
        "id": "05db08f13278196e",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "order": 0,
        "group": "09c7f509198eafca",
        "width": 0,
        "height": 0,
        "label": "Arm in magazine position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Arm_Mag",
        "x": 1060,
        "y": 780,
        "wires": []
    },
    {
        "id": "2887cc748089b892",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "order": 0,
        "group": "09c7f509198eafca",
        "width": 0,
        "height": 0,
        "label": "Arm in delivery (elevator) position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Arm_Del",
        "x": 1060,
        "y": 820,
        "wires": []
    },
    {
        "id": "9c292acb911664d0",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "order": 0,
        "group": "09c7f509198eafca",
        "width": 0,
        "height": 0,
        "label": "Magazine Empty",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Mag_Empty",
        "x": 1070,
        "y": 860,
        "wires": []
    },
    {
        "id": "2634ce420146c179",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "item": "O_81_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Start",
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "7b18fcb7bcae2ced"
            ]
        ]
    },
    {
        "id": "172b82eee78d4a59",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "item": "O_81_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Stop",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "7b18fcb7bcae2ced"
            ]
        ]
    },
    {
        "id": "9535f17f5afdae87",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "item": "O_81_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Key_Pos",
        "x": 480,
        "y": 1120,
        "wires": [
            [
                "7b18fcb7bcae2ced"
            ]
        ]
    },
    {
        "id": "81ff38b90e087b06",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "item": "O_81_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Reset",
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "7b18fcb7bcae2ced"
            ]
        ]
    },
    {
        "id": "a1fd271f0d44592e",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "item": "O_81_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Panel_I4",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "7b18fcb7bcae2ced"
            ]
        ]
    },
    {
        "id": "598874fd36b665bf",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "item": "O_81_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Panel_I5",
        "x": 480,
        "y": 1240,
        "wires": [
            [
                "7b18fcb7bcae2ced"
            ]
        ]
    },
    {
        "id": "12864af8ddc53254",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "item": "O_81_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Panel_I6",
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "7b18fcb7bcae2ced"
            ]
        ]
    },
    {
        "id": "7b18fcb7bcae2ced",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "80 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "a72597f9fa9c5dce"
        ],
        "x": 645,
        "y": 1180,
        "wires": []
    },
    {
        "id": "bf394a6790931c4b",
        "type": "switch",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "80 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_81_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1180,
        "wires": [
            [
                "d3805bdf601843f8"
            ],
            [
                "5b800ea18a78b0e5"
            ],
            [
                "55cb807a367e84a9"
            ],
            [
                "628ff7b38c7cb875"
            ],
            [
                "e18b22fc3825ec72"
            ],
            [
                "7d6fd00febd29e37"
            ],
            [
                "0229cb5707743a6a"
            ],
            [
                "79518ad50c5078a3"
            ]
        ]
    },
    {
        "id": "d3805bdf601843f8",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "order": 0,
        "group": "9f15425c94363b2a",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Start",
        "x": 1050,
        "y": 1040,
        "wires": []
    },
    {
        "id": "5b800ea18a78b0e5",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "order": 0,
        "group": "9f15425c94363b2a",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Stop",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "55cb807a367e84a9",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "order": 0,
        "group": "9f15425c94363b2a",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Key_Pos",
        "x": 1060,
        "y": 1120,
        "wires": []
    },
    {
        "id": "628ff7b38c7cb875",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "order": 0,
        "group": "9f15425c94363b2a",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Reset",
        "x": 1050,
        "y": 1160,
        "wires": []
    },
    {
        "id": "e18b22fc3825ec72",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "order": 0,
        "group": "9f15425c94363b2a",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Panel_I4",
        "x": 1060,
        "y": 1200,
        "wires": []
    },
    {
        "id": "7d6fd00febd29e37",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "order": 0,
        "group": "9f15425c94363b2a",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Panel_I5",
        "x": 1060,
        "y": 1240,
        "wires": []
    },
    {
        "id": "0229cb5707743a6a",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "order": 0,
        "group": "9f15425c94363b2a",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Panel_I6",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "fde157dec2b5f0de",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "item": "O_81_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Panel_I7",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "7b18fcb7bcae2ced"
            ]
        ]
    },
    {
        "id": "79518ad50c5078a3",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "order": 0,
        "group": "9f15425c94363b2a",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Panel_I7",
        "x": 1060,
        "y": 1320,
        "wires": []
    },
    {
        "id": "82929da775c399e1",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "item": "I_80_Pist_Adv",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Pist_Adv",
        "x": 480,
        "y": 1500,
        "wires": [
            [
                "fc740c3c9dea2f8e"
            ]
        ]
    },
    {
        "id": "cf726bd04c51ec5b",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "item": "I_80_Suction_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Suction_On",
        "x": 470,
        "y": 1540,
        "wires": [
            [
                "fc740c3c9dea2f8e"
            ]
        ]
    },
    {
        "id": "d032594ef594187b",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "item": "I_80_Suction_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Suction_Off",
        "x": 470,
        "y": 1580,
        "wires": [
            [
                "fc740c3c9dea2f8e"
            ]
        ]
    },
    {
        "id": "44382d0d7d3fddc7",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "item": "I_80_Arm_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Arm_2_Del",
        "x": 470,
        "y": 1620,
        "wires": [
            [
                "fc740c3c9dea2f8e"
            ]
        ]
    },
    {
        "id": "b6639b89115a6784",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "item": "I_80_Arm_2_Mag",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Arm_2_Mag",
        "x": 470,
        "y": 1660,
        "wires": [
            [
                "fc740c3c9dea2f8e"
            ]
        ]
    },
    {
        "id": "fc740c3c9dea2f8e",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "80 Physical Actuators",
        "mode": "link",
        "links": [
            "a72597f9fa9c5dce"
        ],
        "x": 645,
        "y": 1580,
        "wires": []
    },
    {
        "id": "0a70d307f19cf2a2",
        "type": "switch",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "80 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_80_Pist_Adv",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_80_Suction_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_80_Suction_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_80_Arm_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_80_Arm_2_Mag",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 870,
        "y": 1580,
        "wires": [
            [
                "c55134b6b34e0df8"
            ],
            [
                "640a4d4bbced17cc"
            ],
            [
                "9228afa988754e4f"
            ],
            [
                "eb8010fb098592ca"
            ],
            [
                "1029ab7b5ab60f08"
            ]
        ]
    },
    {
        "id": "56e68722f3146c90",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "I_80_Pist_Adv",
        "label": "Pushes part out of the magazine",
        "tooltip": "",
        "group": "942a632ed69a9868",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1500,
        "wires": [
            [
                "82929da775c399e1"
            ]
        ]
    },
    {
        "id": "2342000860e151a3",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "I_80_Suction_On",
        "label": "Suction On",
        "tooltip": "",
        "group": "942a632ed69a9868",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1540,
        "wires": [
            [
                "cf726bd04c51ec5b"
            ]
        ]
    },
    {
        "id": "51327886d8326bb7",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "I_80_Suction_Off",
        "label": "Suction Off",
        "tooltip": "",
        "group": "942a632ed69a9868",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1580,
        "wires": [
            [
                "d032594ef594187b"
            ]
        ]
    },
    {
        "id": "507f857a9a52a82e",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "I_80_Arm_2_Del",
        "label": "Moves arm to delivery",
        "tooltip": "",
        "group": "942a632ed69a9868",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1620,
        "wires": [
            [
                "44382d0d7d3fddc7"
            ]
        ]
    },
    {
        "id": "a8c57521bd642ecd",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "I_80_Arm_2_Mag",
        "label": "Moves arm to magazine",
        "tooltip": "",
        "group": "942a632ed69a9868",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1660,
        "wires": [
            [
                "b6639b89115a6784"
            ]
        ]
    },
    {
        "id": "08cc1e1f6b67f204",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "item": "I_81_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Led_Start",
        "x": 480,
        "y": 1840,
        "wires": [
            [
                "12efda18a2df6947"
            ]
        ]
    },
    {
        "id": "ee961517cc7d3219",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "item": "I_81_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Led_Reset",
        "x": 480,
        "y": 1880,
        "wires": [
            [
                "12efda18a2df6947"
            ]
        ]
    },
    {
        "id": "d52111718c6bdd15",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "item": "I_81_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Led_Extra1",
        "x": 470,
        "y": 1920,
        "wires": [
            [
                "12efda18a2df6947"
            ]
        ]
    },
    {
        "id": "48a14b1cd45104d2",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "item": "I_81_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Led_Extra2",
        "x": 470,
        "y": 1960,
        "wires": [
            [
                "12efda18a2df6947"
            ]
        ]
    },
    {
        "id": "3fb58e9ad761c6ab",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "item": "I_81_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Panel_O4",
        "x": 480,
        "y": 2000,
        "wires": [
            [
                "12efda18a2df6947"
            ]
        ]
    },
    {
        "id": "12efda18a2df6947",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "80 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "a72597f9fa9c5dce"
        ],
        "x": 645,
        "y": 1980,
        "wires": []
    },
    {
        "id": "247baf169ad16a4f",
        "type": "switch",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "80 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_81_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1980,
        "wires": [
            [
                "5ca7dfa1766b9985"
            ],
            [
                "23ebea8cc2bac5ae"
            ],
            [
                "82246804dcb70e6c"
            ],
            [
                "78da4e4917d85c30"
            ],
            [
                "eb28c95de637e793"
            ],
            [
                "e059427121df1ea2"
            ],
            [
                "6df7ce82458215e8"
            ],
            [
                "8fb9723ea2c94922"
            ]
        ]
    },
    {
        "id": "cc7b0eaf4c2228eb",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "219f1d9c02b36449",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1840,
        "wires": [
            [
                "08cc1e1f6b67f204"
            ]
        ]
    },
    {
        "id": "07a9e5f5854a920f",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "219f1d9c02b36449",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1880,
        "wires": [
            [
                "ee961517cc7d3219"
            ]
        ]
    },
    {
        "id": "454a4db13ffaf646",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "219f1d9c02b36449",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1920,
        "wires": [
            [
                "d52111718c6bdd15"
            ]
        ]
    },
    {
        "id": "c275c5d429369fe4",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "219f1d9c02b36449",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1960,
        "wires": [
            [
                "48a14b1cd45104d2"
            ]
        ]
    },
    {
        "id": "a8cd030cc5eb858c",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "219f1d9c02b36449",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2000,
        "wires": [
            [
                "3fb58e9ad761c6ab"
            ]
        ]
    },
    {
        "id": "c1c505c35ad31cf6",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "219f1d9c02b36449",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2040,
        "wires": [
            [
                "4cc94a839d49b81c"
            ]
        ]
    },
    {
        "id": "4cc94a839d49b81c",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "item": "I_81_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Panel_O5",
        "x": 480,
        "y": 2040,
        "wires": [
            [
                "12efda18a2df6947"
            ]
        ]
    },
    {
        "id": "f39a2a9af21a143c",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "219f1d9c02b36449",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2080,
        "wires": [
            [
                "0ea2616343bebaa5"
            ]
        ]
    },
    {
        "id": "0ea2616343bebaa5",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "item": "I_81_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Panel_O6",
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "12efda18a2df6947"
            ]
        ]
    },
    {
        "id": "93e978eb4d0d5732",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "219f1d9c02b36449",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2120,
        "wires": [
            [
                "1cba59729fb086d2"
            ]
        ]
    },
    {
        "id": "1cba59729fb086d2",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "item": "I_81_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Panel_O7",
        "x": 480,
        "y": 2120,
        "wires": [
            [
                "12efda18a2df6947"
            ]
        ]
    },
    {
        "id": "07e6d428a3638a5a",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "item": "F_82_Pist_Adv",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Pist_Adv",
        "x": 480,
        "y": 2300,
        "wires": [
            [
                "931e24c2077c839a"
            ]
        ]
    },
    {
        "id": "64e4b8257e465ca5",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "item": "F_82_Suction_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Suction_On",
        "x": 470,
        "y": 2340,
        "wires": [
            [
                "931e24c2077c839a"
            ]
        ]
    },
    {
        "id": "26ca9a3d5d3e1053",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "item": "F_82_Suction_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Suction_Off",
        "x": 470,
        "y": 2380,
        "wires": [
            [
                "931e24c2077c839a"
            ]
        ]
    },
    {
        "id": "4efddfbbc1becc4d",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "item": "F_82_Arm_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Arm_2_Del",
        "x": 470,
        "y": 2420,
        "wires": [
            [
                "931e24c2077c839a"
            ]
        ]
    },
    {
        "id": "56db7b7bd638e344",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "item": "F_82_Arm_2_Mag",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Arm_2_Mag",
        "x": 470,
        "y": 2460,
        "wires": [
            [
                "931e24c2077c839a"
            ]
        ]
    },
    {
        "id": "931e24c2077c839a",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "80 Physical Feedback",
        "mode": "link",
        "links": [
            "a72597f9fa9c5dce"
        ],
        "x": 645,
        "y": 2380,
        "wires": []
    },
    {
        "id": "d5083cddc771745f",
        "type": "switch",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "80 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_82_Pist_Adv",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_82_Suction_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_82_Suction_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_82_Arm_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_82_Arm_2_Mag",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 870,
        "y": 2380,
        "wires": [
            [
                "57c6fa40bdfbb848"
            ],
            [
                "187af62fc84b4b51"
            ],
            [
                "a4e4130d0adee857"
            ],
            [
                "86823c71ee386e50"
            ],
            [
                "5763f4a315b62ff2"
            ]
        ]
    },
    {
        "id": "57c6fa40bdfbb848",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "order": 0,
        "group": "a6fafdd26c020da2",
        "width": 0,
        "height": 0,
        "label": "Pushes part out of the magazine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Pist_Adv",
        "x": 1060,
        "y": 2300,
        "wires": []
    },
    {
        "id": "187af62fc84b4b51",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "order": 0,
        "group": "a6fafdd26c020da2",
        "width": 0,
        "height": 0,
        "label": "Suction On",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Suction_On",
        "x": 1070,
        "y": 2340,
        "wires": []
    },
    {
        "id": "a4e4130d0adee857",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "order": 0,
        "group": "a6fafdd26c020da2",
        "width": 0,
        "height": 0,
        "label": "Suction Off",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Suction_Off",
        "x": 1070,
        "y": 2380,
        "wires": []
    },
    {
        "id": "86823c71ee386e50",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "order": 0,
        "group": "a6fafdd26c020da2",
        "width": 0,
        "height": 0,
        "label": "Moves arm to delivery",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Arm_2_Del",
        "x": 1070,
        "y": 2420,
        "wires": []
    },
    {
        "id": "5763f4a315b62ff2",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "order": 0,
        "group": "a6fafdd26c020da2",
        "width": 0,
        "height": 0,
        "label": "Moves arm to magazine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Arm_2_Mag",
        "x": 1070,
        "y": 2460,
        "wires": []
    },
    {
        "id": "3a17ae5a8824bb81",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "item": "F_83_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Led_Start",
        "x": 480,
        "y": 2640,
        "wires": [
            [
                "2e3bfce2baeae8ca"
            ]
        ]
    },
    {
        "id": "d897ec893a080acf",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "item": "F_83_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Led_Reset",
        "x": 470,
        "y": 2680,
        "wires": [
            [
                "2e3bfce2baeae8ca"
            ]
        ]
    },
    {
        "id": "c2fb23f074a639dd",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "item": "F_83_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Led_Extra1",
        "x": 470,
        "y": 2720,
        "wires": [
            [
                "2e3bfce2baeae8ca"
            ]
        ]
    },
    {
        "id": "a1a841d282f7fb49",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "item": "F_83_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Led_Extra2",
        "x": 470,
        "y": 2760,
        "wires": [
            [
                "2e3bfce2baeae8ca"
            ]
        ]
    },
    {
        "id": "1e85ebc074d7adfc",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "item": "F_83_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Panel_O4",
        "x": 480,
        "y": 2800,
        "wires": [
            [
                "2e3bfce2baeae8ca"
            ]
        ]
    },
    {
        "id": "d5305dc51114482f",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "item": "F_83_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Panel_O5",
        "x": 480,
        "y": 2840,
        "wires": [
            [
                "2e3bfce2baeae8ca"
            ]
        ]
    },
    {
        "id": "a0293ca7238b1f87",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "item": "F_83_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Panel_O6",
        "x": 480,
        "y": 2880,
        "wires": [
            [
                "2e3bfce2baeae8ca"
            ]
        ]
    },
    {
        "id": "2e3bfce2baeae8ca",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "80 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "a72597f9fa9c5dce"
        ],
        "x": 645,
        "y": 2780,
        "wires": []
    },
    {
        "id": "1906bc16bd18f763",
        "type": "switch",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "80 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_83_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2780,
        "wires": [
            [
                "7560bffe1964479c"
            ],
            [
                "f7a59fbd49e3bed1"
            ],
            [
                "1e1bf9c66fd1d2ea"
            ],
            [
                "db92c248adc383cf"
            ],
            [
                "589a143d76bd09db"
            ],
            [
                "c9a70d6d9daea7d0"
            ],
            [
                "3a06b88a2186222a"
            ],
            [
                "af79965dd17d331a"
            ]
        ]
    },
    {
        "id": "7560bffe1964479c",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "order": 0,
        "group": "9dd503c660f14ac8",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Led_Start",
        "x": 1060,
        "y": 2640,
        "wires": []
    },
    {
        "id": "f7a59fbd49e3bed1",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "order": 0,
        "group": "9dd503c660f14ac8",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Led_Reset",
        "x": 1070,
        "y": 2680,
        "wires": []
    },
    {
        "id": "1e1bf9c66fd1d2ea",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "order": 0,
        "group": "9dd503c660f14ac8",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Led_Extra1",
        "x": 1070,
        "y": 2720,
        "wires": []
    },
    {
        "id": "db92c248adc383cf",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "order": 0,
        "group": "9dd503c660f14ac8",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Led_Extra2",
        "x": 1070,
        "y": 2760,
        "wires": []
    },
    {
        "id": "589a143d76bd09db",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "order": 0,
        "group": "9dd503c660f14ac8",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Panel_O4",
        "x": 1060,
        "y": 2800,
        "wires": []
    },
    {
        "id": "c9a70d6d9daea7d0",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "order": 0,
        "group": "9dd503c660f14ac8",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Panel_O5",
        "x": 1060,
        "y": 2840,
        "wires": []
    },
    {
        "id": "3a06b88a2186222a",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "order": 0,
        "group": "9dd503c660f14ac8",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Panel_O6",
        "x": 1060,
        "y": 2880,
        "wires": []
    },
    {
        "id": "f28555bf2d82b5f1",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "item": "F_83_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Panel_O7",
        "x": 480,
        "y": 2920,
        "wires": [
            [
                "2e3bfce2baeae8ca"
            ]
        ]
    },
    {
        "id": "af79965dd17d331a",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "order": 0,
        "group": "9dd503c660f14ac8",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Panel_O7",
        "x": 1060,
        "y": 2920,
        "wires": []
    },
    {
        "id": "45d3594ae1ddb18d",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "item": "C_82_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_82_Profibus",
        "x": 640,
        "y": 3100,
        "wires": [
            [
                "2cceb0b669ce90e0"
            ]
        ]
    },
    {
        "id": "fc0ed8d91702d73f",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "item": "C_83_RQ_Parts",
        "datatype": "Double",
        "value": "",
        "name": "C_83_RQ_Parts",
        "x": 640,
        "y": 3180,
        "wires": [
            [
                "2cceb0b669ce90e0"
            ]
        ]
    },
    {
        "id": "e8d3363cb22c5e15",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "item": "C_85_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Initialization",
        "x": 630,
        "y": 3140,
        "wires": [
            [
                "2cceb0b669ce90e0"
            ]
        ]
    },
    {
        "id": "30edb62ba407c304",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "item": "C_85_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Start",
        "x": 650,
        "y": 3220,
        "wires": [
            [
                "2cceb0b669ce90e0"
            ]
        ]
    },
    {
        "id": "f87af4e9604e43fa",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "item": "C_85_Single",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Single",
        "x": 650,
        "y": 3260,
        "wires": [
            [
                "2cceb0b669ce90e0"
            ]
        ]
    },
    {
        "id": "b258938bb0d12756",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "item": "C_85_Continuous",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Continuous",
        "x": 630,
        "y": 3300,
        "wires": [
            [
                "2cceb0b669ce90e0"
            ]
        ]
    },
    {
        "id": "c8a16099bb04d8a3",
        "type": "OpcUa-Item",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "item": "C_85_Counted",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Counted",
        "x": 640,
        "y": 3340,
        "wires": [
            [
                "2cceb0b669ce90e0"
            ]
        ]
    },
    {
        "id": "2cceb0b669ce90e0",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "80 Control",
        "mode": "link",
        "links": [
            "a72597f9fa9c5dce"
        ],
        "x": 805,
        "y": 3220,
        "wires": []
    },
    {
        "id": "6512c67fda6f0421",
        "type": "switch",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "80 C",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_82_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_83_RQ_Parts",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Single",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Continuous",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Counted",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 1010,
        "y": 3220,
        "wires": [
            [
                "1ab87eb3ba705d33"
            ],
            [
                "b136ddfb594ab907"
            ],
            [
                "ebe259698929cae7"
            ],
            [
                "b9d7481bc4a42e87"
            ],
            [
                "8f5c689f392145ec"
            ],
            [
                "afc19adb8380ac28"
            ],
            [
                "a420ff5baec380a6"
            ]
        ]
    },
    {
        "id": "1ab87eb3ba705d33",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "order": 2,
        "group": "0eec5376bfff0195",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_82_Profibus",
        "x": 1200,
        "y": 3100,
        "wires": []
    },
    {
        "id": "b136ddfb594ab907",
        "type": "ui_led",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "order": 1,
        "group": "0eec5376bfff0195",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_85_Initialization",
        "x": 1210,
        "y": 3140,
        "wires": []
    },
    {
        "id": "5dbf69434580ef22",
        "type": "ui_numeric",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "C_83_RQ_Parts",
        "label": "Requested Parts",
        "tooltip": "Number of Requested Parts to be used with C_85_Counted.",
        "group": "0eec5376bfff0195",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 200,
        "y": 3180,
        "wires": [
            [
                "fc0ed8d91702d73f"
            ]
        ]
    },
    {
        "id": "f27c2cb19c7d6d62",
        "type": "ui_switch",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "C_85_Start",
        "label": "Start",
        "tooltip": "Start Production",
        "group": "0eec5376bfff0195",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 3220,
        "wires": [
            [
                "30edb62ba407c304"
            ]
        ]
    },
    {
        "id": "bed655225863719e",
        "type": "ui_dropdown",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "0eec5376bfff0195",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Single Mode",
                "value": "C_85_Single",
                "type": "str"
            },
            {
                "label": "Continuous Mode",
                "value": "C_85_Continuous",
                "type": "str"
            },
            {
                "label": "Counted Mode",
                "value": "C_85_Counted",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 3300,
        "wires": [
            [
                "0918725de3f03163",
                "acd28d5fdde03bc7",
                "bc4f2f59ed82670b"
            ]
        ]
    },
    {
        "id": "0918725de3f03163",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "C_85_Single",
        "func": "if (msg.payload === \"C_85_Single\") return { payload: true, topic: \"C_85_Single\"};\nelse return { payload: false, topic: \"C_85_Single\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3260,
        "wires": [
            [
                "f87af4e9604e43fa"
            ]
        ]
    },
    {
        "id": "acd28d5fdde03bc7",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "C_85_Continuous",
        "func": "if (msg.payload === \"C_85_Continuous\") return { payload: true, topic: \"C_85_Continuous\"};\nelse return { payload: false, topic: \"C_85_Continuous\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3300,
        "wires": [
            [
                "b258938bb0d12756"
            ]
        ]
    },
    {
        "id": "bc4f2f59ed82670b",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "C_85_Counted",
        "func": "if (msg.payload === \"C_85_Counted\") return { payload: true, topic: \"C_85_Counted\"};\nelse return { payload: false, topic: \"C_85_Counted\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3340,
        "wires": [
            [
                "c8a16099bb04d8a3"
            ]
        ]
    },
    {
        "id": "1f5dcb06a6e57243",
        "type": "comment",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "a239df5a14ca35bb",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "340a21779e3bea73"
            ]
        ]
    },
    {
        "id": "340a21779e3bea73",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Distribution_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "8b3a1ce404a0df53"
            ]
        ]
    },
    {
        "id": "cf7d6bc3a9a3254e",
        "type": "file",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8d388e35e02685a4",
        "type": "comment",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "8b3a1ce404a0df53",
        "type": "OpcUa-Client",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "endpoint": "93fbe529bf3b4213",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "b54bef6bf25879bb"
            ],
            [
                "c4875e083ab94bd8",
                "c28dbbf38625c2e8"
            ]
        ]
    },
    {
        "id": "b54bef6bf25879bb",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "1ccf5b535b024a98",
                "9eddb4284a5b4e2c"
            ]
        ]
    },
    {
        "id": "1ccf5b535b024a98",
        "type": "file",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "9eddb4284a5b4e2c",
        "type": "debug",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "736eb095e7207b94",
        "type": "OpcUa-Client",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "endpoint": "93fbe529bf3b4213",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "c450efef81259026"
            ],
            []
        ]
    },
    {
        "id": "9364fa6ddec01192",
        "type": "comment",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "c450efef81259026",
        "type": "debug",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "a72597f9fa9c5dce",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Write_DIst",
        "links": [
            "39a35b742c524ee9",
            "7b18fcb7bcae2ced",
            "2cceb0b669ce90e0",
            "2e3bfce2baeae8ca",
            "931e24c2077c839a",
            "fc740c3c9dea2f8e",
            "12efda18a2df6947"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "fb868599aee62e11"
            ]
        ]
    },
    {
        "id": "fb868599aee62e11",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "fc96eb2c56cd3419"
            ]
        ]
    },
    {
        "id": "fc96eb2c56cd3419",
        "type": "file in",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "ef725e086dadb90a"
            ]
        ]
    },
    {
        "id": "ef725e086dadb90a",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "c2f9c5f60352868a"
            ]
        ]
    },
    {
        "id": "c2f9c5f60352868a",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "736eb095e7207b94"
            ]
        ]
    },
    {
        "id": "3d3963f5941e745f",
        "type": "inject",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_85_Single",
        "payloadType": "str",
        "x": 190,
        "y": 3340,
        "wires": [
            [
                "bed655225863719e"
            ]
        ]
    },
    {
        "id": "81838549ec2081bb",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "CSV Link",
        "links": [
            "c4875e083ab94bd8"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "a188058e483b3db1"
            ]
        ]
    },
    {
        "id": "a188058e483b3db1",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "c68d097b0f783ff9"
            ]
        ]
    },
    {
        "id": "c68d097b0f783ff9",
        "type": "trigger",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "cf7d6bc3a9a3254e"
            ]
        ]
    },
    {
        "id": "c4875e083ab94bd8",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "81838549ec2081bb",
            "9c5f3fb90626791e"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "9c5f3fb90626791e",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "CSV Link",
        "links": [
            "c4875e083ab94bd8"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "a76c08c13da708bf"
            ]
        ]
    },
    {
        "id": "a76c08c13da708bf",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_80_Mag_Full\" : false,\n    \"O_80_Pist_Back\" : false,\n    \"O_80_Pist_Fwd\" : false,\n    \"O_80_Part_Stuck\" : false,\n    \"O_80_Arm_Mag\": false,\n    \"O_80_Arm_Del\": false,\n    \"O_80_Mag_Empty\": false,\n    \"O_81_Start\": false,\n    \"O_81_Stop\": false,\n    \"O_81_Key_Pos\": false,\n    \"O_81_Reset\": false,\n    \"O_81_Panel_I4\": false,\n    \"O_81_Panel_I5\": false,\n    \"O_81_Panel_I6\": false,\n    \"O_81_Panel_I7\": false,\n    \"F_82_Pist_Adv\": false,\n    \"F_82_Suction_On\": false,\n    \"F_82_Suction_Off\": false,\n    \"F_82_Arm_2_Del\": false,\n    \"F_82_Arm_2_Mag\": false,\n    \"F_83_Led_Start\": false,\n    \"F_83_Led_Reset\": false,\n    \"F_83_Led_Extra1\": false,\n    \"F_83_Led_Extra2\": false,\n    \"F_83_Panel_O4\": false,\n    \"F_83_Panel_O5\": false,\n    \"F_83_Panel_O6\": false,\n    \"F_83_Panel_O7\": false,\n    \"I_80_Pist_Adv\": false,\n    \"I_80_Suction_On\": false,\n    \"I_80_Suction_Off\": false,\n    \"I_80_Arm_2_Del\": false,\n    \"I_80_Arm_2_Mag\": false,\n    \"I_81_Led_Start\": false,\n    \"I_81_Led_Reset\": false,\n    \"I_81_Led_Extra1\": false,\n    \"I_81_Led_Extra2\": false,\n    \"I_81_Panel_O4\": false,\n    \"I_81_Panel_O5\": false,\n    \"I_81_Panel_O6\": false,\n    \"I_81_Panel_O7\": false,\n    \"C_82_Profibus\": false,\n    \"C_83_RQ_Parts\": 0,\n    \"C_85_Initialization\": false,\n    \"C_85_Start\": false,\n    \"C_85_Single\": false,\n    \"C_85_Continuous\": false,\n    \"C_85_Counted\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "9338895ce67f511c"
            ]
        ]
    },
    {
        "id": "9338895ce67f511c",
        "type": "trigger",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "a239df5a14ca35bb"
            ]
        ]
    },
    {
        "id": "ddbc59cb0df9f9dd",
        "type": "debug",
        "z": "4feb0669cb214335",
        "g": "731a145cda9fc44d",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "979e000eda0619ca",
        "type": "OpcUa-Server",
        "z": "4feb0669cb214335",
        "g": "731a145cda9fc44d",
        "port": "53888",
        "name": "Server : Distribution",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Distribution/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Distribution",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "ddbc59cb0df9f9dd"
            ]
        ]
    },
    {
        "id": "a9312b38eee967e8",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_80_Mag_Full\" : false,\n            \"O_80_Pist_Back\" : false,\n            \"O_80_Pist_Fwd\" : false,\n            \"O_80_Part_Stuck\" : false,\n            \"O_80_Arm_Mag\": false,\n            \"O_80_Arm_Del\": false,\n            \"O_80_Mag_Empty\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "389df090a86f5428"
            ]
        ]
    },
    {
        "id": "ace1f8c9ed29d67c",
        "type": "OpcUa-Client",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "endpoint": "93fbe529bf3b4213",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "0325105149b57fd2",
                "230fc984fbb04355"
            ],
            [
                "a9312b38eee967e8"
            ]
        ]
    },
    {
        "id": "389df090a86f5428",
        "type": "trigger",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "5dfa07788570b290"
            ]
        ]
    },
    {
        "id": "f975a9b3829e9510",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "ace1f8c9ed29d67c"
            ]
        ]
    },
    {
        "id": "0325105149b57fd2",
        "type": "debug",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "80 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 580,
        "wires": []
    },
    {
        "id": "5dfa07788570b290",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "5600d7d9ad471227"
            ]
        ]
    },
    {
        "id": "ceea51cc08a8c225",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "f975a9b3829e9510"
            ]
        ]
    },
    {
        "id": "5600d7d9ad471227",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "2abbe577a672d8f1"
            ]
        ]
    },
    {
        "id": "2abbe577a672d8f1",
        "type": "file in",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "ceea51cc08a8c225"
            ]
        ]
    },
    {
        "id": "116733cb7c68a34e",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 960,
        "wires": [
            [
                "05c25c89cd3269dc"
            ]
        ]
    },
    {
        "id": "fbc5a78a77ab4c86",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 960,
        "wires": [
            [
                "116733cb7c68a34e"
            ]
        ]
    },
    {
        "id": "05c25c89cd3269dc",
        "type": "OpcUa-Client",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "endpoint": "93fbe529bf3b4213",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 960,
        "wires": [
            [
                "1c162c064975d210",
                "3a8aae79daa3dba2"
            ],
            [
                "3be5606816852f99"
            ]
        ]
    },
    {
        "id": "8b670b8ece02416d",
        "type": "file in",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 960,
        "wires": [
            [
                "fbc5a78a77ab4c86"
            ]
        ]
    },
    {
        "id": "1c162c064975d210",
        "type": "debug",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "80 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1000,
        "wires": []
    },
    {
        "id": "3be5606816852f99",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_81_Start\": false,\n            \"O_81_Stop\": false,\n            \"O_81_Key_Pos\": false,\n            \"O_81_Reset\": false,\n            \"O_81_Panel_I4\": false,\n            \"O_81_Panel_I5\": false,\n            \"O_81_Panel_I6\": false,\n            \"O_81_Panel_I7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 960,
        "wires": [
            [
                "cafe5839094015a1"
            ]
        ]
    },
    {
        "id": "5a2cd3f1f2615c1a",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 960,
        "wires": [
            [
                "8b670b8ece02416d"
            ]
        ]
    },
    {
        "id": "cafe5839094015a1",
        "type": "trigger",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 960,
        "wires": [
            [
                "9210a82ff57a4059"
            ]
        ]
    },
    {
        "id": "9210a82ff57a4059",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 960,
        "wires": [
            [
                "5a2cd3f1f2615c1a"
            ]
        ]
    },
    {
        "id": "8ef68b1750d4e8c9",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1420,
        "wires": [
            [
                "8c1a2f85756036ea"
            ]
        ]
    },
    {
        "id": "16a572af1e765c3e",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "8ef68b1750d4e8c9"
            ]
        ]
    },
    {
        "id": "8c1a2f85756036ea",
        "type": "OpcUa-Client",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "endpoint": "93fbe529bf3b4213",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1420,
        "wires": [
            [
                "716ddec5da1830a3",
                "af1039fd25bf671b"
            ],
            [
                "dc694d175648849c"
            ]
        ]
    },
    {
        "id": "8fce92e8be12bd7c",
        "type": "file in",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "16a572af1e765c3e"
            ]
        ]
    },
    {
        "id": "716ddec5da1830a3",
        "type": "debug",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "80 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1460,
        "wires": []
    },
    {
        "id": "dc694d175648849c",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_80_Pist_Adv\": false,\n            \"I_80_Suction_On\": false,\n            \"I_80_Suction_Off\": false,\n            \"I_80_Arm_2_Del\": false,\n            \"I_80_Arm_2_Mag\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1420,
        "wires": [
            [
                "d24b5064a322550f"
            ]
        ]
    },
    {
        "id": "345fe0d4ce650e0e",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "8fce92e8be12bd7c"
            ]
        ]
    },
    {
        "id": "d24b5064a322550f",
        "type": "trigger",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1420,
        "wires": [
            [
                "e0dce9aaeeae2e68"
            ]
        ]
    },
    {
        "id": "e0dce9aaeeae2e68",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1420,
        "wires": [
            [
                "345fe0d4ce650e0e"
            ]
        ]
    },
    {
        "id": "54282a4d5263d408",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1760,
        "wires": [
            [
                "59b80561abcd00de"
            ]
        ]
    },
    {
        "id": "2d13d192512a2013",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1760,
        "wires": [
            [
                "54282a4d5263d408"
            ]
        ]
    },
    {
        "id": "59b80561abcd00de",
        "type": "OpcUa-Client",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "endpoint": "93fbe529bf3b4213",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1760,
        "wires": [
            [
                "5825e073b54a7fc1",
                "998da624acf151da"
            ],
            [
                "e3bb050a23fb23e8"
            ]
        ]
    },
    {
        "id": "18a6a1271dfcb060",
        "type": "file in",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1760,
        "wires": [
            [
                "2d13d192512a2013"
            ]
        ]
    },
    {
        "id": "5825e073b54a7fc1",
        "type": "debug",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "80 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1800,
        "wires": []
    },
    {
        "id": "e3bb050a23fb23e8",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_81_Led_Start\": false,\n            \"I_81_Led_Reset\": false,\n            \"I_81_Led_Extra1\": false,\n            \"I_81_Led_Extra2\": false,\n            \"I_81_Panel_O4\": false,\n            \"I_81_Panel_O5\": false,\n            \"I_81_Panel_O6\": false,\n            \"I_81_Panel_O7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1760,
        "wires": [
            [
                "b2617a59523383c8"
            ]
        ]
    },
    {
        "id": "e4968aa82c1d9f76",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1760,
        "wires": [
            [
                "18a6a1271dfcb060"
            ]
        ]
    },
    {
        "id": "b2617a59523383c8",
        "type": "trigger",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1760,
        "wires": [
            [
                "a644be7707ba6069"
            ]
        ]
    },
    {
        "id": "a644be7707ba6069",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1760,
        "wires": [
            [
                "e4968aa82c1d9f76"
            ]
        ]
    },
    {
        "id": "4ff5bed39f56025f",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2220,
        "wires": [
            [
                "acc4ca7b4bc63877"
            ]
        ]
    },
    {
        "id": "402a76b1b8b9924c",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2220,
        "wires": [
            [
                "4ff5bed39f56025f"
            ]
        ]
    },
    {
        "id": "acc4ca7b4bc63877",
        "type": "OpcUa-Client",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "endpoint": "93fbe529bf3b4213",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2220,
        "wires": [
            [
                "959aacf9406c1005",
                "35099693835b4e22"
            ],
            [
                "0d5e086ae54d8954"
            ]
        ]
    },
    {
        "id": "d64cc95830e78b92",
        "type": "file in",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2220,
        "wires": [
            [
                "402a76b1b8b9924c"
            ]
        ]
    },
    {
        "id": "959aacf9406c1005",
        "type": "debug",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "80 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2260,
        "wires": []
    },
    {
        "id": "0d5e086ae54d8954",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_82_Pist_Adv\": false,\n            \"F_82_Suction_On\": false,\n            \"F_82_Suction_Off\": false,\n            \"F_82_Arm_2_Del\": false,\n            \"F_82_Arm_2_Mag\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2220,
        "wires": [
            [
                "66a26fba5314391b"
            ]
        ]
    },
    {
        "id": "9fcf1e9c2327ace2",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2220,
        "wires": [
            [
                "d64cc95830e78b92"
            ]
        ]
    },
    {
        "id": "66a26fba5314391b",
        "type": "trigger",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2220,
        "wires": [
            [
                "5b9ee33a0517a908"
            ]
        ]
    },
    {
        "id": "5b9ee33a0517a908",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2220,
        "wires": [
            [
                "9fcf1e9c2327ace2"
            ]
        ]
    },
    {
        "id": "1e559befcfc02beb",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2560,
        "wires": [
            [
                "9448859d84d1f60b"
            ]
        ]
    },
    {
        "id": "3259e244d022f8ed",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2560,
        "wires": [
            [
                "1e559befcfc02beb"
            ]
        ]
    },
    {
        "id": "9448859d84d1f60b",
        "type": "OpcUa-Client",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "endpoint": "93fbe529bf3b4213",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2560,
        "wires": [
            [
                "64d0b0e0e2064c23",
                "fc51b31c8a5d0c52"
            ],
            [
                "9f02c82a063efb56"
            ]
        ]
    },
    {
        "id": "43be4b49ab54e39a",
        "type": "file in",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2560,
        "wires": [
            [
                "3259e244d022f8ed"
            ]
        ]
    },
    {
        "id": "64d0b0e0e2064c23",
        "type": "debug",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "80 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2600,
        "wires": []
    },
    {
        "id": "9f02c82a063efb56",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_83_Led_Start\": false,\n            \"F_83_Led_Reset\": false,\n            \"F_83_Led_Extra1\": false,\n            \"F_83_Led_Extra2\": false,\n            \"F_83_Panel_O4\": false,\n            \"F_83_Panel_O5\": false,\n            \"F_83_Panel_O6\": false,\n            \"F_83_Panel_O7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2560,
        "wires": [
            [
                "82d0f1c093fd0f57"
            ]
        ]
    },
    {
        "id": "37733f560534311b",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2560,
        "wires": [
            [
                "43be4b49ab54e39a"
            ]
        ]
    },
    {
        "id": "82d0f1c093fd0f57",
        "type": "trigger",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2560,
        "wires": [
            [
                "64ebd5c6ef5f41cd"
            ]
        ]
    },
    {
        "id": "64ebd5c6ef5f41cd",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2560,
        "wires": [
            [
                "37733f560534311b"
            ]
        ]
    },
    {
        "id": "c949f35283c882b2",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3020,
        "wires": [
            [
                "3c1504357bc03be5"
            ]
        ]
    },
    {
        "id": "8d33aa94b4c589d5",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3020,
        "wires": [
            [
                "c949f35283c882b2"
            ]
        ]
    },
    {
        "id": "3c1504357bc03be5",
        "type": "OpcUa-Client",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "endpoint": "93fbe529bf3b4213",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3020,
        "wires": [
            [
                "4ba3c96db35f1920",
                "3178653cc30dfea9"
            ],
            [
                "64ecdcf2af476431"
            ]
        ]
    },
    {
        "id": "cf8e305f6376f7d4",
        "type": "file in",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3020,
        "wires": [
            [
                "8d33aa94b4c589d5"
            ]
        ]
    },
    {
        "id": "4ba3c96db35f1920",
        "type": "debug",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "80 C",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3060,
        "wires": []
    },
    {
        "id": "64ecdcf2af476431",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_82_Profibus\": false,\n            \"C_83_RQ_Parts\": 0,\n            \"C_85_Initialization\": false,\n            \"C_85_Start\": false,\n            \"C_85_Single\": false,\n            \"C_85_Continuous\": false,\n            \"C_85_Counted\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3020,
        "wires": [
            [
                "a3c0c0a339fcf5c4"
            ]
        ]
    },
    {
        "id": "42418cffb1dc54d3",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3020,
        "wires": [
            [
                "cf8e305f6376f7d4"
            ]
        ]
    },
    {
        "id": "a3c0c0a339fcf5c4",
        "type": "trigger",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3020,
        "wires": [
            [
                "c01f7ab0a3c7b882"
            ]
        ]
    },
    {
        "id": "c01f7ab0a3c7b882",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3020,
        "wires": [
            [
                "42418cffb1dc54d3"
            ]
        ]
    },
    {
        "id": "ac80e65258d428e3",
        "type": "debug",
        "z": "4feb0669cb214335",
        "g": "2c1318f945c97275",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "cfbdb96842c291dc",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "2c1318f945c97275",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "11505d11d3c40da2",
            "71c0655dfbb991bb",
            "0ab5f0bf22244d60",
            "0d982f59deb4f33a",
            "8356640309171fcc"
        ],
        "x": 825,
        "y": 60,
        "wires": []
    },
    {
        "id": "6dc5619ca56dade3",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "O_80_Mag_Full",
        "func": "if (msg.topic === \"O_80_Mag_Full\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Mag_Full\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 620,
        "wires": [
            [
                "d2a73e5ec91d1e64"
            ]
        ]
    },
    {
        "id": "11505d11d3c40da2",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "S7 PS",
        "links": [
            "cfbdb96842c291dc"
        ],
        "x": 55,
        "y": 740,
        "wires": [
            [
                "6dc5619ca56dade3",
                "5fe75c3c59a31d5d",
                "416ddbe60fe1a123",
                "415d39a0ba73040f",
                "48cae9d93c04b4fd",
                "577d71f51d638299",
                "73a3cbde25f9bbf4"
            ]
        ]
    },
    {
        "id": "48cae9d93c04b4fd",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "O_80_Arm_Mag",
        "func": "if (msg.topic === \"O_80_Arm_Mag\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Arm_Mag\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 780,
        "wires": [
            [
                "ba0274d5927980b1"
            ]
        ]
    },
    {
        "id": "5fe75c3c59a31d5d",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "O_80_Pist_Back",
        "func": "if (msg.topic === \"O_80_Pist_Back\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Pist_Back\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 660,
        "wires": [
            [
                "5b5d8f750f9f5873"
            ]
        ]
    },
    {
        "id": "416ddbe60fe1a123",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "O_80_Pist_Fwd",
        "func": "if (msg.topic === \"O_80_Pist_Fwd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Pist_Fwd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 700,
        "wires": [
            [
                "fa2aafcd887b7a68"
            ]
        ]
    },
    {
        "id": "415d39a0ba73040f",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "O_80_Part_Stuck",
        "func": "if (msg.topic === \"O_80_Part_Stuck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Part_Stuck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 740,
        "wires": [
            [
                "fa76f6d7aee5c231"
            ]
        ]
    },
    {
        "id": "577d71f51d638299",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "O_80_Arm_Del",
        "func": "if (msg.topic === \"O_80_Arm_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Arm_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 820,
        "wires": [
            [
                "8cc680b5ce77cebc"
            ]
        ]
    },
    {
        "id": "73a3cbde25f9bbf4",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "O_80_Mag_Empty",
        "func": "if (msg.topic === \"O_80_Mag_Empty\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Mag_Empty\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 860,
        "wires": [
            [
                "fb023f1c8a48f911"
            ]
        ]
    },
    {
        "id": "230fc984fbb04355",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "Sub Out 80 PS",
        "mode": "link",
        "links": [
            "9dbf40b819a6227d"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "9dbf40b819a6227d",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "Sub In 80 PS",
        "links": [
            "230fc984fbb04355"
        ],
        "x": 775,
        "y": 740,
        "wires": [
            [
                "d749cfac11f690c7"
            ]
        ]
    },
    {
        "id": "fc5838d04de1e381",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "Sub In 80 AS",
        "links": [
            "3a8aae79daa3dba2"
        ],
        "x": 775,
        "y": 1180,
        "wires": [
            [
                "bf394a6790931c4b"
            ]
        ]
    },
    {
        "id": "3a8aae79daa3dba2",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "Sub Out 80 AS",
        "mode": "link",
        "links": [
            "fc5838d04de1e381"
        ],
        "x": 1295,
        "y": 960,
        "wires": []
    },
    {
        "id": "7028e6ab851a3dd5",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "O_81_Start",
        "func": "if (msg.topic === \"O_81_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "2634ce420146c179"
            ]
        ]
    },
    {
        "id": "71c0655dfbb991bb",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "S7 AS",
        "links": [
            "cfbdb96842c291dc"
        ],
        "x": 55,
        "y": 1180,
        "wires": [
            [
                "7028e6ab851a3dd5",
                "b347cfee1ad4ad89",
                "ef3a09c17bfb02b7",
                "196be37eb0e53e05",
                "c8b09861527f7d98",
                "746885a4496d2ec8",
                "e7e57e598d7ce30c",
                "623d440741a76905"
            ]
        ]
    },
    {
        "id": "c8b09861527f7d98",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "O_81_Panel_I4",
        "func": "if (msg.topic === \"O_81_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "a1fd271f0d44592e"
            ]
        ]
    },
    {
        "id": "b347cfee1ad4ad89",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "O_81_Stop",
        "func": "if (msg.topic === \"O_81_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "172b82eee78d4a59"
            ]
        ]
    },
    {
        "id": "ef3a09c17bfb02b7",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "O_81_Key_Pos",
        "func": "if (msg.topic === \"O_81_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "9535f17f5afdae87"
            ]
        ]
    },
    {
        "id": "196be37eb0e53e05",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "O_81_Reset",
        "func": "if (msg.topic === \"O_81_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "81ff38b90e087b06"
            ]
        ]
    },
    {
        "id": "746885a4496d2ec8",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "O_81_Panel_I5",
        "func": "if (msg.topic === \"O_81_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1240,
        "wires": [
            [
                "598874fd36b665bf"
            ]
        ]
    },
    {
        "id": "e7e57e598d7ce30c",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "O_81_Panel_I6",
        "func": "if (msg.topic === \"O_81_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "12864af8ddc53254"
            ]
        ]
    },
    {
        "id": "623d440741a76905",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "O_81_Panel_I7",
        "func": "if (msg.topic === \"O_81_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "fde157dec2b5f0de"
            ]
        ]
    },
    {
        "id": "af1039fd25bf671b",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "Sub Out 80 PA",
        "mode": "link",
        "links": [
            "899e583be1a3bc5c"
        ],
        "x": 1295,
        "y": 1420,
        "wires": []
    },
    {
        "id": "899e583be1a3bc5c",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "Sub In 80 PA",
        "links": [
            "af1039fd25bf671b"
        ],
        "x": 765,
        "y": 1580,
        "wires": [
            [
                "0a70d307f19cf2a2"
            ]
        ]
    },
    {
        "id": "998da624acf151da",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "Sub Out 80 AA",
        "mode": "link",
        "links": [
            "aa290b8f9e6ef6bd"
        ],
        "x": 1295,
        "y": 1760,
        "wires": []
    },
    {
        "id": "aa290b8f9e6ef6bd",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "Sub In 80 AA",
        "links": [
            "998da624acf151da"
        ],
        "x": 775,
        "y": 1980,
        "wires": [
            [
                "247baf169ad16a4f"
            ]
        ]
    },
    {
        "id": "1d8dfe5790279df5",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "F_82_Pist_Adv",
        "func": "if (msg.topic === \"F_82_Pist_Adv\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Pist_Adv\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2300,
        "wires": [
            [
                "07e6d428a3638a5a"
            ]
        ]
    },
    {
        "id": "0ab5f0bf22244d60",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "S7 PF",
        "links": [
            "cfbdb96842c291dc"
        ],
        "x": 55,
        "y": 2380,
        "wires": [
            [
                "1d8dfe5790279df5",
                "2aee2180258f2d8c",
                "56eae310f5fa8b6e",
                "68c65e3a3d3e3b2d",
                "6b01ae78260aef03"
            ]
        ]
    },
    {
        "id": "6b01ae78260aef03",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "F_82_Arm_2_Mag",
        "func": "if (msg.topic === \"F_82_Arm_2_Mag\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Arm_2_Mag\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2460,
        "wires": [
            [
                "56db7b7bd638e344"
            ]
        ]
    },
    {
        "id": "2aee2180258f2d8c",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "F_82_Suction_On",
        "func": "if (msg.topic === \"F_82_Suction_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Suction_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2340,
        "wires": [
            [
                "64e4b8257e465ca5"
            ]
        ]
    },
    {
        "id": "56eae310f5fa8b6e",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "F_82_Suction_Off",
        "func": "if (msg.topic === \"F_82_Suction_Off\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Suction_Off\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2380,
        "wires": [
            [
                "26ca9a3d5d3e1053"
            ]
        ]
    },
    {
        "id": "68c65e3a3d3e3b2d",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "F_82_Arm_2_Del",
        "func": "if (msg.topic === \"F_82_Arm_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Arm_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2420,
        "wires": [
            [
                "4efddfbbc1becc4d"
            ]
        ]
    },
    {
        "id": "35099693835b4e22",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "Sub Out 80 PF",
        "mode": "link",
        "links": [
            "5123691b953089fb"
        ],
        "x": 1295,
        "y": 2220,
        "wires": []
    },
    {
        "id": "5123691b953089fb",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "Sub In 80 PF",
        "links": [
            "35099693835b4e22"
        ],
        "x": 775,
        "y": 2380,
        "wires": [
            [
                "d5083cddc771745f"
            ]
        ]
    },
    {
        "id": "fc51b31c8a5d0c52",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "Sub Out 80 AF",
        "mode": "link",
        "links": [
            "d856651ea58b0a37"
        ],
        "x": 1295,
        "y": 2560,
        "wires": []
    },
    {
        "id": "d856651ea58b0a37",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "Sub In 80 AF",
        "links": [
            "fc51b31c8a5d0c52"
        ],
        "x": 775,
        "y": 2780,
        "wires": [
            [
                "1906bc16bd18f763"
            ]
        ]
    },
    {
        "id": "583dbd99f4f5df95",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "F_83_Led_Start",
        "func": "if (msg.topic === \"F_83_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2640,
        "wires": [
            [
                "3a17ae5a8824bb81"
            ]
        ]
    },
    {
        "id": "0d982f59deb4f33a",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "S7 AF",
        "links": [
            "cfbdb96842c291dc"
        ],
        "x": 55,
        "y": 2780,
        "wires": [
            [
                "583dbd99f4f5df95",
                "d56a0667ee315181",
                "fe09ab306ff1acb2",
                "21db9f9947f993f2",
                "5a741441d96c6777",
                "ea926cd1c3cf6689",
                "9073507f02e70669",
                "504180283454b7d1"
            ]
        ]
    },
    {
        "id": "5a741441d96c6777",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "F_83_Panel_O4",
        "func": "if (msg.topic === \"F_83_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2800,
        "wires": [
            [
                "1e85ebc074d7adfc"
            ]
        ]
    },
    {
        "id": "d56a0667ee315181",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "F_83_Led_Reset",
        "func": "if (msg.topic === \"F_83_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2680,
        "wires": [
            [
                "d897ec893a080acf"
            ]
        ]
    },
    {
        "id": "fe09ab306ff1acb2",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "F_83_Led_Extra1",
        "func": "if (msg.topic === \"F_83_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2720,
        "wires": [
            [
                "c2fb23f074a639dd"
            ]
        ]
    },
    {
        "id": "21db9f9947f993f2",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "F_83_Led_Extra2",
        "func": "if (msg.topic === \"F_83_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2760,
        "wires": [
            [
                "a1a841d282f7fb49"
            ]
        ]
    },
    {
        "id": "ea926cd1c3cf6689",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "F_83_Panel_O5",
        "func": "if (msg.topic === \"F_83_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2840,
        "wires": [
            [
                "d5305dc51114482f"
            ]
        ]
    },
    {
        "id": "9073507f02e70669",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "F_83_Panel_O6",
        "func": "if (msg.topic === \"F_83_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2880,
        "wires": [
            [
                "a0293ca7238b1f87"
            ]
        ]
    },
    {
        "id": "504180283454b7d1",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "F_83_Panel_O7",
        "func": "if (msg.topic === \"O_81_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2920,
        "wires": [
            [
                "f28555bf2d82b5f1"
            ]
        ]
    },
    {
        "id": "3178653cc30dfea9",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "Sub Out 80 C",
        "mode": "link",
        "links": [
            "0a59d7912a3b9e2c"
        ],
        "x": 1295,
        "y": 3020,
        "wires": []
    },
    {
        "id": "0a59d7912a3b9e2c",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "Sub In 80 C",
        "links": [
            "3178653cc30dfea9"
        ],
        "x": 905,
        "y": 3220,
        "wires": [
            [
                "6512c67fda6f0421"
            ]
        ]
    },
    {
        "id": "8356640309171fcc",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "S7 C",
        "links": [
            "cfbdb96842c291dc"
        ],
        "x": 55,
        "y": 3120,
        "wires": [
            [
                "80f1c09cc8578eb6",
                "4dd130cd6a7d6d12"
            ]
        ]
    },
    {
        "id": "80f1c09cc8578eb6",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "C_82_Profibus",
        "func": "if (msg.topic === \"C_82_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_82_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3100,
        "wires": [
            [
                "45d3594ae1ddb18d"
            ]
        ]
    },
    {
        "id": "4dd130cd6a7d6d12",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "C_85_Initialization",
        "func": "if (msg.topic === \"C_85_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_85_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3140,
        "wires": [
            [
                "e8d3363cb22c5e15"
            ]
        ]
    },
    {
        "id": "0d03bd9b739e302c",
        "type": "mqtt in",
        "z": "4feb0669cb214335",
        "g": "2c1318f945c97275",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b7ac41c0bcdf40b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "c2c4d321b23145fc"
            ]
        ]
    },
    {
        "id": "c2c4d321b23145fc",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "2c1318f945c97275",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "cfbdb96842c291dc",
                "ac80e65258d428e3"
            ]
        ]
    },
    {
        "id": "c28dbbf38625c2e8",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "5ff5896b9a14d0c6"
            ]
        ]
    },
    {
        "id": "5ff5896b9a14d0c6",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "cc4affc8849c056a",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "e19b1e6709f9c81f",
            "03bc1b3628c5262e",
            "511999b7729e7980",
            "c57d346e25cbbedf",
            "7d8e129ecd0e878f",
            "674a4a38f602e26b",
            "ef1727e1d6995eb7"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "e19b1e6709f9c81f",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "Read C",
        "links": [
            "5ff5896b9a14d0c6"
        ],
        "x": 55,
        "y": 3020,
        "wires": [
            [
                "64ecdcf2af476431"
            ]
        ]
    },
    {
        "id": "03bc1b3628c5262e",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "61d5fa38c7dc3493",
        "name": "Read AF",
        "links": [
            "5ff5896b9a14d0c6"
        ],
        "x": 55,
        "y": 2560,
        "wires": [
            [
                "9f02c82a063efb56"
            ]
        ]
    },
    {
        "id": "511999b7729e7980",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "0558cfa07285c727",
        "name": "Read PF",
        "links": [
            "5ff5896b9a14d0c6"
        ],
        "x": 55,
        "y": 2220,
        "wires": [
            [
                "0d5e086ae54d8954"
            ]
        ]
    },
    {
        "id": "c57d346e25cbbedf",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "Read S",
        "links": [
            "5ff5896b9a14d0c6"
        ],
        "x": 55,
        "y": 1760,
        "wires": [
            [
                "e3bb050a23fb23e8"
            ]
        ]
    },
    {
        "id": "7d8e129ecd0e878f",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "Read PA",
        "links": [
            "5ff5896b9a14d0c6"
        ],
        "x": 55,
        "y": 1420,
        "wires": [
            [
                "dc694d175648849c"
            ]
        ]
    },
    {
        "id": "674a4a38f602e26b",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "eedfe2e97822b67f",
        "name": "Read AS",
        "links": [
            "5ff5896b9a14d0c6"
        ],
        "x": 55,
        "y": 960,
        "wires": [
            [
                "3be5606816852f99"
            ]
        ]
    },
    {
        "id": "ef1727e1d6995eb7",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "bd2d7edff97a940e",
        "name": "Read PS",
        "links": [
            "5ff5896b9a14d0c6"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "a9312b38eee967e8"
            ]
        ]
    },
    {
        "id": "b84ac335cda3374e",
        "type": "mqtt out",
        "z": "4feb0669cb214335",
        "g": "2c1318f945c97275",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b7ac41c0bcdf40b1",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "742e9220843cbbe8",
        "type": "link in",
        "z": "4feb0669cb214335",
        "g": "2c1318f945c97275",
        "name": "S7 Actuators",
        "links": [
            "56eaa187e087e2ca",
            "f94769845f2d3deb"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "b84ac335cda3374e"
            ]
        ]
    },
    {
        "id": "c55134b6b34e0df8",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "I_80_Pist_Adv",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1500,
        "wires": [
            [
                "f94769845f2d3deb"
            ]
        ]
    },
    {
        "id": "640a4d4bbced17cc",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "I_80_Suction_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1540,
        "wires": [
            [
                "f94769845f2d3deb"
            ]
        ]
    },
    {
        "id": "9228afa988754e4f",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "I_80_Suction_Off",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1580,
        "wires": [
            [
                "f94769845f2d3deb"
            ]
        ]
    },
    {
        "id": "eb8010fb098592ca",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "I_80_Arm_2_Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1620,
        "wires": [
            [
                "f94769845f2d3deb"
            ]
        ]
    },
    {
        "id": "1029ab7b5ab60f08",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "I_80_Arm_2_Mag",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1660,
        "wires": [
            [
                "f94769845f2d3deb"
            ]
        ]
    },
    {
        "id": "f94769845f2d3deb",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "c7db9df6c638300b",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "742e9220843cbbe8"
        ],
        "x": 1235,
        "y": 1580,
        "wires": []
    },
    {
        "id": "5ca7dfa1766b9985",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1840,
        "wires": [
            [
                "56eaa187e087e2ca"
            ]
        ]
    },
    {
        "id": "23ebea8cc2bac5ae",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1880,
        "wires": [
            [
                "56eaa187e087e2ca"
            ]
        ]
    },
    {
        "id": "82246804dcb70e6c",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1920,
        "wires": [
            [
                "56eaa187e087e2ca"
            ]
        ]
    },
    {
        "id": "78da4e4917d85c30",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1960,
        "wires": [
            [
                "56eaa187e087e2ca"
            ]
        ]
    },
    {
        "id": "eb28c95de637e793",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2000,
        "wires": [
            [
                "56eaa187e087e2ca"
            ]
        ]
    },
    {
        "id": "e059427121df1ea2",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2040,
        "wires": [
            [
                "56eaa187e087e2ca"
            ]
        ]
    },
    {
        "id": "6df7ce82458215e8",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2080,
        "wires": [
            [
                "56eaa187e087e2ca"
            ]
        ]
    },
    {
        "id": "8fb9723ea2c94922",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "I_81_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2120,
        "wires": [
            [
                "56eaa187e087e2ca"
            ]
        ]
    },
    {
        "id": "56eaa187e087e2ca",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "f1c730860d837dca",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "742e9220843cbbe8"
        ],
        "x": 1225,
        "y": 1980,
        "wires": []
    },
    {
        "id": "ebe259698929cae7",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "C_83_RQ_Parts",
        "func": "let Value\nlet TAG\n\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload})\n\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3180,
        "wires": [
            [
                "8e6e92704a323e43"
            ]
        ]
    },
    {
        "id": "b9d7481bc4a42e87",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "C_85_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3220,
        "wires": [
            [
                "8e6e92704a323e43"
            ]
        ]
    },
    {
        "id": "8f5c689f392145ec",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "C_85_Single",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3260,
        "wires": [
            [
                "8e6e92704a323e43"
            ]
        ]
    },
    {
        "id": "afc19adb8380ac28",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "C_85_Continuous",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3300,
        "wires": [
            [
                "8e6e92704a323e43"
            ]
        ]
    },
    {
        "id": "a420ff5baec380a6",
        "type": "function",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "C_85_Counted",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3340,
        "wires": [
            [
                "8e6e92704a323e43"
            ]
        ]
    },
    {
        "id": "8e6e92704a323e43",
        "type": "link out",
        "z": "4feb0669cb214335",
        "g": "56b0ba9ca855f95e",
        "name": "S7 PA",
        "mode": "link",
        "links": [],
        "x": 1365,
        "y": 3220,
        "wires": []
    },
    {
        "id": "d732f2fcfb8fab82",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "item": "O_90_Part_Reserve",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Part_Reserve",
        "x": 460,
        "y": 620,
        "wires": [
            [
                "033b6be5e7386d0b"
            ]
        ]
    },
    {
        "id": "44b218759961cd6d",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "item": "O_90_Claw_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_Del",
        "x": 480,
        "y": 660,
        "wires": [
            [
                "033b6be5e7386d0b"
            ]
        ]
    },
    {
        "id": "6f2d34c40b877c8a",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "item": "O_90_Claw_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_Cart",
        "x": 470,
        "y": 700,
        "wires": [
            [
                "033b6be5e7386d0b"
            ]
        ]
    },
    {
        "id": "fb763cd6ee65faf5",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "item": "O_90_Claw_Reserve",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_Reserve",
        "x": 460,
        "y": 740,
        "wires": [
            [
                "033b6be5e7386d0b"
            ]
        ]
    },
    {
        "id": "f11293191240944f",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "item": "O_90_Claw_Low",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_Low",
        "x": 470,
        "y": 780,
        "wires": [
            [
                "033b6be5e7386d0b"
            ]
        ]
    },
    {
        "id": "e8ede418ae940865",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "item": "O_90_Claw_High",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_High",
        "x": 470,
        "y": 820,
        "wires": [
            [
                "033b6be5e7386d0b"
            ]
        ]
    },
    {
        "id": "3601054e962a8aa0",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "item": "O_90_Part_in_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Part_in_Claw",
        "x": 460,
        "y": 860,
        "wires": [
            [
                "033b6be5e7386d0b"
            ]
        ]
    },
    {
        "id": "033b6be5e7386d0b",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "90 Physical Sensor",
        "mode": "link",
        "links": [
            "1384bca399f282a9"
        ],
        "x": 645,
        "y": 740,
        "wires": []
    },
    {
        "id": "0abe7b491a40426b",
        "type": "switch",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "90 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_90_Part_Reserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_Reserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_Low",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_High",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Part_in_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 740,
        "wires": [
            [
                "ab977a5ba1c49aed"
            ],
            [
                "e146b3cfe80e21bf"
            ],
            [
                "6a9b511bfae8ade8"
            ],
            [
                "cb3b8669f394a290"
            ],
            [
                "96313fa55c0c17a7"
            ],
            [
                "33ca7e29a0a17826"
            ],
            [
                "42c622fec4ede841"
            ]
        ]
    },
    {
        "id": "ab977a5ba1c49aed",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "order": 0,
        "group": "f319bce57ad650e1",
        "width": 0,
        "height": 0,
        "label": "Part in reserve position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Part_Reserve",
        "x": 1080,
        "y": 620,
        "wires": []
    },
    {
        "id": "e146b3cfe80e21bf",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "order": 0,
        "group": "f319bce57ad650e1",
        "width": 0,
        "height": 0,
        "label": "Claw at delivery position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_Del",
        "x": 1060,
        "y": 660,
        "wires": []
    },
    {
        "id": "6a9b511bfae8ade8",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "order": 0,
        "group": "f319bce57ad650e1",
        "width": 0,
        "height": 0,
        "label": "Claw at cart position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_Cart",
        "x": 1070,
        "y": 700,
        "wires": []
    },
    {
        "id": "cb3b8669f394a290",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "order": 0,
        "group": "f319bce57ad650e1",
        "width": 0,
        "height": 0,
        "label": "Claw at reserve position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_Reserve",
        "x": 1080,
        "y": 740,
        "wires": []
    },
    {
        "id": "96313fa55c0c17a7",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "order": 0,
        "group": "f319bce57ad650e1",
        "width": 0,
        "height": 0,
        "label": "Claw Low",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_Low",
        "x": 1070,
        "y": 780,
        "wires": []
    },
    {
        "id": "33ca7e29a0a17826",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "order": 0,
        "group": "f319bce57ad650e1",
        "width": 0,
        "height": 0,
        "label": "Claw high",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_High",
        "x": 1070,
        "y": 820,
        "wires": []
    },
    {
        "id": "42c622fec4ede841",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "order": 0,
        "group": "f319bce57ad650e1",
        "width": 0,
        "height": 0,
        "label": "Part in claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Part_in_Claw",
        "x": 1080,
        "y": 860,
        "wires": []
    },
    {
        "id": "c55149a05769af5c",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_90_Part_Reserve\" : false,\n            \"O_90_Claw_Del\" : false,\n            \"O_90_Claw_Reserve\" : false,\n            \"O_90_Claw_Cart\" : false,\n            \"O_90_Claw_Low\" : false,\n            \"O_90_Claw_High\" : false,\n            \"O_90_Part_in_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "c22107e90bd5b4f3"
            ]
        ]
    },
    {
        "id": "35356e0a12c26c24",
        "type": "OpcUa-Client",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "endpoint": "2980d795e6b09239",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "f3a00d5cb129882b",
                "dfd9fddd281468cb"
            ],
            [
                "c55149a05769af5c"
            ]
        ]
    },
    {
        "id": "c22107e90bd5b4f3",
        "type": "trigger",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "c81159504f81d9bb"
            ]
        ]
    },
    {
        "id": "ef3dfb2165dc5417",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "35356e0a12c26c24"
            ]
        ]
    },
    {
        "id": "f3a00d5cb129882b",
        "type": "debug",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "90 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 580,
        "wires": []
    },
    {
        "id": "c81159504f81d9bb",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "4ddb8ee6f04cbe36"
            ]
        ]
    },
    {
        "id": "26363fbe5953f011",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "ef3dfb2165dc5417"
            ]
        ]
    },
    {
        "id": "4ddb8ee6f04cbe36",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "1654e282aa02de3e"
            ]
        ]
    },
    {
        "id": "1654e282aa02de3e",
        "type": "file in",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "26363fbe5953f011"
            ]
        ]
    },
    {
        "id": "8c8545167aaac001",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "item": "O_91_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Start",
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "cef9143d56fbc5fd"
            ]
        ]
    },
    {
        "id": "823079c611392827",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "item": "O_91_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Stop",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "cef9143d56fbc5fd"
            ]
        ]
    },
    {
        "id": "a090d32dbc4104bf",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "item": "O_91_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Key_Pos",
        "x": 480,
        "y": 1120,
        "wires": [
            [
                "cef9143d56fbc5fd"
            ]
        ]
    },
    {
        "id": "39e9bedb349dced1",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "item": "O_91_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Reset",
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "cef9143d56fbc5fd"
            ]
        ]
    },
    {
        "id": "c6799d89fcae7c1b",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "item": "O_91_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Panel_I4",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "cef9143d56fbc5fd"
            ]
        ]
    },
    {
        "id": "0c189ca17298a00e",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "item": "O_91_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Panel_I5",
        "x": 480,
        "y": 1240,
        "wires": [
            [
                "cef9143d56fbc5fd"
            ]
        ]
    },
    {
        "id": "403210667906825a",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "item": "O_91_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Panel_I6",
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "cef9143d56fbc5fd"
            ]
        ]
    },
    {
        "id": "cef9143d56fbc5fd",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "90 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "1384bca399f282a9"
        ],
        "x": 645,
        "y": 1180,
        "wires": []
    },
    {
        "id": "bc7f5ee20914b346",
        "type": "switch",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "90 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_91_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1180,
        "wires": [
            [
                "07ae788790555ff0"
            ],
            [
                "d27f5a28d19b4ee0"
            ],
            [
                "d9b5803140c4d08d"
            ],
            [
                "08c5405e4cc9b67b"
            ],
            [
                "02e5b8233e690065"
            ],
            [
                "2828381d66222e75"
            ],
            [
                "6ed9284de7dcc005"
            ],
            [
                "b2133ea153d68ea5"
            ]
        ]
    },
    {
        "id": "07ae788790555ff0",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "order": 0,
        "group": "27efe23283ab7286",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Start",
        "x": 1050,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d27f5a28d19b4ee0",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "order": 0,
        "group": "27efe23283ab7286",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Stop",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "d9b5803140c4d08d",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "order": 0,
        "group": "27efe23283ab7286",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Key_Pos",
        "x": 1060,
        "y": 1120,
        "wires": []
    },
    {
        "id": "08c5405e4cc9b67b",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "order": 0,
        "group": "27efe23283ab7286",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Reset",
        "x": 1050,
        "y": 1160,
        "wires": []
    },
    {
        "id": "02e5b8233e690065",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "order": 0,
        "group": "27efe23283ab7286",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Panel_I4",
        "x": 1060,
        "y": 1200,
        "wires": []
    },
    {
        "id": "2828381d66222e75",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "order": 0,
        "group": "27efe23283ab7286",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Panel_I5",
        "x": 1060,
        "y": 1240,
        "wires": []
    },
    {
        "id": "6ed9284de7dcc005",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "order": 0,
        "group": "27efe23283ab7286",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Panel_I6",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d3d23d7be3323ebc",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "item": "O_91_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Panel_I7",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "cef9143d56fbc5fd"
            ]
        ]
    },
    {
        "id": "b2133ea153d68ea5",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "order": 0,
        "group": "27efe23283ab7286",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Panel_I7",
        "x": 1060,
        "y": 1320,
        "wires": []
    },
    {
        "id": "4b58267eb2e1154c",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 960,
        "wires": [
            [
                "a7a3faa772c993e8"
            ]
        ]
    },
    {
        "id": "86d35e6d4a7775b4",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 960,
        "wires": [
            [
                "4b58267eb2e1154c"
            ]
        ]
    },
    {
        "id": "a7a3faa772c993e8",
        "type": "OpcUa-Client",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "endpoint": "2980d795e6b09239",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 960,
        "wires": [
            [
                "1f5a4b78b2d0bfa5",
                "895e6d72bbd975fd"
            ],
            [
                "e921fa7f6c1e5dbe"
            ]
        ]
    },
    {
        "id": "40540ebbf08f61f1",
        "type": "file in",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 960,
        "wires": [
            [
                "86d35e6d4a7775b4"
            ]
        ]
    },
    {
        "id": "1f5a4b78b2d0bfa5",
        "type": "debug",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "90 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e921fa7f6c1e5dbe",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_91_Start\" : false,\n            \"O_91_Stop\" : false,\n            \"O_91_Key_Pos\" : false,\n            \"O_91_Reset\" : false,\n            \"O_91_Panel_I4\" : false,\n            \"O_91_Panel_I5\" : false,\n            \"O_91_Panel_I6\" : false,\n            \"O_91_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 960,
        "wires": [
            [
                "2e17fae187b6b4f0"
            ]
        ]
    },
    {
        "id": "9ec461c2f7e70c70",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 960,
        "wires": [
            [
                "40540ebbf08f61f1"
            ]
        ]
    },
    {
        "id": "2e17fae187b6b4f0",
        "type": "trigger",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 960,
        "wires": [
            [
                "d4f6977df34abf85"
            ]
        ]
    },
    {
        "id": "d4f6977df34abf85",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 960,
        "wires": [
            [
                "9ec461c2f7e70c70"
            ]
        ]
    },
    {
        "id": "eae2ffb399b0fd2e",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "item": "I_90_Claw_2_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "I_90_Claw_2_Cart",
        "x": 470,
        "y": 1500,
        "wires": [
            [
                "bb179fced65a3282"
            ]
        ]
    },
    {
        "id": "97d66a4a53cef514",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "item": "I_90_Claw_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "I_90_Claw_2_Del",
        "x": 470,
        "y": 1540,
        "wires": [
            [
                "bb179fced65a3282"
            ]
        ]
    },
    {
        "id": "75436b5dd2ada1a2",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "item": "I_90_Claw_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "I_90_Claw_Down",
        "x": 470,
        "y": 1580,
        "wires": [
            [
                "bb179fced65a3282"
            ]
        ]
    },
    {
        "id": "e7edbb57c0dadf1e",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "item": "I_90_Close_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "I_90_Close_Claw",
        "x": 470,
        "y": 1620,
        "wires": [
            [
                "bb179fced65a3282"
            ]
        ]
    },
    {
        "id": "bb179fced65a3282",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "90 Physical Actuators",
        "mode": "link",
        "links": [
            "1384bca399f282a9"
        ],
        "x": 645,
        "y": 1560,
        "wires": []
    },
    {
        "id": "9dc2f871b475cd27",
        "type": "switch",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "90 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_90_Claw_2_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_90_Claw_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_90_Claw_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_90_Close_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 1560,
        "wires": [
            [
                "d6d1fb863f9380cf"
            ],
            [
                "0548da358114b868"
            ],
            [
                "96c25f297ef1ec63"
            ],
            [
                "9365cfeae37c8a46"
            ]
        ]
    },
    {
        "id": "9fe56ce469d79158",
        "type": "ui_switch",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "I_90_Claw_2_Cart",
        "label": "Moves claw to cart position",
        "tooltip": "",
        "group": "39d050a0a4ef7908",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1500,
        "wires": [
            [
                "eae2ffb399b0fd2e"
            ]
        ]
    },
    {
        "id": "b336d5a794bcdbfd",
        "type": "ui_switch",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "I_90_Claw_2_Del",
        "label": "Moves claw to delivery position",
        "tooltip": "",
        "group": "39d050a0a4ef7908",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1540,
        "wires": [
            [
                "97d66a4a53cef514"
            ]
        ]
    },
    {
        "id": "200bf3769f6c83ca",
        "type": "ui_switch",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "I_90_Claw_Down",
        "label": "Lowers claw",
        "tooltip": "",
        "group": "39d050a0a4ef7908",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1580,
        "wires": [
            [
                "75436b5dd2ada1a2"
            ]
        ]
    },
    {
        "id": "caa5c818432a3b8f",
        "type": "ui_switch",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "I_90_Close_Claw",
        "label": "Closes claw",
        "tooltip": "",
        "group": "39d050a0a4ef7908",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1620,
        "wires": [
            [
                "e7edbb57c0dadf1e"
            ]
        ]
    },
    {
        "id": "bf93d77e306bf040",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1420,
        "wires": [
            [
                "f58726d1cb19ca62"
            ]
        ]
    },
    {
        "id": "d3f3a764f1ef3f84",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "bf93d77e306bf040"
            ]
        ]
    },
    {
        "id": "f58726d1cb19ca62",
        "type": "OpcUa-Client",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "endpoint": "2980d795e6b09239",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1420,
        "wires": [
            [
                "5547ab2f363e0003",
                "4e85590eacdb9df7"
            ],
            [
                "c750ece98ee4b3b2"
            ]
        ]
    },
    {
        "id": "284101ea74ce6433",
        "type": "file in",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "d3f3a764f1ef3f84"
            ]
        ]
    },
    {
        "id": "5547ab2f363e0003",
        "type": "debug",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "90 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1460,
        "wires": []
    },
    {
        "id": "c750ece98ee4b3b2",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_90_Claw_2_Cart\" : false,\n            \"I_90_Claw_2_Del\" : false,\n            \"I_90_Claw_Down\" : false,\n            \"I_90_Close_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1420,
        "wires": [
            [
                "79a6472a7504f727"
            ]
        ]
    },
    {
        "id": "9fd3b936cea333ea",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "284101ea74ce6433"
            ]
        ]
    },
    {
        "id": "79a6472a7504f727",
        "type": "trigger",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1420,
        "wires": [
            [
                "f193db42ae8add46"
            ]
        ]
    },
    {
        "id": "f193db42ae8add46",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1420,
        "wires": [
            [
                "9fd3b936cea333ea"
            ]
        ]
    },
    {
        "id": "78c8f1d5a58f719b",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "item": "I_91_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Led_Start",
        "x": 480,
        "y": 1800,
        "wires": [
            [
                "39fda7117840df84"
            ]
        ]
    },
    {
        "id": "29ae310bee8a4de2",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "item": "I_91_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Led_Reset",
        "x": 480,
        "y": 1840,
        "wires": [
            [
                "39fda7117840df84"
            ]
        ]
    },
    {
        "id": "aee1c75da3775f34",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "item": "I_91_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Led_Extra1",
        "x": 470,
        "y": 1880,
        "wires": [
            [
                "39fda7117840df84"
            ]
        ]
    },
    {
        "id": "4b39722b3cb646d7",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "item": "I_91_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Led_Extra2",
        "x": 470,
        "y": 1920,
        "wires": [
            [
                "39fda7117840df84"
            ]
        ]
    },
    {
        "id": "90e255b3c382f367",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "item": "I_91_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Panel_O4",
        "x": 480,
        "y": 1960,
        "wires": [
            [
                "39fda7117840df84"
            ]
        ]
    },
    {
        "id": "39fda7117840df84",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "90 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "1384bca399f282a9"
        ],
        "x": 645,
        "y": 1940,
        "wires": []
    },
    {
        "id": "e0437801b1215cca",
        "type": "switch",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "90 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_91_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1940,
        "wires": [
            [
                "6e8be8c199f861e7"
            ],
            [
                "f2620eebde22a286"
            ],
            [
                "0bc7ac60e72ba821"
            ],
            [
                "8cf9d8eec46061ef"
            ],
            [
                "dbaf739a176ffdd8"
            ],
            [
                "04314a7e44e30f04"
            ],
            [
                "107293e27b64bf8a"
            ],
            [
                "081986d26cf5b3f7"
            ]
        ]
    },
    {
        "id": "eaecec6f3f057931",
        "type": "ui_switch",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "fbefb765f12e8e16",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1800,
        "wires": [
            [
                "78c8f1d5a58f719b"
            ]
        ]
    },
    {
        "id": "d66cd396f57072c8",
        "type": "ui_switch",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "fbefb765f12e8e16",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1840,
        "wires": [
            [
                "29ae310bee8a4de2"
            ]
        ]
    },
    {
        "id": "58314c6c7611e929",
        "type": "ui_switch",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "fbefb765f12e8e16",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1880,
        "wires": [
            [
                "aee1c75da3775f34"
            ]
        ]
    },
    {
        "id": "4372217976d86c78",
        "type": "ui_switch",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "fbefb765f12e8e16",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1920,
        "wires": [
            [
                "4b39722b3cb646d7"
            ]
        ]
    },
    {
        "id": "adaf6e9ad4be9777",
        "type": "ui_switch",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "fbefb765f12e8e16",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1960,
        "wires": [
            [
                "90e255b3c382f367"
            ]
        ]
    },
    {
        "id": "86d56e8880524160",
        "type": "ui_switch",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "fbefb765f12e8e16",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2000,
        "wires": [
            [
                "d55787c201ca82f4"
            ]
        ]
    },
    {
        "id": "d55787c201ca82f4",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "item": "I_91_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Panel_O5",
        "x": 480,
        "y": 2000,
        "wires": [
            [
                "39fda7117840df84"
            ]
        ]
    },
    {
        "id": "8a59181d2fe995d0",
        "type": "ui_switch",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "fbefb765f12e8e16",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2040,
        "wires": [
            [
                "abbd7b2cd675edc0"
            ]
        ]
    },
    {
        "id": "abbd7b2cd675edc0",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "item": "I_91_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Panel_O6",
        "x": 480,
        "y": 2040,
        "wires": [
            [
                "39fda7117840df84"
            ]
        ]
    },
    {
        "id": "5829cee2efb4cfcb",
        "type": "ui_switch",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "fbefb765f12e8e16",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2080,
        "wires": [
            [
                "9651f0561793287c"
            ]
        ]
    },
    {
        "id": "9651f0561793287c",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "item": "I_91_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Panel_O7",
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "39fda7117840df84"
            ]
        ]
    },
    {
        "id": "06c085d74d815596",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1720,
        "wires": [
            [
                "15a0b28eda4bfafc"
            ]
        ]
    },
    {
        "id": "181739e6a1a77587",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1720,
        "wires": [
            [
                "06c085d74d815596"
            ]
        ]
    },
    {
        "id": "15a0b28eda4bfafc",
        "type": "OpcUa-Client",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "endpoint": "2980d795e6b09239",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1720,
        "wires": [
            [
                "e2b0e2f9328430a7",
                "299dbbe40767d93e"
            ],
            [
                "a58f7856d4beda82"
            ]
        ]
    },
    {
        "id": "8624f2337e47349b",
        "type": "file in",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1720,
        "wires": [
            [
                "181739e6a1a77587"
            ]
        ]
    },
    {
        "id": "e2b0e2f9328430a7",
        "type": "debug",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "90 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1760,
        "wires": []
    },
    {
        "id": "a58f7856d4beda82",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_91_Led_Start\" : false,\n            \"I_91_Led_Reset\" : false,\n            \"I_91_Led_Extra1\" : false,\n            \"I_91_Led_Extra2\" : false,\n            \"I_91_Panel_O4\" : false,\n            \"I_91_Panel_O5\" : false,\n            \"I_91_Panel_O6\" : false,\n            \"I_91_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1720,
        "wires": [
            [
                "90b5ef68073d0e4f"
            ]
        ]
    },
    {
        "id": "f052c3cb86cc1c22",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1720,
        "wires": [
            [
                "8624f2337e47349b"
            ]
        ]
    },
    {
        "id": "90b5ef68073d0e4f",
        "type": "trigger",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1720,
        "wires": [
            [
                "ba6bd4baf587b2c8"
            ]
        ]
    },
    {
        "id": "ba6bd4baf587b2c8",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1720,
        "wires": [
            [
                "f052c3cb86cc1c22"
            ]
        ]
    },
    {
        "id": "680297395003ab46",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "item": "F_92_Claw_2_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "F_92_Claw_2_Cart",
        "x": 470,
        "y": 2260,
        "wires": [
            [
                "4f67e45b37b16f04"
            ]
        ]
    },
    {
        "id": "8301278556863cbe",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "item": "F_92_Claw_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "F_92_Claw_2_Del",
        "x": 470,
        "y": 2300,
        "wires": [
            [
                "4f67e45b37b16f04"
            ]
        ]
    },
    {
        "id": "db92586b83894c8a",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "item": "F_92_Claw_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "F_92_Claw_Down",
        "x": 470,
        "y": 2340,
        "wires": [
            [
                "4f67e45b37b16f04"
            ]
        ]
    },
    {
        "id": "90233a68114a3545",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "item": "F_92_Close_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "F_92_Close_Claw",
        "x": 470,
        "y": 2380,
        "wires": [
            [
                "4f67e45b37b16f04"
            ]
        ]
    },
    {
        "id": "4f67e45b37b16f04",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "90 Physical Feedback",
        "mode": "link",
        "links": [
            "1384bca399f282a9"
        ],
        "x": 645,
        "y": 2320,
        "wires": []
    },
    {
        "id": "bea6291ca73faa37",
        "type": "switch",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "90 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_92_Claw_2_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_92_Claw_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_92_Claw_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_92_Close_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 2320,
        "wires": [
            [
                "e975183e5e264506"
            ],
            [
                "c3f4f9dc10c9b5d8"
            ],
            [
                "ff13654e00621c88"
            ],
            [
                "023babc53cd5463a"
            ]
        ]
    },
    {
        "id": "e975183e5e264506",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "order": 0,
        "group": "7b9719c529a54011",
        "width": 0,
        "height": 0,
        "label": "Moves claw to cart position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_92_Claw_2_Cart",
        "x": 1070,
        "y": 2260,
        "wires": []
    },
    {
        "id": "c3f4f9dc10c9b5d8",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "order": 0,
        "group": "7b9719c529a54011",
        "width": 0,
        "height": 0,
        "label": "Moves claw to delivery position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_92_Claw_2_Del",
        "x": 1070,
        "y": 2300,
        "wires": []
    },
    {
        "id": "ff13654e00621c88",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "order": 0,
        "group": "7b9719c529a54011",
        "width": 0,
        "height": 0,
        "label": "Lowers claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_92_Claw_Down",
        "x": 1070,
        "y": 2340,
        "wires": []
    },
    {
        "id": "023babc53cd5463a",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "order": 0,
        "group": "7b9719c529a54011",
        "width": 0,
        "height": 0,
        "label": "Closes claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_92_Close_Claw",
        "x": 1070,
        "y": 2380,
        "wires": []
    },
    {
        "id": "edff29beae6897b6",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2180,
        "wires": [
            [
                "78239ebb893cef73"
            ]
        ]
    },
    {
        "id": "aec6603443761b59",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2180,
        "wires": [
            [
                "edff29beae6897b6"
            ]
        ]
    },
    {
        "id": "78239ebb893cef73",
        "type": "OpcUa-Client",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "endpoint": "2980d795e6b09239",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2180,
        "wires": [
            [
                "b892c6304e22f2fc",
                "6adf48490f3181b9"
            ],
            [
                "996fee36ac43b14b"
            ]
        ]
    },
    {
        "id": "34a93d802388341e",
        "type": "file in",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2180,
        "wires": [
            [
                "aec6603443761b59"
            ]
        ]
    },
    {
        "id": "b892c6304e22f2fc",
        "type": "debug",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "90 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2220,
        "wires": []
    },
    {
        "id": "996fee36ac43b14b",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_92_Claw_2_Cart\" : false,\n            \"F_92_Claw_2_Del\" : false,\n            \"F_92_Claw_Down\" : false,\n            \"F_92_Close_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2180,
        "wires": [
            [
                "dd05281f6936a23e"
            ]
        ]
    },
    {
        "id": "c9ce96c7f03c821e",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2180,
        "wires": [
            [
                "34a93d802388341e"
            ]
        ]
    },
    {
        "id": "dd05281f6936a23e",
        "type": "trigger",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2180,
        "wires": [
            [
                "6c11826965c8cb53"
            ]
        ]
    },
    {
        "id": "6c11826965c8cb53",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2180,
        "wires": [
            [
                "c9ce96c7f03c821e"
            ]
        ]
    },
    {
        "id": "2e1fa00f306fb63d",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "item": "F_93_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Led_Start",
        "x": 480,
        "y": 2560,
        "wires": [
            [
                "05f748e3cf231666"
            ]
        ]
    },
    {
        "id": "d0bf9efba8b59f83",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "item": "F_93_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Led_Reset",
        "x": 470,
        "y": 2600,
        "wires": [
            [
                "05f748e3cf231666"
            ]
        ]
    },
    {
        "id": "86ac93f4f162458e",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "item": "F_93_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Led_Extra1",
        "x": 470,
        "y": 2640,
        "wires": [
            [
                "05f748e3cf231666"
            ]
        ]
    },
    {
        "id": "61bafbb0bf984e99",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "item": "F_93_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Led_Extra2",
        "x": 470,
        "y": 2680,
        "wires": [
            [
                "05f748e3cf231666"
            ]
        ]
    },
    {
        "id": "84c6ead00ab5aec9",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "item": "F_93_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Panel_O4",
        "x": 480,
        "y": 2720,
        "wires": [
            [
                "05f748e3cf231666"
            ]
        ]
    },
    {
        "id": "7da16c8fb62ee4de",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "item": "F_93_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Panel_O5",
        "x": 480,
        "y": 2760,
        "wires": [
            [
                "05f748e3cf231666"
            ]
        ]
    },
    {
        "id": "0f22f6d26e2e65fb",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "item": "F_93_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Panel_O6",
        "x": 480,
        "y": 2800,
        "wires": [
            [
                "05f748e3cf231666"
            ]
        ]
    },
    {
        "id": "05f748e3cf231666",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "90 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "1384bca399f282a9"
        ],
        "x": 645,
        "y": 2700,
        "wires": []
    },
    {
        "id": "91843166c72a9ce0",
        "type": "switch",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "90 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_93_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2700,
        "wires": [
            [
                "62520645e7e84966"
            ],
            [
                "db08ce60f94eb8f0"
            ],
            [
                "c9ad8e8afe9d72a7"
            ],
            [
                "cf859130a81353ad"
            ],
            [
                "f7356d3e4352d015"
            ],
            [
                "9ca3fe595f3d8c9b"
            ],
            [
                "5444dcf07446e7c8"
            ],
            [
                "0cd69f16b3515e41"
            ]
        ]
    },
    {
        "id": "62520645e7e84966",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "order": 0,
        "group": "253f8ad52553a173",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Led_Start",
        "x": 1060,
        "y": 2560,
        "wires": []
    },
    {
        "id": "db08ce60f94eb8f0",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "order": 0,
        "group": "253f8ad52553a173",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Led_Reset",
        "x": 1070,
        "y": 2600,
        "wires": []
    },
    {
        "id": "c9ad8e8afe9d72a7",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "order": 0,
        "group": "253f8ad52553a173",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Led_Extra1",
        "x": 1070,
        "y": 2640,
        "wires": []
    },
    {
        "id": "cf859130a81353ad",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "order": 0,
        "group": "253f8ad52553a173",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Led_Extra2",
        "x": 1070,
        "y": 2680,
        "wires": []
    },
    {
        "id": "f7356d3e4352d015",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "order": 0,
        "group": "253f8ad52553a173",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Panel_O4",
        "x": 1060,
        "y": 2720,
        "wires": []
    },
    {
        "id": "9ca3fe595f3d8c9b",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "order": 0,
        "group": "253f8ad52553a173",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Panel_O5",
        "x": 1060,
        "y": 2760,
        "wires": []
    },
    {
        "id": "5444dcf07446e7c8",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "order": 0,
        "group": "253f8ad52553a173",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Panel_O6",
        "x": 1060,
        "y": 2800,
        "wires": []
    },
    {
        "id": "7ecf11c082772889",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "item": "F_93_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Panel_O7",
        "x": 480,
        "y": 2840,
        "wires": [
            [
                "05f748e3cf231666"
            ]
        ]
    },
    {
        "id": "0cd69f16b3515e41",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "order": 0,
        "group": "253f8ad52553a173",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Panel_O7",
        "x": 1060,
        "y": 2840,
        "wires": []
    },
    {
        "id": "0286e0687c1a5842",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2480,
        "wires": [
            [
                "af28b665cc9de7c0"
            ]
        ]
    },
    {
        "id": "10557fa99f3f8b2b",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2480,
        "wires": [
            [
                "0286e0687c1a5842"
            ]
        ]
    },
    {
        "id": "af28b665cc9de7c0",
        "type": "OpcUa-Client",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "endpoint": "2980d795e6b09239",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2480,
        "wires": [
            [
                "4f99df47e6ec9b3e",
                "f21b26b961bce8e9"
            ],
            [
                "977892956f966488"
            ]
        ]
    },
    {
        "id": "68512740a6cdc482",
        "type": "file in",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2480,
        "wires": [
            [
                "10557fa99f3f8b2b"
            ]
        ]
    },
    {
        "id": "4f99df47e6ec9b3e",
        "type": "debug",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "90 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2520,
        "wires": []
    },
    {
        "id": "977892956f966488",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_93_Led_Start\" : false,\n            \"F_93_Led_Reset\" : false,\n            \"F_93_Led_Extra1\" : false,\n            \"F_93_Led_Extra2\" : false,\n            \"F_93_Panel_O4\" : false,\n            \"F_93_Panel_O5\" : false,\n            \"F_93_Panel_O6\" : false,\n            \"F_93_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2480,
        "wires": [
            [
                "7ee12b8bd55f4ee8"
            ]
        ]
    },
    {
        "id": "e869c5cb3d893310",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2480,
        "wires": [
            [
                "68512740a6cdc482"
            ]
        ]
    },
    {
        "id": "7ee12b8bd55f4ee8",
        "type": "trigger",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2480,
        "wires": [
            [
                "3e9d4176859aa0f8"
            ]
        ]
    },
    {
        "id": "3e9d4176859aa0f8",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2480,
        "wires": [
            [
                "e869c5cb3d893310"
            ]
        ]
    },
    {
        "id": "41ca4783a2e95289",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "item": "C_92_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_92_Profibus",
        "x": 640,
        "y": 3020,
        "wires": [
            [
                "a7d2e08974c13ef4"
            ]
        ]
    },
    {
        "id": "8b5732b8307d41c1",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "item": "C_95_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_95_Initialization",
        "x": 630,
        "y": 3060,
        "wires": [
            [
                "a7d2e08974c13ef4"
            ]
        ]
    },
    {
        "id": "f36918feb28b7869",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "item": "C_95_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "C_95_Start",
        "x": 650,
        "y": 3100,
        "wires": [
            [
                "a7d2e08974c13ef4"
            ]
        ]
    },
    {
        "id": "d76f980ad041aa10",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "item": "C_95_Cart2Del",
        "datatype": "Boolean",
        "value": "",
        "name": "C_95_Cart2Del",
        "x": 640,
        "y": 3140,
        "wires": [
            [
                "a7d2e08974c13ef4"
            ]
        ]
    },
    {
        "id": "bee2d2701f3cca8f",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "item": "C_95_Del2Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "C_95_Del2Cart",
        "x": 640,
        "y": 3180,
        "wires": [
            [
                "a7d2e08974c13ef4"
            ]
        ]
    },
    {
        "id": "a7d2e08974c13ef4",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "90 Control",
        "mode": "link",
        "links": [
            "1384bca399f282a9"
        ],
        "x": 805,
        "y": 3100,
        "wires": []
    },
    {
        "id": "d3cf77cf305db249",
        "type": "switch",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "90 C",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_92_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_95_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_95_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_95_Cart2Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_95_Del2Cart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1010,
        "y": 3100,
        "wires": [
            [
                "c284d3144b9d4dde"
            ],
            [
                "85d4523b2d5785e3"
            ],
            [
                "02f2508fa5d14912"
            ],
            [
                "1a2cbf13bd3b1d77"
            ],
            [
                "72b8a09b2a578928"
            ]
        ]
    },
    {
        "id": "c284d3144b9d4dde",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "order": 2,
        "group": "668989f8ee84d520",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_92_Profibus",
        "x": 1200,
        "y": 3020,
        "wires": []
    },
    {
        "id": "85d4523b2d5785e3",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "order": 1,
        "group": "668989f8ee84d520",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_95_Initialization",
        "x": 1210,
        "y": 3060,
        "wires": []
    },
    {
        "id": "ccfc8911e5ed7881",
        "type": "ui_dropdown",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "668989f8ee84d520",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Cart to Delivery Mode",
                "value": "C_95_Cart2Del",
                "type": "str"
            },
            {
                "label": "Delivery to Cart Mode",
                "value": "C_95_Del2Cart",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 3160,
        "wires": [
            [
                "664757efafc60936",
                "1e476584cc643844"
            ]
        ]
    },
    {
        "id": "664757efafc60936",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "C_95_Cart2Del",
        "func": "if (msg.payload === \"C_95_Cart2Del\") return { payload: true, topic: \"C_95_Cart2Del\"};\nelse return { payload: false, topic: \"C_95_Cart2Del\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3140,
        "wires": [
            [
                "d76f980ad041aa10"
            ]
        ]
    },
    {
        "id": "1e476584cc643844",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "C_95_Del2Cart",
        "func": "if (msg.payload === \"C_95_Del2Cart\") return { payload: true, topic: \"C_95_Del2Cart\"};\nelse return { payload: false, topic: \"C_95_Del2Cart\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3180,
        "wires": [
            [
                "bee2d2701f3cca8f"
            ]
        ]
    },
    {
        "id": "e31d64b572984432",
        "type": "inject",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_95_Cart2Del",
        "payloadType": "str",
        "x": 190,
        "y": 3200,
        "wires": [
            [
                "ccfc8911e5ed7881"
            ]
        ]
    },
    {
        "id": "a3a0089c976b7868",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2940,
        "wires": [
            [
                "1ab837805ad6dfed"
            ]
        ]
    },
    {
        "id": "990b65734199e493",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2940,
        "wires": [
            [
                "a3a0089c976b7868"
            ]
        ]
    },
    {
        "id": "1ab837805ad6dfed",
        "type": "OpcUa-Client",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "endpoint": "2980d795e6b09239",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2940,
        "wires": [
            [
                "0154720d4bad0136",
                "8110bfdb17349b27"
            ],
            [
                "7b2c36a22817d20c"
            ]
        ]
    },
    {
        "id": "dcee1bc321514525",
        "type": "file in",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2940,
        "wires": [
            [
                "990b65734199e493"
            ]
        ]
    },
    {
        "id": "0154720d4bad0136",
        "type": "debug",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "90 C",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2980,
        "wires": []
    },
    {
        "id": "7b2c36a22817d20c",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_92_Profibus\" : false,\n            \"C_95_Initialization\" : false,\n            \"C_95_Start\" : false,\n            \"C_95_Cart2Del\" : false,\n            \"C_95_Del2Cart\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2940,
        "wires": [
            [
                "510e78bc9edc3b7e"
            ]
        ]
    },
    {
        "id": "0b18f2bfa92096b3",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2940,
        "wires": [
            [
                "dcee1bc321514525"
            ]
        ]
    },
    {
        "id": "510e78bc9edc3b7e",
        "type": "trigger",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2940,
        "wires": [
            [
                "abf3c351ccbd0c1c"
            ]
        ]
    },
    {
        "id": "abf3c351ccbd0c1c",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2940,
        "wires": [
            [
                "0b18f2bfa92096b3"
            ]
        ]
    },
    {
        "id": "0e1346dad496a51d",
        "type": "comment",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "920b99a9e5a4fb41",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "2bc998dada27fa53"
            ]
        ]
    },
    {
        "id": "2bc998dada27fa53",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Handling2_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "58f2f633a644beb6"
            ]
        ]
    },
    {
        "id": "5c55b07cde536769",
        "type": "file",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "de21d8ad2752e2fd",
        "type": "comment",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "58f2f633a644beb6",
        "type": "OpcUa-Client",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "endpoint": "2980d795e6b09239",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "cd9b54e4c9362670"
            ],
            [
                "d7db6f6789efdf2b",
                "05f0b9ac2290d482"
            ]
        ]
    },
    {
        "id": "cd9b54e4c9362670",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "856b539a4421b65c",
                "61f6abb8bde2c3c6"
            ]
        ]
    },
    {
        "id": "856b539a4421b65c",
        "type": "file",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "61f6abb8bde2c3c6",
        "type": "debug",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "792eda2a554543d5",
        "type": "comment",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "9c20f15107cb34a6",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "140583eda46e61e1"
            ]
        ]
    },
    {
        "id": "7beec6dc604b51e8",
        "type": "OpcUa-Client",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "endpoint": "2980d795e6b09239",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "76f2c4e5cdcf1c9f"
            ],
            []
        ]
    },
    {
        "id": "76f2c4e5cdcf1c9f",
        "type": "debug",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "1384bca399f282a9",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Write_Hand2",
        "links": [
            "cef9143d56fbc5fd",
            "a7d2e08974c13ef4",
            "39fda7117840df84",
            "033b6be5e7386d0b",
            "4f67e45b37b16f04",
            "05f748e3cf231666",
            "bb179fced65a3282",
            "98989c52e47636a6"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "37cb6b70638172f0"
            ]
        ]
    },
    {
        "id": "37cb6b70638172f0",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "a6fe20e4a0b95384"
            ]
        ]
    },
    {
        "id": "a6fe20e4a0b95384",
        "type": "file in",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "9c20f15107cb34a6"
            ]
        ]
    },
    {
        "id": "140583eda46e61e1",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "7beec6dc604b51e8"
            ]
        ]
    },
    {
        "id": "f6921b8d3c8c2ccb",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "CSV Link",
        "links": [
            "d7db6f6789efdf2b"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "15a17a0c4ba2fe77"
            ]
        ]
    },
    {
        "id": "15a17a0c4ba2fe77",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "fde5ac2c8c34b46d"
            ]
        ]
    },
    {
        "id": "fde5ac2c8c34b46d",
        "type": "trigger",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "5c55b07cde536769"
            ]
        ]
    },
    {
        "id": "d7db6f6789efdf2b",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "f6921b8d3c8c2ccb",
            "a3d765ae7c4b7467"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "a3d765ae7c4b7467",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "CSV Link",
        "links": [
            "d7db6f6789efdf2b"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "35d6c3d68d15ba79"
            ]
        ]
    },
    {
        "id": "35d6c3d68d15ba79",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_90_Part_Reserve\" : false,\n    \"O_90_Claw_Del\" : false,\n    \"O_90_Claw_Reserve\" : false,\n    \"O_90_Claw_Cart\" : false,\n    \"O_90_Claw_Low\" : false,\n    \"O_90_Claw_High\" : false,\n    \"O_90_Part_in_Claw\" : false,\n    \"O_91_Start\" : false,\n    \"O_91_Stop\" : false,\n    \"O_91_Key_Pos\" : false,\n    \"O_91_Reset\" : false,\n    \"O_91_Panel_I4\" : false,\n    \"O_91_Panel_I5\" : false,\n    \"O_91_Panel_I6\" : false,\n    \"O_91_Panel_I7\" : false,\n    \"F_92_Claw_2_Cart\" : false,\n    \"F_92_Claw_2_Del\" : false,\n    \"F_92_Claw_Down\" : false,\n    \"F_92_Close_Claw\" : false,\n    \"F_93_Led_Start\" : false,\n    \"F_93_Led_Reset\" : false,\n    \"F_93_Led_Extra1\" : false,\n    \"F_93_Led_Extra2\" : false,\n    \"F_93_Panel_O4\" : false,\n    \"F_93_Panel_O5\" : false,\n    \"F_93_Panel_O6\" : false,\n    \"F_93_Panel_O7\" : false,\n    \"A_94_Request\" : false,\n    \"A_94_No_Cart\" : false,\n    \"A_94_Cart_Full\" : false,\n    \"C_95_Initialization\" : false,\n    \"I_90_Claw_2_Cart\" : false,\n    \"I_90_Claw_2_Del\" : false,\n    \"I_90_Claw_Down\" : false,\n    \"I_90_Close_Claw\" : false,\n    \"I_91_Led_Start\" : false,\n    \"I_91_Led_Reset\" : false,\n    \"I_91_Led_Extra1\" : false,\n    \"I_91_Led_Extra2\" : false,\n    \"I_91_Panel_O4\" : false,\n    \"I_91_Panel_O5\" : false,\n    \"I_91_Panel_O6\" : false,\n    \"I_91_Panel_O7\" : false,\n    \"C_92_Profibus\" : false,\n    \"A_94_Cart_Stat\" : false,\n    \"A_94_Cart_Next\" : false,\n    \"A_94_Optic\" : false,\n    \"A_94_Count\" : false,\n    \"A_94_Pist_Bck\" : false,\n    \"A_94_Release_FB\" : false,\n    \"C_95_Start\" : false,\n    \"C_95_Cart2Del\" : false,\n    \"C_95_Del2Cart\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "ec6a9d2583c13b06"
            ]
        ]
    },
    {
        "id": "ec6a9d2583c13b06",
        "type": "trigger",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "920b99a9e5a4fb41"
            ]
        ]
    },
    {
        "id": "dfc3cb125230ea8a",
        "type": "debug",
        "z": "10b1bc1a080d1c97",
        "g": "c11f55de86be71ae",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "2a0d68afde739571",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "item": "A_94_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Cart_Stat",
        "x": 480,
        "y": 3380,
        "wires": [
            [
                "98989c52e47636a6"
            ]
        ]
    },
    {
        "id": "5039d5799a98a84c",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "item": "A_94_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Cart_Next",
        "x": 470,
        "y": 3420,
        "wires": [
            [
                "98989c52e47636a6"
            ]
        ]
    },
    {
        "id": "bd0ae015466bcb5a",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "item": "A_94_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Optic",
        "x": 490,
        "y": 3460,
        "wires": [
            [
                "98989c52e47636a6"
            ]
        ]
    },
    {
        "id": "69174c8d99769934",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "item": "A_94_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Count",
        "x": 490,
        "y": 3500,
        "wires": [
            [
                "98989c52e47636a6"
            ]
        ]
    },
    {
        "id": "784e249671d73578",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "item": "A_94_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Pist_Bck",
        "x": 480,
        "y": 3540,
        "wires": [
            [
                "98989c52e47636a6"
            ]
        ]
    },
    {
        "id": "bbcb39ae86bc5ec9",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "item": "A_94_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Release_FB",
        "x": 470,
        "y": 3580,
        "wires": [
            [
                "98989c52e47636a6"
            ]
        ]
    },
    {
        "id": "d6ad3f33fd015d85",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "item": "A_94_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Request",
        "x": 480,
        "y": 3620,
        "wires": [
            [
                "98989c52e47636a6"
            ]
        ]
    },
    {
        "id": "98989c52e47636a6",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "90 AS-i",
        "mode": "link",
        "links": [
            "1384bca399f282a9"
        ],
        "x": 645,
        "y": 3540,
        "wires": []
    },
    {
        "id": "da5f8f5c72357935",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3300,
        "wires": [
            [
                "efec8cfb5eb730d0"
            ]
        ]
    },
    {
        "id": "efec8cfb5eb730d0",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3300,
        "wires": [
            [
                "0c5ea8d0c13eeda6"
            ]
        ]
    },
    {
        "id": "0c5ea8d0c13eeda6",
        "type": "file in",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3300,
        "wires": [
            [
                "013d1a4f7050c244"
            ]
        ]
    },
    {
        "id": "013d1a4f7050c244",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3300,
        "wires": [
            [
                "3085f69e728f3d79"
            ]
        ]
    },
    {
        "id": "3085f69e728f3d79",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3300,
        "wires": [
            [
                "e53ffe408cdf2c7d"
            ]
        ]
    },
    {
        "id": "e53ffe408cdf2c7d",
        "type": "OpcUa-Client",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "endpoint": "2980d795e6b09239",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3300,
        "wires": [
            [
                "c876be971dd0f5b5",
                "3f5f1f1ff748cf4f"
            ],
            [
                "af569244a03b1fd7"
            ]
        ]
    },
    {
        "id": "1d2f18486d7da8ea",
        "type": "switch",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "90 AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A_94_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_No_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Cart_Full",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 3540,
        "wires": [
            [
                "e501dac77a47f9e2"
            ],
            [
                "fc8dc51ebdde782f"
            ],
            [
                "0fbb5df3c9aee349"
            ],
            [
                "9a8b9f107f1efd26"
            ],
            [
                "9c6a76171ab89ac8"
            ],
            [
                "8bc46d0482d63f1b"
            ],
            [
                "546ebc240337e791"
            ],
            [
                "8daafb26ca01ca0d"
            ],
            [
                "ab936ac675fc0578"
            ]
        ]
    },
    {
        "id": "e501dac77a47f9e2",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "order": 0,
        "group": "e230948f30b84252",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Cart_Stat",
        "x": 1060,
        "y": 3380,
        "wires": []
    },
    {
        "id": "fc8dc51ebdde782f",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "order": 0,
        "group": "e230948f30b84252",
        "width": 0,
        "height": 0,
        "label": "Cart near next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Cart_Next",
        "x": 1070,
        "y": 3420,
        "wires": []
    },
    {
        "id": "0fbb5df3c9aee349",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "order": 0,
        "group": "e230948f30b84252",
        "width": 0,
        "height": 0,
        "label": "Optic sensor on station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Optic",
        "x": 1050,
        "y": 3460,
        "wires": []
    },
    {
        "id": "9a8b9f107f1efd26",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "order": 0,
        "group": "e230948f30b84252",
        "width": 0,
        "height": 0,
        "label": "Cart count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Count",
        "x": 1050,
        "y": 3500,
        "wires": []
    },
    {
        "id": "9c6a76171ab89ac8",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "order": 0,
        "group": "e230948f30b84252",
        "width": 0,
        "height": 0,
        "label": "Piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Pist_Bck",
        "x": 1060,
        "y": 3540,
        "wires": []
    },
    {
        "id": "8bc46d0482d63f1b",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "order": 0,
        "group": "e230948f30b84252",
        "width": 0,
        "height": 0,
        "label": "Pin release feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Release_FB",
        "x": 1070,
        "y": 3580,
        "wires": []
    },
    {
        "id": "546ebc240337e791",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "order": 0,
        "group": "e230948f30b84252",
        "width": 0,
        "height": 0,
        "label": "Request cart",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Request",
        "x": 1060,
        "y": 3620,
        "wires": []
    },
    {
        "id": "02a1ecfbf2caf6cf",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "item": "A_94_No_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_No_Cart",
        "x": 480,
        "y": 3660,
        "wires": [
            [
                "98989c52e47636a6"
            ]
        ]
    },
    {
        "id": "8daafb26ca01ca0d",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "order": 0,
        "group": "e230948f30b84252",
        "width": 0,
        "height": 0,
        "label": "No Cart at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_No_Cart",
        "x": 1060,
        "y": 3660,
        "wires": []
    },
    {
        "id": "ab936ac675fc0578",
        "type": "ui_led",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "order": 0,
        "group": "e230948f30b84252",
        "width": 0,
        "height": 0,
        "label": "Cart Full at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Cart_Full",
        "x": 1060,
        "y": 3700,
        "wires": []
    },
    {
        "id": "04333e8b5e1551be",
        "type": "OpcUa-Item",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "item": "A_94_Cart_Full",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Cart_Full",
        "x": 480,
        "y": 3700,
        "wires": [
            [
                "98989c52e47636a6"
            ]
        ]
    },
    {
        "id": "c876be971dd0f5b5",
        "type": "debug",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "90 AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 3340,
        "wires": []
    },
    {
        "id": "af569244a03b1fd7",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"A_94_Cart_Stat\" : false,\n            \"A_94_Cart_Next\" : false,\n            \"A_94_Optic\" : false,\n            \"A_94_Count\" : false,\n            \"A_94_Pist_Bck\" : false,\n            \"A_94_Release_FB\" : false,\n            \"A_94_Request\" : false,\n            \"A_94_No_Cart\" : false,\n            \"A_94_Cart_Full\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3300,
        "wires": [
            [
                "54c5d2f5708c574b"
            ]
        ]
    },
    {
        "id": "54c5d2f5708c574b",
        "type": "trigger",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3300,
        "wires": [
            [
                "da5f8f5c72357935"
            ]
        ]
    },
    {
        "id": "498388c2d9c1fd3a",
        "type": "ui_switch",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "C_95_Start",
        "label": "Start",
        "tooltip": "Start Production",
        "group": "668989f8ee84d520",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 3100,
        "wires": [
            [
                "f36918feb28b7869"
            ]
        ]
    },
    {
        "id": "4ff7e5540d65bbe9",
        "type": "OpcUa-Server",
        "z": "10b1bc1a080d1c97",
        "g": "c11f55de86be71ae",
        "port": "53889",
        "name": "Server: Handling 2",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Handling2/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Handling2",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": 0,
        "maxNodesPerHistoryReadData": 0,
        "maxNodesPerHistoryReadEvents": 0,
        "maxNodesPerHistoryUpdateData": 0,
        "maxNodesPerRead": 0,
        "maxNodesPerWrite": 0,
        "maxNodesPerMethodCall": 0,
        "maxNodesPerRegisterNodes": 0,
        "maxNodesPerNodeManagement": 0,
        "maxMonitoredItemsPerCall": 0,
        "maxNodesPerHistoryUpdateEvents": 0,
        "maxNodesPerTranslateBrowsePathsToNodeIds": 0,
        "maxConnectionsPerEndpoint": 20,
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": 20,
        "x": 130,
        "y": 60,
        "wires": [
            [
                "dfc3cb125230ea8a"
            ]
        ]
    },
    {
        "id": "4e20440c90099925",
        "type": "debug",
        "z": "10b1bc1a080d1c97",
        "g": "1231b87cb3dd641c",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "844b9de5d3e7a085",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "1231b87cb3dd641c",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "6398c5795321298b",
            "94105e93a64de904",
            "c211f689e435f5b6",
            "5539efd1d1bc9483",
            "d7d1c022c4ba1aa6",
            "a26c477ef801c459"
        ],
        "x": 825,
        "y": 60,
        "wires": []
    },
    {
        "id": "a14b65efa01d6659",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "O_90_Part_Reserve",
        "func": "if (msg.topic === \"O_90_Part_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Part_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 620,
        "wires": [
            [
                "d732f2fcfb8fab82"
            ]
        ]
    },
    {
        "id": "6398c5795321298b",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "S7 PS",
        "links": [
            "844b9de5d3e7a085"
        ],
        "x": 55,
        "y": 740,
        "wires": [
            [
                "a14b65efa01d6659",
                "f42d4334c7cd35e3",
                "b3bc3447f0bc4445",
                "4cc59134c8562fb5",
                "af2d4533c6c68faa",
                "2e83874cf500c67d",
                "940c5f481709a826"
            ]
        ]
    },
    {
        "id": "af2d4533c6c68faa",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "O_90_Claw_Low",
        "func": "if (msg.topic === \"O_90_Claw_Low\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_Low\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 780,
        "wires": [
            [
                "f11293191240944f"
            ]
        ]
    },
    {
        "id": "f42d4334c7cd35e3",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "O_90_Claw_Del",
        "func": "if (msg.topic === \"O_90_Claw_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 660,
        "wires": [
            [
                "44b218759961cd6d"
            ]
        ]
    },
    {
        "id": "b3bc3447f0bc4445",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "O_90_Claw_Cart",
        "func": "if (msg.topic === \"O_90_Claw_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 700,
        "wires": [
            [
                "6f2d34c40b877c8a"
            ]
        ]
    },
    {
        "id": "4cc59134c8562fb5",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "O_90_Claw_Reserve",
        "func": "if (msg.topic === \"O_90_Claw_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 740,
        "wires": [
            [
                "fb763cd6ee65faf5"
            ]
        ]
    },
    {
        "id": "2e83874cf500c67d",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "O_90_Claw_High",
        "func": "if (msg.topic === \"O_90_Claw_High\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_High\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 820,
        "wires": [
            [
                "e8ede418ae940865"
            ]
        ]
    },
    {
        "id": "940c5f481709a826",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "O_90_Part_in_Claw",
        "func": "if (msg.topic === \"O_90_Part_in_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Part_in_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 860,
        "wires": [
            [
                "3601054e962a8aa0"
            ]
        ]
    },
    {
        "id": "dfd9fddd281468cb",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "Sub Out 90 PS",
        "mode": "link",
        "links": [
            "8563c5f158f70a14"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "8563c5f158f70a14",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "Sub In 90 PS",
        "links": [
            "dfd9fddd281468cb"
        ],
        "x": 775,
        "y": 740,
        "wires": [
            [
                "0abe7b491a40426b"
            ]
        ]
    },
    {
        "id": "895e6d72bbd975fd",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "Sub Out 90 AS",
        "mode": "link",
        "links": [
            "5f98bd7144336867"
        ],
        "x": 1295,
        "y": 960,
        "wires": []
    },
    {
        "id": "5f98bd7144336867",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "Sub In 90 AS",
        "links": [
            "895e6d72bbd975fd"
        ],
        "x": 775,
        "y": 1180,
        "wires": [
            [
                "bc7f5ee20914b346"
            ]
        ]
    },
    {
        "id": "8bb4ec6c453a15ff",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "O_91_Start",
        "func": "if (msg.topic === \"O_91_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "8c8545167aaac001"
            ]
        ]
    },
    {
        "id": "94105e93a64de904",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "S7 AS",
        "links": [
            "844b9de5d3e7a085"
        ],
        "x": 55,
        "y": 1180,
        "wires": [
            [
                "8bb4ec6c453a15ff",
                "a14e28b4ea2a4d61",
                "5862426d31dac218",
                "9e4e677fdad228d0",
                "cb3ae45c03e31d95",
                "761f2250f9533901",
                "fcaa1cf32eb454cc",
                "3881a8bde2fd484a"
            ]
        ]
    },
    {
        "id": "cb3ae45c03e31d95",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "O_91_Panel_I4",
        "func": "if (msg.topic === \"O_91_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "c6799d89fcae7c1b"
            ]
        ]
    },
    {
        "id": "a14e28b4ea2a4d61",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "O_91_Stop",
        "func": "if (msg.topic === \"O_91_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "823079c611392827"
            ]
        ]
    },
    {
        "id": "5862426d31dac218",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "O_91_Key_Pos",
        "func": "if (msg.topic === \"O_91_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "a090d32dbc4104bf"
            ]
        ]
    },
    {
        "id": "9e4e677fdad228d0",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "O_91_Reset",
        "func": "if (msg.topic === \"O_91_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "39e9bedb349dced1"
            ]
        ]
    },
    {
        "id": "761f2250f9533901",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "O_91_Panel_I5",
        "func": "if (msg.topic === \"O_91_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1240,
        "wires": [
            [
                "0c189ca17298a00e"
            ]
        ]
    },
    {
        "id": "fcaa1cf32eb454cc",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "O_91_Panel_I6",
        "func": "if (msg.topic === \"O_91_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "403210667906825a"
            ]
        ]
    },
    {
        "id": "3881a8bde2fd484a",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "O_91_Panel_I7",
        "func": "if (msg.topic === \"O_91_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "d3d23d7be3323ebc"
            ]
        ]
    },
    {
        "id": "4e85590eacdb9df7",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "Sub Out 90 PA",
        "mode": "link",
        "links": [
            "82bca7d8462cde4a"
        ],
        "x": 1295,
        "y": 1420,
        "wires": []
    },
    {
        "id": "82bca7d8462cde4a",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "Sub In 90 PA",
        "links": [
            "4e85590eacdb9df7"
        ],
        "x": 775,
        "y": 1560,
        "wires": [
            [
                "9dc2f871b475cd27"
            ]
        ]
    },
    {
        "id": "299dbbe40767d93e",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "Sub Out 90 AA",
        "mode": "link",
        "links": [
            "65191121b6d100d6"
        ],
        "x": 1295,
        "y": 1720,
        "wires": []
    },
    {
        "id": "65191121b6d100d6",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "Sub In 90 AA",
        "links": [
            "299dbbe40767d93e"
        ],
        "x": 775,
        "y": 1940,
        "wires": [
            [
                "e0437801b1215cca"
            ]
        ]
    },
    {
        "id": "6adf48490f3181b9",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "Sub Out 90 PF",
        "mode": "link",
        "links": [
            "020a2c8917c33bb8"
        ],
        "x": 1295,
        "y": 2180,
        "wires": []
    },
    {
        "id": "020a2c8917c33bb8",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "Sub In 90 PF",
        "links": [
            "6adf48490f3181b9"
        ],
        "x": 775,
        "y": 2320,
        "wires": [
            [
                "bea6291ca73faa37"
            ]
        ]
    },
    {
        "id": "7988109134128001",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "F_92_Claw_2_Cart",
        "func": "if (msg.topic === \"F_92_Claw_2_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_92_Claw_2_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2260,
        "wires": [
            [
                "680297395003ab46"
            ]
        ]
    },
    {
        "id": "c211f689e435f5b6",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "S7 PF",
        "links": [
            "844b9de5d3e7a085"
        ],
        "x": 55,
        "y": 2320,
        "wires": [
            [
                "7988109134128001",
                "f214c7c825805931",
                "b024fde72deaa993",
                "740698f4d88a0546"
            ]
        ]
    },
    {
        "id": "f214c7c825805931",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "F_92_Claw_2_Del",
        "func": "if (msg.topic === \"F_92_Claw_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_92_Claw_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2300,
        "wires": [
            [
                "8301278556863cbe"
            ]
        ]
    },
    {
        "id": "b024fde72deaa993",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "F_92_Claw_Down",
        "func": "if (msg.topic === \"F_92_Claw_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_92_Claw_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2340,
        "wires": [
            [
                "db92586b83894c8a"
            ]
        ]
    },
    {
        "id": "740698f4d88a0546",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "F_92_Close_Claw",
        "func": "if (msg.topic === \"F_92_Close_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_92_Close_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2380,
        "wires": [
            [
                "90233a68114a3545"
            ]
        ]
    },
    {
        "id": "f21b26b961bce8e9",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "Sub Out 90 AF",
        "mode": "link",
        "links": [
            "2d2979e3b0e12cf7"
        ],
        "x": 1295,
        "y": 2480,
        "wires": []
    },
    {
        "id": "2d2979e3b0e12cf7",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "Sub In 90 AF",
        "links": [
            "f21b26b961bce8e9"
        ],
        "x": 775,
        "y": 2700,
        "wires": [
            [
                "91843166c72a9ce0"
            ]
        ]
    },
    {
        "id": "ba7f3c5e48fc6a6e",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "F_93_Led_Start",
        "func": "if (msg.topic === \"F_93_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2560,
        "wires": [
            [
                "2e1fa00f306fb63d"
            ]
        ]
    },
    {
        "id": "5539efd1d1bc9483",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "S7 AF",
        "links": [
            "844b9de5d3e7a085"
        ],
        "x": 55,
        "y": 2700,
        "wires": [
            [
                "ba7f3c5e48fc6a6e",
                "047b969555880b9f",
                "51f7404eaf605192",
                "d5dda0d563661bb5",
                "69f2f70e72a1eba1",
                "ccec59d5208758d0",
                "cd7d9eb664216023",
                "853d0c1be75e50ed"
            ]
        ]
    },
    {
        "id": "69f2f70e72a1eba1",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "F_93_Panel_O4",
        "func": "if (msg.topic === \"F_93_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2720,
        "wires": [
            [
                "84c6ead00ab5aec9"
            ]
        ]
    },
    {
        "id": "047b969555880b9f",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "F_93_Led_Reset",
        "func": "if (msg.topic === \"F_93_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2600,
        "wires": [
            [
                "d0bf9efba8b59f83"
            ]
        ]
    },
    {
        "id": "51f7404eaf605192",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "F_93_Led_Extra1",
        "func": "if (msg.topic === \"F_93_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2640,
        "wires": [
            [
                "86ac93f4f162458e"
            ]
        ]
    },
    {
        "id": "d5dda0d563661bb5",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "F_93_Led_Extra2",
        "func": "if (msg.topic === \"F_93_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2680,
        "wires": [
            [
                "61bafbb0bf984e99"
            ]
        ]
    },
    {
        "id": "ccec59d5208758d0",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "F_93_Panel_O5",
        "func": "if (msg.topic === \"F_93_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2760,
        "wires": [
            [
                "7da16c8fb62ee4de"
            ]
        ]
    },
    {
        "id": "cd7d9eb664216023",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "F_93_Panel_O6",
        "func": "if (msg.topic === \"F_93_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2800,
        "wires": [
            [
                "0f22f6d26e2e65fb"
            ]
        ]
    },
    {
        "id": "853d0c1be75e50ed",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "F_93_Panel_O7",
        "func": "if (msg.topic === \"F_93_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2840,
        "wires": [
            [
                "7ecf11c082772889"
            ]
        ]
    },
    {
        "id": "8110bfdb17349b27",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "Sub Out 90 C",
        "mode": "link",
        "links": [
            "2ffee207f1ce6579"
        ],
        "x": 1295,
        "y": 2940,
        "wires": []
    },
    {
        "id": "2ffee207f1ce6579",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "Sub In 90 C",
        "links": [
            "8110bfdb17349b27"
        ],
        "x": 915,
        "y": 3100,
        "wires": [
            [
                "d3cf77cf305db249"
            ]
        ]
    },
    {
        "id": "d7d1c022c4ba1aa6",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "S7 C",
        "links": [
            "844b9de5d3e7a085"
        ],
        "x": 55,
        "y": 3040,
        "wires": [
            [
                "bb283311cc21b8de",
                "20cdd5a51c1f4a9e"
            ]
        ]
    },
    {
        "id": "20cdd5a51c1f4a9e",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "C_95_Initialization",
        "func": "if (msg.topic === \"C_95_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_95_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3060,
        "wires": [
            [
                "8b5732b8307d41c1"
            ]
        ]
    },
    {
        "id": "bb283311cc21b8de",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "C_92_Profibus",
        "func": "if (msg.topic === \"C_92_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_92_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3020,
        "wires": [
            [
                "41ca4783a2e95289"
            ]
        ]
    },
    {
        "id": "3f5f1f1ff748cf4f",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "Sub Out 90 AS-i",
        "mode": "link",
        "links": [
            "7d5b1186ed5374bb"
        ],
        "x": 1295,
        "y": 3300,
        "wires": []
    },
    {
        "id": "7d5b1186ed5374bb",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "Sub In 90 AF",
        "links": [
            "3f5f1f1ff748cf4f"
        ],
        "x": 755,
        "y": 3540,
        "wires": [
            [
                "1d2f18486d7da8ea"
            ]
        ]
    },
    {
        "id": "427a6a105920b04e",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "A_94_Cart_Stat",
        "func": "if (msg.topic === \"A_94_Cart_Stat\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Cart_Stat\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3380,
        "wires": [
            [
                "2a0d68afde739571"
            ]
        ]
    },
    {
        "id": "a26c477ef801c459",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "S7 AS-i",
        "links": [
            "844b9de5d3e7a085"
        ],
        "x": 55,
        "y": 3540,
        "wires": [
            [
                "427a6a105920b04e",
                "448ab50fdc1ae161",
                "013c8fa434c10c03",
                "1f9ea1964b77de94",
                "1b466c87fa44c3ea",
                "ea9d57370d621162",
                "1869df1df1861297",
                "60b3f6fdadb4339e",
                "1d8346674a9da3f3"
            ]
        ]
    },
    {
        "id": "1b466c87fa44c3ea",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "A_94_Pist_Bck",
        "func": "if (msg.topic === \"A_94_Pist_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Pist_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3540,
        "wires": [
            [
                "784e249671d73578"
            ]
        ]
    },
    {
        "id": "448ab50fdc1ae161",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "A_94_Cart_Next",
        "func": "if (msg.topic === \"A_94_Cart_Next\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Cart_Next\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3420,
        "wires": [
            [
                "5039d5799a98a84c"
            ]
        ]
    },
    {
        "id": "013c8fa434c10c03",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "A_94_Optic",
        "func": "if (msg.topic === \"A_94_Optic\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Optic\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3460,
        "wires": [
            [
                "bd0ae015466bcb5a"
            ]
        ]
    },
    {
        "id": "1f9ea1964b77de94",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "A_94_Count",
        "func": "if (msg.topic === \"A_94_Count\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Count\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3500,
        "wires": [
            [
                "69174c8d99769934"
            ]
        ]
    },
    {
        "id": "ea9d57370d621162",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "A_94_Release_FB",
        "func": "if (msg.topic === \"A_94_Release_FB\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Release_FB\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3580,
        "wires": [
            [
                "bbcb39ae86bc5ec9"
            ]
        ]
    },
    {
        "id": "1869df1df1861297",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "A_94_Request",
        "func": "if (msg.topic === \"A_94_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3620,
        "wires": [
            [
                "d6ad3f33fd015d85"
            ]
        ]
    },
    {
        "id": "60b3f6fdadb4339e",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "A_94_No_Cart",
        "func": "if (msg.topic === \"A_94_No_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_No_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3660,
        "wires": [
            [
                "02a1ecfbf2caf6cf"
            ]
        ]
    },
    {
        "id": "1d8346674a9da3f3",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "A_94_Cart_Full",
        "func": "if (msg.topic === \"A_94_Cart_Full\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Cart_Full\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3700,
        "wires": [
            [
                "04333e8b5e1551be"
            ]
        ]
    },
    {
        "id": "b3ca75d5f5a59396",
        "type": "mqtt in",
        "z": "10b1bc1a080d1c97",
        "g": "1231b87cb3dd641c",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b7ac41c0bcdf40b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "855fb0dee00bf322"
            ]
        ]
    },
    {
        "id": "855fb0dee00bf322",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "1231b87cb3dd641c",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "844b9de5d3e7a085",
                "4e20440c90099925"
            ]
        ]
    },
    {
        "id": "05f0b9ac2290d482",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "87c00f0165672734"
            ]
        ]
    },
    {
        "id": "87c00f0165672734",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "bb2ee30b1d795c05",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "f7a5c63c31211355",
            "264ff8dfabad92a9",
            "3455b0b902abfefc",
            "685f4afb49683719",
            "dffa1aafac79daa5",
            "a7442d2293eb693e",
            "660e468f2d983769",
            "1811302ae7241aab"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "f7a5c63c31211355",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "27ba04bbd5f44787",
        "name": "Read AS-i",
        "links": [
            "87c00f0165672734"
        ],
        "x": 55,
        "y": 3300,
        "wires": [
            [
                "af569244a03b1fd7"
            ]
        ]
    },
    {
        "id": "264ff8dfabad92a9",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "Read C",
        "links": [
            "87c00f0165672734"
        ],
        "x": 55,
        "y": 2940,
        "wires": [
            [
                "7b2c36a22817d20c"
            ]
        ]
    },
    {
        "id": "3455b0b902abfefc",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "57783af319a2be42",
        "name": "Read AF",
        "links": [
            "87c00f0165672734"
        ],
        "x": 55,
        "y": 2480,
        "wires": [
            [
                "977892956f966488"
            ]
        ]
    },
    {
        "id": "685f4afb49683719",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "b3ee09e8c7cff3c3",
        "name": "Read PF",
        "links": [
            "87c00f0165672734"
        ],
        "x": 55,
        "y": 2180,
        "wires": [
            [
                "996fee36ac43b14b"
            ]
        ]
    },
    {
        "id": "dffa1aafac79daa5",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "Read AA",
        "links": [
            "87c00f0165672734"
        ],
        "x": 55,
        "y": 1720,
        "wires": [
            [
                "a58f7856d4beda82"
            ]
        ]
    },
    {
        "id": "a7442d2293eb693e",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "Read S",
        "links": [
            "87c00f0165672734"
        ],
        "x": 55,
        "y": 1420,
        "wires": [
            [
                "c750ece98ee4b3b2"
            ]
        ]
    },
    {
        "id": "660e468f2d983769",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "5da9012dd6e33327",
        "name": "Read S",
        "links": [
            "87c00f0165672734"
        ],
        "x": 55,
        "y": 960,
        "wires": [
            [
                "e921fa7f6c1e5dbe"
            ]
        ]
    },
    {
        "id": "1811302ae7241aab",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "2c93a492e05ae8a6",
        "name": "Read S",
        "links": [
            "87c00f0165672734"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "c55149a05769af5c"
            ]
        ]
    },
    {
        "id": "e60880f3cd96ec7a",
        "type": "mqtt out",
        "z": "10b1bc1a080d1c97",
        "g": "1231b87cb3dd641c",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b7ac41c0bcdf40b1",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "d6d1fb863f9380cf",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "I_90_Claw_2_Cart",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1500,
        "wires": [
            [
                "3a549dad39f504bb"
            ]
        ]
    },
    {
        "id": "0548da358114b868",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "I_90_Claw_2_Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1540,
        "wires": [
            [
                "3a549dad39f504bb"
            ]
        ]
    },
    {
        "id": "96c25f297ef1ec63",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "I_90_Claw_Down",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1580,
        "wires": [
            [
                "3a549dad39f504bb"
            ]
        ]
    },
    {
        "id": "9365cfeae37c8a46",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "I_90_Close_Claw",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1620,
        "wires": [
            [
                "3a549dad39f504bb"
            ]
        ]
    },
    {
        "id": "3a549dad39f504bb",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "1b38f1289a9e8ba4",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "12e657c5b482ee3e"
        ],
        "x": 1235,
        "y": 1560,
        "wires": []
    },
    {
        "id": "12e657c5b482ee3e",
        "type": "link in",
        "z": "10b1bc1a080d1c97",
        "g": "1231b87cb3dd641c",
        "name": "S7 Actuators",
        "links": [
            "3a549dad39f504bb",
            "d9efe80810868eb0",
            "1e1b742279dab193",
            "911f51b916ab963f"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "e60880f3cd96ec7a"
            ]
        ]
    },
    {
        "id": "6e8be8c199f861e7",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1800,
        "wires": [
            [
                "d9efe80810868eb0"
            ]
        ]
    },
    {
        "id": "f2620eebde22a286",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1840,
        "wires": [
            [
                "d9efe80810868eb0"
            ]
        ]
    },
    {
        "id": "0bc7ac60e72ba821",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1880,
        "wires": [
            [
                "d9efe80810868eb0"
            ]
        ]
    },
    {
        "id": "8cf9d8eec46061ef",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1920,
        "wires": [
            [
                "d9efe80810868eb0"
            ]
        ]
    },
    {
        "id": "dbaf739a176ffdd8",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1960,
        "wires": [
            [
                "d9efe80810868eb0"
            ]
        ]
    },
    {
        "id": "04314a7e44e30f04",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2000,
        "wires": [
            [
                "d9efe80810868eb0"
            ]
        ]
    },
    {
        "id": "107293e27b64bf8a",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2040,
        "wires": [
            [
                "d9efe80810868eb0"
            ]
        ]
    },
    {
        "id": "081986d26cf5b3f7",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "I_91_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2080,
        "wires": [
            [
                "d9efe80810868eb0"
            ]
        ]
    },
    {
        "id": "d9efe80810868eb0",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "ad7826bbc28a2892",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "12e657c5b482ee3e"
        ],
        "x": 1225,
        "y": 1940,
        "wires": []
    },
    {
        "id": "02f2508fa5d14912",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "C_95_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3100,
        "wires": [
            [
                "1e1b742279dab193"
            ]
        ]
    },
    {
        "id": "1a2cbf13bd3b1d77",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "C_95_Cart2Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3140,
        "wires": [
            [
                "1e1b742279dab193"
            ]
        ]
    },
    {
        "id": "72b8a09b2a578928",
        "type": "function",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "C_95_Del2Cart",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3180,
        "wires": [
            [
                "1e1b742279dab193"
            ]
        ]
    },
    {
        "id": "1e1b742279dab193",
        "type": "link out",
        "z": "10b1bc1a080d1c97",
        "g": "8e666092d1c29a2e",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "12e657c5b482ee3e"
        ],
        "x": 1355,
        "y": 3100,
        "wires": []
    },
    {
        "id": "2e5704f6057a354a",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "item": "O_100_PInit_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "'O_100_PInit_Pos",
        "x": 470,
        "y": 620,
        "wires": [
            [
                "82cc9341d6ad9891"
            ]
        ]
    },
    {
        "id": "aa6a596e2b82c4e1",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "item": "O_100_PDrill_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_PDrill_Pos",
        "x": 470,
        "y": 660,
        "wires": [
            [
                "82cc9341d6ad9891"
            ]
        ]
    },
    {
        "id": "5db4bef4f7111dbb",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "item": "O_100_PTest_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_PTest_Pos",
        "x": 470,
        "y": 700,
        "wires": [
            [
                "82cc9341d6ad9891"
            ]
        ]
    },
    {
        "id": "13c2c526232277de",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "item": "O_100_SDrill_High",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_SDrill_High",
        "x": 470,
        "y": 740,
        "wires": [
            [
                "82cc9341d6ad9891"
            ]
        ]
    },
    {
        "id": "660d297551df252a",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "item": "O_100_SDrill_Low",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_SDrill_Low",
        "x": 470,
        "y": 780,
        "wires": [
            [
                "82cc9341d6ad9891"
            ]
        ]
    },
    {
        "id": "7a06e1dfe29f9a00",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "item": "O_100_RT_Sensor",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_RT_Sensor",
        "x": 470,
        "y": 820,
        "wires": [
            [
                "82cc9341d6ad9891"
            ]
        ]
    },
    {
        "id": "9084d28ecab02f7f",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "item": "O_100_PTest_Ok",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_PTest_Ok",
        "x": 470,
        "y": 860,
        "wires": [
            [
                "82cc9341d6ad9891"
            ]
        ]
    },
    {
        "id": "82cc9341d6ad9891",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "100 Physical Sensor",
        "mode": "link",
        "links": [
            "b02cbd44343fd0d9"
        ],
        "x": 645,
        "y": 740,
        "wires": []
    },
    {
        "id": "ba2383eae25720dd",
        "type": "switch",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "100 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_100_PInit_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_PDrill_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_PTest_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_SDrill_High",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_SDrill_Low",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_RT_Sensor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_PTest_Ok",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 860,
        "y": 740,
        "wires": [
            [
                "2603b4b8ce4830f4"
            ],
            [
                "426db6c5a7aee838"
            ],
            [
                "fd708c135b13b47f"
            ],
            [
                "fe1b256806d6638e"
            ],
            [
                "66a55696301a577c"
            ],
            [
                "d6a2bd5ae5feeb4d"
            ],
            [
                "101200a4a27f55a6"
            ]
        ]
    },
    {
        "id": "2603b4b8ce4830f4",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "order": 0,
        "group": "5a9bf81ea9813817",
        "width": 0,
        "height": 0,
        "label": "Part in initial position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_PInit_Pos",
        "x": 1070,
        "y": 620,
        "wires": []
    },
    {
        "id": "426db6c5a7aee838",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "order": 0,
        "group": "5a9bf81ea9813817",
        "width": 0,
        "height": 0,
        "label": "Part in drill position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_PDrill_Pos",
        "x": 1070,
        "y": 660,
        "wires": []
    },
    {
        "id": "fd708c135b13b47f",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "order": 0,
        "group": "5a9bf81ea9813817",
        "width": 0,
        "height": 0,
        "label": "Part in test position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_PTest_Pos",
        "x": 1070,
        "y": 700,
        "wires": []
    },
    {
        "id": "fe1b256806d6638e",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "order": 0,
        "group": "5a9bf81ea9813817",
        "width": 0,
        "height": 0,
        "label": "Drill in high position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_SDrill_High",
        "x": 1070,
        "y": 740,
        "wires": []
    },
    {
        "id": "66a55696301a577c",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "order": 0,
        "group": "5a9bf81ea9813817",
        "width": 0,
        "height": 0,
        "label": "Drill in low position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_SDrill_Low",
        "x": 1070,
        "y": 780,
        "wires": []
    },
    {
        "id": "d6a2bd5ae5feeb4d",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "order": 0,
        "group": "5a9bf81ea9813817",
        "width": 0,
        "height": 0,
        "label": "Rotating table sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_RT_Sensor",
        "x": 1070,
        "y": 820,
        "wires": []
    },
    {
        "id": "101200a4a27f55a6",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "order": 0,
        "group": "5a9bf81ea9813817",
        "width": 0,
        "height": 0,
        "label": "Test Ok",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_PTest_Ok",
        "x": 1070,
        "y": 860,
        "wires": []
    },
    {
        "id": "1912fc338fa17051",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_100_PInit_Pos\" : false,\n            \"O_100_PDrill_Pos\" : false,\n            \"O_100_PTest_Pos\" : false,\n            \"O_100_SDrill_High\" : false,\n            \"O_100_SDrill_Low\" : false,\n            \"O_100_RT_Sensor\" : false,\n            \"O_100_PTest_Ok\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "f0df46ce73ac0ca7"
            ]
        ]
    },
    {
        "id": "256a5f4f0532e0ab",
        "type": "OpcUa-Client",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "endpoint": "038d76092cb41f2b",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "2b44118377f0fd05",
                "996d7ef549b25339"
            ],
            [
                "1912fc338fa17051"
            ]
        ]
    },
    {
        "id": "f0df46ce73ac0ca7",
        "type": "trigger",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "197926ce7abcace7"
            ]
        ]
    },
    {
        "id": "fc1380e5223a6d98",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "256a5f4f0532e0ab"
            ]
        ]
    },
    {
        "id": "2b44118377f0fd05",
        "type": "debug",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "100 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 580,
        "wires": []
    },
    {
        "id": "197926ce7abcace7",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "a91b7f33181021f3"
            ]
        ]
    },
    {
        "id": "eac69e1d7b6a8fe0",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "fc1380e5223a6d98"
            ]
        ]
    },
    {
        "id": "a91b7f33181021f3",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "eaec33463e767442"
            ]
        ]
    },
    {
        "id": "eaec33463e767442",
        "type": "file in",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "eac69e1d7b6a8fe0"
            ]
        ]
    },
    {
        "id": "3558c251c449dc64",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "item": "O_101_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Start",
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "b23005f76222c20c"
            ]
        ]
    },
    {
        "id": "b82d37cc0aa9272c",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "item": "O_101_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Stop",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "b23005f76222c20c"
            ]
        ]
    },
    {
        "id": "39562f7f4f05dab4",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "item": "O_101_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Key_Pos",
        "x": 470,
        "y": 1120,
        "wires": [
            [
                "b23005f76222c20c"
            ]
        ]
    },
    {
        "id": "5c460a9388128f18",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "item": "O_101_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Reset",
        "x": 480,
        "y": 1160,
        "wires": [
            [
                "b23005f76222c20c"
            ]
        ]
    },
    {
        "id": "1a9b4c438168afd0",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "item": "O_101_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Panel_I4",
        "x": 470,
        "y": 1200,
        "wires": [
            [
                "b23005f76222c20c"
            ]
        ]
    },
    {
        "id": "d57c2281ea98dbb6",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "item": "O_101_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Panel_I5",
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "b23005f76222c20c"
            ]
        ]
    },
    {
        "id": "42eb6ebd01d2553d",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "item": "O_101_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Panel_I6",
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "b23005f76222c20c"
            ]
        ]
    },
    {
        "id": "b23005f76222c20c",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "100 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "b02cbd44343fd0d9"
        ],
        "x": 645,
        "y": 1180,
        "wires": []
    },
    {
        "id": "4b2f0986591c4580",
        "type": "switch",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "100 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_101_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 860,
        "y": 1180,
        "wires": [
            [
                "b0d1c5d3d4fcd6f7"
            ],
            [
                "a848c82bceac4c2c"
            ],
            [
                "b854a605f6f87b73"
            ],
            [
                "38f903bc61f24cd9"
            ],
            [
                "5091edae7d54d7cc"
            ],
            [
                "d29837275c4ab632"
            ],
            [
                "5f79f2366e6256f7"
            ],
            [
                "f860ca11c01e5880"
            ]
        ]
    },
    {
        "id": "b0d1c5d3d4fcd6f7",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "order": 0,
        "group": "f958a9aa519ee377",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Start",
        "x": 1050,
        "y": 1040,
        "wires": []
    },
    {
        "id": "a848c82bceac4c2c",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "order": 0,
        "group": "f958a9aa519ee377",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Stop",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b854a605f6f87b73",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "order": 0,
        "group": "f958a9aa519ee377",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Key_Pos",
        "x": 1070,
        "y": 1120,
        "wires": []
    },
    {
        "id": "38f903bc61f24cd9",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "order": 0,
        "group": "f958a9aa519ee377",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Reset",
        "x": 1060,
        "y": 1160,
        "wires": []
    },
    {
        "id": "5091edae7d54d7cc",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "order": 0,
        "group": "f958a9aa519ee377",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Panel_I4",
        "x": 1070,
        "y": 1200,
        "wires": []
    },
    {
        "id": "d29837275c4ab632",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "order": 0,
        "group": "f958a9aa519ee377",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Panel_I5",
        "x": 1070,
        "y": 1240,
        "wires": []
    },
    {
        "id": "5f79f2366e6256f7",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "order": 0,
        "group": "f958a9aa519ee377",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Panel_I6",
        "x": 1070,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ea01bd377e174c8c",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "item": "O_101_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Panel_I7",
        "x": 470,
        "y": 1320,
        "wires": [
            [
                "b23005f76222c20c"
            ]
        ]
    },
    {
        "id": "f860ca11c01e5880",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "order": 0,
        "group": "f958a9aa519ee377",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Panel_I7",
        "x": 1070,
        "y": 1320,
        "wires": []
    },
    {
        "id": "19fba1105f6e41ad",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 960,
        "wires": [
            [
                "8d67cd89e23011d8"
            ]
        ]
    },
    {
        "id": "13374984f73624b7",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 960,
        "wires": [
            [
                "19fba1105f6e41ad"
            ]
        ]
    },
    {
        "id": "8d67cd89e23011d8",
        "type": "OpcUa-Client",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "endpoint": "038d76092cb41f2b",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 960,
        "wires": [
            [
                "f58ca4abaa585628",
                "a3d5451fa1796b50"
            ],
            [
                "3bb918ba5bf3c227"
            ]
        ]
    },
    {
        "id": "018fb36e92823334",
        "type": "file in",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 960,
        "wires": [
            [
                "13374984f73624b7"
            ]
        ]
    },
    {
        "id": "f58ca4abaa585628",
        "type": "debug",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "100 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1000,
        "wires": []
    },
    {
        "id": "3bb918ba5bf3c227",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_101_Start\" : false,\n            \"O_101_Stop\" : false,\n            \"O_101_Key_Pos\" : false,\n            \"O_101_Reset\" : false,\n            \"O_101_Panel_I4\" : false,\n            \"O_101_Panel_I5\" : false,\n            \"O_101_Panel_I6\" : false,\n            \"O_101_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 960,
        "wires": [
            [
                "69c5ce0c3463740b"
            ]
        ]
    },
    {
        "id": "5f53b8325f978a75",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 960,
        "wires": [
            [
                "018fb36e92823334"
            ]
        ]
    },
    {
        "id": "69c5ce0c3463740b",
        "type": "trigger",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 960,
        "wires": [
            [
                "e0421f2c0c0851f0"
            ]
        ]
    },
    {
        "id": "e0421f2c0c0851f0",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 960,
        "wires": [
            [
                "5f53b8325f978a75"
            ]
        ]
    },
    {
        "id": "e1b60ab8d74efaca",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "item": "I_100_Drill_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Drill_On",
        "x": 480,
        "y": 1500,
        "wires": [
            [
                "1187e6c2cf101a83"
            ]
        ]
    },
    {
        "id": "b1571c59bed4ac13",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "item": "I_100_RT_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_RT_On",
        "x": 480,
        "y": 1540,
        "wires": [
            [
                "1187e6c2cf101a83"
            ]
        ]
    },
    {
        "id": "c2d8d4fc62763707",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "item": "I_100_Drill_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Drill_Down",
        "x": 470,
        "y": 1580,
        "wires": [
            [
                "1187e6c2cf101a83"
            ]
        ]
    },
    {
        "id": "12c5355198959042",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "item": "I_100_Drill_Up",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Drill_Up",
        "x": 480,
        "y": 1620,
        "wires": [
            [
                "1187e6c2cf101a83"
            ]
        ]
    },
    {
        "id": "c1cc506b93f00d2b",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "item": "I_100_Drill_Pin",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Drill_Pin",
        "x": 480,
        "y": 1660,
        "wires": [
            [
                "1187e6c2cf101a83"
            ]
        ]
    },
    {
        "id": "1187e6c2cf101a83",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "100 Physical Actuators",
        "mode": "link",
        "links": [
            "b02cbd44343fd0d9"
        ],
        "x": 645,
        "y": 1600,
        "wires": []
    },
    {
        "id": "8bdc26972c29bedc",
        "type": "switch",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "100 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_100_Drill_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_RT_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_Drill_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_Drill_Up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_Drill_Pin",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_Test_Pin",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 860,
        "y": 1600,
        "wires": [
            [
                "517706f5eb1ed808"
            ],
            [
                "bf097fec23c37a99"
            ],
            [
                "3a14bec9d1dd52af"
            ],
            [
                "9d73df34c99dcec7"
            ],
            [
                "1fa39724162c0dd3"
            ],
            [
                "1836499616556488"
            ]
        ]
    },
    {
        "id": "2d8da1a0a863d3f5",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "I_100_Drill_On",
        "label": "Turns drill on",
        "tooltip": "",
        "group": "d19797a079250fc5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1500,
        "wires": [
            [
                "e1b60ab8d74efaca"
            ]
        ]
    },
    {
        "id": "0533ef932d4a87eb",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "I_100_RT_On",
        "label": "Moves rotating table",
        "tooltip": "",
        "group": "d19797a079250fc5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1540,
        "wires": [
            [
                "b1571c59bed4ac13"
            ]
        ]
    },
    {
        "id": "3963ffe7c0b50885",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "I_100_Drill_Down",
        "label": "Lowers drill",
        "tooltip": "",
        "group": "d19797a079250fc5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1580,
        "wires": [
            [
                "c2d8d4fc62763707"
            ]
        ]
    },
    {
        "id": "baca5cc69556a3bc",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "I_100_Drill_Up",
        "label": "Raises drill",
        "tooltip": "",
        "group": "d19797a079250fc5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1620,
        "wires": [
            [
                "12c5355198959042"
            ]
        ]
    },
    {
        "id": "26df0be39fc6c156",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "I_100_Drill_Pin",
        "label": "Advances drill pin",
        "tooltip": "",
        "group": "d19797a079250fc5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1660,
        "wires": [
            [
                "c1cc506b93f00d2b"
            ]
        ]
    },
    {
        "id": "6694035c40f2c855",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1420,
        "wires": [
            [
                "7a8d5dd5dcd0ed50"
            ]
        ]
    },
    {
        "id": "4c15ef796a81649b",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "6694035c40f2c855"
            ]
        ]
    },
    {
        "id": "7a8d5dd5dcd0ed50",
        "type": "OpcUa-Client",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "endpoint": "038d76092cb41f2b",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1420,
        "wires": [
            [
                "53cbc147dec88b98",
                "46ee74b06881a1c3"
            ],
            [
                "450a631df5507e1e"
            ]
        ]
    },
    {
        "id": "84fd3301d5c81230",
        "type": "file in",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "4c15ef796a81649b"
            ]
        ]
    },
    {
        "id": "53cbc147dec88b98",
        "type": "debug",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "100 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1460,
        "wires": []
    },
    {
        "id": "450a631df5507e1e",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_100_Drill_On\" : false,\n            \"I_100_RT_On\" : false,\n            \"I_100_Drill_Down\" : false,\n            \"I_100_Drill_Up\" : false,\n            \"I_100_Drill_Pin\" : false,\n            \"I_100_Test_Pin\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1420,
        "wires": [
            [
                "c595a3310c2d4a7f"
            ]
        ]
    },
    {
        "id": "360cd2bc06e14e9c",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "84fd3301d5c81230"
            ]
        ]
    },
    {
        "id": "c595a3310c2d4a7f",
        "type": "trigger",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1420,
        "wires": [
            [
                "3161dca5b2c41b20"
            ]
        ]
    },
    {
        "id": "3161dca5b2c41b20",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1420,
        "wires": [
            [
                "360cd2bc06e14e9c"
            ]
        ]
    },
    {
        "id": "c20ccf2ea15e5aca",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "item": "I_101_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Led_Start",
        "x": 470,
        "y": 1880,
        "wires": [
            [
                "ea846b4a02571ec9"
            ]
        ]
    },
    {
        "id": "c4299edb236e0d55",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "item": "I_101_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Led_Reset",
        "x": 470,
        "y": 1920,
        "wires": [
            [
                "ea846b4a02571ec9"
            ]
        ]
    },
    {
        "id": "e311e54ee0b680f7",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "item": "I_101_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Led_Extra1",
        "x": 470,
        "y": 1960,
        "wires": [
            [
                "ea846b4a02571ec9"
            ]
        ]
    },
    {
        "id": "0603f7f5e989a171",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "item": "I_101_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Led_Extra2",
        "x": 470,
        "y": 2000,
        "wires": [
            [
                "ea846b4a02571ec9"
            ]
        ]
    },
    {
        "id": "ec5c5a4731b61ab1",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "item": "I_101_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Panel_O4",
        "x": 470,
        "y": 2040,
        "wires": [
            [
                "ea846b4a02571ec9"
            ]
        ]
    },
    {
        "id": "ea846b4a02571ec9",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "100 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "b02cbd44343fd0d9"
        ],
        "x": 645,
        "y": 2020,
        "wires": []
    },
    {
        "id": "f605573b41326c34",
        "type": "switch",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "100 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_101_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 860,
        "y": 2020,
        "wires": [
            [
                "01f61173d3baf90c"
            ],
            [
                "99ca0d8745073171"
            ],
            [
                "7fc89a8ef451c224"
            ],
            [
                "c7ab32d860ecee41"
            ],
            [
                "ad162ee6d3bd3fdc"
            ],
            [
                "0e4e91cca077fd79"
            ],
            [
                "8f7e0261a4d30ba3"
            ],
            [
                "e64b86391a81181a"
            ]
        ]
    },
    {
        "id": "dfe764603117f44f",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "9d3f6f0389950d34",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1880,
        "wires": [
            [
                "c20ccf2ea15e5aca"
            ]
        ]
    },
    {
        "id": "c86df2d5d63cecf0",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "9d3f6f0389950d34",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1920,
        "wires": [
            [
                "c4299edb236e0d55"
            ]
        ]
    },
    {
        "id": "9ffdeb3d00dbeb45",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "9d3f6f0389950d34",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1960,
        "wires": [
            [
                "e311e54ee0b680f7"
            ]
        ]
    },
    {
        "id": "166efd2d9b0b9b13",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "9d3f6f0389950d34",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 2000,
        "wires": [
            [
                "0603f7f5e989a171"
            ]
        ]
    },
    {
        "id": "df82fdd2d29e973e",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "9d3f6f0389950d34",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 2040,
        "wires": [
            [
                "ec5c5a4731b61ab1"
            ]
        ]
    },
    {
        "id": "b07f20fa713b5372",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "9d3f6f0389950d34",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 2080,
        "wires": [
            [
                "a60db929e0b0fcee"
            ]
        ]
    },
    {
        "id": "a60db929e0b0fcee",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "item": "I_101_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Panel_O5",
        "x": 470,
        "y": 2080,
        "wires": [
            [
                "ea846b4a02571ec9"
            ]
        ]
    },
    {
        "id": "fb57b48ce490ab78",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "9d3f6f0389950d34",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 2120,
        "wires": [
            [
                "b5329c7acb8787fb"
            ]
        ]
    },
    {
        "id": "b5329c7acb8787fb",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "item": "I_101_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Panel_O6",
        "x": 470,
        "y": 2120,
        "wires": [
            [
                "ea846b4a02571ec9"
            ]
        ]
    },
    {
        "id": "087cc4e66fc39464",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "9d3f6f0389950d34",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 2160,
        "wires": [
            [
                "2c4b69d9b2291cd0"
            ]
        ]
    },
    {
        "id": "2c4b69d9b2291cd0",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "item": "I_101_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Panel_O7",
        "x": 470,
        "y": 2160,
        "wires": [
            [
                "ea846b4a02571ec9"
            ]
        ]
    },
    {
        "id": "37c52446202753d4",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1800,
        "wires": [
            [
                "f167d737f7df8032"
            ]
        ]
    },
    {
        "id": "d919b1462e61d963",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1800,
        "wires": [
            [
                "37c52446202753d4"
            ]
        ]
    },
    {
        "id": "f167d737f7df8032",
        "type": "OpcUa-Client",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "endpoint": "038d76092cb41f2b",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1800,
        "wires": [
            [
                "a1b989f7cb2a2810",
                "61d2cc681b9db02d"
            ],
            [
                "32907853f4a645bd"
            ]
        ]
    },
    {
        "id": "5ea5027cfa3bc9d3",
        "type": "file in",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1800,
        "wires": [
            [
                "d919b1462e61d963"
            ]
        ]
    },
    {
        "id": "a1b989f7cb2a2810",
        "type": "debug",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "100 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1840,
        "wires": []
    },
    {
        "id": "32907853f4a645bd",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_101_Led_Start\" : false,\n            \"I_101_Led_Reset\" : false,\n            \"I_101_Led_Extra1\" : false,\n            \"I_101_Led_Extra2\" : false,\n            \"I_101_Panel_O4\" : false,\n            \"I_101_Panel_O5\" : false,\n            \"I_101_Panel_O6\" : false,\n            \"I_101_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1800,
        "wires": [
            [
                "c56ae4c0a292b40a"
            ]
        ]
    },
    {
        "id": "843df8a20995e3f8",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1800,
        "wires": [
            [
                "5ea5027cfa3bc9d3"
            ]
        ]
    },
    {
        "id": "c56ae4c0a292b40a",
        "type": "trigger",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1800,
        "wires": [
            [
                "b279283552f096e7"
            ]
        ]
    },
    {
        "id": "b279283552f096e7",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1800,
        "wires": [
            [
                "843df8a20995e3f8"
            ]
        ]
    },
    {
        "id": "8a5f6f10efd4ad7e",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "item": "F_102_Drill_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Drill_On",
        "x": 480,
        "y": 2340,
        "wires": [
            [
                "99c1c0bb518d0409"
            ]
        ]
    },
    {
        "id": "1c9ff0f6ecf67fe8",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "item": "F_102_RT_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_RT_On",
        "x": 480,
        "y": 2380,
        "wires": [
            [
                "99c1c0bb518d0409"
            ]
        ]
    },
    {
        "id": "08853025ac9796c8",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "item": "F_102_Drill_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Drill_Down",
        "x": 470,
        "y": 2420,
        "wires": [
            [
                "99c1c0bb518d0409"
            ]
        ]
    },
    {
        "id": "996e2ea18588db17",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "item": "F_102_Drill_Up",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Drill_Up",
        "x": 480,
        "y": 2460,
        "wires": [
            [
                "99c1c0bb518d0409"
            ]
        ]
    },
    {
        "id": "f0b3476a8e972f8c",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "item": "F_102_Drill_Pin",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Drill_Pin",
        "x": 480,
        "y": 2500,
        "wires": [
            [
                "99c1c0bb518d0409"
            ]
        ]
    },
    {
        "id": "99c1c0bb518d0409",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "100 Physical Feedback",
        "mode": "link",
        "links": [
            "b02cbd44343fd0d9"
        ],
        "x": 645,
        "y": 2440,
        "wires": []
    },
    {
        "id": "bff79f75186f6dd7",
        "type": "switch",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "100 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_102_Drill_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_RT_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_Drill_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_Drill_Up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_Drill_Pin",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_Test_Pin",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 860,
        "y": 2440,
        "wires": [
            [
                "5d13c602f207e231"
            ],
            [
                "966417c3854ff887"
            ],
            [
                "acf371aaf93e4a62"
            ],
            [
                "a13c8a089a819458"
            ],
            [
                "b67765f45da21854"
            ],
            [
                "d13242b7e922d7bf"
            ]
        ]
    },
    {
        "id": "5d13c602f207e231",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "order": 0,
        "group": "ab7c938b16989ad7",
        "width": 0,
        "height": 0,
        "label": "Turns drill on",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Drill_On",
        "x": 1060,
        "y": 2340,
        "wires": []
    },
    {
        "id": "966417c3854ff887",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "order": 0,
        "group": "ab7c938b16989ad7",
        "width": 0,
        "height": 0,
        "label": "Moves rotating table",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_RT_On",
        "x": 1060,
        "y": 2380,
        "wires": []
    },
    {
        "id": "acf371aaf93e4a62",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "order": 0,
        "group": "ab7c938b16989ad7",
        "width": 0,
        "height": 0,
        "label": "Lowers drill",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Drill_Down",
        "x": 1070,
        "y": 2420,
        "wires": []
    },
    {
        "id": "a13c8a089a819458",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "order": 0,
        "group": "ab7c938b16989ad7",
        "width": 0,
        "height": 0,
        "label": "Raises drill",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Drill_Up",
        "x": 1060,
        "y": 2460,
        "wires": []
    },
    {
        "id": "b67765f45da21854",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "order": 0,
        "group": "ab7c938b16989ad7",
        "width": 0,
        "height": 0,
        "label": "Advances drill pin",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Drill_Pin",
        "x": 1060,
        "y": 2500,
        "wires": []
    },
    {
        "id": "640af98af4aed2e9",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2260,
        "wires": [
            [
                "a488e5864859f9ea"
            ]
        ]
    },
    {
        "id": "48adbd9db8c4885c",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2260,
        "wires": [
            [
                "640af98af4aed2e9"
            ]
        ]
    },
    {
        "id": "a488e5864859f9ea",
        "type": "OpcUa-Client",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "endpoint": "038d76092cb41f2b",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2260,
        "wires": [
            [
                "2809ff7c4d1ed0b9",
                "b7e0dd783c2b7bbc"
            ],
            [
                "7751198636bbf351"
            ]
        ]
    },
    {
        "id": "5ba3cc46296712be",
        "type": "file in",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2260,
        "wires": [
            [
                "48adbd9db8c4885c"
            ]
        ]
    },
    {
        "id": "2809ff7c4d1ed0b9",
        "type": "debug",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "100 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 2300,
        "wires": []
    },
    {
        "id": "7751198636bbf351",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_102_Drill_On\" : false,\n            \"F_102_RT_On\" : false,\n            \"F_102_Drill_Down\" : false,\n            \"F_102_Drill_Up\" : false,\n            \"F_102_Drill_Pin\" : false,\n            \"F_102_Test_Pin\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2260,
        "wires": [
            [
                "955227c9b94cc74d"
            ]
        ]
    },
    {
        "id": "a55a55a141b36b95",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2260,
        "wires": [
            [
                "5ba3cc46296712be"
            ]
        ]
    },
    {
        "id": "955227c9b94cc74d",
        "type": "trigger",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2260,
        "wires": [
            [
                "754bf3a8e0dc7093"
            ]
        ]
    },
    {
        "id": "754bf3a8e0dc7093",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2260,
        "wires": [
            [
                "a55a55a141b36b95"
            ]
        ]
    },
    {
        "id": "50589ba53397592f",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "item": "F_103_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Led_Start",
        "x": 470,
        "y": 2720,
        "wires": [
            [
                "33b2c9721d8aea05"
            ]
        ]
    },
    {
        "id": "33ad69bb8378cb12",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "item": "F_103_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Led_Reset",
        "x": 470,
        "y": 2760,
        "wires": [
            [
                "33b2c9721d8aea05"
            ]
        ]
    },
    {
        "id": "b278b9e11cd448e3",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "item": "F_103_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Led_Extra1",
        "x": 470,
        "y": 2800,
        "wires": [
            [
                "33b2c9721d8aea05"
            ]
        ]
    },
    {
        "id": "50d0b79140480d33",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "item": "F_103_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Led_Extra2",
        "x": 470,
        "y": 2840,
        "wires": [
            [
                "33b2c9721d8aea05"
            ]
        ]
    },
    {
        "id": "3570d308b2f3f8f3",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "item": "F_103_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Panel_O4",
        "x": 470,
        "y": 2880,
        "wires": [
            [
                "33b2c9721d8aea05"
            ]
        ]
    },
    {
        "id": "20866469c094058c",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "item": "F_103_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Panel_O5",
        "x": 470,
        "y": 2920,
        "wires": [
            [
                "33b2c9721d8aea05"
            ]
        ]
    },
    {
        "id": "fab12dcd4ee36abb",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "item": "F_103_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Panel_O6",
        "x": 470,
        "y": 2960,
        "wires": [
            [
                "33b2c9721d8aea05"
            ]
        ]
    },
    {
        "id": "33b2c9721d8aea05",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "100 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "b02cbd44343fd0d9"
        ],
        "x": 645,
        "y": 2860,
        "wires": []
    },
    {
        "id": "e3957aa6780d5aad",
        "type": "switch",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "100 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_103_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 860,
        "y": 2860,
        "wires": [
            [
                "d416f2b7c703b62a"
            ],
            [
                "f8cab238002cae19"
            ],
            [
                "b7cf6883129f5bc9"
            ],
            [
                "10433a92550946d3"
            ],
            [
                "b49fcb3466d637c9"
            ],
            [
                "8621618c8cfd0b76"
            ],
            [
                "9cb656678e8f3297"
            ],
            [
                "faf2824e23e26b64"
            ]
        ]
    },
    {
        "id": "d416f2b7c703b62a",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "order": 0,
        "group": "7fa3ab75555f7cf2",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Led_Start",
        "x": 1070,
        "y": 2720,
        "wires": []
    },
    {
        "id": "f8cab238002cae19",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "order": 0,
        "group": "7fa3ab75555f7cf2",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Led_Reset",
        "x": 1070,
        "y": 2760,
        "wires": []
    },
    {
        "id": "b7cf6883129f5bc9",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "order": 0,
        "group": "7fa3ab75555f7cf2",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Led_Extra1",
        "x": 1070,
        "y": 2800,
        "wires": []
    },
    {
        "id": "10433a92550946d3",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "order": 0,
        "group": "7fa3ab75555f7cf2",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Led_Extra2",
        "x": 1070,
        "y": 2840,
        "wires": []
    },
    {
        "id": "b49fcb3466d637c9",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "order": 0,
        "group": "7fa3ab75555f7cf2",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Panel_O4",
        "x": 1070,
        "y": 2880,
        "wires": []
    },
    {
        "id": "8621618c8cfd0b76",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "order": 0,
        "group": "7fa3ab75555f7cf2",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Panel_O5",
        "x": 1070,
        "y": 2920,
        "wires": []
    },
    {
        "id": "9cb656678e8f3297",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "order": 0,
        "group": "7fa3ab75555f7cf2",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Panel_O6",
        "x": 1070,
        "y": 2960,
        "wires": []
    },
    {
        "id": "64f6dcb2f57ad037",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "item": "F_103_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Panel_O7",
        "x": 470,
        "y": 3000,
        "wires": [
            [
                "33b2c9721d8aea05"
            ]
        ]
    },
    {
        "id": "faf2824e23e26b64",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "order": 0,
        "group": "7fa3ab75555f7cf2",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Panel_O7",
        "x": 1070,
        "y": 3000,
        "wires": []
    },
    {
        "id": "444c4fba0c765718",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2640,
        "wires": [
            [
                "bb4834a943ca8517"
            ]
        ]
    },
    {
        "id": "e52561e9c8b0b8f8",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2640,
        "wires": [
            [
                "444c4fba0c765718"
            ]
        ]
    },
    {
        "id": "bb4834a943ca8517",
        "type": "OpcUa-Client",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "endpoint": "038d76092cb41f2b",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2640,
        "wires": [
            [
                "886e7a92b844d593",
                "9e618b1a6a4be4fb"
            ],
            [
                "be0d65dba4eb341c"
            ]
        ]
    },
    {
        "id": "4de36ede3683ab96",
        "type": "file in",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2640,
        "wires": [
            [
                "e52561e9c8b0b8f8"
            ]
        ]
    },
    {
        "id": "886e7a92b844d593",
        "type": "debug",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "100 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 2680,
        "wires": []
    },
    {
        "id": "be0d65dba4eb341c",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_103_Led_Start\" : false,\n            \"F_103_Led_Reset\" : false,\n            \"F_103_Led_Extra1\" : false,\n            \"F_103_Led_Extra2\" : false,\n            \"F_103_Panel_O4\" : false,\n            \"F_103_Panel_O5\" : false,\n            \"F_103_Panel_O6\" : false,\n            \"F_103_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2640,
        "wires": [
            [
                "2cbb20dadefc6a96"
            ]
        ]
    },
    {
        "id": "17b964a0a12f5f46",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2640,
        "wires": [
            [
                "4de36ede3683ab96"
            ]
        ]
    },
    {
        "id": "2cbb20dadefc6a96",
        "type": "trigger",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2640,
        "wires": [
            [
                "d92036a88f17438b"
            ]
        ]
    },
    {
        "id": "d92036a88f17438b",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2640,
        "wires": [
            [
                "17b964a0a12f5f46"
            ]
        ]
    },
    {
        "id": "9a427b76feaaa98d",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "item": "C_102_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_102_Profibus",
        "x": 640,
        "y": 3180,
        "wires": [
            [
                "811f02d25386779f"
            ]
        ]
    },
    {
        "id": "6cd342428267a0bd",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "item": "C_105_Initialization",
        "datatype": "Double",
        "value": "",
        "name": "C_105_Initialization",
        "x": 630,
        "y": 3220,
        "wires": [
            [
                "811f02d25386779f"
            ]
        ]
    },
    {
        "id": "9f4a3e51723214a3",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "item": "C_105_Part_ready",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_Part_ready",
        "x": 630,
        "y": 3260,
        "wires": [
            [
                "811f02d25386779f"
            ]
        ]
    },
    {
        "id": "13374e619d6fe8e6",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "item": "C_105_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_Start",
        "x": 650,
        "y": 3300,
        "wires": [
            [
                "811f02d25386779f"
            ]
        ]
    },
    {
        "id": "454010fdd6341d89",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "item": "C_105_Test",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_Test",
        "x": 650,
        "y": 3340,
        "wires": [
            [
                "811f02d25386779f"
            ]
        ]
    },
    {
        "id": "4e80eaaedc9037c8",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "item": "C_105_TestDrill",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_TestDrill",
        "x": 640,
        "y": 3380,
        "wires": [
            [
                "811f02d25386779f"
            ]
        ]
    },
    {
        "id": "3117c3359839f637",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "item": "C_105_Rotation",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_Rotation",
        "x": 640,
        "y": 3420,
        "wires": [
            [
                "811f02d25386779f"
            ]
        ]
    },
    {
        "id": "811f02d25386779f",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "100 Control",
        "mode": "link",
        "links": [
            "b02cbd44343fd0d9"
        ],
        "x": 805,
        "y": 3300,
        "wires": []
    },
    {
        "id": "70b03ce4a67e0980",
        "type": "switch",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "100 C",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_102_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Part_ready",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Test",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_TestDrill",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Rotation",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 1010,
        "y": 3300,
        "wires": [
            [
                "c549e0e4e7b9605e"
            ],
            [
                "4d52446b86991117"
            ],
            [
                "5059978d95da1839"
            ],
            [
                "34f68f712dc03b22"
            ],
            [
                "0f6139e5d7ec62e6"
            ],
            [
                "95a296d07d0dbb92"
            ],
            [
                "5db270a945807641"
            ]
        ]
    },
    {
        "id": "c549e0e4e7b9605e",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "order": 2,
        "group": "977e16b42dd24b9c",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_102_Profibus",
        "x": 1200,
        "y": 3180,
        "wires": []
    },
    {
        "id": "5059978d95da1839",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "order": 3,
        "group": "977e16b42dd24b9c",
        "width": 0,
        "height": 0,
        "label": "Part Ready for Transport",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_105_Part_ready",
        "x": 1210,
        "y": 3260,
        "wires": []
    },
    {
        "id": "6944667a658d8a5a",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "C_105_Start",
        "label": "Start",
        "tooltip": "Start Production",
        "group": "977e16b42dd24b9c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 3300,
        "wires": [
            [
                "13374e619d6fe8e6"
            ]
        ]
    },
    {
        "id": "8f54b0636fd67a90",
        "type": "ui_dropdown",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "977e16b42dd24b9c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Test Only Mode",
                "value": "C_105_Test",
                "type": "str"
            },
            {
                "label": "Test and Drill Mode",
                "value": "C_105_TestDrill",
                "type": "str"
            },
            {
                "label": "Rotation Mode",
                "value": "C_105_Rotation",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 3380,
        "wires": [
            [
                "12259a058e46fc94",
                "b0e22d354705a229",
                "3656f58e17585b2a"
            ]
        ]
    },
    {
        "id": "12259a058e46fc94",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "C_105_Test",
        "func": "if (msg.payload === \"C_105_Test\") \nreturn { payload: true, topic: \"C_105_Test\"};\nelse return { payload: false, topic: \"C_105_Test\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3340,
        "wires": [
            [
                "454010fdd6341d89"
            ]
        ]
    },
    {
        "id": "b0e22d354705a229",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "C_105_TestDrill",
        "func": "if (msg.payload === \"C_105_TestDrill\") \nreturn { payload: true, topic: \"C_105_TestDrill\"};\nelse return { payload: false, topic: \"C_105_TestDrill\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3380,
        "wires": [
            [
                "4e80eaaedc9037c8"
            ]
        ]
    },
    {
        "id": "3656f58e17585b2a",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "C_105_Rotation",
        "func": "if (msg.payload === \"C_105_Rotation\") \nreturn { payload: true, topic: \"C_105_Rotation\"};\nelse return { payload: false, topic: \"C_105_Rotation\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3420,
        "wires": [
            [
                "3117c3359839f637"
            ]
        ]
    },
    {
        "id": "0e5a05de438479ae",
        "type": "inject",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_105_Test",
        "payloadType": "str",
        "x": 190,
        "y": 3420,
        "wires": [
            [
                "8f54b0636fd67a90"
            ]
        ]
    },
    {
        "id": "f9e9778913be6a4c",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3100,
        "wires": [
            [
                "0fc039fa8f6d86bc"
            ]
        ]
    },
    {
        "id": "e12971e326df498c",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3100,
        "wires": [
            [
                "f9e9778913be6a4c"
            ]
        ]
    },
    {
        "id": "0fc039fa8f6d86bc",
        "type": "OpcUa-Client",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "endpoint": "038d76092cb41f2b",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3100,
        "wires": [
            [
                "6247b8b97c9c952d",
                "e342a11cd27464b0"
            ],
            [
                "ff0bf3245b5fd70b"
            ]
        ]
    },
    {
        "id": "d298bdbbd07efad1",
        "type": "file in",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3100,
        "wires": [
            [
                "e12971e326df498c"
            ]
        ]
    },
    {
        "id": "6247b8b97c9c952d",
        "type": "debug",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "100 C",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3140,
        "wires": []
    },
    {
        "id": "ff0bf3245b5fd70b",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_102_Profibus\" : false,\n            \"C_105_Initialization\" : false,\n            \"C_105_Part_ready\" : false,\n            \"C_105_Start\" : false,\n            \"C_105_Test\" : false,\n            \"C_105_TestDrill\" : false,\n            \"C_105_Rotation\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3100,
        "wires": [
            [
                "1733ef4f590423b3"
            ]
        ]
    },
    {
        "id": "85646e55efe55d1b",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3100,
        "wires": [
            [
                "d298bdbbd07efad1"
            ]
        ]
    },
    {
        "id": "1733ef4f590423b3",
        "type": "trigger",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3100,
        "wires": [
            [
                "8463cea1da7e6431"
            ]
        ]
    },
    {
        "id": "8463cea1da7e6431",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3100,
        "wires": [
            [
                "85646e55efe55d1b"
            ]
        ]
    },
    {
        "id": "fde7cd2e0c25fc54",
        "type": "comment",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "691139d5c9fc75b7",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "a84dae0c3df0b2e3"
            ]
        ]
    },
    {
        "id": "a84dae0c3df0b2e3",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Processing_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "3c70968d397bc9f1"
            ]
        ]
    },
    {
        "id": "eb7861776f8fddc6",
        "type": "file",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "38be1d336c3d3577",
        "type": "comment",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "3c70968d397bc9f1",
        "type": "OpcUa-Client",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "endpoint": "038d76092cb41f2b",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "813f888aa924c3f6"
            ],
            [
                "6e6f486cafcd8dcf",
                "2afe348352837332"
            ]
        ]
    },
    {
        "id": "813f888aa924c3f6",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "3264c6b087acb2de",
                "d8a28789582f33d9"
            ]
        ]
    },
    {
        "id": "3264c6b087acb2de",
        "type": "file",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "d8a28789582f33d9",
        "type": "debug",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "8036e3cf2956684b",
        "type": "comment",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "86f03102f6a80984",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "85ec4975a7285c5a"
            ]
        ]
    },
    {
        "id": "c39be5728934a22b",
        "type": "OpcUa-Client",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "endpoint": "038d76092cb41f2b",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "7806e1e71f26446f"
            ],
            []
        ]
    },
    {
        "id": "7806e1e71f26446f",
        "type": "debug",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "b02cbd44343fd0d9",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Write_DIst",
        "links": [
            "82cc9341d6ad9891",
            "b23005f76222c20c",
            "811f02d25386779f",
            "33b2c9721d8aea05",
            "99c1c0bb518d0409",
            "1187e6c2cf101a83",
            "ea846b4a02571ec9"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "e4173a1888642799"
            ]
        ]
    },
    {
        "id": "e4173a1888642799",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "7f9345a77c8a646e"
            ]
        ]
    },
    {
        "id": "7f9345a77c8a646e",
        "type": "file in",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "86f03102f6a80984"
            ]
        ]
    },
    {
        "id": "85ec4975a7285c5a",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "c39be5728934a22b"
            ]
        ]
    },
    {
        "id": "d8403ea7668d1b58",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "CSV Link",
        "links": [
            "6e6f486cafcd8dcf"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "5862d46f486faec3"
            ]
        ]
    },
    {
        "id": "5862d46f486faec3",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "ae6ceec40a1045a8"
            ]
        ]
    },
    {
        "id": "ae6ceec40a1045a8",
        "type": "trigger",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "eb7861776f8fddc6"
            ]
        ]
    },
    {
        "id": "6e6f486cafcd8dcf",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "d8403ea7668d1b58",
            "1ce8d9096de19e2b"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "1ce8d9096de19e2b",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "CSV Link",
        "links": [
            "6e6f486cafcd8dcf"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "f49184d519599a6a"
            ]
        ]
    },
    {
        "id": "f49184d519599a6a",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_100_PInit_Pos\" : false,\n    \"O_100_PDrill_Pos\" : false,\n    \"O_100_PTest_Pos\" : false,\n    \"O_100_SDrill_High\" : false,\n    \"O_100_SDrill_Low\" : false,\n    \"O_100_RT_Sensor\" : false,\n    \"O_100_PTest_Ok\" : false,\n    \"O_101_Start\" : false,\n    \"O_101_Stop\" : false,\n    \"O_101_Key_Pos\" : false,\n    \"O_101_Reset\" : false,\n    \"O_101_Panel_I4\" : false,\n    \"O_101_Panel_I5\" : false,\n    \"O_101_Panel_I6\" : false,\n    \"O_101_Panel_I7\" : false,\n    \"I_100_Drill_On\" : false,\n    \"I_100_RT_On\" : false,\n    \"I_100_Drill_Down\" : false,\n    \"I_100_Drill_Up\" : false,\n    \"I_100_Drill_Pin\" : false,\n    \"I_100_Test_Pin\" : false,\n    \"I_101_Led_Start\" : false,\n    \"I_101_Led_Reset\" : false,\n    \"I_101_Led_Extra1\" : false,\n    \"I_101_Led_Extra2\" : false,\n    \"I_101_Panel_O4\" : false,\n    \"I_101_Panel_O5\" : false,\n    \"I_101_Panel_O6\" : false,\n    \"I_101_Panel_O7\" : false,\n    \"F_102_Drill_On\" : false,\n    \"F_102_RT_On\" : false,\n    \"F_102_Drill_Down\" : false,\n    \"F_102_Drill_Up\" : false,\n    \"F_102_Drill_Pin\" : false,\n    \"F_102_Test_Pin\" : false,\n    \"F_103_Led_Start\" : false,\n    \"F_103_Led_Reset\" : false,\n    \"F_103_Led_Extra1\" : false,\n    \"F_103_Led_Extra2\" : false,\n    \"F_103_Panel_O4\" : false,\n    \"F_103_Panel_O5\" : false,\n    \"F_103_Panel_O6\" : false,\n    \"F_103_Panel_O7\" : false,\n    \"C_102_Profibus\" : false,\n    \"C_105_Initialization\" : false,\n    \"C_105_Part_ready\" : false,\n    \"C_105_Start\" : false,\n    \"C_105_Test\" : false,\n    \"C_105_TestDrill\" : false,\n    \"C_105_Rotation\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "99d92a6fb11b2cca"
            ]
        ]
    },
    {
        "id": "99d92a6fb11b2cca",
        "type": "trigger",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "691139d5c9fc75b7"
            ]
        ]
    },
    {
        "id": "5fb7a47714a5734b",
        "type": "debug",
        "z": "ed287fcb96b33d19",
        "g": "0eb428f681f4bf8d",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 100,
        "wires": []
    },
    {
        "id": "1b70f0db27edbee9",
        "type": "OpcUa-Server",
        "z": "ed287fcb96b33d19",
        "g": "0eb428f681f4bf8d",
        "port": "53890",
        "name": "Server : Processing",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Processing/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Processing/",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "5fb7a47714a5734b"
            ]
        ]
    },
    {
        "id": "62f438e09152eef2",
        "type": "ui_switch",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "I_100_Test_Pin",
        "label": "Advances test pin",
        "tooltip": "",
        "group": "d19797a079250fc5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1700,
        "wires": [
            [
                "25551412d77812a0"
            ]
        ]
    },
    {
        "id": "25551412d77812a0",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "item": "I_100_Test_Pin",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Test_Pin",
        "x": 480,
        "y": 1700,
        "wires": [
            [
                "1187e6c2cf101a83"
            ]
        ]
    },
    {
        "id": "c9de6c6ce7f3ab7b",
        "type": "OpcUa-Item",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "item": "F_102_Test_Pin",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Test_Pin",
        "x": 480,
        "y": 2540,
        "wires": [
            [
                "99c1c0bb518d0409"
            ]
        ]
    },
    {
        "id": "d13242b7e922d7bf",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "order": 0,
        "group": "ab7c938b16989ad7",
        "width": 0,
        "height": 0,
        "label": "Advances test pin",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Test_Pin",
        "x": 1060,
        "y": 2540,
        "wires": []
    },
    {
        "id": "4d52446b86991117",
        "type": "ui_led",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "order": 1,
        "group": "977e16b42dd24b9c",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_105_Initialization",
        "x": 1210,
        "y": 3220,
        "wires": []
    },
    {
        "id": "aa79304fec92679d",
        "type": "debug",
        "z": "ed287fcb96b33d19",
        "g": "1c3840a86e7176fb",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 100,
        "wires": []
    },
    {
        "id": "6f2454c33013c85c",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "1c3840a86e7176fb",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "7b28770b68cf1785",
            "18fea23d0411a5ac",
            "adca60d890f21605",
            "aa4cba980e8bce88",
            "c844e497532381b8"
        ],
        "x": 855,
        "y": 60,
        "wires": []
    },
    {
        "id": "3ff1a37b60e26933",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "O_100_PInit_Pos",
        "func": "if (msg.topic === \"O_100_PInit_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_PInit_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 620,
        "wires": [
            [
                "2e5704f6057a354a"
            ]
        ]
    },
    {
        "id": "7b28770b68cf1785",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "S7 PS",
        "links": [
            "6f2454c33013c85c"
        ],
        "x": 55,
        "y": 740,
        "wires": [
            [
                "3ff1a37b60e26933",
                "4d1317c5fd42e92d",
                "3ba10b4090510a5b",
                "16ba4bc544f78746",
                "e8d533c0bbf5c984",
                "68d59d4ecb8acdcf",
                "3533efaca7cf220d"
            ]
        ]
    },
    {
        "id": "e8d533c0bbf5c984",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "O_100_SDrill_Low",
        "func": "if (msg.topic === \"O_100_SDrill_Low\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_SDrill_Low\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 780,
        "wires": [
            [
                "660d297551df252a"
            ]
        ]
    },
    {
        "id": "4d1317c5fd42e92d",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "O_100_PDrill_Pos",
        "func": "if (msg.topic === \"O_100_PDrill_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_PDrill_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 660,
        "wires": [
            [
                "aa6a596e2b82c4e1"
            ]
        ]
    },
    {
        "id": "3ba10b4090510a5b",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "O_100_PTest_Pos",
        "func": "if (msg.topic === \"O_100_PTest_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_PTest_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 700,
        "wires": [
            [
                "5db4bef4f7111dbb"
            ]
        ]
    },
    {
        "id": "16ba4bc544f78746",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "O_100_SDrill_High",
        "func": "if (msg.topic === \"O_100_SDrill_High\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_SDrill_High\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 740,
        "wires": [
            [
                "13c2c526232277de"
            ]
        ]
    },
    {
        "id": "68d59d4ecb8acdcf",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "O_100_RT_Sensor",
        "func": "if (msg.topic === \"O_100_RT_Sensor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_RT_Sensor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 820,
        "wires": [
            [
                "7a06e1dfe29f9a00"
            ]
        ]
    },
    {
        "id": "3533efaca7cf220d",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "O_100_PTest_Ok",
        "func": "if (msg.topic === \"O_100_PTest_Ok\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_PTest_Ok\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 860,
        "wires": [
            [
                "9084d28ecab02f7f"
            ]
        ]
    },
    {
        "id": "c64183b9b1189b08",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "Sub In 100 PS",
        "links": [
            "996d7ef549b25339"
        ],
        "x": 755,
        "y": 740,
        "wires": [
            [
                "ba2383eae25720dd"
            ]
        ]
    },
    {
        "id": "996d7ef549b25339",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "Sub Out 100 PS",
        "mode": "link",
        "links": [
            "c64183b9b1189b08"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "9a8bc37d698cc675",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "O_101_Start",
        "func": "if (msg.topic === \"O_101_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "3558c251c449dc64"
            ]
        ]
    },
    {
        "id": "18fea23d0411a5ac",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "S7 AS",
        "links": [
            "6f2454c33013c85c"
        ],
        "x": 55,
        "y": 1180,
        "wires": [
            [
                "9a8bc37d698cc675",
                "2dbb334e4c6190e3",
                "47f0c1d64b6e45e0",
                "fd39fec66a4010c1",
                "0dfcd8f206b99c0e",
                "dfa5443069cf106d",
                "89069690299d0243",
                "0833c65820e8fd1d"
            ]
        ]
    },
    {
        "id": "0dfcd8f206b99c0e",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "O_101_Panel_I4",
        "func": "if (msg.topic === \"O_101_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1200,
        "wires": [
            [
                "1a9b4c438168afd0"
            ]
        ]
    },
    {
        "id": "2dbb334e4c6190e3",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "O_101_Stop",
        "func": "if (msg.topic === \"O_101_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "b82d37cc0aa9272c"
            ]
        ]
    },
    {
        "id": "47f0c1d64b6e45e0",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "O_101_Key_Pos",
        "func": "if (msg.topic === \"O_101_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1120,
        "wires": [
            [
                "39562f7f4f05dab4"
            ]
        ]
    },
    {
        "id": "fd39fec66a4010c1",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "O_101_Reset",
        "func": "if (msg.topic === \"O_101_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1160,
        "wires": [
            [
                "5c460a9388128f18"
            ]
        ]
    },
    {
        "id": "dfa5443069cf106d",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "O_101_Panel_I5",
        "func": "if (msg.topic === \"O_101_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1240,
        "wires": [
            [
                "d57c2281ea98dbb6"
            ]
        ]
    },
    {
        "id": "89069690299d0243",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "O_101_Panel_I6",
        "func": "if (msg.topic === \"O_101_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1280,
        "wires": [
            [
                "42eb6ebd01d2553d"
            ]
        ]
    },
    {
        "id": "0833c65820e8fd1d",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "O_101_Panel_I7",
        "func": "if (msg.topic === \"O_101_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1320,
        "wires": [
            [
                "ea01bd377e174c8c"
            ]
        ]
    },
    {
        "id": "a3d5451fa1796b50",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "Sub Out 100 AS",
        "mode": "link",
        "links": [
            "68af039378541c72"
        ],
        "x": 1295,
        "y": 960,
        "wires": []
    },
    {
        "id": "68af039378541c72",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "Sub In 100 AS",
        "links": [
            "a3d5451fa1796b50"
        ],
        "x": 755,
        "y": 1180,
        "wires": [
            [
                "4b2f0986591c4580"
            ]
        ]
    },
    {
        "id": "46ee74b06881a1c3",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "Sub Out 100 PA",
        "mode": "link",
        "links": [
            "c03413b3cb315409"
        ],
        "x": 1295,
        "y": 1420,
        "wires": []
    },
    {
        "id": "c03413b3cb315409",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "Sub In 100 PA",
        "links": [
            "46ee74b06881a1c3"
        ],
        "x": 755,
        "y": 1600,
        "wires": [
            [
                "8bdc26972c29bedc"
            ]
        ]
    },
    {
        "id": "61d2cc681b9db02d",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "Sub Out 100 AA",
        "mode": "link",
        "links": [
            "670713dc33591ee5"
        ],
        "x": 1295,
        "y": 1800,
        "wires": []
    },
    {
        "id": "670713dc33591ee5",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "Sub In 100 AA",
        "links": [
            "61d2cc681b9db02d"
        ],
        "x": 755,
        "y": 2020,
        "wires": [
            [
                "f605573b41326c34"
            ]
        ]
    },
    {
        "id": "b7e0dd783c2b7bbc",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "Sub Out 100 PF",
        "mode": "link",
        "links": [
            "49098f74462e68e2"
        ],
        "x": 1295,
        "y": 2260,
        "wires": []
    },
    {
        "id": "49098f74462e68e2",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "Sub In 100 PF",
        "links": [
            "b7e0dd783c2b7bbc"
        ],
        "x": 755,
        "y": 2440,
        "wires": [
            [
                "bff79f75186f6dd7"
            ]
        ]
    },
    {
        "id": "c40f883e3c4f3c15",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "F_102_Drill_On",
        "func": "if (msg.topic === \"F_102_Drill_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Drill_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2340,
        "wires": [
            [
                "8a5f6f10efd4ad7e"
            ]
        ]
    },
    {
        "id": "adca60d890f21605",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "S7 PF",
        "links": [
            "6f2454c33013c85c"
        ],
        "x": 55,
        "y": 2440,
        "wires": [
            [
                "c40f883e3c4f3c15",
                "f0661252320c139e",
                "db39673c8e665d29",
                "9fdeb8425cb3967e",
                "c8c8d2328190fbcd",
                "29a6608c46f46860"
            ]
        ]
    },
    {
        "id": "c8c8d2328190fbcd",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "F_102_Drill_Pin",
        "func": "if (msg.topic === \"F_102_Drill_Pin\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Drill_Pin\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2500,
        "wires": [
            [
                "f0b3476a8e972f8c"
            ]
        ]
    },
    {
        "id": "f0661252320c139e",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "F_102_RT_On",
        "func": "if (msg.topic === \"F_102_RT_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_RT_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2380,
        "wires": [
            [
                "1c9ff0f6ecf67fe8"
            ]
        ]
    },
    {
        "id": "db39673c8e665d29",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "F_102_Drill_Down",
        "func": "if (msg.topic === \"F_102_Drill_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Drill_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2420,
        "wires": [
            [
                "08853025ac9796c8"
            ]
        ]
    },
    {
        "id": "9fdeb8425cb3967e",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "F_102_Drill_Up",
        "func": "if (msg.topic === \"F_102_Drill_Up\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Drill_Up\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2460,
        "wires": [
            [
                "996e2ea18588db17"
            ]
        ]
    },
    {
        "id": "29a6608c46f46860",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "F_102_Test_Pin",
        "func": "if (msg.topic === \"F_102_Test_Pin\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Test_Pin\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2540,
        "wires": [
            [
                "c9de6c6ce7f3ab7b"
            ]
        ]
    },
    {
        "id": "9e618b1a6a4be4fb",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "Sub Out 100 AF",
        "mode": "link",
        "links": [
            "964d5dad204a3595"
        ],
        "x": 1295,
        "y": 2640,
        "wires": []
    },
    {
        "id": "964d5dad204a3595",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "Sub In 100 AF",
        "links": [
            "9e618b1a6a4be4fb"
        ],
        "x": 755,
        "y": 2860,
        "wires": [
            [
                "e3957aa6780d5aad"
            ]
        ]
    },
    {
        "id": "43022f8edf8721ad",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "F_103_Led_Start",
        "func": "if (msg.topic === \"F_103_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2720,
        "wires": [
            [
                "50589ba53397592f"
            ]
        ]
    },
    {
        "id": "aa4cba980e8bce88",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "S7 AF",
        "links": [
            "6f2454c33013c85c"
        ],
        "x": 55,
        "y": 2860,
        "wires": [
            [
                "43022f8edf8721ad",
                "ebddceeffcb0efeb",
                "e1e1029fd62c5008",
                "4946270e5c9bd8c1",
                "8c242590208cdda5",
                "b20ad60a3010b078",
                "9447c69676925f04",
                "45a52a666e43d1a2"
            ]
        ]
    },
    {
        "id": "8c242590208cdda5",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "F_103_Panel_O4",
        "func": "if (msg.topic === \"F_103_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2880,
        "wires": [
            [
                "3570d308b2f3f8f3"
            ]
        ]
    },
    {
        "id": "ebddceeffcb0efeb",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "F_103_Led_Reset",
        "func": "if (msg.topic === \"F_103_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2760,
        "wires": [
            [
                "33ad69bb8378cb12"
            ]
        ]
    },
    {
        "id": "e1e1029fd62c5008",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "F_103_Led_Extra1",
        "func": "if (msg.topic === \"F_103_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2800,
        "wires": [
            [
                "b278b9e11cd448e3"
            ]
        ]
    },
    {
        "id": "4946270e5c9bd8c1",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "F_103_Led_Extra2",
        "func": "if (msg.topic === \"F_103_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2840,
        "wires": [
            [
                "50d0b79140480d33"
            ]
        ]
    },
    {
        "id": "b20ad60a3010b078",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "F_103_Panel_O5",
        "func": "if (msg.topic === \"F_103_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2920,
        "wires": [
            [
                "20866469c094058c"
            ]
        ]
    },
    {
        "id": "9447c69676925f04",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "F_103_Panel_O6",
        "func": "if (msg.topic === \"F_103_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2960,
        "wires": [
            [
                "fab12dcd4ee36abb"
            ]
        ]
    },
    {
        "id": "45a52a666e43d1a2",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "F_103_Panel_O7",
        "func": "if (msg.topic === \"F_103_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3000,
        "wires": [
            [
                "64f6dcb2f57ad037"
            ]
        ]
    },
    {
        "id": "e342a11cd27464b0",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "Sub Out 100 C",
        "mode": "link",
        "links": [
            "4d4672b70e1156a2"
        ],
        "x": 1295,
        "y": 3100,
        "wires": []
    },
    {
        "id": "4d4672b70e1156a2",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "Sub In 100 C",
        "links": [
            "e342a11cd27464b0"
        ],
        "x": 915,
        "y": 3300,
        "wires": [
            [
                "70b03ce4a67e0980"
            ]
        ]
    },
    {
        "id": "c844e497532381b8",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "S7 C",
        "links": [
            "6f2454c33013c85c"
        ],
        "x": 55,
        "y": 3220,
        "wires": [
            [
                "5ca7e512a07858c2",
                "ebf39acf64dc6c0b",
                "9bf99e3621e3685a"
            ]
        ]
    },
    {
        "id": "9bf99e3621e3685a",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "C_105_Part_ready",
        "func": "if (msg.topic === \"C_105_Part_ready\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_Part_ready\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3260,
        "wires": [
            [
                "9f4a3e51723214a3"
            ]
        ]
    },
    {
        "id": "5ca7e512a07858c2",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "C_102_Profibus",
        "func": "if (msg.topic === \"C_102_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_102_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3180,
        "wires": [
            [
                "9a427b76feaaa98d"
            ]
        ]
    },
    {
        "id": "ebf39acf64dc6c0b",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "C_105_Initialization",
        "func": "if (msg.topic === \"C_105_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3220,
        "wires": [
            [
                "6cd342428267a0bd"
            ]
        ]
    },
    {
        "id": "567062141a4359e0",
        "type": "mqtt in",
        "z": "ed287fcb96b33d19",
        "g": "1c3840a86e7176fb",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b7ac41c0bcdf40b1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 530,
        "y": 60,
        "wires": [
            [
                "ddb668be1416d235"
            ]
        ]
    },
    {
        "id": "ddb668be1416d235",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "1c3840a86e7176fb",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 60,
        "wires": [
            [
                "6f2454c33013c85c",
                "aa79304fec92679d"
            ]
        ]
    },
    {
        "id": "2afe348352837332",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "9dda4d8be89fb10a"
            ]
        ]
    },
    {
        "id": "9dda4d8be89fb10a",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "1397f3c281b5fa0d",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "7039262cea172545",
            "62f6fd580dd926bd",
            "9490188fde149b71",
            "9f66859f53b3a712",
            "87a75205776bab30",
            "46446512a675dbfd",
            "eff05bf2a4440172"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "7039262cea172545",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "fc81fcc14c459ae1",
        "name": "Read PS",
        "links": [
            "9dda4d8be89fb10a"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "1912fc338fa17051"
            ]
        ]
    },
    {
        "id": "62f6fd580dd926bd",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "15d256550a53d568",
        "name": "Read AS",
        "links": [
            "9dda4d8be89fb10a"
        ],
        "x": 55,
        "y": 960,
        "wires": [
            [
                "3bb918ba5bf3c227"
            ]
        ]
    },
    {
        "id": "9490188fde149b71",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "Read S",
        "links": [
            "9dda4d8be89fb10a"
        ],
        "x": 55,
        "y": 1420,
        "wires": [
            [
                "450a631df5507e1e"
            ]
        ]
    },
    {
        "id": "9f66859f53b3a712",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "Read AA",
        "links": [
            "9dda4d8be89fb10a"
        ],
        "x": 55,
        "y": 1800,
        "wires": [
            [
                "32907853f4a645bd"
            ]
        ]
    },
    {
        "id": "87a75205776bab30",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "b0016ee5fad80c4b",
        "name": "Read PF",
        "links": [
            "9dda4d8be89fb10a"
        ],
        "x": 55,
        "y": 2260,
        "wires": [
            [
                "7751198636bbf351"
            ]
        ]
    },
    {
        "id": "46446512a675dbfd",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "2b71d72e8437f3fb",
        "name": "Read AF",
        "links": [
            "9dda4d8be89fb10a"
        ],
        "x": 55,
        "y": 2640,
        "wires": [
            [
                "be0d65dba4eb341c"
            ]
        ]
    },
    {
        "id": "eff05bf2a4440172",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "Read C",
        "links": [
            "9dda4d8be89fb10a"
        ],
        "x": 55,
        "y": 3100,
        "wires": [
            [
                "ff0bf3245b5fd70b"
            ]
        ]
    },
    {
        "id": "a5991bddcaaeb845",
        "type": "mqtt out",
        "z": "ed287fcb96b33d19",
        "g": "1c3840a86e7176fb",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b7ac41c0bcdf40b1",
        "x": 690,
        "y": 100,
        "wires": []
    },
    {
        "id": "40727d1201873610",
        "type": "link in",
        "z": "ed287fcb96b33d19",
        "g": "1c3840a86e7176fb",
        "name": "S7 Actuators",
        "links": [
            "046a13b4ea8baa01",
            "8c85bef70b993ca5"
        ],
        "x": 585,
        "y": 100,
        "wires": [
            [
                "a5991bddcaaeb845"
            ]
        ]
    },
    {
        "id": "517706f5eb1ed808",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "I_100_Drill_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1500,
        "wires": [
            [
                "046a13b4ea8baa01"
            ]
        ]
    },
    {
        "id": "bf097fec23c37a99",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "I_100_RT_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1540,
        "wires": [
            [
                "046a13b4ea8baa01"
            ]
        ]
    },
    {
        "id": "3a14bec9d1dd52af",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "I_100_Drill_Down",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1580,
        "wires": [
            [
                "046a13b4ea8baa01"
            ]
        ]
    },
    {
        "id": "9d73df34c99dcec7",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "I_100_Drill_Up",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1620,
        "wires": [
            [
                "046a13b4ea8baa01"
            ]
        ]
    },
    {
        "id": "1fa39724162c0dd3",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "I_100_Drill_Pin",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1660,
        "wires": [
            [
                "046a13b4ea8baa01"
            ]
        ]
    },
    {
        "id": "1836499616556488",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "I_100_Test_Pin",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1700,
        "wires": [
            [
                "046a13b4ea8baa01"
            ]
        ]
    },
    {
        "id": "046a13b4ea8baa01",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "5bcd107a401bf7ba",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "40727d1201873610"
        ],
        "x": 1235,
        "y": 1600,
        "wires": []
    },
    {
        "id": "01f61173d3baf90c",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1880,
        "wires": [
            [
                "911f51b916ab963f"
            ]
        ]
    },
    {
        "id": "99ca0d8745073171",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1920,
        "wires": [
            [
                "911f51b916ab963f"
            ]
        ]
    },
    {
        "id": "7fc89a8ef451c224",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1960,
        "wires": [
            [
                "911f51b916ab963f"
            ]
        ]
    },
    {
        "id": "c7ab32d860ecee41",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 2000,
        "wires": [
            [
                "911f51b916ab963f"
            ]
        ]
    },
    {
        "id": "ad162ee6d3bd3fdc",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 2040,
        "wires": [
            [
                "911f51b916ab963f"
            ]
        ]
    },
    {
        "id": "0e4e91cca077fd79",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 2080,
        "wires": [
            [
                "911f51b916ab963f"
            ]
        ]
    },
    {
        "id": "8f7e0261a4d30ba3",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 2120,
        "wires": [
            [
                "911f51b916ab963f"
            ]
        ]
    },
    {
        "id": "e64b86391a81181a",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "I_101_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 2160,
        "wires": [
            [
                "911f51b916ab963f"
            ]
        ]
    },
    {
        "id": "911f51b916ab963f",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "480779416c5eea22",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "12e657c5b482ee3e"
        ],
        "x": 1225,
        "y": 2020,
        "wires": []
    },
    {
        "id": "34f68f712dc03b22",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "C_105_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3300,
        "wires": [
            [
                "8c85bef70b993ca5"
            ]
        ]
    },
    {
        "id": "0f6139e5d7ec62e6",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "C_105_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3340,
        "wires": [
            [
                "8c85bef70b993ca5"
            ]
        ]
    },
    {
        "id": "95a296d07d0dbb92",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "C_105_TestDrill",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3380,
        "wires": [
            [
                "8c85bef70b993ca5"
            ]
        ]
    },
    {
        "id": "5db270a945807641",
        "type": "function",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "C_105_Rotation",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3420,
        "wires": [
            [
                "8c85bef70b993ca5"
            ]
        ]
    },
    {
        "id": "8c85bef70b993ca5",
        "type": "link out",
        "z": "ed287fcb96b33d19",
        "g": "423dc7f0127c0808",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "40727d1201873610"
        ],
        "x": 1365,
        "y": 3300,
        "wires": []
    }
]