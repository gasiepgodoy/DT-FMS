[
    {
        "id": "6c5b5d9028215c6d",
        "type": "tab",
        "label": "Version Info",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9ab3d53948c971b4",
        "type": "tab",
        "label": "Master [20]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "1411e27f85838ba0",
        "type": "tab",
        "label": "Robot [30]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "d95179f3ea7c7997",
        "type": "tab",
        "label": "Storage [40]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "5c544ea956e8c666",
        "type": "tab",
        "label": "Handling 1 [50]",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e5f6790dee67bd7b",
        "type": "tab",
        "label": "Sorting [60]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "d736c5b40e5a53e8",
        "type": "tab",
        "label": "Testing [70]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "2a1ebdbf557110a0",
        "type": "tab",
        "label": "Distribution [80]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "59c61210c102e4a0",
        "type": "tab",
        "label": "Handling 2 [90]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "77b7c78952a73362",
        "type": "tab",
        "label": "Processing [100]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "c1be0aad196f1bb1",
        "type": "group",
        "z": "2a1ebdbf557110a0",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "654915f5261f16d1",
            "2c57310f17d38cf0",
            "e98e797f346c3cf3",
            "11e34ab919958cdb",
            "3f0398b2aa597698",
            "00f6bead6d6c8be7",
            "3a4775e05ecdf3a7",
            "65ea9947719865a2",
            "4cfecc15d21fbcb5",
            "14f17619dd2e5c2a",
            "46c1f0bd0c786934",
            "0c35799fd3b6f1c9",
            "782c7574d3b8ba19",
            "62223e9339a1fecf",
            "64b9ae8126451c40",
            "5d206e47c2b9a1fe",
            "79949057253d1d4a",
            "ca23a677c3489dda",
            "b10bfe3c8a90c972",
            "9bfeb211b02ffac2",
            "c50b7f9e9ec565d3",
            "6f8ce2f79c86961c",
            "77ba7f07ff435cda",
            "ddb8843615cb0de9",
            "ca741e95abe61f8d",
            "758a6d74bb3eadfb",
            "9148c991678949ee",
            "bb7ceac93f46da4a",
            "d77bbb877abbb277",
            "99a1c1015e092d5d",
            "a2a0aaef7f343a52",
            "0ac028ae5a30e1e9",
            "56da14ebd1f1bf1e",
            "2b5163c70cf96682",
            "1efdc88d69953f11",
            "602f131bc656a156"
        ],
        "x": 14,
        "y": 499,
        "w": 1412,
        "h": 402
    },
    {
        "id": "e30da53675cfa805",
        "type": "group",
        "z": "2a1ebdbf557110a0",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "0964351b143a8fd2",
            "75a987a12f0f489e",
            "f1d5141bb4356537",
            "012f6173d53ec15d",
            "93de3edebef4473e",
            "566a7687c9c0ed01",
            "55d06fd63486816b",
            "28cbac54f03f10ab",
            "b9e93f7868ef6637",
            "6d350646e43c21be",
            "6f7f647b87141e5f",
            "10e85009e66ce7cc",
            "0f6b9cae0ec60e1e",
            "d1be9d0726c84e73",
            "8ff699ef47b8b7c7",
            "9d030583d5a94a71",
            "00446b64a4bc5a77",
            "e71bbc31008a539b",
            "8553e671312a4286",
            "e1f55bac734582bf",
            "4d43d46a326a3edd",
            "81c45235b05ecbfd",
            "532c65a3b284c61d",
            "4597257a0c6d976b",
            "8d094019e92e1e80",
            "ad55a54163757003",
            "727ced2e7df798ee",
            "9012599eb5a37695",
            "8234d64c3e396a96",
            "c1db98cfc0a10590",
            "ec75639a7b6ea040",
            "d28b0cc222bbebdf",
            "732a6dddfa817ce8",
            "f82fd2e7ddc2b1ce",
            "1b4b10e3b16fa2f7",
            "9a2ff2120f1f944f",
            "a35688ce7e8984a5",
            "5cead77e3a2820b9",
            "caa620661c647b6f"
        ],
        "x": 14,
        "y": 919,
        "w": 1412,
        "h": 442
    },
    {
        "id": "1804bff54b332d68",
        "type": "group",
        "z": "2a1ebdbf557110a0",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "4a5eaf0d92df3638",
            "1bc64aeba16d8ea4",
            "83f8a7e5b5602ae9",
            "55829d2e8012b059",
            "6a08fb03bbacc1f4",
            "769d1ff2538b1339",
            "8d0ee572b1cfe17d",
            "a1af19bba66c756a",
            "45b6383cbc4e7cd8",
            "991ca245fafd859a",
            "cb2cf63797315d13",
            "7357f11a32a99c46",
            "0d74d24ffdc80ebc",
            "b898856387a1fef6",
            "07e2e586c2cae930",
            "acc39db77ef7ed93",
            "57d747b196654a04",
            "506e5ea8186275bc",
            "8641e69020b768a3",
            "b1306f68edc7e342",
            "b626744c702d53e2",
            "f3e1aa6832a04acd",
            "909550d273956e4e",
            "550cdfe761a37e77",
            "942d2fb87a27e51c",
            "c139df01be38efac",
            "e85ff4e06dfc7be2",
            "2430892405142d02",
            "5c5c45ac8082f33d",
            "eba4bfad34c35cdc"
        ],
        "x": 14,
        "y": 1379,
        "w": 1412,
        "h": 322
    },
    {
        "id": "094ae1941e421b23",
        "type": "group",
        "z": "2a1ebdbf557110a0",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "4f9760520e01a312",
            "85d52303dea965d1",
            "86bad52243504f2a",
            "67bef6b7641324d6",
            "f804a3691a28695e",
            "44546ec1879cc10d",
            "7db0828f093e4d8f",
            "26624d4be641128f",
            "9c7a5e9f53552960",
            "2ab52419c3aa0c29",
            "05987cdf857fd9fd",
            "84a8f68155b7d372",
            "cc8b5dad2c253504",
            "c801ef42e57a7f9f",
            "2c0d2fedf454c18f",
            "86a9971c5508fd05",
            "afc9d8b3d4569909",
            "7b046ee230ea2154",
            "1052b7610516c6bb",
            "61d75e21ce5ed07f",
            "abe41e68d7de22f6",
            "a3691b3aaa018229",
            "6abc37c0f9c3c460",
            "fde25dcba24b234d",
            "71baf45914cd7a88",
            "967172298c5cfc36",
            "089b7e28c66a4887",
            "f011765459831d5c",
            "5bb5d2019e12d375",
            "1c357d8f7f8e2e6f",
            "3c099e41e1a9da49",
            "b373406dcecbb09e",
            "bd9633e4579fc0f8",
            "e827faf2b4940a89",
            "28ec8683938d4870",
            "f56c4a298e3ee867",
            "02cbc0260c9166b2",
            "e36fc45c06a751c8",
            "240a5f1ca1dde1dd"
        ],
        "x": 14,
        "y": 1719,
        "w": 1412,
        "h": 442
    },
    {
        "id": "1b879684f8bd0c3d",
        "type": "group",
        "z": "2a1ebdbf557110a0",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "775830629c0b7ccd",
            "feacea305e1b2b9f",
            "48da81c924dc5342",
            "1db3f67af7cc12ed",
            "2b2fd71c78ca704f",
            "928e2bde42afd8fa",
            "7fa689fee53d0747",
            "cd0da55dcd949f15",
            "244964249dd4137a",
            "c4d7bd0803d27f1b",
            "6db31a2e92b4cab9",
            "93663c9c3a85d4b9",
            "77562ab9f0430023",
            "abf619971b7709f9",
            "6e6fdff3de6aa1b8",
            "770d10919d174cb3",
            "0177d2d99374b807",
            "97bcd5e21f4f3d5a",
            "1d834ab8bdba8d02",
            "98e7430402d6899b",
            "1430d1d4194becfb",
            "b9f7edd7737e87b8",
            "49e3fd4a1d9571fd",
            "0ad8f273a79d60b2",
            "438516793ba77437",
            "7deca0466d9b1bf0",
            "6a7a4883bb7d9868",
            "96d7a12fd30b1713",
            "ec6102f9c0168c84",
            "1587b7f24980a36a"
        ],
        "x": 14,
        "y": 2179,
        "w": 1412,
        "h": 322
    },
    {
        "id": "cb08f154ec3af5ed",
        "type": "group",
        "z": "2a1ebdbf557110a0",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "d3ca328910160662",
            "42293e5af782d2a5",
            "a220931570d15c88",
            "712354e41379f588",
            "3856dfb660d55f5d",
            "d171d9439556eaa8",
            "b3b7fa8e685cdbf8",
            "6ffe6c22adf80a5f",
            "69d358635f9f3a41",
            "ba881b7b6e141dbe",
            "0c360bd311b5e663",
            "74a535c9bb3c418f",
            "5e035eeb33449c4b",
            "93bd8af097914bf2",
            "353b34d9165edcca",
            "3a44ea3dfe4c8161",
            "b91b4cb3af15dc14",
            "e6c3de109c978571",
            "6319a9f9baa94018",
            "3175ad86251116de",
            "17b8e3b5c478d234",
            "cfce01c5303003d9",
            "5bf79b35e883d178",
            "e2fb2fa4ac890184",
            "73619211551659f9",
            "c36e528d18ba911b",
            "d0829dc36ca20884",
            "3203a3d404731a4c",
            "021a082934ae2ed3",
            "e150e865a873878e",
            "7a580a57601ba3f1",
            "4346553443453f5b",
            "592b795bc7fe09a7",
            "e144164b4c783bf7",
            "ef387cb10f34f823",
            "8adb7b0a26753547",
            "c7021f5ceae5f112",
            "49babdf1133a91f3",
            "2f92245be18e3f2e"
        ],
        "x": 14,
        "y": 2519,
        "w": 1412,
        "h": 442
    },
    {
        "id": "51751b99dd90a9a6",
        "type": "group",
        "z": "2a1ebdbf557110a0",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "115c668879175a2a",
            "1e7aa4aecab883e2",
            "5874ca5b459206b8",
            "7463652db9b035d6",
            "f136050ba5ee87ee",
            "68c89dc9688fb264",
            "207a5a1a56002752",
            "669f81ec99a994d9",
            "254cc3599f9daebc",
            "62c2748fba188c99",
            "d55dff261846decd",
            "fe5d9a8fa9d4a813",
            "d60901029a60876d",
            "46fe66e096f005c4",
            "6eae74f2dedb55cf",
            "8e976f4a76b00b59",
            "e9a3543508c038a2",
            "75df7097d1b408c7",
            "aed1f8af576c3963",
            "e336c608d7975656",
            "b98374d25f40b14d",
            "e4002b2ed1781ecc",
            "d247259443b48f66",
            "9b72694b25fa0afc",
            "5d54bc8011bda93d",
            "b2bb3b10d3b9626a",
            "5c742084686470a5",
            "853656f90ec0d3cd",
            "48cd05fe5ddcc875",
            "35b6119467fad9c2",
            "8865d5aa9e9780fd",
            "1ecd6d013001f0f1",
            "52a643cb6c310407",
            "a14b22cbef7d3292",
            "9616fe42a4605e4d",
            "cd47ca5f41533904",
            "8c0ce9ba9ab1dd86",
            "22b9fd1e39ae283d",
            "30dd8690d4953698"
        ],
        "x": 14,
        "y": 2979,
        "w": 1412,
        "h": 402
    },
    {
        "id": "004cb05ba7884471",
        "type": "group",
        "z": "2a1ebdbf557110a0",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b67977ad347f13a5",
            "1929da8b284e3acd",
            "ebc07bf99bd9bf25",
            "c1f51fd2110c74cd",
            "8310f9095b63dfe5",
            "9629c4fe43e98c81",
            "6218bf7405367008",
            "b8ebc079e3e78fca",
            "3409eb76bce6cf57",
            "b40babb7c3da19ce",
            "70650a8f8deef7c3",
            "6d84ad72d296ae87",
            "198ab475eb6d3a92",
            "c5520d31cee473ba",
            "632640e45b2b3941",
            "06189ac6c110c131",
            "f92b2f9e33399eb6",
            "dc0ff94d89ca6b15",
            "51cd16177b2ff2f7",
            "d9a0558b213a0117",
            "dbbed499b7503d0e",
            "14340a58ee4346fd",
            "8c655d6deaab84bf",
            "dc49b80048feedd0",
            "501222a0d3af1a1a",
            "09c26bef50b2b27e"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "1f7604e1c2d09465",
        "type": "group",
        "z": "d736c5b40e5a53e8",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "1a934c357c47c592",
            "134cc8956fd24315",
            "682f2e6f12dfca94",
            "63d13efc56c68903",
            "02c0c82e58905e45",
            "1a9da7542aa4e404",
            "9ae278fe0606c31f",
            "80aba334a21c474b",
            "82b924d9dbf47c78",
            "96cc7e1c9e03596a",
            "639a5bd0de7b6ee9",
            "572ae3fd733a9efa",
            "f9e40cbc2b8a978b",
            "7b6ef021522b4120",
            "0467eebee1d78fe9",
            "33d11a4b48b38991",
            "bc07c62246662b97",
            "9815bb08deb20f56",
            "2dd9b32772ddcfad",
            "0c685c357a656993",
            "46a210380da420d4",
            "9ec2df2991d94ea2",
            "f8f6193cc3e2633f",
            "4551d252ff5e450e",
            "eb93ada902648a72",
            "07f81fb6902d44fb",
            "ba72c16b24ead3f4",
            "102976ef76872d8a",
            "ced6d83f0308e3d6",
            "325381b53a8a05c0",
            "2ec6cae65b702213",
            "f36c2c1d369f8f20",
            "8b11b730917f0445",
            "47781e06a8adf13c",
            "b0e2091161213a26",
            "30be98f6ee25a9b3"
        ],
        "x": 14,
        "y": 499,
        "w": 1412,
        "h": 402
    },
    {
        "id": "daad07678c13c9b2",
        "type": "group",
        "z": "d736c5b40e5a53e8",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "f48283f93e83ba1e",
            "9129327b309f8471",
            "16886e335e769327",
            "db6f7f2ebe51462c",
            "944dda2fe3e63801",
            "ffa1e32c0977a4ec",
            "d183585ee8191e5d",
            "eb10f1ab7fffd177",
            "e183aa2648f0fa96",
            "89276e93d2dd2b9e",
            "5d65e98032f88a67",
            "c45ad6ad708ba8e4",
            "5f36f15544cfc5b5",
            "e663337ee468e9a3",
            "3b251a38c024aca4",
            "c5528fdbab62a484",
            "320b9ef89bb550c6",
            "fde1e14b80faf7ca",
            "6e9c9455efff89e6",
            "558bbc4951ddfa8f",
            "0df7616f5f03f671",
            "31b5bbc2dc22e06b",
            "b77dfd68cf750ad2",
            "9f5e4d01d9130be7",
            "35d898e03e280248",
            "68158e74b8cd8ee0",
            "d38576d116fc661e",
            "a6c62b2668ceaf6e",
            "2ccdf06143f3ebc4",
            "cf940e0e1a7fd037",
            "90f435d37ac6eea5",
            "3a0de745ed11fca1",
            "1aae62f3da3c1975",
            "7f2977c3b354a831",
            "72f48713bc40d838",
            "31c9dfe8e0d91523",
            "2b6cba7d785c306e",
            "ddc735e4e81c7b15",
            "510784691a13bbee"
        ],
        "x": 14,
        "y": 919,
        "w": 1412,
        "h": 442
    },
    {
        "id": "751c14d094020eb3",
        "type": "group",
        "z": "d736c5b40e5a53e8",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "65ef2cc5ef58973b",
            "8442f3f790d26692",
            "0ce12c24c5438b2c",
            "3ca299b4c4c09f69",
            "93b9d2df8f07d360",
            "311c9ba58948ab01",
            "5472586ed8c0ee31",
            "296cfd6bd0572374",
            "2d45dcd63490c9d9",
            "cc85148af576389c",
            "0218bc6e2e1307bc",
            "8bf753561d860210",
            "de5c028e18ba114d",
            "fd6437b0651baba9",
            "4d7c04f312c1fe9a",
            "9e671babf83a3e4a",
            "71f9304fe8730567",
            "9e6594c9976bd6d9",
            "4115f2070706fb0d",
            "de03200721032c2d",
            "a4950af8253d37c7",
            "6445a723757ba9f6",
            "fc36cd05a735e69f",
            "ca93cf3933a92a47",
            "fcb716072ba50528",
            "a51382bd19569034",
            "47b8f7ab4c200f47"
        ],
        "x": 14,
        "y": 1379,
        "w": 1412,
        "h": 282
    },
    {
        "id": "3ec42e8b89cc090a",
        "type": "group",
        "z": "d736c5b40e5a53e8",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "ea9206096257360f",
            "434decbe141c4307",
            "894fe17694fd10e4",
            "7d6c3e38b991dc2f",
            "c68534b5501ca814",
            "dbfc603c5ecf3c70",
            "08a9539e19e32a5a",
            "37788a13669d3d0f",
            "7f8211e75c7941f3",
            "98099749cb6102d2",
            "57dd839d030b4611",
            "d6b2441daf18175e",
            "b4f27a7452467149",
            "1465464e3ee2c8d2",
            "11f1993bdf0f82b8",
            "83238a936414232b",
            "1633a713e7720f1d",
            "567dc3dc9c3b2efb",
            "e45ff8c98be3deb8",
            "24e47dbb8f36f086",
            "72c324763c0da3e7",
            "749d723e1c6c1d17",
            "6493348c6e482485",
            "5c9f4d500e713c5c",
            "d5cc70a39a5cd978",
            "1e3adbbc3d8ed089",
            "e1741920a2179a9e",
            "08508f792cd589b6",
            "af0938b40a7a3892",
            "ec436045c0aab340",
            "c8602c8f47be0c9b",
            "85b6133a70c87e7c",
            "b7969ee6c541b320",
            "e89c5299e6e7c799",
            "006a6429d49a6023",
            "275175d61beecdcb",
            "b80ffd10e681f954",
            "e116dd647b5298f5",
            "4b2405a2a4c273c4"
        ],
        "x": 14,
        "y": 1679,
        "w": 1412,
        "h": 442
    },
    {
        "id": "7f7f1711f04c5640",
        "type": "group",
        "z": "d736c5b40e5a53e8",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "e58841e0a19df282",
            "52d68857438e5489",
            "473b4009f45fddb0",
            "294dfbaa4feec667",
            "3c25c7554111a6a6",
            "23469d566400480d",
            "c53fc1692900a138",
            "d908bffc4e60954e",
            "912c214b4142a030",
            "8cc2c66ec3018035",
            "ea393e315e64a82b",
            "955dafaad7f0cda8",
            "33cfabaea557ea45",
            "c7ad19f80978b27a",
            "c00c68ae6327dd35",
            "83c0b4a0902d857b",
            "aa5a07811ac9d11f",
            "69e502d17dce8315",
            "9bf7cf1f8e4a3bb2",
            "33569a7216914e6f",
            "92e927e36172476b",
            "3a2de58d26ca1618",
            "02acdea0cfa2d0ab",
            "e96b6f1e8c30e493",
            "5e2ca06781c54fa7",
            "dc8d7277b0a6badf",
            "9e931db331cfe5e8"
        ],
        "x": 14,
        "y": 2139,
        "w": 1412,
        "h": 282
    },
    {
        "id": "183a3f3aa4586ad6",
        "type": "group",
        "z": "d736c5b40e5a53e8",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "573b68d52f8f124e",
            "81167585f04b9d15",
            "c53cf67e021e4e7a",
            "28a3d879ea3f50a4",
            "21de10db7fb13f67",
            "0533e084719ead6a",
            "31dd1bd926e2298b",
            "fde1ba9bdb997cc3",
            "aca0083b4458e562",
            "154e3b2d7723f243",
            "0fc94a31dce02620",
            "6d3a49f47e179fde",
            "6002d7e1d62e4c45",
            "dd2bbc2342858942",
            "2b75e0852c81d54c",
            "b6610579021a7269",
            "d472281b68bfd84f",
            "a0e66eecb54e4fe6",
            "eee8e224624d0dba",
            "0f58db633efd825f",
            "9c6cf16af0184ff4",
            "93fca9dcae3e58e1",
            "7d7ade743b90f599",
            "571b2df2708a25fd",
            "2627cb3b08e2a54f",
            "f90a05c1c52b1555",
            "edddcb54cd3ebfb5",
            "39739032c66a82a2",
            "7b5709f257e1daa1",
            "3c195eb784a81ff0",
            "fc14d2529698dd21",
            "88297d0a09109481",
            "135d5ca5a025d98e",
            "29234ee7363455f7",
            "36a7080411c1bdc8",
            "86db26fa7b6e245c",
            "55be937779e0b7d3",
            "121c164cdad94ffa",
            "462fbbb627bd3dcd"
        ],
        "x": 14,
        "y": 2439,
        "w": 1412,
        "h": 442
    },
    {
        "id": "b52de45c7c76cf48",
        "type": "group",
        "z": "d736c5b40e5a53e8",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "4c9a81e29581359b",
            "48bcf271f699c115",
            "72e6b41b599fd02a",
            "e8d9fa11f9444173",
            "86a19ff5ce5d099a",
            "98c0897147dd21c3",
            "dbaddb2323f3ef06",
            "cad21a3b174e5836",
            "8f2e2cfedcd9800f",
            "3958577d730c432c",
            "62401ece6113b276",
            "3f6ff214993924d4",
            "672ba5dfa0d71bea",
            "2433bcdc1496026b",
            "0ccae1d5f915f73f",
            "a7e9141f0869d205",
            "9345e3e54b928c89",
            "51530931d55aa52e",
            "464c7687a75422b1",
            "b503c2222ce7b832",
            "5a429d22126661d7",
            "c0c74768fdd9121c",
            "b28471862ec00bd9",
            "13faf02218d68e8f",
            "07513f6d196f0bcb",
            "f3547b1d1d88b742",
            "b05a556efde449c8",
            "974d20b50bf5c62f",
            "4a1c995af10377d7",
            "945214d983d415cb",
            "ddc77df6659206ab",
            "b05bbbe6bdba5a84",
            "54e0763699dab2fe",
            "a5f4b0fa546cebea",
            "525d72b99f44227e",
            "d1a4fa51d8b31fc3",
            "cb1c694616c3f15a",
            "e0eb7ba48b562baf",
            "842e501754f5ed7a",
            "153c47fc01272550",
            "14feb5c4e0d792e9",
            "ed87a21cb44f4764",
            "60dd98516b2f92b2",
            "e91f2d808e45a654",
            "cbacf96885ab031a",
            "4afeb9e7ab17fe6f",
            "9a83dcda09285bf6",
            "cfda2d14899f1de8",
            "db043814c8a61165",
            "c449de966ca2875e",
            "a40ed82853ae12c3",
            "7333d3f7bfda613f",
            "035d536689538fc9",
            "698224aa46da1cae",
            "6a70880d702aa9cf",
            "b36fb1c4a62b447d",
            "e499e56b3df61fab",
            "c97b40b8888cf499",
            "78bb567ce5bdc4ac",
            "cd620bdf698f6f3c",
            "df10742c5c181a75",
            "731674ed29fb55ed",
            "28dc5aba67ccd5a2",
            "ca6275869f28fbb5",
            "a6f8de551f7abfe8"
        ],
        "x": 14,
        "y": 2899,
        "w": 1412,
        "h": 682
    },
    {
        "id": "ef7f048981fa37e2",
        "type": "group",
        "z": "d736c5b40e5a53e8",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "89aa9dc85bb169e2",
            "a4da03c9a41a8c2f",
            "2e1d557ba97e1182",
            "f7656cc54541b65e",
            "9e3cf119133f218e",
            "dd8b225641e85d99",
            "a54cf73b300d88f6",
            "a0270e912df28b09",
            "0e214e306b67d461",
            "6f2785753aed4896",
            "4d0af0b5765b3f16",
            "cf40d9f0b8a02ed9",
            "8545cdf631f5e34b",
            "8ea6a4f04a236ba0",
            "66fff952aa0d8bb5",
            "3f5721ac5ec1c637",
            "794597c114fe7a13",
            "abcb408ddfe6df92",
            "22aed47214fe5351",
            "c57cc4bf5e103c22",
            "60d965f6b6e06d24",
            "1b8529e9114e7ef1",
            "bb8cf266fe7a92fd",
            "1809231eb22c4475",
            "c84aed3bd74c6cd6",
            "a58be6006de92bd3"
        ],
        "x": 14,
        "y": 159,
        "w": 1352,
        "h": 322
    },
    {
        "id": "20b5784759191df3",
        "type": "group",
        "z": "d736c5b40e5a53e8",
        "name": "AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "0a2423b36dbc0c18",
            "10b624f196323b48",
            "c7472c652e80958b",
            "83c6d6154c1bcb03",
            "282d0f156b3399fc",
            "0eea0bf978b7f70a",
            "bb8a13ca06fbf9bb",
            "b10fbab67411585e",
            "8d62576e0103392c",
            "962ebc8d446ff69c",
            "f89d954fd04b2095",
            "1ea96faec10a4dbb",
            "08501fca62c52f18",
            "fb98fcae1d82fc3f",
            "2df02b9ece67fb4a",
            "6843905984a1053a",
            "c31c0983a6ab54b3",
            "5379a871e7e413b9",
            "eaf1a247e696cb0f",
            "1a55c156f70a36b5",
            "70f111052985a9b8",
            "02192ff4b01f81c4",
            "c22e9231ad4d10ed",
            "edb6e09ac889e87f",
            "954d1921433b78f2",
            "861fca710e8d5ea6",
            "3146f2e9c1a4f2c3",
            "98a876d20a1ffd6a",
            "e647bac3c1c84d8f",
            "035a9b2399adc5ad",
            "aed4077cd6befa5b",
            "e85e27681f96132e",
            "62995b38997ba973",
            "6d90e078f6734926",
            "e96246275ffafd2b",
            "4e157ab0bf3592d4",
            "c67942432868beaa",
            "7197cac2714387c6",
            "f6e90cd349659ac5",
            "ac5b7cb170f19d28",
            "d6a9642c81222ac6",
            "d8973a318cadfdbb"
        ],
        "x": 14,
        "y": 3599,
        "w": 1432,
        "h": 482
    },
    {
        "id": "a0169409f4bfd0f5",
        "type": "group",
        "z": "d736c5b40e5a53e8",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e93011a9edefdcc2",
            "0aa25b08fe9a25cf"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "c15de090718d98c1",
        "type": "group",
        "z": "2a1ebdbf557110a0",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4a779aab8b3fde88",
            "9f3875db12c5b203"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "7e9c2623c41daf19",
        "type": "group",
        "z": "59c61210c102e4a0",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "08a28d34c76a49c1",
            "76e5ab889da0c2a9",
            "13139c34a07b7abd",
            "b1dfa01461175ee6",
            "ac0ad9fbd201ba36",
            "82d9bc75f576fd8e",
            "2ca26c250c6deb68",
            "06faa55bb8738828",
            "0ac8277c86d616a4",
            "ea3f86d7ef2ae0b2",
            "ca8e813dee59d3e5",
            "2722a9e0a9e16b2e",
            "b95247c0fe214d7b",
            "956a8b6963038be8",
            "76aaa4adb1dbed29",
            "3fb1d59e69cc07a7",
            "be4f1f0c254f4506",
            "8bd18eb7c75252f6",
            "4cde2f21af84965d",
            "93b9824950cf249f",
            "794b5b61671857a5",
            "301958e643244736",
            "db33c0bb821b31ef",
            "122c2c6a562d4569",
            "9bece38cb2fd22d8",
            "74dda970c5a9a4b2",
            "9821b08ea0ba6aa8",
            "fbe3a8f939f96a3e",
            "50206ce8d1e152bd",
            "fc9b602417aa4e65",
            "de926af2254792b1",
            "a171efa4ad9c9818",
            "27c19c6c0cc556b7",
            "54b1e82eef9e16a7",
            "110deeef4f5fc6a6",
            "a76314bee2de47d4"
        ],
        "x": 14,
        "y": 499,
        "w": 1412,
        "h": 402
    },
    {
        "id": "52e638f9547acf81",
        "type": "group",
        "z": "59c61210c102e4a0",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "07f372a4fd29259d",
            "095f16fb559ce64e",
            "a435ab10672322ba",
            "b1948d38bb933a25",
            "e56565e48ce68274",
            "ac3dd1c66241ae7c",
            "ccf37a82f2135c7d",
            "253964af5901d63b",
            "5f284cbd6294916b",
            "885c3c785d43cc37",
            "0f0fd8c22ff3f072",
            "6b77e4b16c34881c",
            "a454b9cd2da80667",
            "537f551d7fa18f24",
            "2e54d9e85ebab782",
            "ecc7a98da25891b5",
            "d8de48f203b4cfa8",
            "890507c923aa6d3f",
            "25c8c2340332db4b",
            "7956df2a0d8c57d4",
            "c34dbdd2c56cfac3",
            "5e644fcae172e92c",
            "9e2acfdc87b4e4c8",
            "44f5229a878639de",
            "65b223e43c78f602",
            "0345148913166178",
            "044cb65150e54c59",
            "bd24380b95d5f19c",
            "ede121e46c074adb",
            "1edc461a3449c1c2",
            "523f0fea2ea53b5a",
            "35eb04167ea96260",
            "1be1f8dd83bae203",
            "85040faddb6961d2",
            "f591b02c30f8b551",
            "93085287396ea01c",
            "a25e49f8438648f0",
            "6d72a6e3bc6eacc7",
            "58ad998751ecd7f6"
        ],
        "x": 14,
        "y": 919,
        "w": 1412,
        "h": 442
    },
    {
        "id": "64add5de46ea2f3b",
        "type": "group",
        "z": "59c61210c102e4a0",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "0f84f9d621e34558",
            "cf3c643c912de44f",
            "449c58bfa507cfbe",
            "4bdd8c58beb2115e",
            "cf12d8777249af52",
            "1e5197c0d614deb6",
            "3aa8f29785d0deb6",
            "4b9a668aaf1e65ac",
            "9296eb1fe39bd680",
            "591ecd48511403bf",
            "3653f09a37d2c56e",
            "1888a3f6d85a6d49",
            "56bf7992d352b57a",
            "53290eac5893ed72",
            "848e8677077826a6",
            "7518f54657f4a1c8",
            "67491b0a4ad0585b",
            "7ad134bf089ac3e6",
            "1703f7f151d6aa39",
            "8f9ce11a0b811cdb",
            "c6c76f72d619705e",
            "9773d97524bbf51e",
            "9db9a7e2bf3bdd0f",
            "4317356d730d9add",
            "1cc209cb44d5ec75",
            "265a6376a25bf015",
            "8700e8e5ba1148c7"
        ],
        "x": 14,
        "y": 1379,
        "w": 1412,
        "h": 282
    },
    {
        "id": "45e3c9005f27abae",
        "type": "group",
        "z": "59c61210c102e4a0",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "467e03d9fe735151",
            "117948f594af4bab",
            "b9314cb3b3b4c929",
            "ef2fca797146c18e",
            "f3fbb0a2138014aa",
            "261f8fe56764cf3f",
            "3ba3af385fa15bb4",
            "66a9bba501962725",
            "168193537e45bff8",
            "03ea819fe675ff6d",
            "1745876aa1e14b54",
            "7c647380386b9edd",
            "ed06d3f61d039d8a",
            "199ecba906c88ffe",
            "d9c496406e159b04",
            "464fd05f7941c93b",
            "fcf66e7d41ab312c",
            "c18ecc39a3015af8",
            "1cdc599fd026c341",
            "8a71623579019842",
            "157041460bbce803",
            "a8f72d3159c22440",
            "861aef9b6c1c480c",
            "097729bd8d5778db",
            "0dc7ea6e6f910dbc",
            "b7001552a1faa353",
            "fab32bb2a20b7c24",
            "3191b04be7d7d4b8",
            "57f1a9d1af40adb6",
            "a832e59338fa2611",
            "7151ff3b09d1c1ed",
            "ac15a5d087d4aad9",
            "36fc90d7d534fe4e",
            "bf1c4edd9830d0f3",
            "95b6df25f6583035",
            "5aceedde8b560454",
            "b16f1d503bdbc6c7",
            "81a11685b3f8ba37",
            "1a19796aaf7a4f39"
        ],
        "x": 14,
        "y": 1679,
        "w": 1412,
        "h": 442
    },
    {
        "id": "78a9da7e0d9a874a",
        "type": "group",
        "z": "59c61210c102e4a0",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2ce60a073f7a85a8",
            "3ec9fa090a511026",
            "d26f45379c7205e7",
            "558ddc216456258e",
            "5f589b7e49970af9",
            "b0aba33452636f6f",
            "492682ac7f7f10ae",
            "05740d4f6c3fbde3",
            "152b4edf53489c32",
            "bae73b1ee9574570",
            "3facba2ddd9a1674",
            "fa471da03ad65672",
            "d43f900d7bcc43ef",
            "56ac04f7c1bd0c3c",
            "8c32ebcab89b4007",
            "4ce0c64e21a30c3b",
            "2c0a64277952fbec",
            "495c3f9c122838b9",
            "bce209c3c0c13369",
            "3c3c2a960d361ca6",
            "6612c9a788329f93",
            "481c0c393977b258",
            "d083414310cd2cbd",
            "4c8e9eed2d6c0af2",
            "b373376db0761036",
            "75c2bb7d2b4808b7",
            "fb242041b26a5192"
        ],
        "x": 14,
        "y": 2139,
        "w": 1412,
        "h": 282
    },
    {
        "id": "1b8013576f09c4ad",
        "type": "group",
        "z": "59c61210c102e4a0",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "47c6f672355c69ee",
            "49804cda7657dfb6",
            "048871b17afcb311",
            "f317de774243cb82",
            "95513a1d191874d9",
            "87386babf6032c84",
            "184b0ff69f3bd7d3",
            "6de1bb7768a15343",
            "ac0aa39612fc82c9",
            "d3c2349ead3af20d",
            "ebaf6f6299ceb1be",
            "7a9322ebfed0f63d",
            "6bc66ce29887f15d",
            "dedc8bebf3365c21",
            "607a57631c06e368",
            "d7e74b39febb4844",
            "2f4d1d3192f65903",
            "7b3c6d22e4e61777",
            "467bab010babd181",
            "bc9cfea56dc09b36",
            "9aaa203c7bfc3b65",
            "021a8bbbd1b6cd98",
            "be37d6e7ea787ee0",
            "114d838896594f7f",
            "f4965dc58cd9396e",
            "af531ec8fdca8a11",
            "d9c5a34692c06748",
            "6554124d31b5989b",
            "a4d116264f0fa25f",
            "804c9d220ee281ea",
            "5d1433ba91347c1a",
            "0bf6af175e071160",
            "e1c28163c4cdf096",
            "1d04bb4226b9f629",
            "a4021c8761875c7e",
            "37577e5fbde3fa9a",
            "f1da6c0ab2cf7cf7",
            "02ce5f9480961c3c",
            "27cbb6cfd1728564"
        ],
        "x": 14,
        "y": 2439,
        "w": 1412,
        "h": 442
    },
    {
        "id": "82847bbe3027eeba",
        "type": "group",
        "z": "59c61210c102e4a0",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "ec26c3e970fcc29f",
            "f046e0cba6dfda6d",
            "9a600ed43e935730",
            "cf2058f313000bd4",
            "5a2595b6a59c1a57",
            "afd05e555e630f6a",
            "0c055ac15650d38e",
            "2c78119ab32fae37",
            "053f6c899ee82f4b",
            "09ad729d6a60424f",
            "c002ac5a58f3a616",
            "57201a03e0808db3",
            "dc3261a527d0979f",
            "8330a7611ee5c5df",
            "9405d386950f4e7c",
            "578af1d8eea79a78",
            "13c400c779e24775",
            "307d31dea344f65e",
            "e4dfd175d86c9654",
            "2f45fbeefe068588",
            "badce356d623e98c",
            "b954e4c5efaca309",
            "0bc0d9cdc7a12672",
            "6fe368fe1905401f",
            "35fdd1c4b4dac7e7",
            "387f6050366560f3",
            "be61ef867b80e51f",
            "acba3f3a5bcc7cc8",
            "c24a9b438c73fa21",
            "05bdc64d33552670",
            "adb80156f4abac53",
            "9134100602db2e48",
            "46a17f07bedbc425"
        ],
        "x": 14,
        "y": 2899,
        "w": 1412,
        "h": 342
    },
    {
        "id": "fe2f195af845ceea",
        "type": "group",
        "z": "59c61210c102e4a0",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "63bb1919a5a7262c",
            "451aebc5ba9f8e89",
            "5a95b17a0cda2027",
            "edab1cde3b155242",
            "5b376a4ea31a20c4",
            "f0b48bb9697bfd2b",
            "86b8f3f7de5222b4",
            "768b93ffcfa43ae8",
            "562b90f6bd47dde8",
            "46d1c605fcac25b8",
            "07c5b4b04e9f8639",
            "d5067b8ee95ee2d8",
            "391b35b9c751b42d",
            "8e0a247c544cc81f",
            "240257af997e9394",
            "1fd95972bf57f450",
            "f209822467a0b51e",
            "3189f1fa7b5b04a4",
            "4f9b20d7f61330df",
            "11fdbf2385745128",
            "56a0b418d22bf169",
            "8fbab37cf8e0dc95",
            "3ae630225419508a",
            "1f91bb7dbb87cada",
            "2494dc4c33657af5",
            "bc18228b5cbebd9c"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "2263a560dfae91c9",
        "type": "group",
        "z": "59c61210c102e4a0",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c027ac31175a6f26",
            "2881de38a15b6aa7"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "6d3466125999caf2",
        "type": "group",
        "z": "59c61210c102e4a0",
        "name": "AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "d110733ed783a6f9",
            "d6743c616523e5d6",
            "dffa0982220248ca",
            "03bd84514f223190",
            "71b864667e14f2ea",
            "1a4ac09fdb543565",
            "06bd0aa551d41162",
            "df9ce3d4414cd34e",
            "988289a4dcafc6eb",
            "538f692e718390d9",
            "330feaf9400efb4f",
            "792006c7b577491b",
            "f9a5d5a219dec9f6",
            "8f63a653e94e8133",
            "536629e07e478cb2",
            "1173a9af0fd9abba",
            "467e1add1ca6d41e",
            "fd4329bcc4072463",
            "7c5a8b036c86c284",
            "915dee70ace19a31",
            "0a8da1678e2c8ba8",
            "df1cc32048f08947",
            "15325b74d0147b10",
            "f18cc0abad5ac806",
            "e6d11ae489842f57",
            "a838ea65021be9b5",
            "9185e850ca03e215",
            "8640be8172a857a8",
            "8e34aa12cf7d143e",
            "c1eff053d9e9a76b",
            "5c57f609ae23ca07",
            "468e6a91329799ab",
            "6a6d275d488a4d0b",
            "2e4ec86c5d5cc794",
            "2b04a2c33bfad721",
            "952b850767384f93",
            "33c8dad9ea69a93c",
            "a497b51fbc65f32a",
            "50869085dff9569d",
            "8dd16b80ac614085",
            "86efec31f18488a3",
            "1ed4ba4e3b5ffe9f"
        ],
        "x": 14,
        "y": 3259,
        "w": 1432,
        "h": 482
    },
    {
        "id": "0535f0e16e7fc362",
        "type": "group",
        "z": "77b7c78952a73362",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "61d4eb1bbf59204e",
            "227ad57296c45855",
            "c276280a2e76e3d1",
            "61f20c616fd4605f",
            "956520b50d86791f",
            "027240d122e16be6",
            "fe69f40ee51bab44",
            "e590dc0fde9e6594",
            "26d55f57a7fd7458",
            "02c8a532f542804f",
            "78378fb9d7e285e5",
            "c8b301b9b99e5b32",
            "0cf90d691b6d6e56",
            "59052e44e8de6350",
            "4e3b3536c2ceef36",
            "2711df8d9f08a1de",
            "08a91e57f16f9910",
            "6709fce96e9e46c1",
            "af9c2453d33257c0",
            "5f683799a19730d3",
            "8aed3e99cef6d803",
            "d32b4317694a0f41",
            "5c3980e8d1ef5578",
            "338619029d78e2b5",
            "04b4c4228e2495f3",
            "8bc0b9f8e0531666",
            "61f7ab5f9355ad17",
            "05d8f959dd3b7818",
            "e18e758ae1c810ac",
            "5eed80b3ce9fa408",
            "a22bcbf4022f06f4",
            "e3234828aa789eef",
            "e3f464337b78fdbd",
            "1e8a62274991a940",
            "941195c9de5f5e22",
            "16993bc5c9781741"
        ],
        "x": 14,
        "y": 499,
        "w": 1432,
        "h": 402
    },
    {
        "id": "791c07b0e0bd34a3",
        "type": "group",
        "z": "77b7c78952a73362",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "72d5ff89ef10de61",
            "718a7e63aab8bfa3",
            "7e4d55879d5a8cc9",
            "8c078b2a4e69a3c6",
            "6105207bb50c1be1",
            "e85712bf390d093e",
            "6badb6980eddccd1",
            "6e46228f0f21551c",
            "76724bb7e3d984f0",
            "40179859f768015b",
            "5138c056a40334c6",
            "8b35ac5f32f1e395",
            "91603c8af1485e37",
            "c2e15918b309be4c",
            "345c8814b46040f7",
            "8cfc2ffd5cca9902",
            "1e358b74e795c3e6",
            "218b7ed21e145e77",
            "a9263ad2d6efa858",
            "33d3249df3697446",
            "fc5f484dc4ba5317",
            "4c54d114cdecc39c",
            "399dbeb512a84e10",
            "6aa03e3f532d4945",
            "a580d8e218795542",
            "cee0b7a449991a70",
            "80d73f37b5ce1b7f",
            "7c0bc39301b1b293",
            "ceeb4e575ae1ac57",
            "cd69a002cd217793",
            "586147dc53dc4642",
            "2333e34ca25ae266",
            "2a6bab77cf327361",
            "fc7911406159e895",
            "db4cad58c1e339b6",
            "4cefc044ead134a2",
            "8045ce6081fdf24c",
            "c88a2c3aea979fdc",
            "5c3965386fa8110d"
        ],
        "x": 14,
        "y": 919,
        "w": 1432,
        "h": 442
    },
    {
        "id": "52361bc1ecaf849d",
        "type": "group",
        "z": "77b7c78952a73362",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2f7499d579de1330",
            "7066c4693ecc8971",
            "445ad47766190f60",
            "84f23c75493732c2",
            "7e996cb64e895558",
            "840bd354263cc33f",
            "5b698114e20a388f",
            "633795040d173b2e",
            "5ae833a7e47c9e4a",
            "8661992f879c8372",
            "a68805f0d53d7282",
            "2883024e39d758f7",
            "6af6a55891683f39",
            "a400f3c4daf775f5",
            "e2aa5e89d8c73427",
            "cdf66cc7016ce1d9",
            "d7e047d50e4a5850",
            "220caf913e5995c7",
            "8a82f1e2d211eeeb",
            "407de56ee3ed67f2",
            "ebebeb677856cafb",
            "d5d41f5b110def19",
            "a10ba01e2ba2d7af",
            "67201729af365f1b",
            "a528d69e0456c82b",
            "c821f8961213c79e",
            "2b261e1493dce231",
            "227a0e31339fd411",
            "6027e3c54a865192",
            "e77dec640257ba7f",
            "7c711af666f5463f",
            "8948b1dba335944e",
            "fe659e930d0cb0f7"
        ],
        "x": 14,
        "y": 1379,
        "w": 1432,
        "h": 362
    },
    {
        "id": "0a35f589c8f9826d",
        "type": "group",
        "z": "77b7c78952a73362",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2f553639d47786de",
            "63d749e0ba2db253",
            "0e77c145dda5018d",
            "32a4f94e98a75237",
            "e6fcd3dd90977b22",
            "89f8d5c9b7e326be",
            "a021dbf059f60883",
            "90280930caec7af9",
            "1d47fc9c18bc52ba",
            "30f8c8fbe3eff726",
            "8435cd9a2e70b6c1",
            "b3ecad7fd0a9311a",
            "9b85048daeb8ee53",
            "bf1be44347e87d2f",
            "e670d502b2bee626",
            "f447bf595dca202c",
            "eca1550ac0e4685c",
            "91bf2f27626bc228",
            "02e91a1271c0ca88",
            "2a7bc139e4e95da5",
            "debf232125cf9bd9",
            "a90f5672ae420880",
            "eb761ac18a4917e6",
            "a4d68b8e1514dccf",
            "3da672cf758c0e9d",
            "651a8cca98bc39e6",
            "e50eb513339a8d0b",
            "f2d9694fcc43aac2",
            "b73c20e5af1c999a",
            "e25e78f73a831398",
            "be212be61be44017",
            "35cd5df82328f6bb",
            "4c391cb87e4c083d",
            "cbc2d181721a2aaf",
            "c25afe52ad674ba1",
            "1ff946ac123c8715",
            "23abd7179160ed2e",
            "e2e61df9be203d77",
            "4d3fda8090259723"
        ],
        "x": 14,
        "y": 1759,
        "w": 1432,
        "h": 442
    },
    {
        "id": "ce97b803457fbbb6",
        "type": "group",
        "z": "77b7c78952a73362",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "e388752b27f04cdf",
            "016378a53e52774d",
            "4dcb038b09645e8b",
            "f9346ee333b634ec",
            "9530abf1aad23f02",
            "9d01a80873327a98",
            "c6823ba0fb656234",
            "bbcfc11fb0a55bfb",
            "75e79debe2c86c45",
            "46e0aa3c1dbedf91",
            "c776a871f5786b40",
            "c34c7e6d96618229",
            "20d0935957c4a639",
            "516a19a90334cd6a",
            "d5687736994d7751",
            "950b91aec8496f4d",
            "71143b5e2d5c6ffd",
            "e1395e565cae6d3e",
            "9c60eb450f53f302",
            "e4f213e156bfbfbf",
            "f7ba1bd99b0e9a27",
            "c3c1e70f864356e4",
            "b7950de714bbb84b",
            "bdb4a20e57ab1d7c",
            "df284da39adcf1f2",
            "5ffc9fbf3492d0d8",
            "743027ba08825592",
            "27ec636a20abf191",
            "1b44a249fbf21db7",
            "349b61a443b9da23",
            "2d16a3dc93aba5c4",
            "9fb44db82ed3ef56",
            "afa19eac8e2713db"
        ],
        "x": 14,
        "y": 2219,
        "w": 1432,
        "h": 362
    },
    {
        "id": "4decdff9a7a7aa2d",
        "type": "group",
        "z": "77b7c78952a73362",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "a7fb56f6836cb531",
            "47617b7839fed67e",
            "ba610bf74c25b4b6",
            "4ede621096ce1163",
            "6211377b409dd359",
            "d5640f6471a0d3f5",
            "233589432bbaf5cd",
            "148b026f65917570",
            "69fa58d5671e8de4",
            "2c90129eb983c035",
            "9aae5b230f72229e",
            "9d4569a4a303fcbb",
            "905872713c03c9f9",
            "d310b867ad959f6c",
            "c3846bcafcc6b086",
            "6b284cf3e4664be4",
            "a449c6d0f0da14b6",
            "ba6d0403ef79e557",
            "3fe51ff631a355e3",
            "106384e20276db72",
            "68dae40340b0fbc1",
            "20127e52cd82a778",
            "e4c63b1e57af95a5",
            "5559c0607bf44962",
            "ca91f8d0fea74d27",
            "9d90b408b76aad1f",
            "cdcbb261d93e16aa",
            "6d07d0cd7c2d1644",
            "481a29548515967e",
            "bdb698c7be139255",
            "4b5416de39525d1b",
            "e61cd8be51fa9505",
            "1d5b4d0abb75a730",
            "d71ececaf9998ce3",
            "a44f80bcb9a742f8",
            "d3832916987421e7",
            "fe7ff166aeae7a10",
            "08a4d09b1ce4e48c",
            "d6a3e64efe560a6a"
        ],
        "x": 14,
        "y": 2599,
        "w": 1432,
        "h": 442
    },
    {
        "id": "0c886b6a48498f56",
        "type": "group",
        "z": "77b7c78952a73362",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "b3c62782f28a5d0a",
            "038bd031054dd51e",
            "c4312facf8855dfd",
            "0cbc30eac32b1ce4",
            "30a7edd1e7b9acbb",
            "c7b3206a957aae57",
            "3e51d18c1fbc551d",
            "8fe9f951015d69cb",
            "ee682a23b7dbd4c5",
            "589eb17ab0816984",
            "baf922d2e2b977e3",
            "495b95bb4e7d78a7",
            "f36d066a41a27c91",
            "72971af639e5e24a",
            "669fd860209bad31",
            "14d35e11bf105daa",
            "d7eaa626168ba466",
            "7504f38cedbe0f86",
            "3777b617c7ed5c4f",
            "7de04b85bfc557fb",
            "9f6217427d597010",
            "8dd7655c735bcf69",
            "cced60d76fdd0483",
            "68d4a608b3236888",
            "abfe5bd76e0baca2",
            "322c47a47ba2525c",
            "71b06616bf916322",
            "76003d949fe6cf98",
            "2a99c3bedea19ba8",
            "a11ae86ed7e94f3e",
            "4e425781d4be8cd0",
            "5e621c3b25cfd109",
            "282d29c0f19a9b71",
            "36fb5af8a2823e94",
            "76a9e204ed38e544",
            "b2c84ae6b8eaec7f",
            "de6e46e145fdd88d",
            "c9512b570246b50f",
            "8c8fc5ba9fbdf0e6"
        ],
        "x": 14,
        "y": 3059,
        "w": 1412,
        "h": 402
    },
    {
        "id": "2551a40d7b1b7db6",
        "type": "group",
        "z": "77b7c78952a73362",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ee4001f8f4aaddf4",
            "e528f95e2a05d667",
            "0c4b130cef843ce0",
            "cba3d7e070946f99",
            "202a13887c7fa8c5",
            "4eda42cecdd0ae7a",
            "862f278de7bc203b",
            "cd160891fd6165cc",
            "3e9c58db5e28ec16",
            "1068d74ea470687e",
            "8e50e90c8522fd45",
            "28c69ef468c0d3e5",
            "44b7029d1c48793c",
            "8920d4393978f0c6",
            "de618c857bb13926",
            "759511134cfef588",
            "0d3403389d64611f",
            "533aac6cc4775e8a",
            "072642c4ec9937be",
            "dcb3518e525924b3",
            "4fd9baec6a67f774",
            "41195bec6f15320a",
            "f4caa04c9181f2af",
            "daffd679b4b1f42b",
            "215646a16d7a1bc5",
            "e1ce0e77da6f308b"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "322de5f09fab19c3",
        "type": "group",
        "z": "77b7c78952a73362",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "90668e595c930f56",
            "6faed54bf6449ca1"
        ],
        "x": 14,
        "y": 19,
        "w": 392,
        "h": 122
    },
    {
        "id": "d7429d0745c744eb",
        "type": "group",
        "z": "5c544ea956e8c666",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2136c12c224defb4",
            "b8f872d3ea7e036e",
            "142dde8862c0d513",
            "74236ee755dbb7be",
            "81852063c78bbb43",
            "d953dedb15c7e0b6",
            "e99df33ccbca6aa4",
            "0383f2b49553fd79",
            "3865120317d41ba2",
            "0a59082d1eaa5220",
            "dbe83ae0a4034f4f",
            "df9efc95221a12cc",
            "64e65d25d406a7b3",
            "7ebd8e37ff384c14",
            "491fe16e3d05bd61",
            "52cf011fe8cdeb6f",
            "063a6892cb9b46e7",
            "67f5b3596a86b14a",
            "4b0fb6d909f5797d",
            "9ef7235b99a1f699",
            "b5b1137272c78be4",
            "50ab3a1fd5cfcc1a",
            "d79e53ada61478b6",
            "9b4788eaa14ae8e9",
            "a0e5a7697590f866",
            "ba98dc9d26da6ee7",
            "1b7005d0820a3fc9",
            "1a646517b3bc6db4",
            "98d31d8031af830f",
            "5fd4706b89d64dea",
            "bc8c560adeb01f5b",
            "b1a9fb0dd4603cf6",
            "9c22ec2f6be40e55",
            "2fdf25e5cee7ab65",
            "85ffe2d9e9e62ddf",
            "5d34c4c4aef7e0f1"
        ],
        "x": 14,
        "y": 499,
        "w": 1412,
        "h": 402
    },
    {
        "id": "0917e059ef570e3d",
        "type": "group",
        "z": "5c544ea956e8c666",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2475861006c8771e",
            "4b9d8a19201061a4",
            "a94794509d90df1c",
            "39841cd8361fec04",
            "f150e25f02fda99c",
            "06d9d5513ab25088",
            "7382c667579dfad5",
            "d0c5345e1eaa8b8e",
            "61ad2dc77ca989ae",
            "67fdbfefd0e6129a",
            "f0b46a4dcd3e329b",
            "4fbbbfd0d105c609",
            "6b7d984fb4abb8db",
            "8ac27494c3e19d5f",
            "b14fed21be064615",
            "6aec40a76f6668c0",
            "86247337ee27566a",
            "40464c29a41ce351",
            "bfa9f8ae0181f020",
            "2b85750ca1eeb776",
            "9e189cd1f3c8ce6a",
            "f27c2a41e2e20c74",
            "44b8e1a5f2026fbe",
            "d4608572596808f4",
            "b13b7ecefecbdad7",
            "5fe7f3dbbfb54d7c",
            "48646edf8101e042",
            "28dcf93258a1e45e",
            "5556a30e0370a326",
            "2e3562448edbda36",
            "9e80511bf351a3ee",
            "7f102e8a5c533667",
            "8fce27d8f500d422",
            "e6cbdfda3aacb5fa",
            "dc0ec2c62a33a92c",
            "7411bcd161cb3057",
            "1cf7800ebbb9bfdd",
            "4532138020abf62d",
            "27ef4ef91eef1137"
        ],
        "x": 14,
        "y": 919,
        "w": 1412,
        "h": 442
    },
    {
        "id": "b8fdd8a68b799ac9",
        "type": "group",
        "z": "5c544ea956e8c666",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "43c1c46f99efe35c",
            "e2ed367692a61866",
            "f449ce4f4b42d86e",
            "caa0321d90cc3827",
            "cd48d732ddc83449",
            "04790396050b66fb",
            "e10fb5c955345369",
            "00d2ec3538b816f6",
            "a8b0c0ba0c449745",
            "8a7eef806c10b2f5",
            "d265b35aac5a62da",
            "27edda15c8ee4112",
            "e1ebec86da305f7a",
            "52be74db065dbf4f",
            "f3faaf95a7ae1793",
            "cc07062ac3cd4ea7",
            "73dd4bab593b018e",
            "8b611317c0c70c00",
            "179799f2bfb7603e",
            "adb1283523b8f208",
            "e94c44c49c1d65cb",
            "831ef63e0fcc24af",
            "2ef0af5ff3604d7f",
            "b667421a80f99c2b",
            "7dc38e5a8dd1dd06",
            "d1f8482b1b36abcf",
            "bec523552a86c14c"
        ],
        "x": 14,
        "y": 1379,
        "w": 1412,
        "h": 282
    },
    {
        "id": "bb2d4b5e748bd9d8",
        "type": "group",
        "z": "5c544ea956e8c666",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "3643f2a85761c6ba",
            "43ca46a79fa6ebe9",
            "72a7e44264520970",
            "965478f5d479297f",
            "6acfd019b302313f",
            "bba1c444381b1192",
            "eee42ed03a6f2025",
            "3f6cfb5251c14d5d",
            "00a7e381b45eeaee",
            "27900eedd0efc5ee",
            "33b92228420ced36",
            "dd5442c9408c424b",
            "296dcaeb9ec066d8",
            "e1eb84ebaa23c265",
            "a82d766622394bd2",
            "a390c913f4526f99",
            "0eba29987827ef5e",
            "6f35ffdfe53a91ed",
            "0df262e15d907937",
            "2e68f3088f806e87",
            "060be75051d624cc",
            "97405ca1a0a9149c",
            "7a6938033b01b671",
            "902b83dbb0ef8308",
            "f62684bf1e6c08c4",
            "ffe2a4f0600b067b",
            "f0cb84ab16eb5a0d",
            "34e4c8776c233bc6",
            "3fe2bd2e282a5313",
            "26d3dbcd3a91d6d5",
            "3fad115675e1d75b",
            "bc3638306a892e8a",
            "88ee55d17eb88eb2",
            "1fe52a5dadd4471f",
            "fb6dc18e889ced18",
            "992185d412788592",
            "1c8fb9ef88c005f3",
            "bf5716e4b526efee"
        ],
        "x": 14,
        "y": 1679,
        "w": 1412,
        "h": 442
    },
    {
        "id": "32c89c15434ee77f",
        "type": "group",
        "z": "5c544ea956e8c666",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "0d5aa0b995ece86b",
            "cab82907f3454290",
            "82a2f7d246c2629a",
            "c970e190d5b246dd",
            "6969491f86c8a1d6",
            "9b6609a40346ec73",
            "502678fe47e0bafc",
            "53c16b3d3e6bde67",
            "0b685061691996b2",
            "7e1184311da52736",
            "9911198b5421e964",
            "2f22acc22a06cc24",
            "6c96562c15f3b574",
            "1b6d6f26de46e525",
            "38927898b21e74a5",
            "09406b18b0853d8c",
            "a1953f2d19061d7d",
            "2ec7e452af47a32b",
            "42783bfe9cf42f93",
            "7ecc4780f394c15d",
            "f11f6c1bfe01508f",
            "15332d6b73cf2647",
            "d765748bd0b31bec",
            "1765de4ccab7a394",
            "f57bb2afdfe32936",
            "5fd9fd1ac2dd3d74",
            "2e27fbb8696da7ad"
        ],
        "x": 14,
        "y": 2139,
        "w": 1412,
        "h": 282
    },
    {
        "id": "0126b52505317f5a",
        "type": "group",
        "z": "5c544ea956e8c666",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "1e3a39785574b485",
            "c15817da5b19a833",
            "54693a9ef616086d",
            "704d69ea88213470",
            "80d3bb0e2da15816",
            "177bed7b0fc2f25a",
            "95c6d243df69cfda",
            "b5d2a4105292af2c",
            "90a28b4d010605ec",
            "b54969a12b33b299",
            "51db934ad8d118ba",
            "2b0f1290b28dac4a",
            "88b75189b65d9c8d",
            "415d3b75d25f003b",
            "0d5f719bf6112f0b",
            "3dfd786e0388c2f3",
            "d8acf8cf4292ca99",
            "1818c4f53f8afe6d",
            "ea2a67ca98fc86d8",
            "79144d8b8f46f8e5",
            "6e5ad42110b34f9e",
            "f7da38f6301030d4",
            "34410ecec8d7e83e",
            "fc4aa5380081c764",
            "5e88153559d4671c",
            "ab501fb172f24e68",
            "a7ea31c30f348fc1",
            "0e00f0e2270eda76",
            "c888c3e89cf1e465",
            "1718187db71ed092",
            "b820d1cc50fa6ff0"
        ],
        "x": 14,
        "y": 2439,
        "w": 1412,
        "h": 442
    },
    {
        "id": "086b9e8f5afee3d0",
        "type": "group",
        "z": "5c544ea956e8c666",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "1447519b4b187b76",
            "a6eeeada79e4c33d",
            "647cc8463eba657f",
            "425ae020e4c456f6",
            "f561e6975ccbf227",
            "c90ecd358a74144b",
            "c27441467a37e13e",
            "5b9acf86be9ee9ef",
            "1473a5cebc709fb7",
            "9834a411fa0cfbf6",
            "db45660480dcf0b6",
            "37b48395e2a8ce9a",
            "05e3cbc7c66f6a42",
            "f3198634012f88ee",
            "671ba8ad1e8ebcaf",
            "357c1a69de0fb551",
            "3eab277fb9b0cb08",
            "fb340b308438f5c0",
            "4623aac9e435319a",
            "cd5e8e8a5046ff82",
            "7aa2fe3c854c2834",
            "727d2f6c789efb92",
            "d719b607bd6764f4",
            "f58aebc63087b261",
            "aadaa3207d2fa717",
            "3f26fa95fa6ea582",
            "43843bc0a8330c6e",
            "5802b9c3a9e27da3",
            "90a69cb1012610c4",
            "8c5eeb2fb92774ba",
            "abed88be1bb95e3b",
            "9a0bd4d4157bc462",
            "67c4696eb73ad548"
        ],
        "x": 14,
        "y": 2899,
        "w": 1412,
        "h": 342
    },
    {
        "id": "4fd7f951b8650487",
        "type": "group",
        "z": "5c544ea956e8c666",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b876b2db2c552043",
            "91280dc4ee032737",
            "d1663b92f6c47422",
            "9f9701af3606fd3c",
            "f731c6fed5d8e0f0",
            "b2ee0cc10d31c097",
            "f0c7623d10daf2c8",
            "513ae4dd6f413442",
            "a6857486f3ac10ec",
            "0f35a83fa0836fe6",
            "8a850a4c42cefef0",
            "2459949ba25c5fab",
            "a48ab9e6c3202903",
            "7ae5d658bd216c7c",
            "2a64505d65a44381",
            "078866f2e147ab14",
            "1de2e703ede0c029",
            "1447a4b5be6c15c2",
            "110bbcf96095a1de",
            "f80c8c78a2cc8925",
            "e5e1422e1697f044",
            "3e0f81e3a50f7d90",
            "757d295f9304e548",
            "db5290c4e2d19c96",
            "ea99c50a2bb37f8e",
            "a3f02097100aa51e"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "1cee7e7c969d93af",
        "type": "group",
        "z": "5c544ea956e8c666",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "105e67252bcabcdf",
            "41aff30742d55920"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "e3103f8fb347866a",
        "type": "group",
        "z": "5c544ea956e8c666",
        "name": "AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "7a2527e8c282eb37",
            "df927f1fa59c947a",
            "3f8e65bdc50d0f92",
            "5b5a48b15f476f8e",
            "7afdda8b528b3089",
            "02304a0e028e6849",
            "d41967a904f66377",
            "7e6b58f9d19c76cb",
            "846516505ad84176",
            "76d59281b3680653",
            "ffd2231b755e1165",
            "ae3e85da2d915a36",
            "afc17f2135fb6079",
            "4be2924aa2e527eb",
            "2bec64d471801cec",
            "e929d83b6d4c850e",
            "d68b7d9c73972c52",
            "2dfafa668defa2d4",
            "8bd1e16896690962",
            "8ca6db78596ff540",
            "b2c9eb78ad0cde6e",
            "a7c2cb321b190db8",
            "3bea0c30fc22fbaa",
            "6425236defef6c2a",
            "07132a3875053641",
            "328efccf58e2dd13",
            "c44eed698c7a66ff",
            "f5c5423fbc43f151",
            "e7284d5bebc65941",
            "61f0ec1481891aee",
            "3817858f95b5027f",
            "91c1f6893dcd24cf",
            "cf1616ac3ac68d19",
            "143977bdec2a151c",
            "22c8e40dd58eb9dd",
            "87c60af52851adc6",
            "0c222e35bfb128c4",
            "10bdca498b9f98e4",
            "d08420b772b5c679",
            "470cbfc13a020c91",
            "d4fe487969b46e4a",
            "8aef7e56f39a21a9"
        ],
        "x": 14,
        "y": 3259,
        "w": 1432,
        "h": 482
    },
    {
        "id": "8ed3cdaa3705473d",
        "type": "group",
        "z": "e5f6790dee67bd7b",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "4dae7798b5c2e6c1",
            "bb58cff67cb8082c",
            "1309b0426561c49c",
            "1dc32eb90e7fef14",
            "308ddb65191b4b15",
            "e2ee87ae3da78fd1",
            "38862857db85f758",
            "245be97a9a22f33f",
            "bd73199064cb9e23",
            "37720075719b5943",
            "fee89ffb54515412",
            "120629bdddad36ea",
            "ba91982a118a8ac2",
            "43b9020720c8b2b9",
            "6d66377056b75dcb",
            "9a496939eb15a674",
            "b52f1c7a707119ca",
            "6099c0f8fbcf528d",
            "68a7fbd4b8736eef",
            "08a33635a6bc06d1",
            "c5ecb95e4e16ca13",
            "3636d5042c2628a3",
            "e1b936c20c37b844",
            "6916e31c5f3e2e45",
            "f9ce3467ffb6d8c4",
            "4933509e08f36d8d",
            "fbe3316e9a7553e7",
            "6b92698d192a275e",
            "b65e1174d146a190",
            "d77a89844747851a",
            "90ad399be610de12",
            "a1ad81b1683fe434",
            "4935ae2bcbab36aa",
            "876a8eb5ccd92265",
            "be2e6c3502569241",
            "2a554064b416b616",
            "c64ca51099634c1b",
            "fddc53eade468b90",
            "3f3e57896decc733"
        ],
        "x": 14,
        "y": 499,
        "w": 1412,
        "h": 442
    },
    {
        "id": "eeffea1ed5a2cc6a",
        "type": "group",
        "z": "e5f6790dee67bd7b",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "0d597c6fecb07c51",
            "6c7046ae5a67a1e6",
            "f2dfaf21eca230e3",
            "35f042ee98012ed3",
            "804e69236e452e91",
            "c873c143b26cbd45",
            "83dee5f77459c0c0",
            "092291fb80eb00de",
            "94a142a01b4e3454",
            "2654c43fdb582940",
            "8e57ac737e19f551",
            "cd3b4b1b33ac6566",
            "38a641015019edfc",
            "a65f2985f31dfd26",
            "f2da313446b002ad",
            "63935e9ab1954305",
            "b0166428880960bf",
            "a4065fa4fa5a51de",
            "5a43084670490761",
            "b4cb9437f61f5cb0",
            "df197fa5314d7812",
            "4e91370af163771c",
            "18b28621f469aefa",
            "2598e0d654941d3a",
            "e8f94d37d5eb2374",
            "ce461a2db135ce2e",
            "ebbe91f344dbb659",
            "e7524cc3ead85322",
            "089c3b214a524fea",
            "38dffb51919bc22b",
            "de1013cd30465b52",
            "c1cf2c7c64d11458",
            "e7992dc7cb5a49a1",
            "d0eb96162dee9996",
            "fe02b87ab8a3fc46",
            "9bb634d0a9d8fda1",
            "c7b2a9518b891018",
            "adef5e20f7e11154",
            "6880d2bb60bc55c7"
        ],
        "x": 14,
        "y": 959,
        "w": 1412,
        "h": 442
    },
    {
        "id": "2ac8f6a6ef605225",
        "type": "group",
        "z": "e5f6790dee67bd7b",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "bfd5d6c7d0b501d3",
            "c5e0ae4710de859f",
            "8323f3c3a4a519b0",
            "66feb15cd16742b8",
            "266f5f18065e3173",
            "79a60d0e4f663d8b",
            "eb0f1506dfd441aa",
            "1e318c61076358f3",
            "e307cd41ce8e0ddb",
            "24250ca6d35d547e",
            "e9b4201bb89209ed",
            "f13bf9141fdbd4f5",
            "e9790ba6b00ebfe0",
            "cc24f5dc1c6d5cb9",
            "5cf3d23d7902edb0",
            "4bb086180d276c70",
            "6c35b0d068b0102c",
            "4f204a0d112596e2",
            "f4e6c2deaae415b0",
            "dc3028129967f3ce",
            "f2975d4095c58e3c",
            "d9afbf4f24c5ee0d",
            "2b50447457748c23",
            "a84147cc002044bb",
            "96e297be905af560",
            "474eacddd0a12c0e",
            "388144b14d3e5bf3"
        ],
        "x": 14,
        "y": 1419,
        "w": 1412,
        "h": 282
    },
    {
        "id": "37ebf220fe98f8a4",
        "type": "group",
        "z": "e5f6790dee67bd7b",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "010ae11985b040cc",
            "0923c18516c1e4af",
            "36d58a3d43ef8164",
            "a065785123e7ad01",
            "58dcafe4ac23125f",
            "96c9dd0d0a7b3d86",
            "e756defcbd1d64ae",
            "357b8966d16a2dab",
            "2e93ec804387ffb0",
            "e7f25b836d038cc8",
            "881c3a305b0fc6bb",
            "f53d18aff75dd562",
            "824c6aad27bdf679",
            "c0f25b759d8bde0e",
            "2f27bb98e25aef9f",
            "8ac659249dddcd75",
            "7b322414e5c87821",
            "929a95d5415bf450",
            "655b380a6eeb4ae6",
            "354221ca3102178c",
            "0f647284021cf7c1",
            "758780eb8e62baf1",
            "551149a073e431d5",
            "9697d35016f83111",
            "2167f57404e49c2d",
            "4b978edd23defb31",
            "e0784e6bba7eb2b2",
            "f595777cdc84b9be",
            "5ba746c368a64c8d",
            "41b55d1a83b37b66",
            "fa2b784d31084af6",
            "bae32f041d311344",
            "c0a3ab449a8a2c22",
            "a1418dd571556384",
            "9c63e3a1995d7eb2",
            "27876203c7c85fb1",
            "b7e171600ec82159",
            "67a27bc78685635f",
            "3a1a721e4b9a47b9"
        ],
        "x": 14,
        "y": 1719,
        "w": 1412,
        "h": 442
    },
    {
        "id": "9db8cb4838a3232b",
        "type": "group",
        "z": "e5f6790dee67bd7b",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "aacf53b06833087c",
            "2dbc699bda146bfe",
            "274737c1c7fb3662",
            "99782a81f67d8811",
            "58f8c1569237f3eb",
            "cf81ce9cdd002742",
            "5b224f45417d8e3c",
            "5bb07a89de3c2478",
            "43145703c1b3c1a3",
            "d1913c4bdeedcc22",
            "85011610de6dcbd8",
            "2e3d206033e81191",
            "9d9fafea515a2b3a",
            "22961121e55026b7",
            "d332c24f27b4caa2",
            "2b45a1071ad065f8",
            "2f5640d58d4548ee",
            "c2b5b9a15224cd29",
            "e55b19814d58664e",
            "b0ac318e71736e4d",
            "540f56f1314b65fc",
            "d0a6ce797da27cd9",
            "69ec1322f8813526"
        ],
        "x": 14,
        "y": 2179,
        "w": 1412,
        "h": 282
    },
    {
        "id": "8961eab5ef24e7bf",
        "type": "group",
        "z": "e5f6790dee67bd7b",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "168bfadcb961b5ce",
            "90763ccb2bb458ac",
            "d9c8b7f745c78c7f",
            "2d37d52ec45dd814",
            "6478ce98e7c17e9b",
            "38dcd696fec0a7dd",
            "ca899540279b6bd4",
            "63ad378fb4e91567",
            "4ed47a2dedc8082e",
            "940b4368da43b00d",
            "93445c7345bf2d89",
            "3df99bd5deec9edc",
            "5447f766c4bfafec",
            "b070ed74b7300536",
            "f187543a63630dfe",
            "3fa56112326c4ba1",
            "a5d797b6e65ab152",
            "9ce5a328dd3abec7",
            "fa09189bba0113ca",
            "d31b6e2af80c981b",
            "083fc09133ee3bd0",
            "543304b8aeeda0cc",
            "276c34034a77c0ff",
            "5f48452a7b8ff4ea",
            "e61b2dcc7c3231ac",
            "749052a187fb3af1",
            "7640f1ee670e7d37",
            "9ba0a083a7953d38",
            "0939f963d8be9a1b",
            "d66521347fac4ecf",
            "9cb0785855199456",
            "0c97eacc60380f9b",
            "506db162273664fe",
            "ae0aa97915b67bbf",
            "c6f2b115a1e49126",
            "5c5c1580b9538a74",
            "ab996cfd106315a6",
            "eeb8fea85721fbea",
            "b712e36896f474e2"
        ],
        "x": 14,
        "y": 2479,
        "w": 1412,
        "h": 442
    },
    {
        "id": "e2b7d6253bba6c6f",
        "type": "group",
        "z": "e5f6790dee67bd7b",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "5b6eea1823bd945a",
            "406134d510349ac8",
            "3eebcb73c93de55a",
            "9381aaed704871ed",
            "08d7be0e5808c9bf",
            "309c68f035ea6cfa",
            "edc2b7bcf5b10c1b",
            "f501a1d0236e114d",
            "c610a572b44a4b8a",
            "d3b528bacc2214c2",
            "457d0e02e3125537",
            "75a3f71637d4c98b",
            "e2aee330b5ef0065",
            "1517bfc41466b09b",
            "9ac05366c0c4ec8c",
            "413a1ec60708ae1f",
            "a1225b80293aa574",
            "f2e905d8200f0e4f",
            "6af7e8708b0d1f0a",
            "80c7ca76232fc3a1",
            "a752626776bc025f",
            "1c5453dc54e6ac67",
            "80f5af70c67fedee",
            "c883abbfd4d8874b",
            "d203e87958ed8bf5",
            "21f0b63e3d698e00",
            "181982a3625d399b",
            "a840cac92bdf288b",
            "82fee5075fb69701",
            "09bce4f3548f1fde",
            "c3281936daa95cfb",
            "c2aafa3a4b80749a",
            "ef16f78b702f1150",
            "4cc97a775cb9da92",
            "a40a9c3d73939ad2",
            "e69e201556168f9c",
            "8705ee2e16221c17",
            "6115328dfe7c7bb3",
            "fde3962270b9987f",
            "3d35da52300e06fd",
            "ca1d6b3453933b0c",
            "3374982184863518",
            "7651ec515bf903f5",
            "01d775480de3de82",
            "cdd77002a705fcc7",
            "18cad30d0ac9bed6",
            "ed0deaa66f03a87b",
            "5b728e822ba1d8ae",
            "8a0b082a74a6d0e4",
            "7ae309e94cae48e3",
            "66c13de388a11239",
            "a1700b95355a294c",
            "4eed6490c30140ec",
            "5655a27d1b79cfee",
            "85495055f1688b91",
            "b6dbe7aa2207c3eb",
            "d519a0ef71a39d60",
            "19d288fc68e3e6dd",
            "92771cdb0cfe907e",
            "db83ebb07e01938b",
            "8e7d2c74b44ea2ff",
            "08424268e18795a7"
        ],
        "x": 14,
        "y": 2939,
        "w": 1412,
        "h": 642
    },
    {
        "id": "d62cd89dcedeeec8",
        "type": "group",
        "z": "e5f6790dee67bd7b",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7073334922c765fe",
            "ebdf9bc37ca98445",
            "6f17343a1db9094c",
            "646fc70b7d69ec97",
            "f4ee2eea75307bf2",
            "2d733d2203aa3330",
            "3b7e44880f5740b2",
            "226575268d8fa16b",
            "26f8e9b3bbe4a96a",
            "19056cf9b1053a2e",
            "133dc8688c4e7718",
            "1413ed1a2b7abcc9",
            "d89bfba653bd1e7d",
            "b9a239ef82a3b81f",
            "f3bff491be07f5d1",
            "395f51c66f059f9d",
            "b06b9757b0319c7a",
            "8332edb44115c124",
            "b58efabaf21aadd3",
            "0daf6dd490802f10",
            "8a96815c0ffd5117",
            "df98325b1239b0cb",
            "55bf5d5b43637b82",
            "7ff97f0bf6962fbf",
            "a0f84a6f71a0862d",
            "2e1e19ce8b302f46"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "d905f7a5f1e0f40f",
        "type": "group",
        "z": "e5f6790dee67bd7b",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "be28680fab46d191",
            "4f8b17124fcdded0"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "70bc5e18723c6f47",
        "type": "group",
        "z": "9ab3d53948c971b4",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0986af94054f12e5",
            "52c1b4082569ab9c"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "9701bae85a5041ce",
        "type": "group",
        "z": "9ab3d53948c971b4",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6d5c2871ca0b19d6",
            "c1beeb6aaeddc5d6",
            "5858e2274523c443",
            "077efe0437816dda",
            "16a427a9fadec37e",
            "4644e63660f593c4",
            "3c04e7686eea8fc3",
            "97f5faaa9482f0c0",
            "c02766e9c1d9aa7b",
            "618da62de4c7d49e",
            "d83d8e4a3277aa34",
            "54d59ccc516ce301",
            "de7d7647f34a1663",
            "bb684678e7cd0be5",
            "9347bda861a1932d",
            "4c9276a9bc8893d5",
            "eac621911c679a4c",
            "78a1f962d2eb0717",
            "d2689b7e70c3b21d",
            "1036ca5f9a1a9a78",
            "f1a67500ad91b1a9",
            "7a5c2167fe44f4ba",
            "3a7f0f42f6065259",
            "8a2582886dacde64",
            "2337c625080a13d1",
            "2ed9eafee9460a12"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "2c00b477a32865f3",
        "type": "group",
        "z": "9ab3d53948c971b4",
        "name": "Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "5528fc50de3fa8cb",
            "efb5cb52d4ef2034",
            "a10942ef0cab4307",
            "01161cee2b4c6d1c",
            "99b3320d477e47c8",
            "897f1896be24400d",
            "6ded375ca450097a",
            "0f2bf967cae16263",
            "c5664a9ce65b2df7",
            "1df3d549c330f57b",
            "b6eefc8cbe802c43",
            "38214d04b0a9cfde",
            "33f63caefed114e7",
            "1562fba7d472d3d9",
            "28b992f8062f98c3",
            "9f7c84479d1adffb",
            "78ac3eaa8ce4a87d",
            "de553175ec0b3506",
            "70c27bdebc5ab1da",
            "40e96daf779b7ba9",
            "57b9068f97a30756",
            "081ffe7488b2f31c",
            "4302c813ba918ed9",
            "57f15f47e7c069f7"
        ],
        "x": 14,
        "y": 499,
        "w": 1412,
        "h": 242
    },
    {
        "id": "62e2c2c9b17586d6",
        "type": "group",
        "z": "9ab3d53948c971b4",
        "name": "Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "deae3961ad2f6b82",
            "0e3d0f31d7792a00",
            "32d8f29a76676619",
            "e9023fd65be3ef11",
            "66bb178c73846512",
            "b1b0379b1980abf5",
            "556c8d3cce5cbeed",
            "1e1267b762fed28c",
            "ada2dd1774932e4d",
            "2d9207bcaa443cf5",
            "c5df6da7e279c9af",
            "cb463dbc6a102405",
            "f4f8d8f097236937",
            "f46f543a27f24719",
            "e3be8a4fc91f2398",
            "c5c9889c100dd751",
            "bdf748e82b468af7",
            "8538f368ace5b6d8",
            "5fdd88153ba57033",
            "26fd804df4fc7163",
            "21d7950c4fa305c1",
            "517b0609e79dac35",
            "c9b55c86be8a93c0",
            "76ac611c910f90db"
        ],
        "x": 14,
        "y": 759,
        "w": 1412,
        "h": 242
    },
    {
        "id": "db530b5299ce6148",
        "type": "group",
        "z": "9ab3d53948c971b4",
        "name": "Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "93b53ee0d4288b86",
            "f74038b863881b4f",
            "32994b5c4d728971",
            "8aefd8498f4139e5",
            "7856fdd5ea04750e",
            "33eb9a91fb7f46f8",
            "de3e74feccb01b46",
            "32943a784011420a",
            "90085a134a4d049c",
            "0cba36328fb5fb9c",
            "c1af6f050e068af0",
            "5b81a12a134f61fa",
            "b9a1187d7acad0a5",
            "612ebd677c902a27",
            "c5a080ded9f4d0df",
            "c9f4e228d1b2cae1",
            "74e14693a85f2eae",
            "3e569bd57587e170",
            "b164da499cdf662b",
            "eb290ffa426c2973",
            "324a5044afe7c544",
            "7eafcc4829fdf039",
            "7f9b2418c1bf9f12",
            "7a908195cfd8909d"
        ],
        "x": 14,
        "y": 1019,
        "w": 1412,
        "h": 242
    },
    {
        "id": "ef853cd584db1130",
        "type": "group",
        "z": "9ab3d53948c971b4",
        "name": "Test AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "60444afa0f103abb",
            "51d3568ed4d95b0e",
            "7dd16a7c5cdd8725",
            "65ebb187586a8076",
            "b0b6daa09ca2a610",
            "f8c7c2d1939582fa",
            "0d90364324331557",
            "6d3e7d390a7be59a",
            "5a0f9dfa8b70af07",
            "b3167b2e3fcbb0ca",
            "265d0524a0a44f1a",
            "a71fdb4c519374b2",
            "a33506b8fa816784",
            "8ee224270e3e6ffe",
            "b14995e01780927f",
            "af782326b1b8ad69",
            "e07203d078c3684c",
            "0e25af63c57a305e",
            "0e5b54233613015c",
            "fc5e25e03e585f66",
            "bb90066bdf5c5657",
            "20cc428dd0d26591",
            "49699f88990e4673",
            "50c04595323c92be",
            "666de35a8b470e0e",
            "8530fc11fd2b9197",
            "8d5d88bb78436995",
            "3797f6c1480da640",
            "37a3166800540586",
            "c8db2fec805c846c",
            "bb7e8e221de89e01",
            "2c34db3e58cc58c6",
            "c8c2413d65b07430",
            "c5c3bd833a29a02e",
            "33aa83e2164d42c3",
            "2ea966217df5d4e4",
            "dbae32b5315e77bd",
            "81a4d2c5911f373e",
            "1e94ef8ceca99cef",
            "26630e2ad83218ae",
            "8f396e165cc3b6da",
            "7458ba773ffc9538",
            "9ee08d634974773c"
        ],
        "x": 14,
        "y": 1279,
        "w": 1432,
        "h": 482
    },
    {
        "id": "a154d6a4a31d181e",
        "type": "group",
        "z": "9ab3d53948c971b4",
        "name": "Proc AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "60027df692f9ad67",
            "32e01f3c65e1b0e4",
            "a090563210b72377",
            "f9a94b5495cbd170",
            "1a45c3ea1784af8f",
            "c2d27a19d1672a05",
            "115cfd91d3173a27",
            "88d0b357509c2089",
            "16c95da3db2723f6",
            "4971c01157d9f0aa",
            "0543636eb6bf3c59",
            "5587a18969bc8b56",
            "83ef5437fb818d6c",
            "60e05b2619adc766",
            "7b3840e340b16456",
            "2cf4edbc857c436a",
            "06de1f4c747e7a98",
            "0dfb6c87b025b9c5",
            "6991ec725e19cb39",
            "4c15728b15fef0b1",
            "445993276f9419ce",
            "c5dc532e30d1832c",
            "5d6ba60cdef5f395",
            "908f0dad535bae5a",
            "3864da87f0771ec9",
            "c3d211007370a764",
            "e19acd8882de6d1b",
            "47e74a9a7fad273d",
            "169a1e2224d15de0",
            "318145641914daa9",
            "b3f3e7c3aaa1b7f2",
            "6e00173f32f16c4f",
            "0f181598ccaf17f1",
            "24d756cd2918f983",
            "494a791c23dbf663",
            "32e2c21dc04125b3",
            "5f72966267c8029a",
            "81bfdf385e05d6b3",
            "d5af98d6af26f5c3",
            "65ea4e556c09fb8f",
            "9b975ad191c5277b",
            "3b929b95973d08f2",
            "a292247e0cbdc7ba"
        ],
        "x": 14,
        "y": 1779,
        "w": 1432,
        "h": 482.9998321533203
    },
    {
        "id": "588442fe72b21a9b",
        "type": "group",
        "z": "9ab3d53948c971b4",
        "name": "Visi AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "a54e858b5e751c8c",
            "29dddea8b1c85405",
            "5f09cb772c7a01ce",
            "417038aa5b41ee4f",
            "34ca9e5ca29e534f",
            "51dfc0fe97a94772",
            "e60892712f512e94",
            "fc1c0adb6a2ad4ef",
            "9a82148a0cb5f6ba",
            "b9c560c74bcdcaf0",
            "3838eb3f499048fb",
            "dbacb2c1f75b4648",
            "ba954c8483a39ad2",
            "f902aac44c34aef5",
            "b19fe46c8d5fe373",
            "93e87dad59808dc9",
            "a073d426cd29e683",
            "49001e6edc2d3676",
            "f1bc8bea074b0c91",
            "f23e68197e43351c",
            "d687ccea277ae369",
            "80ed1761c44b53df",
            "b19c409ee8ae457b",
            "d36192adcddfc9d8",
            "3770186048396761",
            "5ed95ab1f2f1a396",
            "8b2f76d3d988477e",
            "8a8ca7e402375cc8",
            "f82bbb32eaeffd12",
            "cea9f31b062ec3bc",
            "413fa15fb8b515f5",
            "f06c65a9bd8846c8",
            "56065e5dbc66fd35",
            "4d61723ec9c5276e",
            "d9d259cc54bd7bb2",
            "b39395a1eb3cf9cd",
            "178ab485cd8903ef",
            "b7eca78e52bcbe94",
            "88c7430993ab17c8",
            "388e2462fa30dd29",
            "367b93397b0c7113",
            "5a62c5196b01b2d0",
            "1e7e25d8c9c5a744"
        ],
        "x": 14,
        "y": 2279,
        "w": 1432,
        "h": 482
    },
    {
        "id": "36aa7889781ef46f",
        "type": "group",
        "z": "9ab3d53948c971b4",
        "name": "Robo AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "19d90f275b9468e6",
            "b319c689ea0ff687",
            "146f5da13dc54d17",
            "a2f7db2be6ebc341",
            "82afd1f343bfacfc",
            "c406fd1f5828745b",
            "bffd5fe0f72413d8",
            "35e8be556aad8027",
            "a35c202d9384b99f",
            "d4182716d324a7c3",
            "b1f0d30ed6f3dadf",
            "43053cae06123b7d",
            "5dd27bef0a84e84a",
            "1d1675be0df1187b",
            "ca999507201ed3d1",
            "3c5d1b59ecd5015c",
            "2bd2bf5fd0b1b5db",
            "46d5859383cfbc7d",
            "af0dd672be63358f",
            "7ee2b2ab4a796a9d",
            "2f81f09f91545375",
            "b94bd5b5eead38e2",
            "2491c562c0867229",
            "b2544f417671724c",
            "879f3af4f5aeab0a",
            "04339b572dade762",
            "41b917d31cdf48ee",
            "f77f89351cfa3c5c",
            "077124260c827d67",
            "89eae931635eaf3f",
            "97fd4831dfaf470a",
            "debdaf8aaa0b4c6b",
            "666e584159b13d1a",
            "fe4e4392582b5823",
            "0e1db4a21202d93d",
            "14678273fcc5e925",
            "8342843d9628427b",
            "eb69f33b8bbb2eeb",
            "7556cb9c31d4888c",
            "299e6b55fc5a3030",
            "c2e8b8a6e048c324",
            "616aaf0abae01674",
            "d43bb46c015a7225"
        ],
        "x": 14,
        "y": 2779,
        "w": 1432,
        "h": 482
    },
    {
        "id": "0d32b4e8fc290ffd",
        "type": "group",
        "z": "9ab3d53948c971b4",
        "name": "Stor AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "31f787c984be9e0c",
            "960589015e8ec79f",
            "b6843111343ec0be",
            "8ddf3b1dee8d523e",
            "bba6003a5e4d8517",
            "3fe44b2b1a81fb1d",
            "df770917a5b37a0f",
            "a5c11a4cf1c7b82a",
            "f75474a7ce5cf963",
            "3c39864d4f4397f0",
            "1d0ba5df3e468ed5",
            "ccda0eda71143b67",
            "293230c1eaa53a10",
            "cc7f34ed90d7b996",
            "0616b86f7dda1779",
            "05f8d54d4e66c7e6",
            "81c238844c1dbfeb",
            "e1f1fb8372b25ddc",
            "5976d0010dbd5c95",
            "d0bf2569d4ab8218",
            "7e7976dea0d9dce1",
            "eaeb9d316dcd79c1",
            "a520050168f6595e",
            "2882ccac65756543",
            "cf999afe2e38121f",
            "8ffe078004df795e",
            "31226d98452efafa",
            "5a3c058d2e72ed5a",
            "db9cc0497a5d9bf3",
            "0dc95387ac8c48e0",
            "b4bdf49457059c97",
            "219eafcb04bc48ea",
            "3bd7e631fcd66952",
            "2f309a59444cb2f2",
            "140dbf60e5063528",
            "00bf16ac0b1201c7",
            "6ce71ae4d02bbb5c",
            "fd7f913a3c70a161",
            "374479b2dc66ca0b",
            "e30a751864a05465",
            "dd3d46000463b7b5",
            "b34f09c1eebfea31",
            "ef8505a6b5befbd6"
        ],
        "x": 14,
        "y": 3279,
        "w": 1432,
        "h": 482
    },
    {
        "id": "263d9d7e5a156918",
        "type": "group",
        "z": "9ab3d53948c971b4",
        "name": "Sort AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "3340a57d47d5a183",
            "171724050af3ffe5",
            "c241c1e8349f7e1b",
            "11ad1d41df38d732",
            "413aefb89e29c631",
            "1bb9083392f5a3ad",
            "481198c829ef537d",
            "11b2e324f89957c7",
            "08253a20b5367117",
            "defa570cc1a1be4e",
            "8dbfbf4df603e124",
            "b5c03c082e14e9f0",
            "3ffd8f2e3d36b29b",
            "61a412ef64ddb832",
            "ec6304af1553a52f",
            "96f3b235f27d0e8a",
            "43d5e87f2d02f064",
            "567f3482fdf7976b",
            "aa3bdc2aa753cffc",
            "11cd7213dda99013",
            "bfd5c911f11c0239",
            "a82464df5f3b5128",
            "e7a177c4bf19f73b",
            "4455d5aa6e4ad021",
            "95e4e9168661e119",
            "b8e7707b48518350",
            "cd7f426fe83cae5f",
            "af53f1082970888a",
            "2938a3c80e050f69",
            "41e90d76c04e26e0",
            "58258debab85ca7d",
            "7b8f372cf40b5ae2",
            "9b6637915552ce28",
            "77d87098b420de80",
            "0cda3ba4d2bf16e4",
            "9b7b6b62a197136c",
            "44f44786b03a0fe8",
            "2fddb47d232e851a",
            "603a9d7458559670",
            "3e4920e014bb8eeb",
            "3a4ea0e0cd4076f5",
            "29c306be09bfb9b4",
            "6052809fe6805bd9"
        ],
        "x": 14,
        "y": 3779,
        "w": 1432,
        "h": 482
    },
    {
        "id": "0947a21eaf8aaa0f",
        "type": "group",
        "z": "1411e27f85838ba0",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a73fd3bfbbb9cc05",
            "28678fdb6fca4182"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "eeb1eaadcc2a3ddd",
        "type": "group",
        "z": "d95179f3ea7c7997",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3bc6973a087307d3",
            "c7dc38049173d0c1"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "f13981ec3d33259a",
        "type": "group",
        "z": "9ab3d53948c971b4",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "09c82ddb27b51a35",
            "544af644c8e91fdd",
            "7d9dfd79ebc4906b",
            "3e45fa1f685a44b1",
            "0ec7657e64277f86",
            "833bb895519b57fd"
        ],
        "x": 414,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "9691dc70af74ad70",
        "type": "group",
        "z": "1411e27f85838ba0",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "15da9a935e94c7a9",
            "b2b20dddca19ad71",
            "f06cffe28c11119a",
            "398125bc14c68bec",
            "680e3020c17b7c21"
        ],
        "x": 414,
        "y": 19,
        "w": 582,
        "h": 122
    },
    {
        "id": "fb5eba2cc7af4dad",
        "type": "group",
        "z": "5c544ea956e8c666",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "18a29732a4ca2248",
            "8e7f0b1714f17dd9",
            "54c7aabf568f21c4",
            "04aa0b0749f89a5d",
            "558967886427e406",
            "b42553883d5e05b0"
        ],
        "x": 414,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "3ee347e47570923f",
        "type": "group",
        "z": "e5f6790dee67bd7b",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0d638688048b673d",
            "801984acd1f1dc29",
            "bc3a9fc6d1fa8841",
            "9481472733e26973",
            "36d035fe1464b844",
            "bf6885a7073cc106"
        ],
        "x": 414,
        "y": 19,
        "w": 582,
        "h": 122
    },
    {
        "id": "58f8ff4ad6409111",
        "type": "group",
        "z": "d736c5b40e5a53e8",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "31cfe46771b5e6db",
            "a76a9b8889d984f7",
            "360ecc922f83ecbb",
            "9f046c6deac2faec",
            "f9bd61ee87bb1a91",
            "e0394dcf6286012b"
        ],
        "x": 414,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "6662fb7d9a3e4415",
        "type": "group",
        "z": "d95179f3ea7c7997",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "de716e69cbc3b525",
            "af320134903bc1db",
            "701c579c2f14850e",
            "1c4a045a0e3e0c6f",
            "48ab50a39bb7dabe",
            "2b3d1a0a06cb8cf7"
        ],
        "x": 414,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "64b1b1547cfaea6d",
        "type": "group",
        "z": "2a1ebdbf557110a0",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fc7ccc08ea6a5b4e",
            "ad64ec0e862e8a48",
            "e14c72dd568942ea",
            "67789af2de5d4b26",
            "d324f9a7487baf3e",
            "0c2a988b79ab8142"
        ],
        "x": 414,
        "y": 19,
        "w": 582,
        "h": 122
    },
    {
        "id": "634be726669e1e3a",
        "type": "group",
        "z": "59c61210c102e4a0",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c8a2ad6ae423a05e",
            "06c281fab16e0285",
            "591d00dc07eac48b",
            "4842725f6f06ebbe",
            "4e91f1a685f057cf",
            "b3da54a8f1f472c4"
        ],
        "x": 414,
        "y": 19,
        "w": 582,
        "h": 122
    },
    {
        "id": "f9dae9a4a02d5963",
        "type": "group",
        "z": "77b7c78952a73362",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "192e6edbede6a74d",
            "6c8020b23a7d4bc2",
            "26effca9785f898f",
            "327414aa6675ffd2",
            "dfb6846fd55e0261",
            "3f39d9d002249f08"
        ],
        "x": 434,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "e461993fb78eebad",
        "type": "ui_tab",
        "name": "Controls",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0bf576cdebe73fee",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#0033ff",
                "baseFont": "Arial,Arial,Helvetica,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#0033ff",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0033ff",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#4d70ff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0033ff",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "Arial,Arial,Helvetica,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "UNESP FMS with AAS",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 41,
                "sy": 48,
                "gx": 4,
                "gy": 4,
                "cx": 5,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c34233f4e7126d8d",
        "type": "ui_tab",
        "name": "Distribution",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "83f71b98cf19d898",
        "type": "ui_tab",
        "name": "Testing",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1e4aa09eb299b698",
        "type": "ui_tab",
        "name": "AS-i",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9f93b0f1106423fd",
        "type": "ui_tab",
        "name": "Handling 2",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3d6947a51eaa4869",
        "type": "ui_tab",
        "name": "Processing",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "781fe1dbe9f57920",
        "type": "ui_tab",
        "name": "Handling 1",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ea3865414e81449c",
        "type": "ui_tab",
        "name": "Sorting",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "746323899057de20",
        "type": "ui_group",
        "name": "Distribution [80]",
        "tab": "e461993fb78eebad",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3b06444fa87faa55",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53888/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "16e0c95c272a8083",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "c34233f4e7126d8d",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "562da63f2b193a08",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "c34233f4e7126d8d",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "33943232d13182a3",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "c34233f4e7126d8d",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cfacadcd3dd540db",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "c34233f4e7126d8d",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "1083ca62d37de8c5",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "c34233f4e7126d8d",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "60ef934333301133",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "c34233f4e7126d8d",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e3e178d792434d43",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "83f71b98cf19d898",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2b828702e5f8954d",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "83f71b98cf19d898",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3afd3721d248dc47",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "83f71b98cf19d898",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "8c68bade93d6199e",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "83f71b98cf19d898",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b8501b4cb16295f2",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "83f71b98cf19d898",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "62a2d24d4829f761",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "83f71b98cf19d898",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "7380eeb38be9e189",
        "type": "ui_group",
        "name": "Testing [70]",
        "tab": "e461993fb78eebad",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "53e8979d8156c485",
        "type": "ui_group",
        "name": "Testing",
        "tab": "1e4aa09eb299b698",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b3349d57e68acd08",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53887/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "b6b990ae69a976d4",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53885/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "a00547b320dc993c",
        "type": "ui_group",
        "name": "Handling 2",
        "tab": "1e4aa09eb299b698",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e33f94144f1ed79e",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "9f93b0f1106423fd",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "5edaf6f20f77fea3",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "9f93b0f1106423fd",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e896a5c0c82501cb",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "9f93b0f1106423fd",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "41c4a47d404ccd02",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "9f93b0f1106423fd",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3e41ba95e9dcf89d",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "9f93b0f1106423fd",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "018e5336b5eb1881",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "9f93b0f1106423fd",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "db369527e32a13be",
        "type": "ui_group",
        "name": "Handling 2 [90]",
        "tab": "e461993fb78eebad",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "f2f8310065c20774",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53890/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "f0b86134ea48aae1",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "3d6947a51eaa4869",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "0107743d478382d4",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "3d6947a51eaa4869",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "35ffe3a911b5678e",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "3d6947a51eaa4869",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d6f3f56ef8efed4d",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "3d6947a51eaa4869",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "89ff460aaad01d53",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "3d6947a51eaa4869",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "388650bffa901920",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "3d6947a51eaa4869",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2c4b7f181a78b351",
        "type": "ui_group",
        "name": "Processing [100]",
        "tab": "e461993fb78eebad",
        "order": 6,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "1cdeeb292587e778",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "781fe1dbe9f57920",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3e0a9523eee91330",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "781fe1dbe9f57920",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "bf45764539a46422",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "781fe1dbe9f57920",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ef990ee39b223d7c",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "781fe1dbe9f57920",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "aba69fdbdfb23212",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "781fe1dbe9f57920",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "1d680f6f86807497",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "781fe1dbe9f57920",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "8060a8f2ea13c506",
        "type": "ui_group",
        "name": "Handling 1",
        "tab": "1e4aa09eb299b698",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "602d077181cba948",
        "type": "ui_group",
        "name": "Handling 1 [50]",
        "tab": "e461993fb78eebad",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a51acaa1d54228bc",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53886/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "1b47d71d8c0ca983",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "ea3865414e81449c",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2490a20f6411791e",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "ea3865414e81449c",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "9c6a1b14087dfad2",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "ea3865414e81449c",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "6aa911ec249bae51",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "ea3865414e81449c",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a36d12a3bf252071",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "ea3865414e81449c",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3347abf363555eb1",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "ea3865414e81449c",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "35b4218b70272e4c",
        "type": "ui_group",
        "name": "Sorting [60]",
        "tab": "e461993fb78eebad",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ec71464ea3455bf5",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53889/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "64e5099c4d605ffd",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53882/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "83a1fa7bba925bef",
        "type": "ui_tab",
        "name": "Master",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4d17b04620749732",
        "type": "ui_group",
        "name": "Sensors",
        "tab": "83a1fa7bba925bef",
        "order": 1,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "bfdaf0d63a62c14d",
        "type": "ui_group",
        "name": "Actuators",
        "tab": "83a1fa7bba925bef",
        "order": 2,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a2d4669f93e17dd1",
        "type": "ui_group",
        "name": "FeedBack",
        "tab": "83a1fa7bba925bef",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "fb3eed9ee9df2ab1",
        "type": "ui_group",
        "name": "Test AS-i",
        "tab": "83a1fa7bba925bef",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "de1e4f8a88f18270",
        "type": "ui_group",
        "name": "Proc AS-i",
        "tab": "83a1fa7bba925bef",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e35b663843aaf994",
        "type": "ui_group",
        "name": "Visi AS-i",
        "tab": "83a1fa7bba925bef",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2e43821f0b6026f8",
        "type": "ui_group",
        "name": "Robo AS-i",
        "tab": "83a1fa7bba925bef",
        "order": 7,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3fc68357d4e7556f",
        "type": "ui_group",
        "name": "Stor AS-i",
        "tab": "83a1fa7bba925bef",
        "order": 8,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "f8020372f32fca60",
        "type": "ui_group",
        "name": "Sort AS-i",
        "tab": "83a1fa7bba925bef",
        "order": 9,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d99579db50330f02",
        "type": "mqtt-broker",
        "name": "S7 Host",
        "broker": "200.145.26.39",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "5b6c0b04892978b5",
        "type": "comment",
        "z": "6c5b5d9028215c6d",
        "name": "Node-Red: V6.8.2",
        "info": "V6.8.2\nCorrigido problema de acionamento via MQTT.\nSerá necessário a criação de um Node-RED exclusivo para o servidor MQTT que deverá funcionar separado do restante da aplicação.\n\nV6.8.1\nCorrigido os caminhos dos arquivos nodeset.xml e Variables.csv para que trabalhem em sistemas Linux e nas TVBox\n\nV6.8\nImplementado servidor MQTT para distribuição das variáveis do CLP, permitindo uma única conexão ao CLP.\nCorrigido as abas para iniciarem o Subscribe somente após o servidor de leitura estar ativo.\n\nV5.11.1 - 2025-06-11\nInício da otimização da aba do RFID para integração com a nova metodologia de rastreamento.\n\nV5.11 - 2025-06-10\nIncluído atuadores e feedbacks da estação da Remota do Robot [30]\n\nV5.10 - 2025-06-05\nIncluído estação Robot [30] e acertado os namespaces (ns) das demais estações após a criação.\n\nV6.7.1 - 2025-05-07\nCorrigido os caminhos dos arquivos nodeset.xml e Variables.csv para que trabalhem em sistemas Linux e nas TVBox\n\nV5.9 - 2025-05-05\nCriação de conexão única para a leitura de variáveis no CLP e funções para cada variável nos blocos individuais.\n\nV6.7 - 2025-05-02\nCriação de conexão única para a leitura de variáveis no CLP e funções para cada variável nos blocos individuais.\n\nV5.8 - 29/04/2025\nAtualização da versão anterior para as novas variáveis conforme a V6.6, inlcuindo principalmente a mudança do endereço PROFIBUS da Esteira para [20]\n\nV6.6 - 25/04/2025\nInclusão da estação Sorting [60] e Master [20]\nSerivodr 53892 - [20] Master\nSerivodr 53896 - [60] Sorting\n\nV6.5 - 24/04/2025\nInclusão da estação Handling 1 [50]\nSerivodr 53895 - [50] Handling 1\n\nV6.4 - 27/03/2025\nInclusão da estação Processing [100]\nSerivodr 53890 - [100] Processing\n\nV6.3 - 25/03/2025\nDivisão dos servidores para trabalhar com unidades de forma individual, resolvendo o problema de 10 subscrições por cliente.\nSerivodr 53887 - [70] Testing\nServidor 53888 - [80] Distribution\nServidor 53889 - [90] Handling 2\n\nv6.2.2 - 12/02/2025\nPequenos acertos para versão 1.2 do AAS\n\nV6.2.1 - 04/02/2025\nIncluído leitura e criação do arquivo de conversão e da subscrição das variáveis a partir do Status das conexões dos clientes.\nO novo modo solucionou o problema de leitura da 1ª leitura pois força uma escrita quando existe a inscrição.\n\nV6.2 - 03/02/2025\nAtualização do arquivo s7endpoint_CLP Mestre para conter todas as variáveis da estação Testing [70]\nCriação da Aba Testing [70] e seus respectivos sinais\n\nV6.1.1 - 31/01/2025\nCriada programação para garantir a 1ª leitura das variáveis, com trigger e delay de 10 segundos.\nTestes de leitura e escrita. Ok.\n\nV6.1 - 30/01/2025\nResolvido problema de leitura e escrita do AAS com tradução Variável para NameSpace e Identifier\nRefeita a programação para a estação Distribution [80] \n\nV6.0.1 - 4/12/2024\nInseridas as novas variáveis de controle no AAS\nAcertado o nome das classes para \"Sensors\" e \"Actuators\"\nProblema na criação da variável tipo Byte C_83_RQ_Parts\n\nV5.7.8 - 28/11/2024\nCriadas Variáveis de controle da estação Testing [70]\n\nV5.7.2 - 26/11/2024\nInvertidas das posições I90.1 e I90.2 devido à alteração física\nCriada variável (QB83) para número de peças requisitadas\n\nV5.7.1 - 14/11/2024\nAtualização da estação Distributing [80] para os novos modos de produção e acertado o nome das variáveis\nIncluído a possibilidade de entrega \"contada\" de peças.\n\nV6.0 - 24/09/2024 - AAS\n\tImplementação da 1ª versão do AAS, somente para a unidade Distribution [80]\n\tP.S.: A versão 5.7 permanecerá rodando e sendo desenvolvida visto que o AAS ainda precisa ser terminado para poder ser implantado por completo.\n\nV5.7 - 19/09/2024\nCorrigido acionamento da variável I_20_Led_On\nRetirado os acionamentos individuias das estação via \"Controls and Information\"\nAdicionado o Botão via \"Controls and Information\" para a produção de uma peça.\n\nV5.6 - 08/08/2024\nInclusão das variáveis de controle da estação Sorting [60]\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação Sorting [60] \n\nV5.5 - 05/08/2024\nAtualização dos nomes das variáveis de On/Off para Start/Stop e do sinal 80_O_Mag_Empty.\nAtualização das descrições de todas as variáveispara inglês\nAdequação dos nomes das variáveis para o AAS (com letras iniciando)\nAcertado o NameSpace das estações para que as variáveis do RFID fiquem junto com as demais do Conveyor [30] (ns=12) e corrigido as demais estações.\n\nV5.4 - 31/07/2024\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação Distribution [80] - Start e Modo (Automatico ou Manual).\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação Handling 1 [90] - Start e Modo (Cart2Del e Del2Cart).\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação Processing [100] - Modo (Rotate, Test e Test+Drill).\nAtualizado arquivos config.csv e s7endpoint_CLP Mestre.csv\n\n\nV5.3 - 30/07/2024\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação [70] Testing.\nAtualizado arquivos config.csv e s7endpoint_CLP Mestre.csv",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "23183039ade5deae",
        "type": "comment",
        "z": "6c5b5d9028215c6d",
        "name": "AAS: V2.1",
        "info": "V2.1 - 28/04/2025\n\nIncluído as variáveis de simulação (SimulatedData) para todas as estações.\n\nV2.0 - 14/03/2025\n\nDividido os Assets por estação devido à limitação do Node-RED de 100 subscriptions.\nCada estação agora terá a sua própria versão do arquivo, todos partindo da V2.0 em conjunto.\n\nV1.2 - 12/02/2025\n\nIncluído submodelos para o FMS (Documentation)\nIncluído submodelos para o Distribution (Identification, TechincalData, Documentation e SimulationData)\n\nV1.1 - 03/02/2025\n\nIncluído as variávies de Operational Data para a estação Testing [70]\n\nV1.0 - 30/01/2025\n\nIncluído as variáveis de Operational Data para a estação Distribution [80]",
        "x": 80,
        "y": 80,
        "wires": []
    },
    {
        "id": "613626f1e5f5e258",
        "type": "comment",
        "z": "6c5b5d9028215c6d",
        "name": "S7: V3.0.9",
        "info": "10/06/2025 - V3.0.9\nProgramação dos Sensores e Atuadores para a Remota do Braço Robótico [30] em FB3\n\n25/04/2025 - V3.0.8\nProgramação das estação Master [20] para que os sesnores do AS-i estivessem corretamente dentro da estação (e não separados) devido ao AAS.\nCorreção de TAGs diversas de variáveis\n\n15/04/2025 - V3.0.7\nProgramação básica da estação Handling 2 [90] para versão AAS Ok. Programados OB1, FB1, FB3, FB4 e FB5.\n\n31/03/2025 - V3.0.6\nResolvido problema de conexão estação [100] Processing. \nFoi necessário apagar e recolocar o Hardware, reconfigurando a rede PROFIBUS e os compartilhamentos.\n\n26/03/2025 - V3.0.5\nAcertado valores das variáveis das estações Handling 2 [90] e Processing [100] para o AAS.\n\n03/02/2025 - V3.0.4\nIncluídos OB82 e OB121 na estação Distribution [80]\nInserido o sinal de C_75_Initialization e corrigido as Tags para a estação Testing [70]\nAdequação dos novos endereços do Profibus nas estações Testing [70] e Distribution [80]\n\n04/12/2024 - V3.0.3\nProgramação estação Testing [70] : FB5 (Requested)\nIntegração da função Requested com as programações da estação Distributing [80], tanto no FB4 (Single) como no FB6 (Counted). \nFoi necessário substituir a programação de FB6 [80] devido à necessidade de não se ter peça no braço na última movimentação. Agora FB6 [80] está similar a FB4 [80]\n\n28/11/2024 - V3.0.2\nProgramada estação Testing [70]: OB1 (Main), FB1 (Initialization), FB4 (Identified). Ainda faltando FB5 (Requested)\n\n26/11/2024 - V3.0.1\nConcluída Programação da estação distributing [80]: OB1 (Main), FB1 (Initialization), FB4 (Single), FB5 (Continuous) e FB6 (Counted Mode) com controle via Node-RED e OPC UA\n\n13/11/2024 - V3.0\nInício da reprogramação das estações, para funcionamento junto ao FMS e Softwares de supervisão\nProgramada estação distributing [80]: OB1 (Main), FB1 (Initialization), FB4 (Single) e FB5 (Continuous). Ainda faltando FB6 (Counted Mode)\n\n01/10/2024 - V2.7\nAdicionado Remota Robot no CLP Mestre com o endereço Profibus 3. Variáries serão I30.0 a I32.7 e Q30.0 a Q30.7\nAdicionado OB121 e OB82 para resolver problema de inicialização.\nImplementação de posição de Manutenção (Key-Pos I125.2 = 0) e posição de produção (Key_Pos I125.2 = 1) para todas as estações.\n\n20/08/2024 - V2.6\nProgramação da estação Sorting [60] com os seis modos de produção\nAcerto da programação do Bloco FB11 (Produção de uma peça início ao fim) e dos blocos dos CLP´s que estavam em conflito\n\n02/08/2024 - V2.5\nAlteração e padronização da nomenclatura das variávies do OPC para atender as necessidades do AAS\n\n31/07/2024 - V2.4\nProgramação dos modos Test+Drill e Rotation Only [100] e retina de RESET\nAlteração da programação das unidades [70], [80], [90] e [100] para integração com a versão 5.4 do Node-RED na qual a programação dos modos é feito através do dashboard.\n\n23/07/2024 - V2.3\nProgramação do modo Test Only [100] e rotina de RESET.\n\n17/07/2024 - V2.2\nImplementação do tratamento de múltiplos carrinhos pela estação Master [20] para a chamada no Conveyor.\nInício programação unidade Processing [100] com 2 modos - Test e Test+Drill\n\n16/07/2024 - V2.1\nAjuste na programação do FB10 [20] Master para impedir solicitações multiplas enquanto o sistema ainda está em processo.\nAjuste na programação do [90] Handling 2 para usar a entrada Stop para alterar entre os modos de movimentação de peças, liberando a entrada Reset para zerar a memória.\nImplementação de RESET nas unidades [70], [80] e [90] no FB1 fazendo com que a entrada de Reset (I124.3) zere todas as memórias.\nImplementação de RESET na unidade [20] no FB1 fazendo com que a entrada de Off (I124.1) zere todas as memórias.\n\n04/04/2024 - V2.0\nProgramação por Function Blocks \n\nEm todas as estações (exceto Master)\nFB1 - Inicialização\nFB2 - OPC UA Sensores\nFB3 - OPC UA Atuadores\n\nNo Master:\nFB1 - Inicialização\nFB2 - OPC-UA Master\nFB3 - OPC-UA Conveyour\nFB4 - OPC-UA Handling 1\nFB5 - OPC-UA Sorting\nFB6 - OPC-UA Testing\nFB7 - OPC-UA Distribution\nFB8 - OPC-UA handling 2\nFB9 - OPC-UA Processing\nFB10 - Conveyor Control\n\nProgamações Adicionias:\n[70] TESTING\nFB4 - Identified Delivery\nFB5 - Requested Delivery\n\n[80] DISTRIBUTION\nFB4 - Manual Delivery (Single)\nFB5 - Automatic Delivery (Continuous)\n\n[90] HANDLING 2\nFB4 - Cart 2 Delivery\nFB5 - Delivery 2 Cart",
        "x": 80,
        "y": 120,
        "wires": []
    },
    {
        "id": "ff9ae4a2d3a0efc8",
        "type": "comment",
        "z": "6c5b5d9028215c6d",
        "name": "S7 Endpoint Variables: V6.6.2",
        "info": "v5.11 - 10/06/2025\nIncluído as variáveis dos atuadores e feedback da Remota do Robot [30], pareando com a V6.6.2 do S7endpoint\n\nV5.10 - 05/06/2025\nIncluído as variáveis dos sensores do Remota do Robot [30], pareando com a V6.6.1 do s7endpoint\n\nV5.8 - 29/04/2025\nAcertado as variáveis que foram atualizadas para o AAS para a versão sem o AAS, deixando assim somente a V6.6 para o s7endpoint\n\nV6.6 - 25/04/2025\nAcertado as variáveis da estação [60] e Master [20] Sorting para o AAS\n\nV6.5 - 24/04/2025\nAcertado as variáveis da estação [50] Handling1 para o AAS\n\nV6.4 - 27/03/2025\nAcertado as variáveis da estação [100] Processing para o AAS\n\nV6.3 - 25/03/2025\nAcertado as variáveis da estação [90] Handling 2, [80] Distribution e [70] Testing para o AAS\nCorrigido posição das variáveis I90.1 a I90.3 após mudança física\n\nV5.7.3 - 28/11/2024\nCriadas Variáveis de controle da estação Testing [70]\n\nV5.7.2 - 26/11/2024\nInvertidas das posições I90.1 e I90.2 devido à alteração física\nCriada variável (QB83) para número de peças requisitadas\n\nV5.7.1 - 14/11/2024\nAcertadas as variáveis de controle para a estação Distribution [80]\n\nV5.7 - 14/08/2024\nInclusão das variáveis de simulação da estação Master [20]\nCriação das variáveis de controle para o Master [20] - Produção início ao fim.\n\nV5.6 - 08/08/2024\nInclusão das variáveis de controle da estação Sorting [60]\n\nV5.5 - 05/08/2024\nAtualização dos nomes das variáveis de On/Off para Start/Stop e do sinal O_80_Mag_Empty.\nAtualização das descrições de todas as variáveispara inglês\nImplementação das variáveis de simulação para as estações Conveyor [30], Handling 1 [50] e Sorting [60]\nAdequação dos nomes das variáveis para o AAS (com letras iniciando)\nAcertado o NameSpace para que as variáveis do RFID fiquem junto com as demais do Conveyor [30] (ns=12) e corrigido as demais estações.\n\nV5.4 - 31/07/2024\nImplementação de variáveis de controle para a estação Handling 2 [90] para o sentido de movimento do braço além de botão de Start\nImplementação de variáveis de controle para a estação Processing [100] para o modo de produção\nImplementação das variáveis de simulação para a estação Handling 2 [90] e Processing [100]\n\n\nV5.3 - 30/07/2024\nImplementação de variáveis de controle para a estação Testing [70] para o modo de funcionamento (Identified e Requested)\nImplementação de variáveis de controle para a estação Distribution [80] para o modo de funcionamento (Manual e Automatic) além de botão de Start\nImplementação das variáveis de simulação para a estação Testing [70] e Distribution [80]\n\n17/07/2024\nCorreção de problemas na estação Handling [90] que estava criando os sinais dos sensores (outputs) pois estavam duplicados com os Inputs.",
        "x": 360,
        "y": 40,
        "wires": []
    },
    {
        "id": "93b2a80150713101",
        "type": "comment",
        "z": "6c5b5d9028215c6d",
        "name": "CVS Path",
        "info": "Linux / TV BOX:\n/root/ProjetoGemeo/AAS/Master/Variables.csv\n/root/ProjetoGemeo/AAS/Handling1/Variables.csv\n/root/ProjetoGemeo/AAS/Sorting/Variables.csv\n/root/ProjetoGemeo/AAS/Testing/Variables.csv\n/root/ProjetoGemeo/AAS/Distribution/Variables.csv\n/root/ProjetoGemeo/AAS/Handling2/Variables.csv\n/root/ProjetoGemeo/AAS/Processing/Variables.csv\n\nWindows\nC:\\ProjetoGemeo\\AAS\\Master\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Handling1\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Sorting\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Testing\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Distribution\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Handling2\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Processing\\Variables.csv",
        "x": 300,
        "y": 120,
        "wires": []
    },
    {
        "id": "0dbf0bdc893af6e1",
        "type": "comment",
        "z": "6c5b5d9028215c6d",
        "name": "nodeset.xml Path",
        "info": "Linux / TV BOX:\n/root/ProjetoGemeo/AAS/Master\n/root/ProjetoGemeo/AAS/Robot\n/root/ProjetoGemeo/AAS/Storage\n/root/ProjetoGemeo/AAS/Handling1\n/root/ProjetoGemeo/AAS/Sorting\n/root/ProjetoGemeo/AAS/Testing\n/root/ProjetoGemeo/AAS/Distribution\n/root/ProjetoGemeo/AAS/Handling2\n/root/ProjetoGemeo/AAS/Processing\n\nWindows\nC:\\ProjetoGemeo\\AAS\\Master\nC:\\ProjetoGemeo\\AAS\\Robot\nC:\\ProjetoGemeo\\AAS\\Storage\nC:\\ProjetoGemeo\\AAS\\Handling1\nC:\\ProjetoGemeo\\AAS\\Sorting\nC:\\ProjetoGemeo\\AAS\\Testing\nC:\\ProjetoGemeo\\AAS\\Distribution\nC:\\ProjetoGemeo\\AAS\\Handling2\nC:\\ProjetoGemeo\\AAS\\Processing",
        "x": 320,
        "y": 80,
        "wires": []
    },
    {
        "id": "0986af94054f12e5",
        "type": "debug",
        "z": "9ab3d53948c971b4",
        "g": "70bc5e18723c6f47",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "52c1b4082569ab9c",
        "type": "OpcUa-Server",
        "z": "9ab3d53948c971b4",
        "g": "70bc5e18723c6f47",
        "port": "53882",
        "name": "Server : Master",
        "endpoint": "",
        "users": "",
        "nodesetDir": "C:\\ProjetoGemeo\\AAS\\Master",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "0986af94054f12e5"
            ]
        ]
    },
    {
        "id": "6d5c2871ca0b19d6",
        "type": "comment",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "c1beeb6aaeddc5d6",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"A_\")) variableClass = \"AS-i\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "5858e2274523c443"
            ]
        ]
    },
    {
        "id": "5858e2274523c443",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Master_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "4644e63660f593c4"
            ]
        ]
    },
    {
        "id": "077efe0437816dda",
        "type": "file",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Creates CSV Header",
        "filename": "C:\\ProjetoGemeo\\AAS\\Master\\Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "16a427a9fadec37e",
        "type": "comment",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "4644e63660f593c4",
        "type": "OpcUa-Client",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "endpoint": "64e5099c4d605ffd",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "3c04e7686eea8fc3"
            ],
            [
                "f1a67500ad91b1a9",
                "2337c625080a13d1"
            ]
        ]
    },
    {
        "id": "3c04e7686eea8fc3",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 300,
        "wires": [
            [
                "97f5faaa9482f0c0",
                "c02766e9c1d9aa7b"
            ]
        ]
    },
    {
        "id": "97f5faaa9482f0c0",
        "type": "file",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Creates CSV List",
        "filename": "C:\\ProjetoGemeo\\AAS\\Master\\Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c02766e9c1d9aa7b",
        "type": "debug",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 340,
        "wires": []
    },
    {
        "id": "618da62de4c7d49e",
        "type": "comment",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "d83d8e4a3277aa34",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "eac621911c679a4c"
            ]
        ]
    },
    {
        "id": "54d59ccc516ce301",
        "type": "OpcUa-Client",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "endpoint": "64e5099c4d605ffd",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "de7d7647f34a1663"
            ],
            []
        ]
    },
    {
        "id": "de7d7647f34a1663",
        "type": "debug",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "bb684678e7cd0be5",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Write_Master",
        "links": [
            "96c9dd0d0a7b3d86",
            "08d7be0e5808c9bf",
            "58f8c1569237f3eb",
            "63ad378fb4e91567",
            "e69e201556168f9c",
            "266f5f18065e3173",
            "092291fb80eb00de",
            "245be97a9a22f33f",
            "01161cee2b4c6d1c",
            "e9023fd65be3ef11",
            "8aefd8498f4139e5",
            "0d90364324331557",
            "115cfd91d3173a27",
            "e60892712f512e94",
            "bffd5fe0f72413d8",
            "df770917a5b37a0f",
            "481198c829ef537d"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "9347bda861a1932d"
            ]
        ]
    },
    {
        "id": "9347bda861a1932d",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "4c9276a9bc8893d5"
            ]
        ]
    },
    {
        "id": "4c9276a9bc8893d5",
        "type": "file in",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "CSV File",
        "filename": "C:\\ProjetoGemeo\\AAS\\Master\\Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "d83d8e4a3277aa34"
            ]
        ]
    },
    {
        "id": "eac621911c679a4c",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "54d59ccc516ce301"
            ]
        ]
    },
    {
        "id": "78a1f962d2eb0717",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "CSV Link",
        "links": [
            "f1a67500ad91b1a9"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "d2689b7e70c3b21d"
            ]
        ]
    },
    {
        "id": "d2689b7e70c3b21d",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "1036ca5f9a1a9a78"
            ]
        ]
    },
    {
        "id": "1036ca5f9a1a9a78",
        "type": "trigger",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "077efe0437816dda"
            ]
        ]
    },
    {
        "id": "f1a67500ad91b1a9",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "78a1f962d2eb0717",
            "7a5c2167fe44f4ba"
        ],
        "x": 935,
        "y": 340,
        "wires": []
    },
    {
        "id": "7a5c2167fe44f4ba",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "CSV Link",
        "links": [
            "f1a67500ad91b1a9"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "3a7f0f42f6065259"
            ]
        ]
    },
    {
        "id": "3a7f0f42f6065259",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_20_On\" : false,\n    \"O_20_Off\" : false,\n    \"O_20_Controler_On\" : false,\n    \"F_22_Led_On\" : false,\n    \"F_22_Led_Off\" : false,\n    \"F_22_Conveyor\" : false,\n    \"O_24_Cart_Stat\" : false,\n    \"O_24_Cart_Next\" : false,\n    \"O_24_Optic\" : false,\n    \"O_24_Count\" : false,\n    \"O_24_Pist_Bck\" : false,\n    \"F_24_Release_FB\" : false,\n    \"O_25_Cart_Stat\" : false,\n    \"O_25_Cart_Next\" : false,\n    \"O_25_Optic\" : false,\n    \"O_25_Count\" : false,\n    \"O_25_Pist_Bck\" : false,\n    \"F_25_Release_FB\" : false,\n    \"O_26_Cart_Stat\" : false,\n    \"O_26_Cart_Next\" : false,\n    \"O_26_Optic\" : false,\n    \"O_26_Count\" : false,\n    \"O_26_Pist_Bck\" : false,\n    \"F_26_Release_FB\" : false,\n    \"O_27_Cart_Stat\" : false,\n    \"O_27_Cart_Next\" : false,\n    \"O_27_Optic\" : false,\n    \"O_27_Count\" : false,\n    \"O_27_Pist_Bck\" : false,\n    \"F_27_Release_FB\" : false,\n    \"O_28_Cart_Stat\" : false,\n    \"O_28_Cart_Next\" : false,\n    \"O_28_Optic\" : false,\n    \"O_28_Count\" : false,\n    \"O_28_Pist_Bck\" : false,\n    \"F_28_Release_FB\" : false,\n    \"O_29_Cart_Stat\" : false,\n    \"O_29_Cart_Next\" : false,\n    \"O_29_Optic\" : false,\n    \"O_29_Count\" : false,\n    \"O_29_Pist_Bck\" : false,\n    \"F_29_Release_FB\" : false,\n    \"I_20_Led_On\" : false,\n    \"I_20_Led_Off\" : false,\n    \"I_20_Conveyor\" : false,\n    \"I_24_Cart_Test\" : false,\n    \"C_24_Request\" : false,\n    \"C_24_CartDel\" : false,\n    \"I_25_Cart_Proc\" : false,\n    \"C_25_Request\" : false,\n    \"C_25_CartDel\" : false,\n    \"I_26_Cart_Visi\" : false,\n    \"C_26_Request\" : false,\n    \"C_26_CartDel\" : false,\n    \"I_27_Cart_Robo\" : false,\n    \"C_27_Request\" : false,\n    \"C_27_CartDel\" : false,\n    \"I_28_Cart_Stor\" : false,\n    \"C_28_Request\" : false,\n    \"C_28_CartDel\" : false,\n    \"I_29_Cart_Sort\" : false,\n    \"C_29_Request\" : false,\n    \"C_29_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "8a2582886dacde64"
            ]
        ]
    },
    {
        "id": "8a2582886dacde64",
        "type": "trigger",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "c1beeb6aaeddc5d6"
            ]
        ]
    },
    {
        "id": "5528fc50de3fa8cb",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "item": "O_20_On",
        "datatype": "Boolean",
        "value": "",
        "name": "O_20_On",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "01161cee2b4c6d1c"
            ]
        ]
    },
    {
        "id": "efb5cb52d4ef2034",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "item": "O_20_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "O_20_Off",
        "x": 480,
        "y": 660,
        "wires": [
            [
                "01161cee2b4c6d1c"
            ]
        ]
    },
    {
        "id": "a10942ef0cab4307",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "item": "O_20_Controler_On",
        "datatype": "Boolean",
        "value": "",
        "name": "O_20_Controler_On",
        "x": 440,
        "y": 700,
        "wires": [
            [
                "01161cee2b4c6d1c"
            ]
        ]
    },
    {
        "id": "01161cee2b4c6d1c",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "20 Physical Sensor",
        "mode": "link",
        "links": [
            "bb684678e7cd0be5"
        ],
        "x": 625,
        "y": 660,
        "wires": []
    },
    {
        "id": "99b3320d477e47c8",
        "type": "switch",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "20 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_20_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_20_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_20_Controler_On",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 660,
        "wires": [
            [
                "897f1896be24400d"
            ],
            [
                "6ded375ca450097a"
            ],
            [
                "0f2bf967cae16263"
            ]
        ]
    },
    {
        "id": "897f1896be24400d",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "order": 0,
        "group": "4d17b04620749732",
        "width": 0,
        "height": 0,
        "label": "On Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_20_On",
        "x": 1040,
        "y": 620,
        "wires": []
    },
    {
        "id": "6ded375ca450097a",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "order": 0,
        "group": "4d17b04620749732",
        "width": 0,
        "height": 0,
        "label": "Off Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_20_Off",
        "x": 1040,
        "y": 660,
        "wires": []
    },
    {
        "id": "0f2bf967cae16263",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "order": 0,
        "group": "4d17b04620749732",
        "width": 0,
        "height": 0,
        "label": "Controler On",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_20_Controler_On",
        "x": 1080,
        "y": 700,
        "wires": []
    },
    {
        "id": "c5664a9ce65b2df7",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_20_On\" : false,\n            \"O_20_Off\" : false,\n            \"O_20_Controler_On\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "b6eefc8cbe802c43"
            ]
        ]
    },
    {
        "id": "1df3d549c330f57b",
        "type": "OpcUa-Client",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "endpoint": "64e5099c4d605ffd",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "33f63caefed114e7",
                "4302c813ba918ed9"
            ],
            [
                "c5664a9ce65b2df7"
            ]
        ]
    },
    {
        "id": "b6eefc8cbe802c43",
        "type": "trigger",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "1562fba7d472d3d9"
            ]
        ]
    },
    {
        "id": "38214d04b0a9cfde",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "1df3d549c330f57b"
            ]
        ]
    },
    {
        "id": "33f63caefed114e7",
        "type": "debug",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "20 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 580,
        "wires": []
    },
    {
        "id": "1562fba7d472d3d9",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "9f7c84479d1adffb"
            ]
        ]
    },
    {
        "id": "28b992f8062f98c3",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "38214d04b0a9cfde"
            ]
        ]
    },
    {
        "id": "9f7c84479d1adffb",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "78ac3eaa8ce4a87d"
            ]
        ]
    },
    {
        "id": "78ac3eaa8ce4a87d",
        "type": "file in",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "CSV",
        "filename": "C:\\ProjetoGemeo\\AAS\\Master\\Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "28b992f8062f98c3"
            ]
        ]
    },
    {
        "id": "deae3961ad2f6b82",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "item": "I_20_Led_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_20_Led_On",
        "x": 460,
        "y": 880,
        "wires": [
            [
                "e9023fd65be3ef11"
            ]
        ]
    },
    {
        "id": "0e3d0f31d7792a00",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "item": "I_20_Led_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "I_20_Led_Off",
        "x": 460,
        "y": 920,
        "wires": [
            [
                "e9023fd65be3ef11"
            ]
        ]
    },
    {
        "id": "32d8f29a76676619",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "item": "I_20_Conveyor",
        "datatype": "Boolean",
        "value": "",
        "name": "I_20_Conveyor",
        "x": 460,
        "y": 960,
        "wires": [
            [
                "e9023fd65be3ef11"
            ]
        ]
    },
    {
        "id": "e9023fd65be3ef11",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "20 Physical Actuators",
        "mode": "link",
        "links": [
            "bb684678e7cd0be5"
        ],
        "x": 625,
        "y": 920,
        "wires": []
    },
    {
        "id": "66bb178c73846512",
        "type": "switch",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "20 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_20_Led_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_20_Led_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_20_Conveyor",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 920,
        "wires": [
            [
                "21d7950c4fa305c1"
            ],
            [
                "517b0609e79dac35"
            ],
            [
                "c9b55c86be8a93c0"
            ]
        ]
    },
    {
        "id": "b1b0379b1980abf5",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "I_20_Led_On",
        "label": "On LED",
        "tooltip": "",
        "group": "bfdaf0d63a62c14d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 880,
        "wires": [
            [
                "deae3961ad2f6b82"
            ]
        ]
    },
    {
        "id": "556c8d3cce5cbeed",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "I_20_Led_Off",
        "label": "Off LED",
        "tooltip": "",
        "group": "bfdaf0d63a62c14d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 920,
        "wires": [
            [
                "0e3d0f31d7792a00"
            ]
        ]
    },
    {
        "id": "1e1267b762fed28c",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "I_20_Conveyor",
        "label": "Conveyor",
        "tooltip": "",
        "group": "bfdaf0d63a62c14d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 960,
        "wires": [
            [
                "32d8f29a76676619"
            ]
        ]
    },
    {
        "id": "ada2dd1774932e4d",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 800,
        "wires": [
            [
                "c5df6da7e279c9af"
            ]
        ]
    },
    {
        "id": "2d9207bcaa443cf5",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 800,
        "wires": [
            [
                "ada2dd1774932e4d"
            ]
        ]
    },
    {
        "id": "c5df6da7e279c9af",
        "type": "OpcUa-Client",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "endpoint": "64e5099c4d605ffd",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 800,
        "wires": [
            [
                "f4f8d8f097236937",
                "5fdd88153ba57033"
            ],
            [
                "f46f543a27f24719"
            ]
        ]
    },
    {
        "id": "cb463dbc6a102405",
        "type": "file in",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "CSV",
        "filename": "C:\\ProjetoGemeo\\AAS\\Master\\Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 800,
        "wires": [
            [
                "2d9207bcaa443cf5"
            ]
        ]
    },
    {
        "id": "f4f8d8f097236937",
        "type": "debug",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "20 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 840,
        "wires": []
    },
    {
        "id": "f46f543a27f24719",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n        \"I_20_Led_On\" : false,\n        \"I_20_Led_Off\" : false,\n        \"I_20_Conveyor\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 800,
        "wires": [
            [
                "c5c9889c100dd751"
            ]
        ]
    },
    {
        "id": "e3be8a4fc91f2398",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 800,
        "wires": [
            [
                "cb463dbc6a102405"
            ]
        ]
    },
    {
        "id": "c5c9889c100dd751",
        "type": "trigger",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 800,
        "wires": [
            [
                "bdf748e82b468af7"
            ]
        ]
    },
    {
        "id": "bdf748e82b468af7",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 800,
        "wires": [
            [
                "e3be8a4fc91f2398"
            ]
        ]
    },
    {
        "id": "93b53ee0d4288b86",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "item": "F_22_Led_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_22_Led_On",
        "x": 460,
        "y": 1140,
        "wires": [
            [
                "8aefd8498f4139e5"
            ]
        ]
    },
    {
        "id": "f74038b863881b4f",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "item": "F_22_Led_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "F_22_Led_Off",
        "x": 460,
        "y": 1180,
        "wires": [
            [
                "8aefd8498f4139e5"
            ]
        ]
    },
    {
        "id": "32994b5c4d728971",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "item": "F_22_Conveyor",
        "datatype": "Boolean",
        "value": "",
        "name": "F_22_Conveyor",
        "x": 460,
        "y": 1220,
        "wires": [
            [
                "8aefd8498f4139e5"
            ]
        ]
    },
    {
        "id": "8aefd8498f4139e5",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "50 Physical Feedback",
        "mode": "link",
        "links": [
            "bb684678e7cd0be5"
        ],
        "x": 625,
        "y": 1180,
        "wires": []
    },
    {
        "id": "7856fdd5ea04750e",
        "type": "switch",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "20 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_22_Led_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_22_Led_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_22_Conveyor",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 1180,
        "wires": [
            [
                "33eb9a91fb7f46f8"
            ],
            [
                "de3e74feccb01b46"
            ],
            [
                "32943a784011420a"
            ]
        ]
    },
    {
        "id": "33eb9a91fb7f46f8",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "order": 0,
        "group": "a2d4669f93e17dd1",
        "width": 0,
        "height": 0,
        "label": "On LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_22_Led_On",
        "x": 1060,
        "y": 1140,
        "wires": []
    },
    {
        "id": "de3e74feccb01b46",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "order": 0,
        "group": "a2d4669f93e17dd1",
        "width": 0,
        "height": 0,
        "label": "Off LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_22_Led_Off",
        "x": 1060,
        "y": 1180,
        "wires": []
    },
    {
        "id": "32943a784011420a",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "order": 0,
        "group": "a2d4669f93e17dd1",
        "width": 0,
        "height": 0,
        "label": "Conveyor On",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_22_Conveyor",
        "x": 1060,
        "y": 1220,
        "wires": []
    },
    {
        "id": "90085a134a4d049c",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1060,
        "wires": [
            [
                "c1af6f050e068af0"
            ]
        ]
    },
    {
        "id": "0cba36328fb5fb9c",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1060,
        "wires": [
            [
                "90085a134a4d049c"
            ]
        ]
    },
    {
        "id": "c1af6f050e068af0",
        "type": "OpcUa-Client",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "endpoint": "64e5099c4d605ffd",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1060,
        "wires": [
            [
                "b9a1187d7acad0a5",
                "b164da499cdf662b"
            ],
            [
                "612ebd677c902a27"
            ]
        ]
    },
    {
        "id": "5b81a12a134f61fa",
        "type": "file in",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "CSV",
        "filename": "C:\\ProjetoGemeo\\AAS\\Master\\Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1060,
        "wires": [
            [
                "0cba36328fb5fb9c"
            ]
        ]
    },
    {
        "id": "b9a1187d7acad0a5",
        "type": "debug",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "20 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1100,
        "wires": []
    },
    {
        "id": "612ebd677c902a27",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n        \"F_22_Led_On\" : false,\n        \"F_22_Led_Off\" : false,\n        \"F_22_Conveyor\" : false,\n}};\nelse return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1060,
        "wires": [
            [
                "c9f4e228d1b2cae1"
            ]
        ]
    },
    {
        "id": "c5a080ded9f4d0df",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1060,
        "wires": [
            [
                "5b81a12a134f61fa"
            ]
        ]
    },
    {
        "id": "c9f4e228d1b2cae1",
        "type": "trigger",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1060,
        "wires": [
            [
                "74e14693a85f2eae"
            ]
        ]
    },
    {
        "id": "74e14693a85f2eae",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1060,
        "wires": [
            [
                "c5a080ded9f4d0df"
            ]
        ]
    },
    {
        "id": "60444afa0f103abb",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "item": "O_24_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Cart_Stat",
        "x": 460,
        "y": 1400,
        "wires": [
            [
                "0d90364324331557"
            ]
        ]
    },
    {
        "id": "51d3568ed4d95b0e",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "item": "O_24_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Cart_Next",
        "x": 450,
        "y": 1440,
        "wires": [
            [
                "0d90364324331557"
            ]
        ]
    },
    {
        "id": "7dd16a7c5cdd8725",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "item": "O_24_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Optic",
        "x": 470,
        "y": 1480,
        "wires": [
            [
                "0d90364324331557"
            ]
        ]
    },
    {
        "id": "65ebb187586a8076",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "item": "O_24_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Count",
        "x": 470,
        "y": 1520,
        "wires": [
            [
                "0d90364324331557"
            ]
        ]
    },
    {
        "id": "b0b6daa09ca2a610",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "item": "O_24_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Pist_Bck",
        "x": 460,
        "y": 1560,
        "wires": [
            [
                "0d90364324331557"
            ]
        ]
    },
    {
        "id": "f8c7c2d1939582fa",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "item": "F_24_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_24_Release_FB",
        "x": 450,
        "y": 1600,
        "wires": [
            [
                "0d90364324331557"
            ]
        ]
    },
    {
        "id": "0d90364324331557",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "Test AS-i",
        "mode": "link",
        "links": [
            "bb684678e7cd0be5"
        ],
        "x": 625,
        "y": 1560,
        "wires": []
    },
    {
        "id": "6d3e7d390a7be59a",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1320,
        "wires": [
            [
                "5a0f9dfa8b70af07"
            ]
        ]
    },
    {
        "id": "5a0f9dfa8b70af07",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1320,
        "wires": [
            [
                "b3167b2e3fcbb0ca"
            ]
        ]
    },
    {
        "id": "b3167b2e3fcbb0ca",
        "type": "file in",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "CSV",
        "filename": "C:\\ProjetoGemeo\\AAS\\Master\\Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1320,
        "wires": [
            [
                "265d0524a0a44f1a"
            ]
        ]
    },
    {
        "id": "265d0524a0a44f1a",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1320,
        "wires": [
            [
                "a71fdb4c519374b2"
            ]
        ]
    },
    {
        "id": "a71fdb4c519374b2",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1320,
        "wires": [
            [
                "a33506b8fa816784"
            ]
        ]
    },
    {
        "id": "a33506b8fa816784",
        "type": "OpcUa-Client",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "endpoint": "64e5099c4d605ffd",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1320,
        "wires": [
            [
                "49699f88990e4673",
                "c8c2413d65b07430"
            ],
            [
                "50c04595323c92be"
            ]
        ]
    },
    {
        "id": "8ee224270e3e6ffe",
        "type": "switch",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "Test AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_24_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_24_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_24_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_24_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_24_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_24_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_24_Cart_Test",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_24_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_24_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 1560,
        "wires": [
            [
                "b14995e01780927f"
            ],
            [
                "af782326b1b8ad69"
            ],
            [
                "e07203d078c3684c"
            ],
            [
                "0e25af63c57a305e"
            ],
            [
                "0e5b54233613015c"
            ],
            [
                "fc5e25e03e585f66"
            ],
            [
                "8f396e165cc3b6da"
            ],
            [
                "7458ba773ffc9538"
            ],
            [
                "bb90066bdf5c5657"
            ]
        ]
    },
    {
        "id": "b14995e01780927f",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "order": 1,
        "group": "fb3eed9ee9df2ab1",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Cart_Stat",
        "x": 1060,
        "y": 1400,
        "wires": []
    },
    {
        "id": "af782326b1b8ad69",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "order": 2,
        "group": "fb3eed9ee9df2ab1",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Cart_Next",
        "x": 1070,
        "y": 1440,
        "wires": []
    },
    {
        "id": "e07203d078c3684c",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "order": 3,
        "group": "fb3eed9ee9df2ab1",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Optic",
        "x": 1050,
        "y": 1480,
        "wires": []
    },
    {
        "id": "0e25af63c57a305e",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "order": 4,
        "group": "fb3eed9ee9df2ab1",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Count",
        "x": 1050,
        "y": 1520,
        "wires": []
    },
    {
        "id": "0e5b54233613015c",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "order": 5,
        "group": "fb3eed9ee9df2ab1",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Pist_Bck",
        "x": 1060,
        "y": 1560,
        "wires": []
    },
    {
        "id": "fc5e25e03e585f66",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "order": 6,
        "group": "fb3eed9ee9df2ab1",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_24_Release_FB",
        "x": 1070,
        "y": 1600,
        "wires": []
    },
    {
        "id": "bb90066bdf5c5657",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "order": 9,
        "group": "fb3eed9ee9df2ab1",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_24_CartDel",
        "x": 1060,
        "y": 1720,
        "wires": []
    },
    {
        "id": "20cc428dd0d26591",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "item": "C_24_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_24_CartDel",
        "x": 460,
        "y": 1720,
        "wires": [
            [
                "0d90364324331557"
            ]
        ]
    },
    {
        "id": "49699f88990e4673",
        "type": "debug",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "Test AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1360,
        "wires": []
    },
    {
        "id": "50c04595323c92be",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_24_Cart_Stat\" : false,\n    \"O_24_Cart_Next\" : false,\n    \"O_24_Optic\" : false,\n    \"O_24_Count\" : false,\n    \"O_24_Pist_Bck\" : false,\n    \"F_24_Release_FB\" : false,\n    \"I_24_Cart_Test\" : false,\n    \"C_24_Request\" : false,\n    \"C_24_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1320,
        "wires": [
            [
                "666de35a8b470e0e"
            ]
        ]
    },
    {
        "id": "666de35a8b470e0e",
        "type": "trigger",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1320,
        "wires": [
            [
                "6d3e7d390a7be59a"
            ]
        ]
    },
    {
        "id": "8530fc11fd2b9197",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "I_24_Cart_Test",
        "label": "Release cart",
        "tooltip": "",
        "group": "fb3eed9ee9df2ab1",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1640,
        "wires": [
            [
                "8d5d88bb78436995"
            ]
        ]
    },
    {
        "id": "8d5d88bb78436995",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "item": "I_24_Cart_Test",
        "datatype": "Boolean",
        "value": "",
        "name": "I_24_Cart_Test",
        "x": 460,
        "y": 1640,
        "wires": [
            [
                "0d90364324331557"
            ]
        ]
    },
    {
        "id": "3797f6c1480da640",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "C_24_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "fb3eed9ee9df2ab1",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1680,
        "wires": [
            [
                "37a3166800540586"
            ]
        ]
    },
    {
        "id": "37a3166800540586",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "item": "C_24_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_24_Request",
        "x": 460,
        "y": 1680,
        "wires": [
            [
                "0d90364324331557"
            ]
        ]
    },
    {
        "id": "60027df692f9ad67",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "item": "O_25_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Cart_Stat",
        "x": 480,
        "y": 1900,
        "wires": [
            [
                "115cfd91d3173a27"
            ]
        ]
    },
    {
        "id": "32e01f3c65e1b0e4",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "item": "O_25_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Cart_Next",
        "x": 470,
        "y": 1940,
        "wires": [
            [
                "115cfd91d3173a27"
            ]
        ]
    },
    {
        "id": "a090563210b72377",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "item": "O_25_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Optic",
        "x": 490,
        "y": 1980,
        "wires": [
            [
                "115cfd91d3173a27"
            ]
        ]
    },
    {
        "id": "f9a94b5495cbd170",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "item": "O_25_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Count",
        "x": 490,
        "y": 2020,
        "wires": [
            [
                "115cfd91d3173a27"
            ]
        ]
    },
    {
        "id": "1a45c3ea1784af8f",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "item": "O_25_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Pist_Bck",
        "x": 480,
        "y": 2060,
        "wires": [
            [
                "115cfd91d3173a27"
            ]
        ]
    },
    {
        "id": "c2d27a19d1672a05",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "item": "F_25_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_25_Release_FB",
        "x": 470,
        "y": 2100,
        "wires": [
            [
                "115cfd91d3173a27"
            ]
        ]
    },
    {
        "id": "115cfd91d3173a27",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "Proc AS-i",
        "mode": "link",
        "links": [
            "bb684678e7cd0be5"
        ],
        "x": 645,
        "y": 2060,
        "wires": []
    },
    {
        "id": "88d0b357509c2089",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1820,
        "wires": [
            [
                "16c95da3db2723f6"
            ]
        ]
    },
    {
        "id": "16c95da3db2723f6",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1820,
        "wires": [
            [
                "4971c01157d9f0aa"
            ]
        ]
    },
    {
        "id": "4971c01157d9f0aa",
        "type": "file in",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "CSV",
        "filename": "C:\\ProjetoGemeo\\AAS\\Master\\Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1820,
        "wires": [
            [
                "0543636eb6bf3c59"
            ]
        ]
    },
    {
        "id": "0543636eb6bf3c59",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1820,
        "wires": [
            [
                "5587a18969bc8b56"
            ]
        ]
    },
    {
        "id": "5587a18969bc8b56",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1820,
        "wires": [
            [
                "83ef5437fb818d6c"
            ]
        ]
    },
    {
        "id": "83ef5437fb818d6c",
        "type": "OpcUa-Client",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "endpoint": "64e5099c4d605ffd",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1820,
        "wires": [
            [
                "5d6ba60cdef5f395",
                "b3f3e7c3aaa1b7f2"
            ],
            [
                "908f0dad535bae5a"
            ]
        ]
    },
    {
        "id": "60e05b2619adc766",
        "type": "switch",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "Proc AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_25_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_25_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_25_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_25_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_25_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_25_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_25_Cart_Proc",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_25_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_25_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 859.9999618530273,
        "y": 2060.9998321533203,
        "wires": [
            [
                "7b3840e340b16456"
            ],
            [
                "2cf4edbc857c436a"
            ],
            [
                "06de1f4c747e7a98"
            ],
            [
                "0dfb6c87b025b9c5"
            ],
            [
                "6991ec725e19cb39"
            ],
            [
                "4c15728b15fef0b1"
            ],
            [
                "9b975ad191c5277b"
            ],
            [
                "3b929b95973d08f2"
            ],
            [
                "445993276f9419ce"
            ]
        ]
    },
    {
        "id": "7b3840e340b16456",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "order": 1,
        "group": "de1e4f8a88f18270",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Cart_Stat",
        "x": 1059.9999618530273,
        "y": 1900.9998321533203,
        "wires": []
    },
    {
        "id": "2cf4edbc857c436a",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "order": 2,
        "group": "de1e4f8a88f18270",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Cart_Next",
        "x": 1069.9999618530273,
        "y": 1940.9998321533203,
        "wires": []
    },
    {
        "id": "06de1f4c747e7a98",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "order": 3,
        "group": "de1e4f8a88f18270",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Optic",
        "x": 1049.9999618530273,
        "y": 1980.9998321533203,
        "wires": []
    },
    {
        "id": "0dfb6c87b025b9c5",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "order": 4,
        "group": "de1e4f8a88f18270",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Count",
        "x": 1049.9999618530273,
        "y": 2020.9998321533203,
        "wires": []
    },
    {
        "id": "6991ec725e19cb39",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "order": 5,
        "group": "de1e4f8a88f18270",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Pist_Bck",
        "x": 1059.9999618530273,
        "y": 2060.9998321533203,
        "wires": []
    },
    {
        "id": "4c15728b15fef0b1",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "order": 6,
        "group": "de1e4f8a88f18270",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_25_Release_FB",
        "x": 1069.9999618530273,
        "y": 2100.9998321533203,
        "wires": []
    },
    {
        "id": "445993276f9419ce",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "order": 9,
        "group": "de1e4f8a88f18270",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_25_CartDel",
        "x": 1059.9999618530273,
        "y": 2220.9998321533203,
        "wires": []
    },
    {
        "id": "c5dc532e30d1832c",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "item": "C_25_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_25_CartDel",
        "x": 480,
        "y": 2220,
        "wires": [
            [
                "115cfd91d3173a27"
            ]
        ]
    },
    {
        "id": "5d6ba60cdef5f395",
        "type": "debug",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "Proc AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1860,
        "wires": []
    },
    {
        "id": "908f0dad535bae5a",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_25_Cart_Stat\" : false,\n    \"O_25_Cart_Next\" : false,\n    \"O_25_Optic\" : false,\n    \"O_25_Count\" : false,\n    \"O_25_Pist_Bck\" : false,\n    \"F_25_Release_FB\" : false,\n    \"I_25_Cart_Proc\" : false,\n    \"C_25_Request\" : false,\n    \"C_25_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1820,
        "wires": [
            [
                "3864da87f0771ec9"
            ]
        ]
    },
    {
        "id": "3864da87f0771ec9",
        "type": "trigger",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1820,
        "wires": [
            [
                "88d0b357509c2089"
            ]
        ]
    },
    {
        "id": "c3d211007370a764",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "I_25_Cart_Proc",
        "label": "Release cart",
        "tooltip": "",
        "group": "de1e4f8a88f18270",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2140,
        "wires": [
            [
                "e19acd8882de6d1b"
            ]
        ]
    },
    {
        "id": "e19acd8882de6d1b",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "item": "I_25_Cart_Proc",
        "datatype": "Boolean",
        "value": "",
        "name": "I_25_Cart_Proc",
        "x": 480,
        "y": 2140,
        "wires": [
            [
                "115cfd91d3173a27"
            ]
        ]
    },
    {
        "id": "47e74a9a7fad273d",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "C_25_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "de1e4f8a88f18270",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2180,
        "wires": [
            [
                "169a1e2224d15de0"
            ]
        ]
    },
    {
        "id": "169a1e2224d15de0",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "item": "C_25_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_25_Request",
        "x": 480,
        "y": 2180,
        "wires": [
            [
                "115cfd91d3173a27"
            ]
        ]
    },
    {
        "id": "a54e858b5e751c8c",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "item": "O_26_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Cart_Stat",
        "x": 480,
        "y": 2400,
        "wires": [
            [
                "e60892712f512e94"
            ]
        ]
    },
    {
        "id": "29dddea8b1c85405",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "item": "O_26_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Cart_Next",
        "x": 470,
        "y": 2440,
        "wires": [
            [
                "e60892712f512e94"
            ]
        ]
    },
    {
        "id": "5f09cb772c7a01ce",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "item": "O_26_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Optic",
        "x": 490,
        "y": 2480,
        "wires": [
            [
                "e60892712f512e94"
            ]
        ]
    },
    {
        "id": "417038aa5b41ee4f",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "item": "O_26_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Count",
        "x": 490,
        "y": 2520,
        "wires": [
            [
                "e60892712f512e94"
            ]
        ]
    },
    {
        "id": "34ca9e5ca29e534f",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "item": "O_26_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Pist_Bck",
        "x": 480,
        "y": 2560,
        "wires": [
            [
                "e60892712f512e94"
            ]
        ]
    },
    {
        "id": "51dfc0fe97a94772",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "item": "F_26_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_26_Release_FB",
        "x": 470,
        "y": 2600,
        "wires": [
            [
                "e60892712f512e94"
            ]
        ]
    },
    {
        "id": "e60892712f512e94",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "Visi AS-i",
        "mode": "link",
        "links": [
            "bb684678e7cd0be5"
        ],
        "x": 645,
        "y": 2560,
        "wires": []
    },
    {
        "id": "fc1c0adb6a2ad4ef",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2320,
        "wires": [
            [
                "9a82148a0cb5f6ba"
            ]
        ]
    },
    {
        "id": "9a82148a0cb5f6ba",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2320,
        "wires": [
            [
                "b9c560c74bcdcaf0"
            ]
        ]
    },
    {
        "id": "b9c560c74bcdcaf0",
        "type": "file in",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "CSV",
        "filename": "C:\\ProjetoGemeo\\AAS\\Master\\Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2320,
        "wires": [
            [
                "3838eb3f499048fb"
            ]
        ]
    },
    {
        "id": "3838eb3f499048fb",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2320,
        "wires": [
            [
                "dbacb2c1f75b4648"
            ]
        ]
    },
    {
        "id": "dbacb2c1f75b4648",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2320,
        "wires": [
            [
                "ba954c8483a39ad2"
            ]
        ]
    },
    {
        "id": "ba954c8483a39ad2",
        "type": "OpcUa-Client",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "endpoint": "64e5099c4d605ffd",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2320,
        "wires": [
            [
                "b19c409ee8ae457b",
                "88c7430993ab17c8"
            ],
            [
                "d36192adcddfc9d8"
            ]
        ]
    },
    {
        "id": "f902aac44c34aef5",
        "type": "switch",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "Visi AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_26_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_26_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_26_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_26_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_26_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_26_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_26_Cart_Visi",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_26_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_26_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 2560,
        "wires": [
            [
                "b19fe46c8d5fe373"
            ],
            [
                "93e87dad59808dc9"
            ],
            [
                "a073d426cd29e683"
            ],
            [
                "49001e6edc2d3676"
            ],
            [
                "f1bc8bea074b0c91"
            ],
            [
                "f23e68197e43351c"
            ],
            [
                "367b93397b0c7113"
            ],
            [
                "5a62c5196b01b2d0"
            ],
            [
                "d687ccea277ae369"
            ]
        ]
    },
    {
        "id": "b19fe46c8d5fe373",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "order": 1,
        "group": "e35b663843aaf994",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Cart_Stat",
        "x": 1060,
        "y": 2400,
        "wires": []
    },
    {
        "id": "93e87dad59808dc9",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "order": 2,
        "group": "e35b663843aaf994",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Cart_Next",
        "x": 1070,
        "y": 2440,
        "wires": []
    },
    {
        "id": "a073d426cd29e683",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "order": 3,
        "group": "e35b663843aaf994",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Optic",
        "x": 1050,
        "y": 2480,
        "wires": []
    },
    {
        "id": "49001e6edc2d3676",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "order": 4,
        "group": "e35b663843aaf994",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Count",
        "x": 1050,
        "y": 2520,
        "wires": []
    },
    {
        "id": "f1bc8bea074b0c91",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "order": 5,
        "group": "e35b663843aaf994",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Pist_Bck",
        "x": 1060,
        "y": 2560,
        "wires": []
    },
    {
        "id": "f23e68197e43351c",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "order": 6,
        "group": "e35b663843aaf994",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_26_Release_FB",
        "x": 1070,
        "y": 2600,
        "wires": []
    },
    {
        "id": "d687ccea277ae369",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "order": 9,
        "group": "e35b663843aaf994",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_26_CartDel",
        "x": 1060,
        "y": 2720,
        "wires": []
    },
    {
        "id": "80ed1761c44b53df",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "item": "C_26_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_26_CartDel",
        "x": 480,
        "y": 2720,
        "wires": [
            [
                "e60892712f512e94"
            ]
        ]
    },
    {
        "id": "b19c409ee8ae457b",
        "type": "debug",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "Visi AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 2360,
        "wires": []
    },
    {
        "id": "d36192adcddfc9d8",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_26_Cart_Stat\" : false,\n    \"O_26_Cart_Next\" : false,\n    \"O_26_Optic\" : false,\n    \"O_26_Count\" : false,\n    \"O_26_Pist_Bck\" : false,\n    \"F_26_Release_FB\" : false,\n    \"I_26_Cart_Visi\" : false,\n    \"C_26_Request\" : false,\n    \"C_26_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2320,
        "wires": [
            [
                "3770186048396761"
            ]
        ]
    },
    {
        "id": "3770186048396761",
        "type": "trigger",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2320,
        "wires": [
            [
                "fc1c0adb6a2ad4ef"
            ]
        ]
    },
    {
        "id": "5ed95ab1f2f1a396",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "I_26_Cart_Visi",
        "label": "Release cart",
        "tooltip": "",
        "group": "e35b663843aaf994",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2640,
        "wires": [
            [
                "8b2f76d3d988477e"
            ]
        ]
    },
    {
        "id": "8b2f76d3d988477e",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "item": "I_26_Cart_Visi",
        "datatype": "Boolean",
        "value": "",
        "name": "I_26_Cart_Visi",
        "x": 480,
        "y": 2640,
        "wires": [
            [
                "e60892712f512e94"
            ]
        ]
    },
    {
        "id": "8a8ca7e402375cc8",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "C_26_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "e35b663843aaf994",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2680,
        "wires": [
            [
                "f82bbb32eaeffd12"
            ]
        ]
    },
    {
        "id": "f82bbb32eaeffd12",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "item": "C_26_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_26_Request",
        "x": 480,
        "y": 2680,
        "wires": [
            [
                "e60892712f512e94"
            ]
        ]
    },
    {
        "id": "19d90f275b9468e6",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "item": "O_27_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Cart_Stat",
        "x": 480,
        "y": 2900,
        "wires": [
            [
                "bffd5fe0f72413d8"
            ]
        ]
    },
    {
        "id": "b319c689ea0ff687",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "item": "O_27_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Cart_Next",
        "x": 470,
        "y": 2940,
        "wires": [
            [
                "bffd5fe0f72413d8"
            ]
        ]
    },
    {
        "id": "146f5da13dc54d17",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "item": "O_27_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Optic",
        "x": 490,
        "y": 2980,
        "wires": [
            [
                "bffd5fe0f72413d8"
            ]
        ]
    },
    {
        "id": "a2f7db2be6ebc341",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "item": "O_27_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Count",
        "x": 490,
        "y": 3020,
        "wires": [
            [
                "bffd5fe0f72413d8"
            ]
        ]
    },
    {
        "id": "82afd1f343bfacfc",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "item": "O_27_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Pist_Bck",
        "x": 480,
        "y": 3060,
        "wires": [
            [
                "bffd5fe0f72413d8"
            ]
        ]
    },
    {
        "id": "c406fd1f5828745b",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "item": "F_27_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_27_Release_FB",
        "x": 470,
        "y": 3100,
        "wires": [
            [
                "bffd5fe0f72413d8"
            ]
        ]
    },
    {
        "id": "bffd5fe0f72413d8",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "Robo AS-i",
        "mode": "link",
        "links": [
            "bb684678e7cd0be5"
        ],
        "x": 645,
        "y": 3060,
        "wires": []
    },
    {
        "id": "35e8be556aad8027",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2820,
        "wires": [
            [
                "a35c202d9384b99f"
            ]
        ]
    },
    {
        "id": "a35c202d9384b99f",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2820,
        "wires": [
            [
                "d4182716d324a7c3"
            ]
        ]
    },
    {
        "id": "d4182716d324a7c3",
        "type": "file in",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "CSV",
        "filename": "C:\\ProjetoGemeo\\AAS\\Master\\Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2820,
        "wires": [
            [
                "b1f0d30ed6f3dadf"
            ]
        ]
    },
    {
        "id": "b1f0d30ed6f3dadf",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2820,
        "wires": [
            [
                "43053cae06123b7d"
            ]
        ]
    },
    {
        "id": "43053cae06123b7d",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2820,
        "wires": [
            [
                "5dd27bef0a84e84a"
            ]
        ]
    },
    {
        "id": "5dd27bef0a84e84a",
        "type": "OpcUa-Client",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "endpoint": "64e5099c4d605ffd",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2820,
        "wires": [
            [
                "2491c562c0867229",
                "7556cb9c31d4888c"
            ],
            [
                "b2544f417671724c"
            ]
        ]
    },
    {
        "id": "1d1675be0df1187b",
        "type": "switch",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "Robo AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_27_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_27_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_27_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_27_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_27_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_27_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_27_Cart_Robo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_27_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_27_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 3060,
        "wires": [
            [
                "ca999507201ed3d1"
            ],
            [
                "3c5d1b59ecd5015c"
            ],
            [
                "2bd2bf5fd0b1b5db"
            ],
            [
                "46d5859383cfbc7d"
            ],
            [
                "af0dd672be63358f"
            ],
            [
                "7ee2b2ab4a796a9d"
            ],
            [
                "c2e8b8a6e048c324"
            ],
            [
                "616aaf0abae01674"
            ],
            [
                "2f81f09f91545375"
            ]
        ]
    },
    {
        "id": "ca999507201ed3d1",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "order": 1,
        "group": "2e43821f0b6026f8",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Cart_Stat",
        "x": 1060,
        "y": 2900,
        "wires": []
    },
    {
        "id": "3c5d1b59ecd5015c",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "order": 2,
        "group": "2e43821f0b6026f8",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Cart_Next",
        "x": 1070,
        "y": 2940,
        "wires": []
    },
    {
        "id": "2bd2bf5fd0b1b5db",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "order": 3,
        "group": "2e43821f0b6026f8",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Optic",
        "x": 1050,
        "y": 2980,
        "wires": []
    },
    {
        "id": "46d5859383cfbc7d",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "order": 4,
        "group": "2e43821f0b6026f8",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Count",
        "x": 1050,
        "y": 3020,
        "wires": []
    },
    {
        "id": "af0dd672be63358f",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "order": 5,
        "group": "2e43821f0b6026f8",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Pist_Bck",
        "x": 1060,
        "y": 3060,
        "wires": []
    },
    {
        "id": "7ee2b2ab4a796a9d",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "order": 6,
        "group": "2e43821f0b6026f8",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_27_Release_FB",
        "x": 1070,
        "y": 3100,
        "wires": []
    },
    {
        "id": "2f81f09f91545375",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "order": 9,
        "group": "2e43821f0b6026f8",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_27_CartDel",
        "x": 1060,
        "y": 3220,
        "wires": []
    },
    {
        "id": "b94bd5b5eead38e2",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "item": "C_27_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_27_CartDel",
        "x": 480,
        "y": 3220,
        "wires": [
            [
                "bffd5fe0f72413d8"
            ]
        ]
    },
    {
        "id": "2491c562c0867229",
        "type": "debug",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "Robo AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 2860,
        "wires": []
    },
    {
        "id": "b2544f417671724c",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_27_Cart_Stat\" : false,\n    \"O_27_Cart_Next\" : false,\n    \"O_27_Optic\" : false,\n    \"O_27_Count\" : false,\n    \"O_27_Pist_Bck\" : false,\n    \"F_27_Release_FB\" : false,\n    \"I_27_Cart_Robo\" : false,\n    \"C_27_Request\" : false,\n    \"C_27_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2820,
        "wires": [
            [
                "879f3af4f5aeab0a"
            ]
        ]
    },
    {
        "id": "879f3af4f5aeab0a",
        "type": "trigger",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2820,
        "wires": [
            [
                "35e8be556aad8027"
            ]
        ]
    },
    {
        "id": "04339b572dade762",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "I_27_Cart_Robo",
        "label": "Release cart",
        "tooltip": "",
        "group": "2e43821f0b6026f8",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 3140,
        "wires": [
            [
                "41b917d31cdf48ee"
            ]
        ]
    },
    {
        "id": "41b917d31cdf48ee",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "item": "I_27_Cart_Robo",
        "datatype": "Boolean",
        "value": "",
        "name": "I_27_Cart_Robo",
        "x": 480,
        "y": 3140,
        "wires": [
            [
                "bffd5fe0f72413d8"
            ]
        ]
    },
    {
        "id": "f77f89351cfa3c5c",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "C_27_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "2e43821f0b6026f8",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 3180,
        "wires": [
            [
                "077124260c827d67"
            ]
        ]
    },
    {
        "id": "077124260c827d67",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "item": "C_27_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_27_Request",
        "x": 480,
        "y": 3180,
        "wires": [
            [
                "bffd5fe0f72413d8"
            ]
        ]
    },
    {
        "id": "31f787c984be9e0c",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "item": "O_28_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Cart_Stat",
        "x": 480,
        "y": 3400,
        "wires": [
            [
                "df770917a5b37a0f"
            ]
        ]
    },
    {
        "id": "960589015e8ec79f",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "item": "O_28_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Cart_Next",
        "x": 470,
        "y": 3440,
        "wires": [
            [
                "df770917a5b37a0f"
            ]
        ]
    },
    {
        "id": "b6843111343ec0be",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "item": "O_28_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Optic",
        "x": 490,
        "y": 3480,
        "wires": [
            [
                "df770917a5b37a0f"
            ]
        ]
    },
    {
        "id": "8ddf3b1dee8d523e",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "item": "O_28_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Count",
        "x": 490,
        "y": 3520,
        "wires": [
            [
                "df770917a5b37a0f"
            ]
        ]
    },
    {
        "id": "bba6003a5e4d8517",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "item": "O_28_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Pist_Bck",
        "x": 480,
        "y": 3560,
        "wires": [
            [
                "df770917a5b37a0f"
            ]
        ]
    },
    {
        "id": "3fe44b2b1a81fb1d",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "item": "F_28_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_28_Release_FB",
        "x": 470,
        "y": 3600,
        "wires": [
            [
                "df770917a5b37a0f"
            ]
        ]
    },
    {
        "id": "df770917a5b37a0f",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "Robo AS-i",
        "mode": "link",
        "links": [
            "bb684678e7cd0be5"
        ],
        "x": 645,
        "y": 3560,
        "wires": []
    },
    {
        "id": "a5c11a4cf1c7b82a",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3320,
        "wires": [
            [
                "f75474a7ce5cf963"
            ]
        ]
    },
    {
        "id": "f75474a7ce5cf963",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3320,
        "wires": [
            [
                "3c39864d4f4397f0"
            ]
        ]
    },
    {
        "id": "3c39864d4f4397f0",
        "type": "file in",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "CSV",
        "filename": "C:\\ProjetoGemeo\\AAS\\Master\\Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3320,
        "wires": [
            [
                "1d0ba5df3e468ed5"
            ]
        ]
    },
    {
        "id": "1d0ba5df3e468ed5",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3320,
        "wires": [
            [
                "ccda0eda71143b67"
            ]
        ]
    },
    {
        "id": "ccda0eda71143b67",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3320,
        "wires": [
            [
                "293230c1eaa53a10"
            ]
        ]
    },
    {
        "id": "293230c1eaa53a10",
        "type": "OpcUa-Client",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "endpoint": "64e5099c4d605ffd",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3320,
        "wires": [
            [
                "a520050168f6595e",
                "374479b2dc66ca0b"
            ],
            [
                "2882ccac65756543"
            ]
        ]
    },
    {
        "id": "cc7f34ed90d7b996",
        "type": "switch",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "Stor AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_28_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_28_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_28_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_28_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_28_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_28_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_28_Cart_Stor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_28_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_28_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 3560,
        "wires": [
            [
                "0616b86f7dda1779"
            ],
            [
                "05f8d54d4e66c7e6"
            ],
            [
                "81c238844c1dbfeb"
            ],
            [
                "e1f1fb8372b25ddc"
            ],
            [
                "5976d0010dbd5c95"
            ],
            [
                "d0bf2569d4ab8218"
            ],
            [
                "dd3d46000463b7b5"
            ],
            [
                "b34f09c1eebfea31"
            ],
            [
                "7e7976dea0d9dce1"
            ]
        ]
    },
    {
        "id": "0616b86f7dda1779",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "order": 1,
        "group": "3fc68357d4e7556f",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Cart_Stat",
        "x": 1060,
        "y": 3400,
        "wires": []
    },
    {
        "id": "05f8d54d4e66c7e6",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "order": 2,
        "group": "3fc68357d4e7556f",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Cart_Next",
        "x": 1070,
        "y": 3440,
        "wires": []
    },
    {
        "id": "81c238844c1dbfeb",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "order": 3,
        "group": "3fc68357d4e7556f",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Optic",
        "x": 1050,
        "y": 3480,
        "wires": []
    },
    {
        "id": "e1f1fb8372b25ddc",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "order": 4,
        "group": "3fc68357d4e7556f",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Count",
        "x": 1050,
        "y": 3520,
        "wires": []
    },
    {
        "id": "5976d0010dbd5c95",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "order": 5,
        "group": "3fc68357d4e7556f",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Pist_Bck",
        "x": 1060,
        "y": 3560,
        "wires": []
    },
    {
        "id": "d0bf2569d4ab8218",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "order": 6,
        "group": "3fc68357d4e7556f",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_28_Release_FB",
        "x": 1070,
        "y": 3600,
        "wires": []
    },
    {
        "id": "7e7976dea0d9dce1",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "order": 9,
        "group": "3fc68357d4e7556f",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_28_CartDel",
        "x": 1060,
        "y": 3720,
        "wires": []
    },
    {
        "id": "eaeb9d316dcd79c1",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "item": "C_28_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_28_CartDel",
        "x": 480,
        "y": 3720,
        "wires": [
            [
                "df770917a5b37a0f"
            ]
        ]
    },
    {
        "id": "a520050168f6595e",
        "type": "debug",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "Stor AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 3360,
        "wires": []
    },
    {
        "id": "2882ccac65756543",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_28_Cart_Stat\" : false,\n    \"O_28_Cart_Next\" : false,\n    \"O_28_Optic\" : false,\n    \"O_28_Count\" : false,\n    \"O_28_Pist_Bck\" : false,\n    \"F_28_Release_FB\" : false,\n    \"I_28_Cart_Stor\" : false,\n    \"C_28_Request\" : false,\n    \"C_28_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3320,
        "wires": [
            [
                "cf999afe2e38121f"
            ]
        ]
    },
    {
        "id": "cf999afe2e38121f",
        "type": "trigger",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3320,
        "wires": [
            [
                "a5c11a4cf1c7b82a"
            ]
        ]
    },
    {
        "id": "8ffe078004df795e",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "I_28_Cart_Stor",
        "label": "Release cart",
        "tooltip": "",
        "group": "3fc68357d4e7556f",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 3640,
        "wires": [
            [
                "31226d98452efafa"
            ]
        ]
    },
    {
        "id": "31226d98452efafa",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "item": "I_28_Cart_Stor",
        "datatype": "Boolean",
        "value": "",
        "name": "I_28_Cart_Stor",
        "x": 480,
        "y": 3640,
        "wires": [
            [
                "df770917a5b37a0f"
            ]
        ]
    },
    {
        "id": "5a3c058d2e72ed5a",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "C_28_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "3fc68357d4e7556f",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 3680,
        "wires": [
            [
                "db9cc0497a5d9bf3"
            ]
        ]
    },
    {
        "id": "db9cc0497a5d9bf3",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "item": "C_28_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_28_Request",
        "x": 480,
        "y": 3680,
        "wires": [
            [
                "df770917a5b37a0f"
            ]
        ]
    },
    {
        "id": "3340a57d47d5a183",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "item": "O_29_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Cart_Stat",
        "x": 480,
        "y": 3900,
        "wires": [
            [
                "481198c829ef537d"
            ]
        ]
    },
    {
        "id": "171724050af3ffe5",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "item": "O_29_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Cart_Next",
        "x": 470,
        "y": 3940,
        "wires": [
            [
                "481198c829ef537d"
            ]
        ]
    },
    {
        "id": "c241c1e8349f7e1b",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "item": "O_29_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Optic",
        "x": 490,
        "y": 3980,
        "wires": [
            [
                "481198c829ef537d"
            ]
        ]
    },
    {
        "id": "11ad1d41df38d732",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "item": "O_29_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Count",
        "x": 490,
        "y": 4020,
        "wires": [
            [
                "481198c829ef537d"
            ]
        ]
    },
    {
        "id": "413aefb89e29c631",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "item": "O_29_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Pist_Bck",
        "x": 480,
        "y": 4060,
        "wires": [
            [
                "481198c829ef537d"
            ]
        ]
    },
    {
        "id": "1bb9083392f5a3ad",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "item": "F_29_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_29_Release_FB",
        "x": 470,
        "y": 4100,
        "wires": [
            [
                "481198c829ef537d"
            ]
        ]
    },
    {
        "id": "481198c829ef537d",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "Robo AS-i",
        "mode": "link",
        "links": [
            "bb684678e7cd0be5"
        ],
        "x": 645,
        "y": 4060,
        "wires": []
    },
    {
        "id": "11b2e324f89957c7",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3820,
        "wires": [
            [
                "08253a20b5367117"
            ]
        ]
    },
    {
        "id": "08253a20b5367117",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3820,
        "wires": [
            [
                "defa570cc1a1be4e"
            ]
        ]
    },
    {
        "id": "defa570cc1a1be4e",
        "type": "file in",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "CSV",
        "filename": "C:\\ProjetoGemeo\\AAS\\Master\\Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3820,
        "wires": [
            [
                "8dbfbf4df603e124"
            ]
        ]
    },
    {
        "id": "8dbfbf4df603e124",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3820,
        "wires": [
            [
                "b5c03c082e14e9f0"
            ]
        ]
    },
    {
        "id": "b5c03c082e14e9f0",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3820,
        "wires": [
            [
                "3ffd8f2e3d36b29b"
            ]
        ]
    },
    {
        "id": "3ffd8f2e3d36b29b",
        "type": "OpcUa-Client",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "endpoint": "64e5099c4d605ffd",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3820,
        "wires": [
            [
                "e7a177c4bf19f73b",
                "603a9d7458559670"
            ],
            [
                "4455d5aa6e4ad021"
            ]
        ]
    },
    {
        "id": "61a412ef64ddb832",
        "type": "switch",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "Sort AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_29_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_29_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_29_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_29_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_29_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_29_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_29_Cart_Sort",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_29_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_29_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 4060,
        "wires": [
            [
                "ec6304af1553a52f"
            ],
            [
                "96f3b235f27d0e8a"
            ],
            [
                "43d5e87f2d02f064"
            ],
            [
                "567f3482fdf7976b"
            ],
            [
                "aa3bdc2aa753cffc"
            ],
            [
                "11cd7213dda99013"
            ],
            [
                "3a4ea0e0cd4076f5"
            ],
            [
                "29c306be09bfb9b4"
            ],
            [
                "bfd5c911f11c0239"
            ]
        ]
    },
    {
        "id": "ec6304af1553a52f",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "order": 1,
        "group": "f8020372f32fca60",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Cart_Stat",
        "x": 1060,
        "y": 3900,
        "wires": []
    },
    {
        "id": "96f3b235f27d0e8a",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "order": 2,
        "group": "f8020372f32fca60",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Cart_Next",
        "x": 1070,
        "y": 3940,
        "wires": []
    },
    {
        "id": "43d5e87f2d02f064",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "order": 3,
        "group": "f8020372f32fca60",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Optic",
        "x": 1050,
        "y": 3980,
        "wires": []
    },
    {
        "id": "567f3482fdf7976b",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "order": 4,
        "group": "f8020372f32fca60",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Count",
        "x": 1050,
        "y": 4020,
        "wires": []
    },
    {
        "id": "aa3bdc2aa753cffc",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "order": 5,
        "group": "f8020372f32fca60",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Pist_Bck",
        "x": 1060,
        "y": 4060,
        "wires": []
    },
    {
        "id": "11cd7213dda99013",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "order": 6,
        "group": "f8020372f32fca60",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_29_Release_FB",
        "x": 1070,
        "y": 4100,
        "wires": []
    },
    {
        "id": "bfd5c911f11c0239",
        "type": "ui_led",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "order": 9,
        "group": "f8020372f32fca60",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_29_CartDel",
        "x": 1060,
        "y": 4220,
        "wires": []
    },
    {
        "id": "a82464df5f3b5128",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "item": "C_29_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_29_CartDel",
        "x": 480,
        "y": 4220,
        "wires": [
            [
                "481198c829ef537d"
            ]
        ]
    },
    {
        "id": "e7a177c4bf19f73b",
        "type": "debug",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "Sort AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 3860,
        "wires": []
    },
    {
        "id": "4455d5aa6e4ad021",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_29_Cart_Stat\" : false,\n    \"O_29_Cart_Next\" : false,\n    \"O_29_Optic\" : false,\n    \"O_29_Count\" : false,\n    \"O_29_Pist_Bck\" : false,\n    \"F_29_Release_FB\" : false,\n    \"I_29_Cart_Sort\" : false,\n    \"C_29_Request\" : false,\n    \"C_29_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3820,
        "wires": [
            [
                "95e4e9168661e119"
            ]
        ]
    },
    {
        "id": "95e4e9168661e119",
        "type": "trigger",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3820,
        "wires": [
            [
                "11b2e324f89957c7"
            ]
        ]
    },
    {
        "id": "b8e7707b48518350",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "I_29_Cart_Sort",
        "label": "Release cart",
        "tooltip": "",
        "group": "f8020372f32fca60",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 4140,
        "wires": [
            [
                "cd7f426fe83cae5f"
            ]
        ]
    },
    {
        "id": "cd7f426fe83cae5f",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "item": "I_29_Cart_Sort",
        "datatype": "Boolean",
        "value": "",
        "name": "I_29_Cart_Sort",
        "x": 480,
        "y": 4140,
        "wires": [
            [
                "481198c829ef537d"
            ]
        ]
    },
    {
        "id": "af53f1082970888a",
        "type": "ui_switch",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "C_29_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "f8020372f32fca60",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 4180,
        "wires": [
            [
                "2938a3c80e050f69"
            ]
        ]
    },
    {
        "id": "2938a3c80e050f69",
        "type": "OpcUa-Item",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "item": "C_29_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_29_Request",
        "x": 480,
        "y": 4180,
        "wires": [
            [
                "481198c829ef537d"
            ]
        ]
    },
    {
        "id": "09c82ddb27b51a35",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "f13981ec3d33259a",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "70c27bdebc5ab1da",
            "eb290ffa426c2973",
            "c8db2fec805c846c",
            "0f181598ccaf17f1",
            "178ab485cd8903ef",
            "8342843d9628427b",
            "6ce71ae4d02bbb5c",
            "44f44786b03a0fe8"
        ],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "544af644c8e91fdd",
        "type": "debug",
        "z": "9ab3d53948c971b4",
        "g": "f13981ec3d33259a",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "de553175ec0b3506",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "O_20_On",
        "func": "if (msg.topic === \"O_20_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_20_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 620,
        "wires": [
            [
                "5528fc50de3fa8cb"
            ]
        ]
    },
    {
        "id": "70c27bdebc5ab1da",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "S7 PS",
        "links": [
            "09c82ddb27b51a35"
        ],
        "x": 55,
        "y": 660,
        "wires": [
            [
                "de553175ec0b3506",
                "40e96daf779b7ba9",
                "57b9068f97a30756"
            ]
        ]
    },
    {
        "id": "40e96daf779b7ba9",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "O_20_Off",
        "func": "if (msg.topic === \"O_20_Off\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_20_Off\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 660,
        "wires": [
            [
                "efb5cb52d4ef2034"
            ]
        ]
    },
    {
        "id": "57b9068f97a30756",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "O_20_Controler_On",
        "func": "if (msg.topic === \"O_20_Controler_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_20_Controler_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 700,
        "wires": [
            [
                "a10942ef0cab4307"
            ]
        ]
    },
    {
        "id": "081ffe7488b2f31c",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "Sub In PS",
        "links": [
            "4302c813ba918ed9"
        ],
        "x": 755,
        "y": 660,
        "wires": [
            [
                "99b3320d477e47c8"
            ]
        ]
    },
    {
        "id": "4302c813ba918ed9",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "Sub Out PS",
        "mode": "link",
        "links": [
            "081ffe7488b2f31c"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "8538f368ace5b6d8",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "Sub In PA",
        "links": [
            "5fdd88153ba57033"
        ],
        "x": 755,
        "y": 920,
        "wires": [
            [
                "66bb178c73846512"
            ]
        ]
    },
    {
        "id": "5fdd88153ba57033",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "Sub Out PA",
        "mode": "link",
        "links": [
            "8538f368ace5b6d8"
        ],
        "x": 1295,
        "y": 800,
        "wires": []
    },
    {
        "id": "3e569bd57587e170",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "Sub In PF",
        "links": [
            "b164da499cdf662b"
        ],
        "x": 755,
        "y": 1180,
        "wires": [
            [
                "7856fdd5ea04750e"
            ]
        ]
    },
    {
        "id": "b164da499cdf662b",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "Sub Out PF",
        "mode": "link",
        "links": [
            "3e569bd57587e170"
        ],
        "x": 1295,
        "y": 1060,
        "wires": []
    },
    {
        "id": "eb290ffa426c2973",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "S7 F",
        "links": [
            "09c82ddb27b51a35"
        ],
        "x": 55,
        "y": 1180,
        "wires": [
            [
                "324a5044afe7c544",
                "7eafcc4829fdf039",
                "7f9b2418c1bf9f12"
            ]
        ]
    },
    {
        "id": "324a5044afe7c544",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "F_22_Led_On",
        "func": "if (msg.topic === \"F_22_Led_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_22_Led_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1140,
        "wires": [
            [
                "93b53ee0d4288b86"
            ]
        ]
    },
    {
        "id": "7eafcc4829fdf039",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "F_22_Led_Off",
        "func": "if (msg.topic === \"F_22_Led_Off\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"F_22_Led_Off\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1180,
        "wires": [
            [
                "f74038b863881b4f"
            ]
        ]
    },
    {
        "id": "7f9b2418c1bf9f12",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "F_22_Conveyor",
        "func": "if (msg.topic === \"F_22_Conveyor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_22_Conveyor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1220,
        "wires": [
            [
                "32994b5c4d728971"
            ]
        ]
    },
    {
        "id": "c8db2fec805c846c",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "S7 Test AS-i",
        "links": [
            "09c82ddb27b51a35"
        ],
        "x": 55,
        "y": 1560,
        "wires": [
            [
                "bb7e8e221de89e01",
                "c5c3bd833a29a02e",
                "33aa83e2164d42c3",
                "2ea966217df5d4e4",
                "dbae32b5315e77bd",
                "81a4d2c5911f373e",
                "1e94ef8ceca99cef"
            ]
        ]
    },
    {
        "id": "bb7e8e221de89e01",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "C_24_CartDel",
        "func": "if (msg.topic === \"C_24_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"C_24_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1720,
        "wires": [
            [
                "20cc428dd0d26591"
            ]
        ]
    },
    {
        "id": "2c34db3e58cc58c6",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "Sub In Test AS-i",
        "links": [
            "c8c2413d65b07430"
        ],
        "x": 755,
        "y": 1560,
        "wires": [
            [
                "8ee224270e3e6ffe"
            ]
        ]
    },
    {
        "id": "c8c2413d65b07430",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "Sub Out Test AS-i",
        "mode": "link",
        "links": [
            "2c34db3e58cc58c6"
        ],
        "x": 1295,
        "y": 1320,
        "wires": []
    },
    {
        "id": "24d756cd2918f983",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "O_25_Cart_Stat",
        "func": "if (msg.topic === \"O_25_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_25_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1900,
        "wires": [
            [
                "60027df692f9ad67"
            ]
        ]
    },
    {
        "id": "494a791c23dbf663",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "O_25_Cart_Next",
        "func": "if (msg.topic === \"O_25_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_25_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1940,
        "wires": [
            [
                "32e01f3c65e1b0e4"
            ]
        ]
    },
    {
        "id": "32e2c21dc04125b3",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "O_25_Optic",
        "func": "if (msg.topic === \"O_25_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_25_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1980,
        "wires": [
            [
                "a090563210b72377"
            ]
        ]
    },
    {
        "id": "5f72966267c8029a",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "O_25_Count",
        "func": "if (msg.topic === \"O_25_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_25_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2020,
        "wires": [
            [
                "f9a94b5495cbd170"
            ]
        ]
    },
    {
        "id": "81bfdf385e05d6b3",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "O_25_Pist_Bck",
        "func": "if (msg.topic === \"O_25_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_25_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2060,
        "wires": [
            [
                "1a45c3ea1784af8f"
            ]
        ]
    },
    {
        "id": "6e00173f32f16c4f",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "F_25_Release_FB",
        "func": "if (msg.topic === \"F_25_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg}\n\nif (msg.topic === \"F_25_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2100,
        "wires": [
            [
                "c2d27a19d1672a05"
            ]
        ]
    },
    {
        "id": "d5af98d6af26f5c3",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "C_25_CartDel",
        "func": "if (msg.topic === \"C_25_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg}\n\nif (msg.topic === \"C_25_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2220,
        "wires": [
            [
                "c5dc532e30d1832c"
            ]
        ]
    },
    {
        "id": "0f181598ccaf17f1",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "S7 Proc AS-i",
        "links": [
            "09c82ddb27b51a35"
        ],
        "x": 55,
        "y": 2060,
        "wires": [
            [
                "24d756cd2918f983",
                "494a791c23dbf663",
                "32e2c21dc04125b3",
                "5f72966267c8029a",
                "81bfdf385e05d6b3",
                "6e00173f32f16c4f",
                "d5af98d6af26f5c3"
            ]
        ]
    },
    {
        "id": "cea9f31b062ec3bc",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "O_26_Cart_Stat",
        "func": "if (msg.topic === \"O_26_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_26_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2400,
        "wires": [
            [
                "a54e858b5e751c8c"
            ]
        ]
    },
    {
        "id": "413fa15fb8b515f5",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "O_26_Cart_Next",
        "func": "if (msg.topic === \"O_26_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_26_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2440,
        "wires": [
            [
                "29dddea8b1c85405"
            ]
        ]
    },
    {
        "id": "f06c65a9bd8846c8",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "O_26_Optic",
        "func": "if (msg.topic === \"O_26_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_26_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2480,
        "wires": [
            [
                "5f09cb772c7a01ce"
            ]
        ]
    },
    {
        "id": "56065e5dbc66fd35",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "O_26_Count",
        "func": "if (msg.topic === \"O_26_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_26_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2520,
        "wires": [
            [
                "417038aa5b41ee4f"
            ]
        ]
    },
    {
        "id": "4d61723ec9c5276e",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "O_26_Pist_Bck",
        "func": "if (msg.topic === \"O_26_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_26_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2560,
        "wires": [
            [
                "34ca9e5ca29e534f"
            ]
        ]
    },
    {
        "id": "d9d259cc54bd7bb2",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "F_26_Release_FB",
        "func": "if (msg.topic === \"F_26_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_26_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2600,
        "wires": [
            [
                "51dfc0fe97a94772"
            ]
        ]
    },
    {
        "id": "b39395a1eb3cf9cd",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "C_26_CartDel",
        "func": "if (msg.topic === \"C_26_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg}\n\nif (msg.topic === \"C_26_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2720,
        "wires": [
            [
                "80ed1761c44b53df"
            ]
        ]
    },
    {
        "id": "178ab485cd8903ef",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "S7 Visi AS-i",
        "links": [
            "09c82ddb27b51a35"
        ],
        "x": 55,
        "y": 2560,
        "wires": [
            [
                "cea9f31b062ec3bc",
                "413fa15fb8b515f5",
                "f06c65a9bd8846c8",
                "56065e5dbc66fd35",
                "4d61723ec9c5276e",
                "d9d259cc54bd7bb2",
                "b39395a1eb3cf9cd"
            ]
        ]
    },
    {
        "id": "89eae931635eaf3f",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "O_27_Cart_Stat",
        "func": "if (msg.topic === \"O_27_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_27_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2900,
        "wires": [
            [
                "19d90f275b9468e6"
            ]
        ]
    },
    {
        "id": "97fd4831dfaf470a",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "O_27_Cart_Next",
        "func": "if (msg.topic === \"O_27_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_27_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2940,
        "wires": [
            [
                "b319c689ea0ff687"
            ]
        ]
    },
    {
        "id": "debdaf8aaa0b4c6b",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "O_27_Optic",
        "func": "if (msg.topic === \"O_27_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_27_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2980,
        "wires": [
            [
                "146f5da13dc54d17"
            ]
        ]
    },
    {
        "id": "666e584159b13d1a",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "O_27_Count",
        "func": "if (msg.topic === \"O_27_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_27_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3020,
        "wires": [
            [
                "a2f7db2be6ebc341"
            ]
        ]
    },
    {
        "id": "fe4e4392582b5823",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "O_27_Pist_Bck",
        "func": "if (msg.topic === \"O_27_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_27_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3060,
        "wires": [
            [
                "82afd1f343bfacfc"
            ]
        ]
    },
    {
        "id": "0e1db4a21202d93d",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "F_27_Release_FB",
        "func": "if (msg.topic === \"F_27_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_27_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3100,
        "wires": [
            [
                "c406fd1f5828745b"
            ]
        ]
    },
    {
        "id": "14678273fcc5e925",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "C_27_CartDel",
        "func": "if (msg.topic === \"C_27_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"C_27_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3220,
        "wires": [
            [
                "b94bd5b5eead38e2"
            ]
        ]
    },
    {
        "id": "8342843d9628427b",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "S7 Robo AS-i",
        "links": [
            "09c82ddb27b51a35"
        ],
        "x": 55,
        "y": 3060,
        "wires": [
            [
                "89eae931635eaf3f",
                "97fd4831dfaf470a",
                "debdaf8aaa0b4c6b",
                "666e584159b13d1a",
                "fe4e4392582b5823",
                "0e1db4a21202d93d",
                "14678273fcc5e925"
            ]
        ]
    },
    {
        "id": "0dc95387ac8c48e0",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "O_28_Cart_Stat",
        "func": "if (msg.topic === \"O_28_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3400,
        "wires": [
            [
                "31f787c984be9e0c"
            ]
        ]
    },
    {
        "id": "b4bdf49457059c97",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "O_28_Cart_Next",
        "func": "if (msg.topic === \"O_28_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3440,
        "wires": [
            [
                "960589015e8ec79f"
            ]
        ]
    },
    {
        "id": "219eafcb04bc48ea",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "O_28_Optic",
        "func": "if (msg.topic === \"O_28_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3480,
        "wires": [
            [
                "b6843111343ec0be"
            ]
        ]
    },
    {
        "id": "3bd7e631fcd66952",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "O_28_Count",
        "func": "if (msg.topic === \"O_28_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3520,
        "wires": [
            [
                "8ddf3b1dee8d523e"
            ]
        ]
    },
    {
        "id": "2f309a59444cb2f2",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "O_28_Pist_Bck",
        "func": "if (msg.topic === \"O_28_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3560,
        "wires": [
            [
                "bba6003a5e4d8517"
            ]
        ]
    },
    {
        "id": "140dbf60e5063528",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "F_28_Release_FB",
        "func": "if (msg.topic === \"F_28_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_28_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3600,
        "wires": [
            [
                "3fe44b2b1a81fb1d"
            ]
        ]
    },
    {
        "id": "00bf16ac0b1201c7",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "C_28_CartDel",
        "func": "if (msg.topic === \"C_28_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"C_28_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3720,
        "wires": [
            [
                "eaeb9d316dcd79c1"
            ]
        ]
    },
    {
        "id": "6ce71ae4d02bbb5c",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "S7 Stor AS-i",
        "links": [
            "09c82ddb27b51a35"
        ],
        "x": 55,
        "y": 3560,
        "wires": [
            [
                "0dc95387ac8c48e0",
                "b4bdf49457059c97",
                "219eafcb04bc48ea",
                "3bd7e631fcd66952",
                "2f309a59444cb2f2",
                "140dbf60e5063528",
                "00bf16ac0b1201c7"
            ]
        ]
    },
    {
        "id": "41e90d76c04e26e0",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "O_29_Cart_Stat",
        "func": "if (msg.topic === \"O_29_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3900,
        "wires": [
            [
                "3340a57d47d5a183"
            ]
        ]
    },
    {
        "id": "58258debab85ca7d",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "O_29_Cart_Next",
        "func": "if (msg.topic === \"O_29_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3940,
        "wires": [
            [
                "171724050af3ffe5"
            ]
        ]
    },
    {
        "id": "7b8f372cf40b5ae2",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "O_29_Optic",
        "func": "if (msg.topic === \"O_29_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3980,
        "wires": [
            [
                "c241c1e8349f7e1b"
            ]
        ]
    },
    {
        "id": "9b6637915552ce28",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "O_29_Count",
        "func": "if (msg.topic === \"O_29_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 4020,
        "wires": [
            [
                "11ad1d41df38d732"
            ]
        ]
    },
    {
        "id": "77d87098b420de80",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "O_29_Pist_Bck",
        "func": "if (msg.topic === \"O_29_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4060,
        "wires": [
            [
                "413aefb89e29c631"
            ]
        ]
    },
    {
        "id": "0cda3ba4d2bf16e4",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "F_29_Release_FB",
        "func": "if (msg.topic === \"F_29_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_29_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 4100,
        "wires": [
            [
                "1bb9083392f5a3ad"
            ]
        ]
    },
    {
        "id": "9b7b6b62a197136c",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "C_29_CartDel",
        "func": "if (msg.topic === \"C_29_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"C_29_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4220,
        "wires": [
            [
                "a82464df5f3b5128"
            ]
        ]
    },
    {
        "id": "44f44786b03a0fe8",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "S7 Sort AS-i",
        "links": [
            "09c82ddb27b51a35"
        ],
        "x": 55,
        "y": 4060,
        "wires": [
            [
                "41e90d76c04e26e0",
                "58258debab85ca7d",
                "7b8f372cf40b5ae2",
                "9b6637915552ce28",
                "77d87098b420de80",
                "0cda3ba4d2bf16e4",
                "9b7b6b62a197136c"
            ]
        ]
    },
    {
        "id": "318145641914daa9",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "Sub In Proc AS-i",
        "links": [
            "b3f3e7c3aaa1b7f2"
        ],
        "x": 754.9999618530273,
        "y": 2060.9998321533203,
        "wires": [
            [
                "60e05b2619adc766"
            ]
        ]
    },
    {
        "id": "b3f3e7c3aaa1b7f2",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "Sub Out Proc AS-i",
        "mode": "link",
        "links": [
            "318145641914daa9"
        ],
        "x": 1295,
        "y": 1820,
        "wires": []
    },
    {
        "id": "b7eca78e52bcbe94",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "Sub In Visi AS-i",
        "links": [
            "88c7430993ab17c8"
        ],
        "x": 755,
        "y": 2560,
        "wires": [
            [
                "f902aac44c34aef5"
            ]
        ]
    },
    {
        "id": "88c7430993ab17c8",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "Sub Out Visi AS-i",
        "mode": "link",
        "links": [
            "b7eca78e52bcbe94"
        ],
        "x": 1295,
        "y": 2320,
        "wires": []
    },
    {
        "id": "eb69f33b8bbb2eeb",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "Sub In Robo AS-i",
        "links": [
            "7556cb9c31d4888c"
        ],
        "x": 755,
        "y": 3060,
        "wires": [
            [
                "1d1675be0df1187b"
            ]
        ]
    },
    {
        "id": "7556cb9c31d4888c",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "Sub Out Robo AS-i",
        "mode": "link",
        "links": [
            "eb69f33b8bbb2eeb"
        ],
        "x": 1295,
        "y": 2820,
        "wires": []
    },
    {
        "id": "fd7f913a3c70a161",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "Sub In Stor AS-i",
        "links": [
            "374479b2dc66ca0b"
        ],
        "x": 755,
        "y": 3560,
        "wires": [
            [
                "cc7f34ed90d7b996"
            ]
        ]
    },
    {
        "id": "374479b2dc66ca0b",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "Sub Out Stor AS-i",
        "mode": "link",
        "links": [
            "fd7f913a3c70a161"
        ],
        "x": 1295,
        "y": 3320,
        "wires": []
    },
    {
        "id": "2fddb47d232e851a",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "Sub In Sort AS-i",
        "links": [
            "603a9d7458559670"
        ],
        "x": 755,
        "y": 4060,
        "wires": [
            [
                "61a412ef64ddb832"
            ]
        ]
    },
    {
        "id": "603a9d7458559670",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "Sub Out Sort AS-i",
        "mode": "link",
        "links": [
            "2fddb47d232e851a"
        ],
        "x": 1295,
        "y": 3820,
        "wires": []
    },
    {
        "id": "c5c3bd833a29a02e",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "O_24_Cart_Stat",
        "func": "if (msg.topic === \"O_24_Cart_Stat\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_24_Cart_Stat\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1400,
        "wires": [
            [
                "60444afa0f103abb"
            ]
        ]
    },
    {
        "id": "33aa83e2164d42c3",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "O_24_Cart_Next",
        "func": "if (msg.topic === \"O_24_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_24_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1440,
        "wires": [
            [
                "51d3568ed4d95b0e"
            ]
        ]
    },
    {
        "id": "2ea966217df5d4e4",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "O_24_Optic",
        "func": "if (msg.topic === \"O_24_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_24_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1480,
        "wires": [
            [
                "7dd16a7c5cdd8725"
            ]
        ]
    },
    {
        "id": "dbae32b5315e77bd",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "O_24_Count",
        "func": "if (msg.topic === \"O_24_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_24_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1520,
        "wires": [
            [
                "65ebb187586a8076"
            ]
        ]
    },
    {
        "id": "81a4d2c5911f373e",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "O_24_Pist_Bck",
        "func": "if (msg.topic === \"O_24_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_24_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1560,
        "wires": [
            [
                "b0b6daa09ca2a610"
            ]
        ]
    },
    {
        "id": "1e94ef8ceca99cef",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "F_24_Release_FB",
        "func": "if (msg.topic === \"F_24_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_24_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1600,
        "wires": [
            [
                "f8c7c2d1939582fa"
            ]
        ]
    },
    {
        "id": "2337c625080a13d1",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "2ed9eafee9460a12"
            ]
        ]
    },
    {
        "id": "57f15f47e7c069f7",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "2c00b477a32865f3",
        "name": "Read S",
        "links": [
            "2ed9eafee9460a12"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "c5664a9ce65b2df7"
            ]
        ]
    },
    {
        "id": "2ed9eafee9460a12",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "9701bae85a5041ce",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "57f15f47e7c069f7",
            "26fd804df4fc7163",
            "7a908195cfd8909d",
            "26630e2ad83218ae",
            "65ea4e556c09fb8f",
            "388e2462fa30dd29",
            "299e6b55fc5a3030",
            "e30a751864a05465",
            "3e4920e014bb8eeb"
        ],
        "x": 1115,
        "y": 380,
        "wires": []
    },
    {
        "id": "26fd804df4fc7163",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "Read A",
        "links": [
            "2ed9eafee9460a12"
        ],
        "x": 55,
        "y": 800,
        "wires": [
            [
                "f46f543a27f24719"
            ]
        ]
    },
    {
        "id": "7a908195cfd8909d",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "db530b5299ce6148",
        "name": "Read F",
        "links": [
            "2ed9eafee9460a12"
        ],
        "x": 55,
        "y": 1060,
        "wires": [
            [
                "612ebd677c902a27"
            ]
        ]
    },
    {
        "id": "26630e2ad83218ae",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "Read Test AS-i",
        "links": [
            "2ed9eafee9460a12"
        ],
        "x": 55,
        "y": 1320,
        "wires": [
            [
                "50c04595323c92be"
            ]
        ]
    },
    {
        "id": "65ea4e556c09fb8f",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "Read Proc AS-i",
        "links": [
            "2ed9eafee9460a12"
        ],
        "x": 55,
        "y": 1820,
        "wires": [
            [
                "908f0dad535bae5a"
            ]
        ]
    },
    {
        "id": "388e2462fa30dd29",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "Read Visi AS-i",
        "links": [
            "2ed9eafee9460a12"
        ],
        "x": 55,
        "y": 2320,
        "wires": [
            [
                "d36192adcddfc9d8"
            ]
        ]
    },
    {
        "id": "299e6b55fc5a3030",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "Read Robo AS-i",
        "links": [
            "2ed9eafee9460a12"
        ],
        "x": 55,
        "y": 2820,
        "wires": [
            [
                "b2544f417671724c"
            ]
        ]
    },
    {
        "id": "e30a751864a05465",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "Read Stor AS-i",
        "links": [
            "2ed9eafee9460a12"
        ],
        "x": 55,
        "y": 3320,
        "wires": [
            [
                "2882ccac65756543"
            ]
        ]
    },
    {
        "id": "3e4920e014bb8eeb",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "Read Sort AS-i",
        "links": [
            "2ed9eafee9460a12"
        ],
        "x": 55,
        "y": 3820,
        "wires": [
            [
                "4455d5aa6e4ad021"
            ]
        ]
    },
    {
        "id": "7d9dfd79ebc4906b",
        "type": "mqtt in",
        "z": "9ab3d53948c971b4",
        "g": "f13981ec3d33259a",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d99579db50330f02",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "3e45fa1f685a44b1"
            ]
        ]
    },
    {
        "id": "3e45fa1f685a44b1",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "f13981ec3d33259a",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "09c82ddb27b51a35",
                "544af644c8e91fdd"
            ]
        ]
    },
    {
        "id": "21d7950c4fa305c1",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "I_20_Led_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 880,
        "wires": [
            [
                "76ac611c910f90db"
            ]
        ]
    },
    {
        "id": "517b0609e79dac35",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "I_20_Led_Off",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\n\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\n\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 920,
        "wires": [
            [
                "76ac611c910f90db"
            ]
        ]
    },
    {
        "id": "c9b55c86be8a93c0",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "I_20_Conveyor",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\n\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\n\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 960,
        "wires": [
            [
                "76ac611c910f90db"
            ]
        ]
    },
    {
        "id": "8f396e165cc3b6da",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "I_24_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1640,
        "wires": [
            [
                "9ee08d634974773c"
            ]
        ]
    },
    {
        "id": "7458ba773ffc9538",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "C_24_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1680,
        "wires": [
            [
                "9ee08d634974773c"
            ]
        ]
    },
    {
        "id": "9b975ad191c5277b",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "I_25_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2140,
        "wires": [
            [
                "a292247e0cbdc7ba"
            ]
        ]
    },
    {
        "id": "3b929b95973d08f2",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "C_25_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2180,
        "wires": [
            [
                "a292247e0cbdc7ba"
            ]
        ]
    },
    {
        "id": "367b93397b0c7113",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "I_26_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2640,
        "wires": [
            [
                "1e7e25d8c9c5a744"
            ]
        ]
    },
    {
        "id": "5a62c5196b01b2d0",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "C_26_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2680,
        "wires": [
            [
                "1e7e25d8c9c5a744"
            ]
        ]
    },
    {
        "id": "c2e8b8a6e048c324",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "I_27_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3140,
        "wires": [
            [
                "d43bb46c015a7225"
            ]
        ]
    },
    {
        "id": "616aaf0abae01674",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "C_27_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3180,
        "wires": [
            [
                "d43bb46c015a7225"
            ]
        ]
    },
    {
        "id": "dd3d46000463b7b5",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "I_28_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3640,
        "wires": [
            [
                "ef8505a6b5befbd6"
            ]
        ]
    },
    {
        "id": "b34f09c1eebfea31",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "C_28_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3680,
        "wires": [
            [
                "ef8505a6b5befbd6"
            ]
        ]
    },
    {
        "id": "3a4ea0e0cd4076f5",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "I_29_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 4140,
        "wires": [
            [
                "6052809fe6805bd9"
            ]
        ]
    },
    {
        "id": "29c306be09bfb9b4",
        "type": "function",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "C_29_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 4180,
        "wires": [
            [
                "6052809fe6805bd9"
            ]
        ]
    },
    {
        "id": "0ec7657e64277f86",
        "type": "link in",
        "z": "9ab3d53948c971b4",
        "g": "f13981ec3d33259a",
        "name": "S7 Actuators",
        "links": [
            "6052809fe6805bd9",
            "ef8505a6b5befbd6",
            "d43bb46c015a7225",
            "1e7e25d8c9c5a744",
            "a292247e0cbdc7ba",
            "9ee08d634974773c",
            "76ac611c910f90db"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "833bb895519b57fd"
            ]
        ]
    },
    {
        "id": "833bb895519b57fd",
        "type": "mqtt out",
        "z": "9ab3d53948c971b4",
        "g": "f13981ec3d33259a",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d99579db50330f02",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "6052809fe6805bd9",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "263d9d7e5a156918",
        "name": "S7 Sort AS-i",
        "mode": "link",
        "links": [
            "0ec7657e64277f86"
        ],
        "x": 1235,
        "y": 4060,
        "wires": []
    },
    {
        "id": "ef8505a6b5befbd6",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "0d32b4e8fc290ffd",
        "name": "S7 Stor AS-i",
        "mode": "link",
        "links": [
            "0ec7657e64277f86"
        ],
        "x": 1235,
        "y": 3560,
        "wires": []
    },
    {
        "id": "d43bb46c015a7225",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "36aa7889781ef46f",
        "name": "S7 Robo AS-i",
        "mode": "link",
        "links": [
            "0ec7657e64277f86"
        ],
        "x": 1235,
        "y": 3060,
        "wires": []
    },
    {
        "id": "1e7e25d8c9c5a744",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "588442fe72b21a9b",
        "name": "S7 Visi AS-i",
        "mode": "link",
        "links": [
            "0ec7657e64277f86"
        ],
        "x": 1235,
        "y": 2560,
        "wires": []
    },
    {
        "id": "a292247e0cbdc7ba",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "a154d6a4a31d181e",
        "name": "S7 Proc AS-i",
        "mode": "link",
        "links": [
            "0ec7657e64277f86"
        ],
        "x": 1235,
        "y": 2060,
        "wires": []
    },
    {
        "id": "9ee08d634974773c",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "ef853cd584db1130",
        "name": "S7 Test AS-i",
        "mode": "link",
        "links": [
            "0ec7657e64277f86"
        ],
        "x": 1235,
        "y": 1560,
        "wires": []
    },
    {
        "id": "76ac611c910f90db",
        "type": "link out",
        "z": "9ab3d53948c971b4",
        "g": "62e2c2c9b17586d6",
        "name": "S7 A",
        "mode": "link",
        "links": [
            "0ec7657e64277f86"
        ],
        "x": 1235,
        "y": 920,
        "wires": []
    },
    {
        "id": "a73fd3bfbbb9cc05",
        "type": "debug",
        "z": "1411e27f85838ba0",
        "g": "0947a21eaf8aaa0f",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "28678fdb6fca4182",
        "type": "OpcUa-Server",
        "z": "1411e27f85838ba0",
        "g": "0947a21eaf8aaa0f",
        "port": "53883",
        "name": "Server : Robot",
        "endpoint": "",
        "users": "",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Robot",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "a73fd3bfbbb9cc05"
            ]
        ]
    },
    {
        "id": "15da9a935e94c7a9",
        "type": "debug",
        "z": "1411e27f85838ba0",
        "g": "9691dc70af74ad70",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "b2b20dddca19ad71",
        "type": "link out",
        "z": "1411e27f85838ba0",
        "g": "9691dc70af74ad70",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [],
        "x": 825,
        "y": 60,
        "wires": []
    },
    {
        "id": "f06cffe28c11119a",
        "type": "mqtt in",
        "z": "1411e27f85838ba0",
        "g": "9691dc70af74ad70",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d99579db50330f02",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "398125bc14c68bec"
            ]
        ]
    },
    {
        "id": "398125bc14c68bec",
        "type": "function",
        "z": "1411e27f85838ba0",
        "g": "9691dc70af74ad70",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "b2b20dddca19ad71",
                "15da9a935e94c7a9"
            ]
        ]
    },
    {
        "id": "9ca2c1cf36b78cbd",
        "type": "mqtt out",
        "z": "1411e27f85838ba0",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d99579db50330f02",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "680e3020c17b7c21",
        "type": "link in",
        "z": "1411e27f85838ba0",
        "g": "9691dc70af74ad70",
        "name": "S7 Actuators",
        "links": [],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "9ca2c1cf36b78cbd"
            ]
        ]
    },
    {
        "id": "3bc6973a087307d3",
        "type": "debug",
        "z": "d95179f3ea7c7997",
        "g": "eeb1eaadcc2a3ddd",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "c7dc38049173d0c1",
        "type": "OpcUa-Server",
        "z": "d95179f3ea7c7997",
        "g": "eeb1eaadcc2a3ddd",
        "port": "53884",
        "name": "Server : Storage",
        "endpoint": "",
        "users": "",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Storage",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "3bc6973a087307d3"
            ]
        ]
    },
    {
        "id": "de716e69cbc3b525",
        "type": "debug",
        "z": "d95179f3ea7c7997",
        "g": "6662fb7d9a3e4415",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "af320134903bc1db",
        "type": "link out",
        "z": "d95179f3ea7c7997",
        "g": "6662fb7d9a3e4415",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "701c579c2f14850e",
        "type": "mqtt in",
        "z": "d95179f3ea7c7997",
        "g": "6662fb7d9a3e4415",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d99579db50330f02",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "1c4a045a0e3e0c6f"
            ]
        ]
    },
    {
        "id": "1c4a045a0e3e0c6f",
        "type": "function",
        "z": "d95179f3ea7c7997",
        "g": "6662fb7d9a3e4415",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "af320134903bc1db",
                "de716e69cbc3b525"
            ]
        ]
    },
    {
        "id": "48ab50a39bb7dabe",
        "type": "mqtt out",
        "z": "d95179f3ea7c7997",
        "g": "6662fb7d9a3e4415",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d99579db50330f02",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "2b3d1a0a06cb8cf7",
        "type": "link in",
        "z": "d95179f3ea7c7997",
        "g": "6662fb7d9a3e4415",
        "name": "S7 Actuators",
        "links": [],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "48ab50a39bb7dabe"
            ]
        ]
    },
    {
        "id": "2136c12c224defb4",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "item": "O_50_Part_Reserve",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Part_Reserve",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "0383f2b49553fd79"
            ]
        ]
    },
    {
        "id": "b8f872d3ea7e036e",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "item": "O_50_Claw_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_Cart",
        "x": 490,
        "y": 660,
        "wires": [
            [
                "0383f2b49553fd79"
            ]
        ]
    },
    {
        "id": "142dde8862c0d513",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "item": "O_50_Claw_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_Del",
        "x": 500,
        "y": 700,
        "wires": [
            [
                "0383f2b49553fd79"
            ]
        ]
    },
    {
        "id": "74236ee755dbb7be",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "item": "O_50_Claw_Reserve",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_Reserve",
        "x": 480,
        "y": 740,
        "wires": [
            [
                "0383f2b49553fd79"
            ]
        ]
    },
    {
        "id": "81852063c78bbb43",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "item": "O_50_Claw_Low",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_Low",
        "x": 490,
        "y": 780,
        "wires": [
            [
                "0383f2b49553fd79"
            ]
        ]
    },
    {
        "id": "d953dedb15c7e0b6",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "item": "O_50_Claw_High",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_High",
        "x": 490,
        "y": 820,
        "wires": [
            [
                "0383f2b49553fd79"
            ]
        ]
    },
    {
        "id": "e99df33ccbca6aa4",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "item": "O_50_Part_in_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Part_in_Claw",
        "x": 480,
        "y": 860,
        "wires": [
            [
                "0383f2b49553fd79"
            ]
        ]
    },
    {
        "id": "0383f2b49553fd79",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "50 Physical Sensor",
        "mode": "link",
        "links": [
            "7ae5d658bd216c7c"
        ],
        "x": 665,
        "y": 740,
        "wires": []
    },
    {
        "id": "3865120317d41ba2",
        "type": "switch",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "50 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_50_Part_Reserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_Reserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_Low",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_High",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Part_in_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 740,
        "wires": [
            [
                "0a59082d1eaa5220"
            ],
            [
                "dbe83ae0a4034f4f"
            ],
            [
                "df9efc95221a12cc"
            ],
            [
                "64e65d25d406a7b3"
            ],
            [
                "7ebd8e37ff384c14"
            ],
            [
                "491fe16e3d05bd61"
            ],
            [
                "52cf011fe8cdeb6f"
            ]
        ]
    },
    {
        "id": "0a59082d1eaa5220",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "order": 0,
        "group": "1cdeeb292587e778",
        "width": 0,
        "height": 0,
        "label": "Part in reserve position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Part_Reserve",
        "x": 1080,
        "y": 620,
        "wires": []
    },
    {
        "id": "dbe83ae0a4034f4f",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "order": 0,
        "group": "1cdeeb292587e778",
        "width": 0,
        "height": 0,
        "label": "Claw at cart position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_Cart",
        "x": 1070,
        "y": 660,
        "wires": []
    },
    {
        "id": "df9efc95221a12cc",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "order": 0,
        "group": "1cdeeb292587e778",
        "width": 0,
        "height": 0,
        "label": "Claw at delivery position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_Del",
        "x": 1060,
        "y": 700,
        "wires": []
    },
    {
        "id": "64e65d25d406a7b3",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "order": 0,
        "group": "1cdeeb292587e778",
        "width": 0,
        "height": 0,
        "label": "Claw at reserve position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_Reserve",
        "x": 1080,
        "y": 740,
        "wires": []
    },
    {
        "id": "7ebd8e37ff384c14",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "order": 0,
        "group": "1cdeeb292587e778",
        "width": 0,
        "height": 0,
        "label": "Claw Low",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_Low",
        "x": 1070,
        "y": 780,
        "wires": []
    },
    {
        "id": "491fe16e3d05bd61",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "order": 0,
        "group": "1cdeeb292587e778",
        "width": 0,
        "height": 0,
        "label": "Claw high",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_High",
        "x": 1070,
        "y": 820,
        "wires": []
    },
    {
        "id": "52cf011fe8cdeb6f",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "order": 0,
        "group": "1cdeeb292587e778",
        "width": 0,
        "height": 0,
        "label": "Part in claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Part_in_Claw",
        "x": 1080,
        "y": 860,
        "wires": []
    },
    {
        "id": "063a6892cb9b46e7",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_50_Part_Reserve\" : false,\n            \"O_50_Claw_Cart\" : false,\n            \"O_50_Claw_Del\" : false,\n            \"O_50_Claw_Reserve\" : false,\n            \"O_50_Claw_Low\" : false,\n            \"O_50_Claw_High\" : false,\n            \"O_50_Part_in_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "4b0fb6d909f5797d"
            ]
        ]
    },
    {
        "id": "67f5b3596a86b14a",
        "type": "OpcUa-Client",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "endpoint": "b6b990ae69a976d4",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "b5b1137272c78be4",
                "1b7005d0820a3fc9"
            ],
            [
                "063a6892cb9b46e7"
            ]
        ]
    },
    {
        "id": "4b0fb6d909f5797d",
        "type": "trigger",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "50ab3a1fd5cfcc1a"
            ]
        ]
    },
    {
        "id": "9ef7235b99a1f699",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "67f5b3596a86b14a"
            ]
        ]
    },
    {
        "id": "b5b1137272c78be4",
        "type": "debug",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "50 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 580,
        "wires": []
    },
    {
        "id": "50ab3a1fd5cfcc1a",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "9b4788eaa14ae8e9"
            ]
        ]
    },
    {
        "id": "d79e53ada61478b6",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "9ef7235b99a1f699"
            ]
        ]
    },
    {
        "id": "9b4788eaa14ae8e9",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "a0e5a7697590f866"
            ]
        ]
    },
    {
        "id": "a0e5a7697590f866",
        "type": "file in",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "d79e53ada61478b6"
            ]
        ]
    },
    {
        "id": "2475861006c8771e",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "item": "O_51_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Start",
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "d0c5345e1eaa8b8e"
            ]
        ]
    },
    {
        "id": "4b9d8a19201061a4",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "item": "O_51_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Stop",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "d0c5345e1eaa8b8e"
            ]
        ]
    },
    {
        "id": "a94794509d90df1c",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "item": "O_51_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Key_Pos",
        "x": 480,
        "y": 1120,
        "wires": [
            [
                "d0c5345e1eaa8b8e"
            ]
        ]
    },
    {
        "id": "39841cd8361fec04",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "item": "O_51_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Reset",
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "d0c5345e1eaa8b8e"
            ]
        ]
    },
    {
        "id": "f150e25f02fda99c",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "item": "O_51_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Panel_I4",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "d0c5345e1eaa8b8e"
            ]
        ]
    },
    {
        "id": "06d9d5513ab25088",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "item": "O_51_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Panel_I5",
        "x": 480,
        "y": 1240,
        "wires": [
            [
                "d0c5345e1eaa8b8e"
            ]
        ]
    },
    {
        "id": "7382c667579dfad5",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "item": "O_51_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Panel_I6",
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "d0c5345e1eaa8b8e"
            ]
        ]
    },
    {
        "id": "d0c5345e1eaa8b8e",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "50 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "7ae5d658bd216c7c"
        ],
        "x": 645,
        "y": 1180,
        "wires": []
    },
    {
        "id": "61ad2dc77ca989ae",
        "type": "switch",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "50 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_51_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1180,
        "wires": [
            [
                "67fdbfefd0e6129a"
            ],
            [
                "f0b46a4dcd3e329b"
            ],
            [
                "4fbbbfd0d105c609"
            ],
            [
                "6b7d984fb4abb8db"
            ],
            [
                "8ac27494c3e19d5f"
            ],
            [
                "b14fed21be064615"
            ],
            [
                "6aec40a76f6668c0"
            ],
            [
                "40464c29a41ce351"
            ]
        ]
    },
    {
        "id": "67fdbfefd0e6129a",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "order": 0,
        "group": "3e0a9523eee91330",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Start",
        "x": 1050,
        "y": 1040,
        "wires": []
    },
    {
        "id": "f0b46a4dcd3e329b",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "order": 0,
        "group": "3e0a9523eee91330",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Stop",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "4fbbbfd0d105c609",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "order": 0,
        "group": "3e0a9523eee91330",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Key_Pos",
        "x": 1060,
        "y": 1120,
        "wires": []
    },
    {
        "id": "6b7d984fb4abb8db",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "order": 0,
        "group": "3e0a9523eee91330",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Reset",
        "x": 1050,
        "y": 1160,
        "wires": []
    },
    {
        "id": "8ac27494c3e19d5f",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "order": 0,
        "group": "3e0a9523eee91330",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Panel_I4",
        "x": 1060,
        "y": 1200,
        "wires": []
    },
    {
        "id": "b14fed21be064615",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "order": 0,
        "group": "3e0a9523eee91330",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Panel_I5",
        "x": 1060,
        "y": 1240,
        "wires": []
    },
    {
        "id": "6aec40a76f6668c0",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "order": 0,
        "group": "3e0a9523eee91330",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Panel_I6",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "86247337ee27566a",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "item": "O_51_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Panel_I7",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "d0c5345e1eaa8b8e"
            ]
        ]
    },
    {
        "id": "40464c29a41ce351",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "order": 0,
        "group": "3e0a9523eee91330",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Panel_I7",
        "x": 1060,
        "y": 1320,
        "wires": []
    },
    {
        "id": "bfa9f8ae0181f020",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 960,
        "wires": [
            [
                "9e189cd1f3c8ce6a"
            ]
        ]
    },
    {
        "id": "2b85750ca1eeb776",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 960,
        "wires": [
            [
                "bfa9f8ae0181f020"
            ]
        ]
    },
    {
        "id": "9e189cd1f3c8ce6a",
        "type": "OpcUa-Client",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "endpoint": "b6b990ae69a976d4",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 960,
        "wires": [
            [
                "44b8e1a5f2026fbe",
                "28dcf93258a1e45e"
            ],
            [
                "d4608572596808f4"
            ]
        ]
    },
    {
        "id": "f27c2a41e2e20c74",
        "type": "file in",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 960,
        "wires": [
            [
                "2b85750ca1eeb776"
            ]
        ]
    },
    {
        "id": "44b8e1a5f2026fbe",
        "type": "debug",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "50 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d4608572596808f4",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_51_Start\" : false,\n            \"O_51_Stop\" : false,\n            \"O_51_Key_Pos\" : false,\n            \"O_51_Reset\" : false,\n            \"O_51_Panel_I4\" : false,\n            \"O_51_Panel_I5\" : false,\n            \"O_51_Panel_I6\" : false,\n            \"O_51_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 960,
        "wires": [
            [
                "5fe7f3dbbfb54d7c"
            ]
        ]
    },
    {
        "id": "b13b7ecefecbdad7",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 960,
        "wires": [
            [
                "f27c2a41e2e20c74"
            ]
        ]
    },
    {
        "id": "5fe7f3dbbfb54d7c",
        "type": "trigger",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 960,
        "wires": [
            [
                "48646edf8101e042"
            ]
        ]
    },
    {
        "id": "48646edf8101e042",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 960,
        "wires": [
            [
                "b13b7ecefecbdad7"
            ]
        ]
    },
    {
        "id": "43c1c46f99efe35c",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "item": "I_50_Claw_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "I_50_Claw_2_Del",
        "x": 470,
        "y": 1500,
        "wires": [
            [
                "cd48d732ddc83449"
            ]
        ]
    },
    {
        "id": "e2ed367692a61866",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "item": "I_50_Claw_2_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "I_50_Claw_2_Cart",
        "x": 470,
        "y": 1540,
        "wires": [
            [
                "cd48d732ddc83449"
            ]
        ]
    },
    {
        "id": "f449ce4f4b42d86e",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "item": "I_50_Claw_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "I_50_Claw_Down",
        "x": 470,
        "y": 1580,
        "wires": [
            [
                "cd48d732ddc83449"
            ]
        ]
    },
    {
        "id": "caa0321d90cc3827",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "item": "I_50_Close_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "I_50_Close_Claw",
        "x": 470,
        "y": 1620,
        "wires": [
            [
                "cd48d732ddc83449"
            ]
        ]
    },
    {
        "id": "cd48d732ddc83449",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "50 Physical Actuators",
        "mode": "link",
        "links": [
            "7ae5d658bd216c7c"
        ],
        "x": 645,
        "y": 1560,
        "wires": []
    },
    {
        "id": "04790396050b66fb",
        "type": "switch",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "50 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_50_Claw_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_50_Claw_2_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_50_Claw_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_50_Close_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 1560,
        "wires": [
            [
                "2ef0af5ff3604d7f"
            ],
            [
                "b667421a80f99c2b"
            ],
            [
                "7dc38e5a8dd1dd06"
            ],
            [
                "d1f8482b1b36abcf"
            ]
        ]
    },
    {
        "id": "e10fb5c955345369",
        "type": "ui_switch",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "I_50_Claw_2_Del",
        "label": "Moves claw to delivery position",
        "tooltip": "",
        "group": "bf45764539a46422",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1500,
        "wires": [
            [
                "43c1c46f99efe35c"
            ]
        ]
    },
    {
        "id": "00d2ec3538b816f6",
        "type": "ui_switch",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "I_50_Claw_2_Cart",
        "label": "Moves claw to cart position",
        "tooltip": "",
        "group": "bf45764539a46422",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1540,
        "wires": [
            [
                "e2ed367692a61866"
            ]
        ]
    },
    {
        "id": "a8b0c0ba0c449745",
        "type": "ui_switch",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "I_50_Claw_Down",
        "label": "Lowers claw",
        "tooltip": "",
        "group": "bf45764539a46422",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1580,
        "wires": [
            [
                "f449ce4f4b42d86e"
            ]
        ]
    },
    {
        "id": "8a7eef806c10b2f5",
        "type": "ui_switch",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "I_50_Close_Claw",
        "label": "Closes claw",
        "tooltip": "",
        "group": "bf45764539a46422",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1620,
        "wires": [
            [
                "caa0321d90cc3827"
            ]
        ]
    },
    {
        "id": "d265b35aac5a62da",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1420,
        "wires": [
            [
                "e1ebec86da305f7a"
            ]
        ]
    },
    {
        "id": "27edda15c8ee4112",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "d265b35aac5a62da"
            ]
        ]
    },
    {
        "id": "e1ebec86da305f7a",
        "type": "OpcUa-Client",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "endpoint": "b6b990ae69a976d4",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1420,
        "wires": [
            [
                "f3faaf95a7ae1793",
                "adb1283523b8f208"
            ],
            [
                "cc07062ac3cd4ea7"
            ]
        ]
    },
    {
        "id": "52be74db065dbf4f",
        "type": "file in",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "27edda15c8ee4112"
            ]
        ]
    },
    {
        "id": "f3faaf95a7ae1793",
        "type": "debug",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "50 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1460,
        "wires": []
    },
    {
        "id": "cc07062ac3cd4ea7",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_50_Claw_2_Del\" : false,\n            \"I_50_Claw_2_Cart\" : false,\n            \"I_50_Claw_Down\" : false,\n            \"I_50_Close_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1420,
        "wires": [
            [
                "8b611317c0c70c00"
            ]
        ]
    },
    {
        "id": "73dd4bab593b018e",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "52be74db065dbf4f"
            ]
        ]
    },
    {
        "id": "8b611317c0c70c00",
        "type": "trigger",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1420,
        "wires": [
            [
                "179799f2bfb7603e"
            ]
        ]
    },
    {
        "id": "179799f2bfb7603e",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1420,
        "wires": [
            [
                "73dd4bab593b018e"
            ]
        ]
    },
    {
        "id": "3643f2a85761c6ba",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "item": "I_51_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Led_Start",
        "x": 480,
        "y": 1800,
        "wires": [
            [
                "bba1c444381b1192"
            ]
        ]
    },
    {
        "id": "43ca46a79fa6ebe9",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "item": "I_51_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Led_Reset",
        "x": 480,
        "y": 1840,
        "wires": [
            [
                "bba1c444381b1192"
            ]
        ]
    },
    {
        "id": "72a7e44264520970",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "item": "I_51_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Led_Extra1",
        "x": 470,
        "y": 1880,
        "wires": [
            [
                "bba1c444381b1192"
            ]
        ]
    },
    {
        "id": "965478f5d479297f",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "item": "I_51_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Led_Extra2",
        "x": 470,
        "y": 1920,
        "wires": [
            [
                "bba1c444381b1192"
            ]
        ]
    },
    {
        "id": "6acfd019b302313f",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "item": "I_51_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Panel_O4",
        "x": 480,
        "y": 1960,
        "wires": [
            [
                "bba1c444381b1192"
            ]
        ]
    },
    {
        "id": "bba1c444381b1192",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "50 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "7ae5d658bd216c7c"
        ],
        "x": 645,
        "y": 1940,
        "wires": []
    },
    {
        "id": "eee42ed03a6f2025",
        "type": "switch",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "50 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_51_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1940,
        "wires": [
            [
                "3fad115675e1d75b"
            ],
            [
                "bc3638306a892e8a"
            ],
            [
                "88ee55d17eb88eb2"
            ],
            [
                "1fe52a5dadd4471f"
            ],
            [
                "fb6dc18e889ced18"
            ],
            [
                "992185d412788592"
            ],
            [
                "1c8fb9ef88c005f3"
            ],
            [
                "bf5716e4b526efee"
            ]
        ]
    },
    {
        "id": "3f6cfb5251c14d5d",
        "type": "ui_switch",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "aba69fdbdfb23212",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1800,
        "wires": [
            [
                "3643f2a85761c6ba"
            ]
        ]
    },
    {
        "id": "00a7e381b45eeaee",
        "type": "ui_switch",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "aba69fdbdfb23212",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1840,
        "wires": [
            [
                "43ca46a79fa6ebe9"
            ]
        ]
    },
    {
        "id": "27900eedd0efc5ee",
        "type": "ui_switch",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "aba69fdbdfb23212",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1880,
        "wires": [
            [
                "72a7e44264520970"
            ]
        ]
    },
    {
        "id": "33b92228420ced36",
        "type": "ui_switch",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "aba69fdbdfb23212",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1920,
        "wires": [
            [
                "965478f5d479297f"
            ]
        ]
    },
    {
        "id": "dd5442c9408c424b",
        "type": "ui_switch",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "aba69fdbdfb23212",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1960,
        "wires": [
            [
                "6acfd019b302313f"
            ]
        ]
    },
    {
        "id": "296dcaeb9ec066d8",
        "type": "ui_switch",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "aba69fdbdfb23212",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2000,
        "wires": [
            [
                "e1eb84ebaa23c265"
            ]
        ]
    },
    {
        "id": "e1eb84ebaa23c265",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "item": "I_51_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Panel_O5",
        "x": 480,
        "y": 2000,
        "wires": [
            [
                "bba1c444381b1192"
            ]
        ]
    },
    {
        "id": "a82d766622394bd2",
        "type": "ui_switch",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "aba69fdbdfb23212",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2040,
        "wires": [
            [
                "a390c913f4526f99"
            ]
        ]
    },
    {
        "id": "a390c913f4526f99",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "item": "I_51_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Panel_O6",
        "x": 480,
        "y": 2040,
        "wires": [
            [
                "bba1c444381b1192"
            ]
        ]
    },
    {
        "id": "0eba29987827ef5e",
        "type": "ui_switch",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "aba69fdbdfb23212",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2080,
        "wires": [
            [
                "6f35ffdfe53a91ed"
            ]
        ]
    },
    {
        "id": "6f35ffdfe53a91ed",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "item": "I_51_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Panel_O7",
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "bba1c444381b1192"
            ]
        ]
    },
    {
        "id": "0df262e15d907937",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1720,
        "wires": [
            [
                "060be75051d624cc"
            ]
        ]
    },
    {
        "id": "2e68f3088f806e87",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1720,
        "wires": [
            [
                "0df262e15d907937"
            ]
        ]
    },
    {
        "id": "060be75051d624cc",
        "type": "OpcUa-Client",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "endpoint": "b6b990ae69a976d4",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1720,
        "wires": [
            [
                "7a6938033b01b671",
                "34e4c8776c233bc6"
            ],
            [
                "902b83dbb0ef8308"
            ]
        ]
    },
    {
        "id": "97405ca1a0a9149c",
        "type": "file in",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1720,
        "wires": [
            [
                "2e68f3088f806e87"
            ]
        ]
    },
    {
        "id": "7a6938033b01b671",
        "type": "debug",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "50 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1760,
        "wires": []
    },
    {
        "id": "902b83dbb0ef8308",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_51_Led_Start\" : false,\n            \"I_51_Led_Reset\" : false,\n            \"I_51_Led_Extra1\" : false,\n            \"I_51_Led_Extra2\" : false,\n            \"I_51_Panel_O4\" : false,\n            \"I_51_Panel_O5\" : false,\n            \"I_51_Panel_O6\" : false,\n            \"I_51_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1720,
        "wires": [
            [
                "ffe2a4f0600b067b"
            ]
        ]
    },
    {
        "id": "f62684bf1e6c08c4",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1720,
        "wires": [
            [
                "97405ca1a0a9149c"
            ]
        ]
    },
    {
        "id": "ffe2a4f0600b067b",
        "type": "trigger",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1720,
        "wires": [
            [
                "f0cb84ab16eb5a0d"
            ]
        ]
    },
    {
        "id": "f0cb84ab16eb5a0d",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1720,
        "wires": [
            [
                "f62684bf1e6c08c4"
            ]
        ]
    },
    {
        "id": "0d5aa0b995ece86b",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "item": "F_52_Claw_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "F_52_Claw_2_Del",
        "x": 470,
        "y": 2260,
        "wires": [
            [
                "6969491f86c8a1d6"
            ]
        ]
    },
    {
        "id": "cab82907f3454290",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "item": "F_52_Claw_2_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "F_52_Claw_2_Cart",
        "x": 470,
        "y": 2300,
        "wires": [
            [
                "6969491f86c8a1d6"
            ]
        ]
    },
    {
        "id": "82a2f7d246c2629a",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "item": "F_52_Claw_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "F_52_Claw_Down",
        "x": 470,
        "y": 2340,
        "wires": [
            [
                "6969491f86c8a1d6"
            ]
        ]
    },
    {
        "id": "c970e190d5b246dd",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "item": "F_52_Close_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "F_52_Close_Claw",
        "x": 470,
        "y": 2380,
        "wires": [
            [
                "6969491f86c8a1d6"
            ]
        ]
    },
    {
        "id": "6969491f86c8a1d6",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "50 Physical Feedback",
        "mode": "link",
        "links": [
            "7ae5d658bd216c7c"
        ],
        "x": 645,
        "y": 2320,
        "wires": []
    },
    {
        "id": "9b6609a40346ec73",
        "type": "switch",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "50 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_52_Claw_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_52_Claw_2_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_52_Claw_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_52_Close_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 2320,
        "wires": [
            [
                "502678fe47e0bafc"
            ],
            [
                "53c16b3d3e6bde67"
            ],
            [
                "0b685061691996b2"
            ],
            [
                "7e1184311da52736"
            ]
        ]
    },
    {
        "id": "502678fe47e0bafc",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "order": 0,
        "group": "ef990ee39b223d7c",
        "width": 0,
        "height": 0,
        "label": "Moves claw to delivery position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_52_Claw_2_Del",
        "x": 1070,
        "y": 2260,
        "wires": []
    },
    {
        "id": "53c16b3d3e6bde67",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "order": 0,
        "group": "ef990ee39b223d7c",
        "width": 0,
        "height": 0,
        "label": "Moves claw to cart position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_52_Claw_2_Cart",
        "x": 1070,
        "y": 2300,
        "wires": []
    },
    {
        "id": "0b685061691996b2",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "order": 0,
        "group": "ef990ee39b223d7c",
        "width": 0,
        "height": 0,
        "label": "Lowers claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_52_Claw_Down",
        "x": 1070,
        "y": 2340,
        "wires": []
    },
    {
        "id": "7e1184311da52736",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "order": 0,
        "group": "ef990ee39b223d7c",
        "width": 0,
        "height": 0,
        "label": "Closes claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_52_Close_Claw",
        "x": 1070,
        "y": 2380,
        "wires": []
    },
    {
        "id": "9911198b5421e964",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2180,
        "wires": [
            [
                "6c96562c15f3b574"
            ]
        ]
    },
    {
        "id": "2f22acc22a06cc24",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2180,
        "wires": [
            [
                "9911198b5421e964"
            ]
        ]
    },
    {
        "id": "6c96562c15f3b574",
        "type": "OpcUa-Client",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "endpoint": "b6b990ae69a976d4",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2180,
        "wires": [
            [
                "38927898b21e74a5",
                "7ecc4780f394c15d"
            ],
            [
                "09406b18b0853d8c"
            ]
        ]
    },
    {
        "id": "1b6d6f26de46e525",
        "type": "file in",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2180,
        "wires": [
            [
                "2f22acc22a06cc24"
            ]
        ]
    },
    {
        "id": "38927898b21e74a5",
        "type": "debug",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "50 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2220,
        "wires": []
    },
    {
        "id": "09406b18b0853d8c",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_52_Claw_2_Del\" : false,\n            \"F_52_Claw_2_Cart\" : false,\n            \"F_52_Claw_Down\" : false,\n            \"F_52_Close_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2180,
        "wires": [
            [
                "2ec7e452af47a32b"
            ]
        ]
    },
    {
        "id": "a1953f2d19061d7d",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2180,
        "wires": [
            [
                "1b6d6f26de46e525"
            ]
        ]
    },
    {
        "id": "2ec7e452af47a32b",
        "type": "trigger",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2180,
        "wires": [
            [
                "42783bfe9cf42f93"
            ]
        ]
    },
    {
        "id": "42783bfe9cf42f93",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2180,
        "wires": [
            [
                "a1953f2d19061d7d"
            ]
        ]
    },
    {
        "id": "1e3a39785574b485",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "item": "F_53_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Led_Start",
        "x": 480,
        "y": 2560,
        "wires": [
            [
                "b5d2a4105292af2c"
            ]
        ]
    },
    {
        "id": "c15817da5b19a833",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "item": "F_53_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Led_Reset",
        "x": 470,
        "y": 2600,
        "wires": [
            [
                "b5d2a4105292af2c"
            ]
        ]
    },
    {
        "id": "54693a9ef616086d",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "item": "F_53_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Led_Extra1",
        "x": 470,
        "y": 2640,
        "wires": [
            [
                "b5d2a4105292af2c"
            ]
        ]
    },
    {
        "id": "704d69ea88213470",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "item": "F_53_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Led_Extra2",
        "x": 470,
        "y": 2680,
        "wires": [
            [
                "b5d2a4105292af2c"
            ]
        ]
    },
    {
        "id": "80d3bb0e2da15816",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "item": "F_53_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Panel_O4",
        "x": 480,
        "y": 2720,
        "wires": [
            [
                "b5d2a4105292af2c"
            ]
        ]
    },
    {
        "id": "177bed7b0fc2f25a",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "item": "F_53_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Panel_O5",
        "x": 480,
        "y": 2760,
        "wires": [
            [
                "b5d2a4105292af2c"
            ]
        ]
    },
    {
        "id": "95c6d243df69cfda",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "item": "F_53_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Panel_O6",
        "x": 480,
        "y": 2800,
        "wires": [
            [
                "b5d2a4105292af2c"
            ]
        ]
    },
    {
        "id": "b5d2a4105292af2c",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "90 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "7ae5d658bd216c7c"
        ],
        "x": 645,
        "y": 2700,
        "wires": []
    },
    {
        "id": "90a28b4d010605ec",
        "type": "switch",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "50 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_53_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2700,
        "wires": [
            [
                "b54969a12b33b299"
            ],
            [
                "51db934ad8d118ba"
            ],
            [
                "2b0f1290b28dac4a"
            ],
            [
                "88b75189b65d9c8d"
            ],
            [
                "415d3b75d25f003b"
            ],
            [
                "0d5f719bf6112f0b"
            ],
            [
                "3dfd786e0388c2f3"
            ],
            [
                "1818c4f53f8afe6d"
            ]
        ]
    },
    {
        "id": "b54969a12b33b299",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "order": 0,
        "group": "1d680f6f86807497",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Led_Start",
        "x": 1060,
        "y": 2560,
        "wires": []
    },
    {
        "id": "51db934ad8d118ba",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "order": 0,
        "group": "1d680f6f86807497",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Led_Reset",
        "x": 1070,
        "y": 2600,
        "wires": []
    },
    {
        "id": "2b0f1290b28dac4a",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "order": 0,
        "group": "1d680f6f86807497",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Led_Extra1",
        "x": 1070,
        "y": 2640,
        "wires": []
    },
    {
        "id": "88b75189b65d9c8d",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "order": 0,
        "group": "1d680f6f86807497",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Led_Extra2",
        "x": 1070,
        "y": 2680,
        "wires": []
    },
    {
        "id": "415d3b75d25f003b",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "order": 0,
        "group": "1d680f6f86807497",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Panel_O4",
        "x": 1060,
        "y": 2720,
        "wires": []
    },
    {
        "id": "0d5f719bf6112f0b",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "order": 0,
        "group": "1d680f6f86807497",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Panel_O5",
        "x": 1060,
        "y": 2760,
        "wires": []
    },
    {
        "id": "3dfd786e0388c2f3",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "order": 0,
        "group": "1d680f6f86807497",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Panel_O6",
        "x": 1060,
        "y": 2800,
        "wires": []
    },
    {
        "id": "d8acf8cf4292ca99",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "item": "F_53_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Panel_O7",
        "x": 480,
        "y": 2840,
        "wires": [
            [
                "b5d2a4105292af2c"
            ]
        ]
    },
    {
        "id": "1818c4f53f8afe6d",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "order": 0,
        "group": "1d680f6f86807497",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Panel_O7",
        "x": 1060,
        "y": 2840,
        "wires": []
    },
    {
        "id": "ea2a67ca98fc86d8",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2480,
        "wires": [
            [
                "6e5ad42110b34f9e"
            ]
        ]
    },
    {
        "id": "79144d8b8f46f8e5",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2480,
        "wires": [
            [
                "ea2a67ca98fc86d8"
            ]
        ]
    },
    {
        "id": "6e5ad42110b34f9e",
        "type": "OpcUa-Client",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "endpoint": "b6b990ae69a976d4",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2480,
        "wires": [
            [
                "34410ecec8d7e83e",
                "0e00f0e2270eda76"
            ],
            [
                "fc4aa5380081c764"
            ]
        ]
    },
    {
        "id": "f7da38f6301030d4",
        "type": "file in",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2480,
        "wires": [
            [
                "79144d8b8f46f8e5"
            ]
        ]
    },
    {
        "id": "34410ecec8d7e83e",
        "type": "debug",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "50 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2520,
        "wires": []
    },
    {
        "id": "fc4aa5380081c764",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_53_Led_Start\" : false,\n            \"F_53_Led_Reset\" : false,\n            \"F_53_Led_Extra1\" : false,\n            \"F_53_Led_Extra2\" : false,\n            \"F_53_Panel_O4\" : false,\n            \"F_53_Panel_O5\" : false,\n            \"F_53_Panel_O6\" : false,\n            \"F_53_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2480,
        "wires": [
            [
                "ab501fb172f24e68"
            ]
        ]
    },
    {
        "id": "5e88153559d4671c",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2480,
        "wires": [
            [
                "f7da38f6301030d4"
            ]
        ]
    },
    {
        "id": "ab501fb172f24e68",
        "type": "trigger",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2480,
        "wires": [
            [
                "a7ea31c30f348fc1"
            ]
        ]
    },
    {
        "id": "a7ea31c30f348fc1",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2480,
        "wires": [
            [
                "5e88153559d4671c"
            ]
        ]
    },
    {
        "id": "1447519b4b187b76",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "item": "C_52_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_52_Profibus",
        "x": 620,
        "y": 3020,
        "wires": [
            [
                "c90ecd358a74144b"
            ]
        ]
    },
    {
        "id": "a6eeeada79e4c33d",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "item": "C_55_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_55_Initialization",
        "x": 610,
        "y": 3060,
        "wires": [
            [
                "c90ecd358a74144b"
            ]
        ]
    },
    {
        "id": "647cc8463eba657f",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "item": "C_55_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "C_55_Start",
        "x": 630,
        "y": 3100,
        "wires": [
            [
                "c90ecd358a74144b"
            ]
        ]
    },
    {
        "id": "425ae020e4c456f6",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "item": "C_55_Cart2Del",
        "datatype": "Boolean",
        "value": "",
        "name": "C_55_Cart2Del",
        "x": 620,
        "y": 3140,
        "wires": [
            [
                "c90ecd358a74144b"
            ]
        ]
    },
    {
        "id": "f561e6975ccbf227",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "item": "C_55_Del2Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "C_55_Del2Cart",
        "x": 620,
        "y": 3180,
        "wires": [
            [
                "c90ecd358a74144b"
            ]
        ]
    },
    {
        "id": "c90ecd358a74144b",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "50 Control",
        "mode": "link",
        "links": [
            "7ae5d658bd216c7c"
        ],
        "x": 795,
        "y": 3100,
        "wires": []
    },
    {
        "id": "c27441467a37e13e",
        "type": "switch",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "50 C",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_52_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_55_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_55_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_55_Cart2Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_55_Del2Cart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 990,
        "y": 3100,
        "wires": [
            [
                "5b9acf86be9ee9ef"
            ],
            [
                "1473a5cebc709fb7"
            ],
            [
                "8c5eeb2fb92774ba"
            ],
            [
                "abed88be1bb95e3b"
            ],
            [
                "9a0bd4d4157bc462"
            ]
        ]
    },
    {
        "id": "5b9acf86be9ee9ef",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "order": 2,
        "group": "602d077181cba948",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_52_Profibus",
        "x": 1180,
        "y": 3020,
        "wires": []
    },
    {
        "id": "1473a5cebc709fb7",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "order": 1,
        "group": "602d077181cba948",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_55_Initialization",
        "x": 1190,
        "y": 3060,
        "wires": []
    },
    {
        "id": "9834a411fa0cfbf6",
        "type": "ui_dropdown",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "602d077181cba948",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Cart to Delivery Mode",
                "value": "C_55_Cart2Del",
                "type": "str"
            },
            {
                "label": "Delivery to Cart Mode",
                "value": "C_55_Del2Cart",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 3160,
        "wires": [
            [
                "db45660480dcf0b6",
                "37b48395e2a8ce9a"
            ]
        ]
    },
    {
        "id": "db45660480dcf0b6",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "C_55_Cart2Del",
        "func": "if (msg.payload === \"C_55_Cart2Del\") \nreturn { payload: true, topic: \"C_55_Cart2Del\"};\nelse return { payload: false, topic: \"C_55_Cart2Del\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3140,
        "wires": [
            [
                "425ae020e4c456f6"
            ]
        ]
    },
    {
        "id": "37b48395e2a8ce9a",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "C_55_Del2Cart",
        "func": "if (msg.payload === \"C_55_Del2Cart\") \nreturn { payload: true, topic: \"C_55_Del2Cart\"};\nelse return { payload: false, topic: \"C_55_Del2Cart\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3180,
        "wires": [
            [
                "f561e6975ccbf227"
            ]
        ]
    },
    {
        "id": "05e3cbc7c66f6a42",
        "type": "inject",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_55_Cart2Del",
        "payloadType": "str",
        "x": 190,
        "y": 3200,
        "wires": [
            [
                "9834a411fa0cfbf6"
            ]
        ]
    },
    {
        "id": "f3198634012f88ee",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2940,
        "wires": [
            [
                "357c1a69de0fb551"
            ]
        ]
    },
    {
        "id": "671ba8ad1e8ebcaf",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2940,
        "wires": [
            [
                "f3198634012f88ee"
            ]
        ]
    },
    {
        "id": "357c1a69de0fb551",
        "type": "OpcUa-Client",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "endpoint": "b6b990ae69a976d4",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2940,
        "wires": [
            [
                "fb340b308438f5c0",
                "aadaa3207d2fa717"
            ],
            [
                "4623aac9e435319a"
            ]
        ]
    },
    {
        "id": "3eab277fb9b0cb08",
        "type": "file in",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2940,
        "wires": [
            [
                "671ba8ad1e8ebcaf"
            ]
        ]
    },
    {
        "id": "fb340b308438f5c0",
        "type": "debug",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "50 C",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2980,
        "wires": []
    },
    {
        "id": "4623aac9e435319a",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_52_Profibus\" : false,\n            \"C_55_Initialization\" : false,\n            \"C_55_Start\" : false,\n            \"C_55_Cart2Del\" : false,\n            \"C_55_Del2Cart\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2940,
        "wires": [
            [
                "7aa2fe3c854c2834"
            ]
        ]
    },
    {
        "id": "cd5e8e8a5046ff82",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2940,
        "wires": [
            [
                "3eab277fb9b0cb08"
            ]
        ]
    },
    {
        "id": "7aa2fe3c854c2834",
        "type": "trigger",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2940,
        "wires": [
            [
                "727d2f6c789efb92"
            ]
        ]
    },
    {
        "id": "727d2f6c789efb92",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2940,
        "wires": [
            [
                "cd5e8e8a5046ff82"
            ]
        ]
    },
    {
        "id": "d719b607bd6764f4",
        "type": "ui_switch",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "C_55_Start",
        "label": "Start",
        "tooltip": "Start Production",
        "group": "602d077181cba948",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 3100,
        "wires": [
            [
                "647cc8463eba657f"
            ]
        ]
    },
    {
        "id": "b876b2db2c552043",
        "type": "comment",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "91280dc4ee032737",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"A_\")) variableClass = \"AS-i\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "d1663b92f6c47422"
            ]
        ]
    },
    {
        "id": "d1663b92f6c47422",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Handling1_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "b2ee0cc10d31c097"
            ]
        ]
    },
    {
        "id": "9f9701af3606fd3c",
        "type": "file",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "f731c6fed5d8e0f0",
        "type": "comment",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "b2ee0cc10d31c097",
        "type": "OpcUa-Client",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "endpoint": "b6b990ae69a976d4",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "f0c7623d10daf2c8"
            ],
            [
                "e5e1422e1697f044",
                "ea99c50a2bb37f8e"
            ]
        ]
    },
    {
        "id": "f0c7623d10daf2c8",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "513ae4dd6f413442",
                "a6857486f3ac10ec"
            ]
        ]
    },
    {
        "id": "513ae4dd6f413442",
        "type": "file",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "a6857486f3ac10ec",
        "type": "debug",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "0f35a83fa0836fe6",
        "type": "comment",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "8a850a4c42cefef0",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "1de2e703ede0c029"
            ]
        ]
    },
    {
        "id": "2459949ba25c5fab",
        "type": "OpcUa-Client",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "endpoint": "b6b990ae69a976d4",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "a48ab9e6c3202903"
            ],
            []
        ]
    },
    {
        "id": "a48ab9e6c3202903",
        "type": "debug",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "7ae5d658bd216c7c",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Write_Hand1",
        "links": [
            "0383f2b49553fd79",
            "b5d2a4105292af2c",
            "c90ecd358a74144b",
            "d0c5345e1eaa8b8e",
            "7e6b58f9d19c76cb",
            "bba1c444381b1192",
            "6969491f86c8a1d6",
            "cd48d732ddc83449"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "2a64505d65a44381"
            ]
        ]
    },
    {
        "id": "2a64505d65a44381",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "078866f2e147ab14"
            ]
        ]
    },
    {
        "id": "078866f2e147ab14",
        "type": "file in",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "8a850a4c42cefef0"
            ]
        ]
    },
    {
        "id": "1de2e703ede0c029",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "2459949ba25c5fab"
            ]
        ]
    },
    {
        "id": "1447a4b5be6c15c2",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "CSV Link",
        "links": [
            "e5e1422e1697f044"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "110bbcf96095a1de"
            ]
        ]
    },
    {
        "id": "110bbcf96095a1de",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "f80c8c78a2cc8925"
            ]
        ]
    },
    {
        "id": "f80c8c78a2cc8925",
        "type": "trigger",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "9f9701af3606fd3c"
            ]
        ]
    },
    {
        "id": "e5e1422e1697f044",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "1447a4b5be6c15c2",
            "3e0f81e3a50f7d90"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "3e0f81e3a50f7d90",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "CSV Link",
        "links": [
            "e5e1422e1697f044"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "757d295f9304e548"
            ]
        ]
    },
    {
        "id": "757d295f9304e548",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_50_Part_Reserve\" : false,\n    \"O_50_Claw_Cart\" : false,\n    \"O_50_Claw_Del\" : false,\n    \"O_50_Claw_Reserve\" : false,\n    \"O_50_Claw_Low\" : false,\n    \"O_50_Claw_High\" : false,\n    \"O_50_Part_in_Claw\" : false,\n    \"O_51_Start\" : false,\n    \"O_51_Stop\" : false,\n    \"O_51_Key_Pos\" : false,\n    \"O_51_Reset\" : false,\n    \"O_51_Panel_I4\" : false,\n    \"O_51_Panel_I5\" : false,\n    \"O_51_Panel_I6\" : false,\n    \"O_51_Panel_I7\" : false,\n    \"F_52_Claw_2_Del\" : false,\n    \"F_52_Claw_2_Cart\" : false,\n    \"F_52_Claw_Down\" : false,\n    \"F_52_Close_Claw\" : false,\n    \"F_53_Led_Start\" : false,\n    \"F_53_Led_Reset\" : false,\n    \"F_53_Led_Extra1\" : false,\n    \"F_53_Led_Extra2\" : false,\n    \"F_53_Panel_O4\" : false,\n    \"F_53_Panel_O5\" : false,\n    \"F_53_Panel_O6\" : false,\n    \"F_53_Panel_O7\" : false,\n    \"A_54_Request\" : false,\n    \"A_54_No_Cart\" : false,\n    \"A_54_Cart_Full\" : false,\n    \"C_55_Initialization\" : false,\n    \"C_55_PD_Proc\" : false,\n    \"C_55_PD_Cart\" : false,\n    \"I_50_Claw_2_Del\" : false,\n    \"I_50_Claw_2_Cart\" : false,\n    \"I_50_Claw_Down\" : false,\n    \"I_50_Close_Claw\" : false,\n    \"I_51_Led_Start\" : false,\n    \"I_51_Led_Reset\" : false,\n    \"I_51_Led_Extra1\" : false,\n    \"I_51_Led_Extra2\" : false,\n    \"I_51_Panel_O4\" : false,\n    \"I_51_Panel_O5\" : false,\n    \"I_51_Panel_O6\" : false,\n    \"I_51_Panel_O7\" : false,\n    \"C_52_Profibus\" : false,\n    \"A_54_Cart_Stat\" : false,\n    \"A_54_Cart_Next\" : false,\n    \"A_54_Optic\" : false,\n    \"A_54_Count\" : false,\n    \"A_54_Pist_Bck\" : false,\n    \"A_54_Release_FB\" : false,\n    \"C_55_Start\" : false,\n    \"C_55_Cart2Del\" : false,\n    \"C_55_Del2Cart\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "db5290c4e2d19c96"
            ]
        ]
    },
    {
        "id": "db5290c4e2d19c96",
        "type": "trigger",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "91280dc4ee032737"
            ]
        ]
    },
    {
        "id": "105e67252bcabcdf",
        "type": "debug",
        "z": "5c544ea956e8c666",
        "g": "1cee7e7c969d93af",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "41aff30742d55920",
        "type": "OpcUa-Server",
        "z": "5c544ea956e8c666",
        "g": "1cee7e7c969d93af",
        "port": "53885",
        "name": "Server : Handling 1",
        "endpoint": "",
        "users": "",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Handling1",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "105e67252bcabcdf"
            ]
        ]
    },
    {
        "id": "7a2527e8c282eb37",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "item": "A_54_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Cart_Stat",
        "x": 480,
        "y": 3380,
        "wires": [
            [
                "7e6b58f9d19c76cb"
            ]
        ]
    },
    {
        "id": "df927f1fa59c947a",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "item": "A_54_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Cart_Next",
        "x": 470,
        "y": 3420,
        "wires": [
            [
                "7e6b58f9d19c76cb"
            ]
        ]
    },
    {
        "id": "3f8e65bdc50d0f92",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "item": "A_54_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Optic",
        "x": 490,
        "y": 3460,
        "wires": [
            [
                "7e6b58f9d19c76cb"
            ]
        ]
    },
    {
        "id": "5b5a48b15f476f8e",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "item": "A_54_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Count",
        "x": 490,
        "y": 3500,
        "wires": [
            [
                "7e6b58f9d19c76cb"
            ]
        ]
    },
    {
        "id": "7afdda8b528b3089",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "item": "A_54_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Pist_Bck",
        "x": 480,
        "y": 3540,
        "wires": [
            [
                "7e6b58f9d19c76cb"
            ]
        ]
    },
    {
        "id": "02304a0e028e6849",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "item": "A_54_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Release_FB",
        "x": 470,
        "y": 3580,
        "wires": [
            [
                "7e6b58f9d19c76cb"
            ]
        ]
    },
    {
        "id": "d41967a904f66377",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "item": "A_54_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Request",
        "x": 480,
        "y": 3620,
        "wires": [
            [
                "7e6b58f9d19c76cb"
            ]
        ]
    },
    {
        "id": "7e6b58f9d19c76cb",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "50 AS-i",
        "mode": "link",
        "links": [
            "7ae5d658bd216c7c"
        ],
        "x": 645,
        "y": 3540,
        "wires": []
    },
    {
        "id": "846516505ad84176",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3300,
        "wires": [
            [
                "76d59281b3680653"
            ]
        ]
    },
    {
        "id": "76d59281b3680653",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3300,
        "wires": [
            [
                "ffd2231b755e1165"
            ]
        ]
    },
    {
        "id": "ffd2231b755e1165",
        "type": "file in",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3300,
        "wires": [
            [
                "ae3e85da2d915a36"
            ]
        ]
    },
    {
        "id": "ae3e85da2d915a36",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3300,
        "wires": [
            [
                "afc17f2135fb6079"
            ]
        ]
    },
    {
        "id": "afc17f2135fb6079",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3300,
        "wires": [
            [
                "4be2924aa2e527eb"
            ]
        ]
    },
    {
        "id": "4be2924aa2e527eb",
        "type": "OpcUa-Client",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "endpoint": "b6b990ae69a976d4",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3300,
        "wires": [
            [
                "c44eed698c7a66ff",
                "3817858f95b5027f"
            ],
            [
                "f5c5423fbc43f151"
            ]
        ]
    },
    {
        "id": "2bec64d471801cec",
        "type": "switch",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "50 AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A_54_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_No_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Cart_Full",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 3540,
        "wires": [
            [
                "e929d83b6d4c850e"
            ],
            [
                "d68b7d9c73972c52"
            ],
            [
                "2dfafa668defa2d4"
            ],
            [
                "8bd1e16896690962"
            ],
            [
                "8ca6db78596ff540"
            ],
            [
                "b2c9eb78ad0cde6e"
            ],
            [
                "a7c2cb321b190db8"
            ],
            [
                "6425236defef6c2a"
            ],
            [
                "07132a3875053641"
            ]
        ]
    },
    {
        "id": "e929d83b6d4c850e",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "order": 0,
        "group": "8060a8f2ea13c506",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Cart_Stat",
        "x": 1060,
        "y": 3380,
        "wires": []
    },
    {
        "id": "d68b7d9c73972c52",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "order": 0,
        "group": "8060a8f2ea13c506",
        "width": 0,
        "height": 0,
        "label": "Cart near next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Cart_Next",
        "x": 1070,
        "y": 3420,
        "wires": []
    },
    {
        "id": "2dfafa668defa2d4",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "order": 0,
        "group": "8060a8f2ea13c506",
        "width": 0,
        "height": 0,
        "label": "Optic sensor on station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Optic",
        "x": 1050,
        "y": 3460,
        "wires": []
    },
    {
        "id": "8bd1e16896690962",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "order": 0,
        "group": "8060a8f2ea13c506",
        "width": 0,
        "height": 0,
        "label": "Cart count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Count",
        "x": 1050,
        "y": 3500,
        "wires": []
    },
    {
        "id": "8ca6db78596ff540",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "order": 0,
        "group": "8060a8f2ea13c506",
        "width": 0,
        "height": 0,
        "label": "Piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Pist_Bck",
        "x": 1060,
        "y": 3540,
        "wires": []
    },
    {
        "id": "b2c9eb78ad0cde6e",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "order": 0,
        "group": "8060a8f2ea13c506",
        "width": 0,
        "height": 0,
        "label": "Pin release feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Release_FB",
        "x": 1070,
        "y": 3580,
        "wires": []
    },
    {
        "id": "a7c2cb321b190db8",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "order": 0,
        "group": "8060a8f2ea13c506",
        "width": 0,
        "height": 0,
        "label": "Request cart",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Request",
        "x": 1060,
        "y": 3620,
        "wires": []
    },
    {
        "id": "3bea0c30fc22fbaa",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "item": "A_54_No_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_No_Cart",
        "x": 480,
        "y": 3660,
        "wires": [
            [
                "7e6b58f9d19c76cb"
            ]
        ]
    },
    {
        "id": "6425236defef6c2a",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "order": 0,
        "group": "8060a8f2ea13c506",
        "width": 0,
        "height": 0,
        "label": "No Cart at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_No_Cart",
        "x": 1060,
        "y": 3660,
        "wires": []
    },
    {
        "id": "07132a3875053641",
        "type": "ui_led",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "order": 0,
        "group": "8060a8f2ea13c506",
        "width": 0,
        "height": 0,
        "label": "Cart Full at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Cart_Full",
        "x": 1060,
        "y": 3700,
        "wires": []
    },
    {
        "id": "328efccf58e2dd13",
        "type": "OpcUa-Item",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "item": "A_54_Cart_Full",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Cart_Full",
        "x": 480,
        "y": 3700,
        "wires": [
            [
                "7e6b58f9d19c76cb"
            ]
        ]
    },
    {
        "id": "c44eed698c7a66ff",
        "type": "debug",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "50 AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 3340,
        "wires": []
    },
    {
        "id": "f5c5423fbc43f151",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"A_54_Request\" : false,\n            \"A_54_No_Cart\" : false,\n            \"A_54_Cart_Full\" : false,\n            \"A_54_Cart_Stat\" : false,\n            \"A_54_Cart_Next\" : false,\n            \"A_54_Optic\" : false,\n            \"A_54_Count\" : false,\n            \"A_54_Pist_Bck\" : false,\n            \"A_54_Release_FB\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3300,
        "wires": [
            [
                "e7284d5bebc65941"
            ]
        ]
    },
    {
        "id": "e7284d5bebc65941",
        "type": "trigger",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3300,
        "wires": [
            [
                "846516505ad84176"
            ]
        ]
    },
    {
        "id": "18a29732a4ca2248",
        "type": "debug",
        "z": "5c544ea956e8c666",
        "g": "fb5eba2cc7af4dad",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "8e7f0b1714f17dd9",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "fb5eba2cc7af4dad",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "cf1616ac3ac68d19",
            "3f26fa95fa6ea582",
            "1718187db71ed092",
            "d765748bd0b31bec",
            "2e3562448edbda36",
            "1a646517b3bc6db4"
        ],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "61f0ec1481891aee",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "Sub In 50 AS-i",
        "links": [
            "3817858f95b5027f"
        ],
        "x": 755,
        "y": 3540,
        "wires": [
            [
                "2bec64d471801cec"
            ]
        ]
    },
    {
        "id": "3817858f95b5027f",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "Sub Out 50 AS-i",
        "mode": "link",
        "links": [
            "61f0ec1481891aee"
        ],
        "x": 1295,
        "y": 3300,
        "wires": []
    },
    {
        "id": "91c1f6893dcd24cf",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "A_54_Cart_Full",
        "func": "if (msg.topic === \"A_54_Cart_Full\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Cart_Full\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3700,
        "wires": [
            [
                "328efccf58e2dd13"
            ]
        ]
    },
    {
        "id": "cf1616ac3ac68d19",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "S7 AS-i",
        "links": [
            "8e7f0b1714f17dd9"
        ],
        "x": 55,
        "y": 3540,
        "wires": [
            [
                "91c1f6893dcd24cf",
                "143977bdec2a151c",
                "22c8e40dd58eb9dd",
                "87c60af52851adc6",
                "0c222e35bfb128c4",
                "10bdca498b9f98e4",
                "d08420b772b5c679",
                "470cbfc13a020c91",
                "d4fe487969b46e4a"
            ]
        ]
    },
    {
        "id": "143977bdec2a151c",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "A_54_No_Cart",
        "func": "if (msg.topic === \"A_54_No_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_No_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3660,
        "wires": [
            [
                "3bea0c30fc22fbaa"
            ]
        ]
    },
    {
        "id": "22c8e40dd58eb9dd",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "A_54_Request",
        "func": "if (msg.topic === \"A_54_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3620,
        "wires": [
            [
                "d41967a904f66377"
            ]
        ]
    },
    {
        "id": "87c60af52851adc6",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "A_54_Release_FB",
        "func": "if (msg.topic === \"A_54_Release_FB\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Release_FB\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3580,
        "wires": [
            [
                "02304a0e028e6849"
            ]
        ]
    },
    {
        "id": "0c222e35bfb128c4",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "A_54_Pist_Bck",
        "func": "if (msg.topic === \"A_54_Pist_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Pist_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3540,
        "wires": [
            [
                "7afdda8b528b3089"
            ]
        ]
    },
    {
        "id": "10bdca498b9f98e4",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "A_54_Count",
        "func": "if (msg.topic === \"A_54_Count\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Count\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3500,
        "wires": [
            [
                "5b5a48b15f476f8e"
            ]
        ]
    },
    {
        "id": "d08420b772b5c679",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "A_54_Optic",
        "func": "if (msg.topic === \"A_54_Optic\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Optic\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3460,
        "wires": [
            [
                "3f8e65bdc50d0f92"
            ]
        ]
    },
    {
        "id": "470cbfc13a020c91",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "A_54_Cart_Next",
        "func": "if (msg.topic === \"A_54_Cart_Next\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Cart_Next\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3420,
        "wires": [
            [
                "df927f1fa59c947a"
            ]
        ]
    },
    {
        "id": "d4fe487969b46e4a",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "A_54_Cart_Stat",
        "func": "if (msg.topic === \"A_54_Cart_Stat\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Cart_Stat\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3380,
        "wires": [
            [
                "7a2527e8c282eb37"
            ]
        ]
    },
    {
        "id": "f58aebc63087b261",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "Sub In 50 C",
        "links": [
            "aadaa3207d2fa717"
        ],
        "x": 895,
        "y": 3100,
        "wires": [
            [
                "c27441467a37e13e"
            ]
        ]
    },
    {
        "id": "aadaa3207d2fa717",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "Sub Out 50 C",
        "mode": "link",
        "links": [
            "f58aebc63087b261"
        ],
        "x": 1295,
        "y": 2940,
        "wires": []
    },
    {
        "id": "3f26fa95fa6ea582",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "S7 C",
        "links": [
            "8e7f0b1714f17dd9"
        ],
        "x": 55,
        "y": 3040,
        "wires": [
            [
                "43843bc0a8330c6e",
                "5802b9c3a9e27da3"
            ]
        ]
    },
    {
        "id": "43843bc0a8330c6e",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "C_52_Profibus",
        "func": "if (msg.topic === \"C_52_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_52_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3020,
        "wires": [
            [
                "1447519b4b187b76"
            ]
        ]
    },
    {
        "id": "5802b9c3a9e27da3",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "C_55_Initialization",
        "func": "if (msg.topic === \"C_55_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_55_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3060,
        "wires": [
            [
                "a6eeeada79e4c33d"
            ]
        ]
    },
    {
        "id": "0e00f0e2270eda76",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "Sub Out 50 AF",
        "mode": "link",
        "links": [
            "c888c3e89cf1e465"
        ],
        "x": 1295,
        "y": 2480,
        "wires": []
    },
    {
        "id": "c888c3e89cf1e465",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "Sub In 50 AF",
        "links": [
            "0e00f0e2270eda76"
        ],
        "x": 775,
        "y": 2700,
        "wires": [
            [
                "90a28b4d010605ec"
            ]
        ]
    },
    {
        "id": "1718187db71ed092",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "S7 AF",
        "links": [
            "8e7f0b1714f17dd9"
        ],
        "x": 55,
        "y": 2700,
        "wires": [
            [
                "3c876b1f30031c2c",
                "79d47abbcca62e51",
                "1f822ddd1adfbcd6",
                "840a870689d85928",
                "1dbf91a985baff04",
                "37f7a4fd18061608",
                "67a92e3e216fde64",
                "91537752bcf6a410"
            ]
        ]
    },
    {
        "id": "3c876b1f30031c2c",
        "type": "function",
        "z": "5c544ea956e8c666",
        "name": "F_53_Panel_O7",
        "func": "if (msg.topic === \"F_53_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2840,
        "wires": [
            [
                "d8acf8cf4292ca99"
            ]
        ]
    },
    {
        "id": "79d47abbcca62e51",
        "type": "function",
        "z": "5c544ea956e8c666",
        "name": "F_53_Panel_O6",
        "func": "if (msg.topic === \"F_53_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2800,
        "wires": [
            [
                "95c6d243df69cfda"
            ]
        ]
    },
    {
        "id": "1f822ddd1adfbcd6",
        "type": "function",
        "z": "5c544ea956e8c666",
        "name": "F_53_Panel_O5",
        "func": "if (msg.topic === \"F_53_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2760,
        "wires": [
            [
                "177bed7b0fc2f25a"
            ]
        ]
    },
    {
        "id": "840a870689d85928",
        "type": "function",
        "z": "5c544ea956e8c666",
        "name": "F_53_Panel_O4",
        "func": "if (msg.topic === \"F_53_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2720,
        "wires": [
            [
                "80d3bb0e2da15816"
            ]
        ]
    },
    {
        "id": "1dbf91a985baff04",
        "type": "function",
        "z": "5c544ea956e8c666",
        "name": "F_53_Led_Extra2",
        "func": "if (msg.topic === \"F_53_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2680,
        "wires": [
            [
                "704d69ea88213470"
            ]
        ]
    },
    {
        "id": "37f7a4fd18061608",
        "type": "function",
        "z": "5c544ea956e8c666",
        "name": "F_53_Led_Extra1",
        "func": "if (msg.topic === \"F_53_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2640,
        "wires": [
            [
                "54693a9ef616086d"
            ]
        ]
    },
    {
        "id": "67a92e3e216fde64",
        "type": "function",
        "z": "5c544ea956e8c666",
        "name": "F_53_Led_Reset",
        "func": "if (msg.topic === \"F_53_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2600,
        "wires": [
            [
                "c15817da5b19a833"
            ]
        ]
    },
    {
        "id": "91537752bcf6a410",
        "type": "function",
        "z": "5c544ea956e8c666",
        "name": "F_53_Led_Start",
        "func": "if (msg.topic === \"F_53_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2560,
        "wires": [
            [
                "1e3a39785574b485"
            ]
        ]
    },
    {
        "id": "7ecc4780f394c15d",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "Sub Out 50 PF",
        "mode": "link",
        "links": [
            "f11f6c1bfe01508f"
        ],
        "x": 1295,
        "y": 2180,
        "wires": []
    },
    {
        "id": "f11f6c1bfe01508f",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "Sub In 50 PF",
        "links": [
            "7ecc4780f394c15d"
        ],
        "x": 775,
        "y": 2320,
        "wires": [
            [
                "9b6609a40346ec73"
            ]
        ]
    },
    {
        "id": "15332d6b73cf2647",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "F_52_Claw_2_Del",
        "func": "if (msg.topic === \"F_52_Claw_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_52_Claw_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2260,
        "wires": [
            [
                "0d5aa0b995ece86b"
            ]
        ]
    },
    {
        "id": "f57bb2afdfe32936",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "F_52_Claw_2_Cart",
        "func": "if (msg.topic === \"F_52_Claw_2_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_52_Claw_2_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2300,
        "wires": [
            [
                "cab82907f3454290"
            ]
        ]
    },
    {
        "id": "5fd9fd1ac2dd3d74",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "F_52_Claw_Down",
        "func": "if (msg.topic === \"F_52_Claw_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_52_Claw_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2340,
        "wires": [
            [
                "82a2f7d246c2629a"
            ]
        ]
    },
    {
        "id": "1765de4ccab7a394",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "F_52_Close_Claw",
        "func": "if (msg.topic === \"F_52_Close_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_52_Close_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2380,
        "wires": [
            [
                "c970e190d5b246dd"
            ]
        ]
    },
    {
        "id": "d765748bd0b31bec",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "S7 PF",
        "links": [
            "8e7f0b1714f17dd9"
        ],
        "x": 55,
        "y": 2320,
        "wires": [
            [
                "1765de4ccab7a394",
                "5fd9fd1ac2dd3d74",
                "f57bb2afdfe32936",
                "15332d6b73cf2647"
            ]
        ]
    },
    {
        "id": "34e4c8776c233bc6",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "Sub Out 50 AA",
        "mode": "link",
        "links": [
            "3fe2bd2e282a5313"
        ],
        "x": 1295,
        "y": 1720,
        "wires": []
    },
    {
        "id": "3fe2bd2e282a5313",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "Sub In 50 AA",
        "links": [
            "34e4c8776c233bc6"
        ],
        "x": 775,
        "y": 1940,
        "wires": [
            [
                "eee42ed03a6f2025"
            ]
        ]
    },
    {
        "id": "adb1283523b8f208",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "Sub Out 50 PA",
        "mode": "link",
        "links": [
            "e94c44c49c1d65cb"
        ],
        "x": 1295,
        "y": 1420,
        "wires": []
    },
    {
        "id": "e94c44c49c1d65cb",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "Sub In 50 PA",
        "links": [
            "adb1283523b8f208"
        ],
        "x": 775,
        "y": 1560,
        "wires": [
            [
                "04790396050b66fb"
            ]
        ]
    },
    {
        "id": "28dcf93258a1e45e",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "Sub Out 50 AS",
        "mode": "link",
        "links": [
            "5556a30e0370a326"
        ],
        "x": 1295,
        "y": 960,
        "wires": []
    },
    {
        "id": "5556a30e0370a326",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "Sub In 50 AS",
        "links": [
            "28dcf93258a1e45e"
        ],
        "x": 775,
        "y": 1180,
        "wires": [
            [
                "61ad2dc77ca989ae"
            ]
        ]
    },
    {
        "id": "2e3562448edbda36",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "S7 AS",
        "links": [
            "8e7f0b1714f17dd9"
        ],
        "x": 55,
        "y": 1180,
        "wires": [
            [
                "9e80511bf351a3ee",
                "7f102e8a5c533667",
                "8fce27d8f500d422",
                "e6cbdfda3aacb5fa",
                "dc0ec2c62a33a92c",
                "7411bcd161cb3057",
                "1cf7800ebbb9bfdd",
                "4532138020abf62d"
            ]
        ]
    },
    {
        "id": "9e80511bf351a3ee",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "O_51_Panel_I7",
        "func": "if (msg.topic === \"O_51_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "86247337ee27566a"
            ]
        ]
    },
    {
        "id": "7f102e8a5c533667",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "O_51_Panel_I6",
        "func": "if (msg.topic === \"O_51_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "7382c667579dfad5"
            ]
        ]
    },
    {
        "id": "8fce27d8f500d422",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "O_51_Panel_I5",
        "func": "if (msg.topic === \"O_51_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1240,
        "wires": [
            [
                "06d9d5513ab25088"
            ]
        ]
    },
    {
        "id": "e6cbdfda3aacb5fa",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "O_51_Panel_I4",
        "func": "if (msg.topic === \"O_51_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "f150e25f02fda99c"
            ]
        ]
    },
    {
        "id": "dc0ec2c62a33a92c",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "O_51_Reset",
        "func": "if (msg.topic === \"O_51_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "39841cd8361fec04"
            ]
        ]
    },
    {
        "id": "7411bcd161cb3057",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "O_51_Key_Pos",
        "func": "if (msg.topic === \"O_51_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "a94794509d90df1c"
            ]
        ]
    },
    {
        "id": "1cf7800ebbb9bfdd",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "O_51_Stop",
        "func": "if (msg.topic === \"O_51_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "4b9d8a19201061a4"
            ]
        ]
    },
    {
        "id": "4532138020abf62d",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "O_51_Start",
        "func": "if (msg.topic === \"O_51_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "2475861006c8771e"
            ]
        ]
    },
    {
        "id": "ba98dc9d26da6ee7",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "Sub In 50 PS",
        "links": [
            "1b7005d0820a3fc9"
        ],
        "x": 775,
        "y": 740,
        "wires": [
            [
                "3865120317d41ba2"
            ]
        ]
    },
    {
        "id": "1b7005d0820a3fc9",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "Sub Out 50 PS",
        "mode": "link",
        "links": [
            "ba98dc9d26da6ee7"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "1a646517b3bc6db4",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "S7 PS",
        "links": [
            "8e7f0b1714f17dd9"
        ],
        "x": 55,
        "y": 760,
        "wires": [
            [
                "98d31d8031af830f",
                "5fd4706b89d64dea",
                "bc8c560adeb01f5b",
                "b1a9fb0dd4603cf6",
                "9c22ec2f6be40e55",
                "2fdf25e5cee7ab65",
                "85ffe2d9e9e62ddf"
            ]
        ]
    },
    {
        "id": "98d31d8031af830f",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "O_50_Part_in_Claw",
        "func": "if (msg.topic === \"O_50_Part_in_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Part_in_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 860,
        "wires": [
            [
                "e99df33ccbca6aa4"
            ]
        ]
    },
    {
        "id": "5fd4706b89d64dea",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "O_50_Claw_High",
        "func": "if (msg.topic === \"O_50_Claw_High\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_High\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 820,
        "wires": [
            [
                "d953dedb15c7e0b6"
            ]
        ]
    },
    {
        "id": "bc8c560adeb01f5b",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "O_50_Claw_Low",
        "func": "if (msg.topic === \"O_50_Claw_Low\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_Low\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 780,
        "wires": [
            [
                "81852063c78bbb43"
            ]
        ]
    },
    {
        "id": "b1a9fb0dd4603cf6",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "O_50_Claw_Reserve",
        "func": "if (msg.topic === \"O_50_Claw_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 740,
        "wires": [
            [
                "74236ee755dbb7be"
            ]
        ]
    },
    {
        "id": "9c22ec2f6be40e55",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "O_50_Claw_Del",
        "func": "if (msg.topic === \"O_50_Claw_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 700,
        "wires": [
            [
                "142dde8862c0d513"
            ]
        ]
    },
    {
        "id": "2fdf25e5cee7ab65",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "O_50_Claw_Cart",
        "func": "if (msg.topic === \"O_50_Claw_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 660,
        "wires": [
            [
                "b8f872d3ea7e036e"
            ]
        ]
    },
    {
        "id": "85ffe2d9e9e62ddf",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "O_50_Part_Reserve",
        "func": "if (msg.topic === \"O_50_Part_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Part_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 620,
        "wires": [
            [
                "2136c12c224defb4"
            ]
        ]
    },
    {
        "id": "54c7aabf568f21c4",
        "type": "mqtt in",
        "z": "5c544ea956e8c666",
        "g": "fb5eba2cc7af4dad",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d99579db50330f02",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "04aa0b0749f89a5d"
            ]
        ]
    },
    {
        "id": "04aa0b0749f89a5d",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "fb5eba2cc7af4dad",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "8e7f0b1714f17dd9",
                "18a29732a4ca2248"
            ]
        ]
    },
    {
        "id": "ea99c50a2bb37f8e",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "a3f02097100aa51e"
            ]
        ]
    },
    {
        "id": "a3f02097100aa51e",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "4fd7f951b8650487",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "5d34c4c4aef7e0f1",
            "27ef4ef91eef1137",
            "831ef63e0fcc24af",
            "26d3dbcd3a91d6d5",
            "2e27fbb8696da7ad",
            "b820d1cc50fa6ff0",
            "90a69cb1012610c4",
            "8aef7e56f39a21a9"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "5d34c4c4aef7e0f1",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "d7429d0745c744eb",
        "name": "Read PS",
        "links": [
            "a3f02097100aa51e"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "063a6892cb9b46e7"
            ]
        ]
    },
    {
        "id": "27ef4ef91eef1137",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "0917e059ef570e3d",
        "name": "Read AS",
        "links": [
            "a3f02097100aa51e"
        ],
        "x": 55,
        "y": 960,
        "wires": [
            [
                "d4608572596808f4"
            ]
        ]
    },
    {
        "id": "831ef63e0fcc24af",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "Read PA",
        "links": [
            "a3f02097100aa51e"
        ],
        "x": 55,
        "y": 1420,
        "wires": [
            [
                "cc07062ac3cd4ea7"
            ]
        ]
    },
    {
        "id": "26d3dbcd3a91d6d5",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "Read S",
        "links": [
            "a3f02097100aa51e"
        ],
        "x": 55,
        "y": 1720,
        "wires": [
            [
                "902b83dbb0ef8308"
            ]
        ]
    },
    {
        "id": "2e27fbb8696da7ad",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "32c89c15434ee77f",
        "name": "Read PF",
        "links": [
            "a3f02097100aa51e"
        ],
        "x": 55,
        "y": 2180,
        "wires": [
            [
                "09406b18b0853d8c"
            ]
        ]
    },
    {
        "id": "b820d1cc50fa6ff0",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "0126b52505317f5a",
        "name": "Read AF",
        "links": [
            "a3f02097100aa51e"
        ],
        "x": 55,
        "y": 2480,
        "wires": [
            [
                "fc4aa5380081c764"
            ]
        ]
    },
    {
        "id": "90a69cb1012610c4",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "Read C",
        "links": [
            "a3f02097100aa51e"
        ],
        "x": 55,
        "y": 2940,
        "wires": [
            [
                "4623aac9e435319a"
            ]
        ]
    },
    {
        "id": "8aef7e56f39a21a9",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "e3103f8fb347866a",
        "name": "Read S",
        "links": [
            "a3f02097100aa51e"
        ],
        "x": 55,
        "y": 3300,
        "wires": [
            [
                "f5c5423fbc43f151"
            ]
        ]
    },
    {
        "id": "558967886427e406",
        "type": "mqtt out",
        "z": "5c544ea956e8c666",
        "g": "fb5eba2cc7af4dad",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d99579db50330f02",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "b42553883d5e05b0",
        "type": "link in",
        "z": "5c544ea956e8c666",
        "g": "fb5eba2cc7af4dad",
        "name": "S7 Actuators",
        "links": [
            "bec523552a86c14c",
            "9467bfcd931086e2",
            "67c4696eb73ad548"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "558967886427e406"
            ]
        ]
    },
    {
        "id": "2ef0af5ff3604d7f",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "I_50_Claw_2_Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1500,
        "wires": [
            [
                "bec523552a86c14c"
            ]
        ]
    },
    {
        "id": "b667421a80f99c2b",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "I_50_Claw_2_Cart",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1540,
        "wires": [
            [
                "bec523552a86c14c"
            ]
        ]
    },
    {
        "id": "7dc38e5a8dd1dd06",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "I_50_Claw_Down",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1580,
        "wires": [
            [
                "bec523552a86c14c"
            ]
        ]
    },
    {
        "id": "d1f8482b1b36abcf",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "I_50_Close_Claw",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1620,
        "wires": [
            [
                "bec523552a86c14c"
            ]
        ]
    },
    {
        "id": "bec523552a86c14c",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "b8fdd8a68b799ac9",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "b42553883d5e05b0"
        ],
        "x": 1235,
        "y": 1560,
        "wires": []
    },
    {
        "id": "3fad115675e1d75b",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1800,
        "wires": [
            [
                "9467bfcd931086e2"
            ]
        ]
    },
    {
        "id": "bc3638306a892e8a",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1840,
        "wires": [
            [
                "9467bfcd931086e2"
            ]
        ]
    },
    {
        "id": "88ee55d17eb88eb2",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1880,
        "wires": [
            [
                "9467bfcd931086e2"
            ]
        ]
    },
    {
        "id": "1fe52a5dadd4471f",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1920,
        "wires": [
            [
                "9467bfcd931086e2"
            ]
        ]
    },
    {
        "id": "fb6dc18e889ced18",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1960,
        "wires": [
            [
                "9467bfcd931086e2"
            ]
        ]
    },
    {
        "id": "992185d412788592",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2000,
        "wires": [
            [
                "9467bfcd931086e2"
            ]
        ]
    },
    {
        "id": "1c8fb9ef88c005f3",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2040,
        "wires": [
            [
                "9467bfcd931086e2"
            ]
        ]
    },
    {
        "id": "bf5716e4b526efee",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "bb2d4b5e748bd9d8",
        "name": "I_51_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2080,
        "wires": [
            [
                "9467bfcd931086e2"
            ]
        ]
    },
    {
        "id": "9467bfcd931086e2",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "b42553883d5e05b0"
        ],
        "x": 1225,
        "y": 1940,
        "wires": []
    },
    {
        "id": "8c5eeb2fb92774ba",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "C_55_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 3100,
        "wires": [
            [
                "67c4696eb73ad548"
            ]
        ]
    },
    {
        "id": "abed88be1bb95e3b",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "C_55_Cart2Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 3140,
        "wires": [
            [
                "67c4696eb73ad548"
            ]
        ]
    },
    {
        "id": "9a0bd4d4157bc462",
        "type": "function",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "C_55_Del2Cart",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 3180,
        "wires": [
            [
                "67c4696eb73ad548"
            ]
        ]
    },
    {
        "id": "67c4696eb73ad548",
        "type": "link out",
        "z": "5c544ea956e8c666",
        "g": "086b9e8f5afee3d0",
        "name": "S7 C",
        "mode": "link",
        "links": [
            "b42553883d5e05b0"
        ],
        "x": 1365,
        "y": 3100,
        "wires": []
    },
    {
        "id": "4dae7798b5c2e6c1",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "item": "O_60_SPart",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SPart",
        "x": 490,
        "y": 620,
        "wires": [
            [
                "245be97a9a22f33f"
            ]
        ]
    },
    {
        "id": "bb58cff67cb8082c",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "item": "O_60_SInd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SInd",
        "x": 490,
        "y": 660,
        "wires": [
            [
                "245be97a9a22f33f"
            ]
        ]
    },
    {
        "id": "1309b0426561c49c",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "item": "O_60_SPhoto",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SPhoto",
        "x": 480,
        "y": 700,
        "wires": [
            [
                "245be97a9a22f33f"
            ]
        ]
    },
    {
        "id": "1dc32eb90e7fef14",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "item": "O_60_Part_Pass",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_Part_Pass",
        "x": 470,
        "y": 740,
        "wires": [
            [
                "245be97a9a22f33f"
            ]
        ]
    },
    {
        "id": "308ddb65191b4b15",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "item": "O_60_SL1_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SL1_Bck",
        "x": 480,
        "y": 780,
        "wires": [
            [
                "245be97a9a22f33f"
            ]
        ]
    },
    {
        "id": "e2ee87ae3da78fd1",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "item": "O_60_SL1_Fwd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SL1_Fwd",
        "x": 480,
        "y": 820,
        "wires": [
            [
                "245be97a9a22f33f"
            ]
        ]
    },
    {
        "id": "38862857db85f758",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "item": "O_60_SL2_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SL2_Bck",
        "x": 480,
        "y": 860,
        "wires": [
            [
                "245be97a9a22f33f"
            ]
        ]
    },
    {
        "id": "245be97a9a22f33f",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "60 Physical Sensor",
        "mode": "link",
        "links": [
            "b9a239ef82a3b81f",
            "bb684678e7cd0be5"
        ],
        "x": 645,
        "y": 760,
        "wires": []
    },
    {
        "id": "bd73199064cb9e23",
        "type": "switch",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "60 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_60_SPart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SInd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SPhoto",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_Part_Pass",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SL1_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SL1_Fwd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SL2_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SL2_Fwd",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 760,
        "wires": [
            [
                "37720075719b5943"
            ],
            [
                "fee89ffb54515412"
            ],
            [
                "120629bdddad36ea"
            ],
            [
                "ba91982a118a8ac2"
            ],
            [
                "43b9020720c8b2b9"
            ],
            [
                "6d66377056b75dcb"
            ],
            [
                "9a496939eb15a674"
            ],
            [
                "4933509e08f36d8d"
            ]
        ]
    },
    {
        "id": "37720075719b5943",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "order": 0,
        "group": "1b47d71d8c0ca983",
        "width": 0,
        "height": 0,
        "label": "Part sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SPart",
        "x": 1050,
        "y": 620,
        "wires": []
    },
    {
        "id": "fee89ffb54515412",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "order": 0,
        "group": "1b47d71d8c0ca983",
        "width": 0,
        "height": 0,
        "label": "Inductive sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SInd",
        "x": 1050,
        "y": 660,
        "wires": []
    },
    {
        "id": "120629bdddad36ea",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "order": 0,
        "group": "1b47d71d8c0ca983",
        "width": 0,
        "height": 0,
        "label": "Photoelectric sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SPhoto",
        "x": 1060,
        "y": 700,
        "wires": []
    },
    {
        "id": "ba91982a118a8ac2",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "order": 0,
        "group": "1b47d71d8c0ca983",
        "width": 0,
        "height": 0,
        "label": "Part has passed the identify",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_Part_Pass",
        "x": 1070,
        "y": 740,
        "wires": []
    },
    {
        "id": "43b9020720c8b2b9",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "order": 0,
        "group": "1b47d71d8c0ca983",
        "width": 0,
        "height": 0,
        "label": "Lever1 back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SL1_Bck",
        "x": 1060,
        "y": 780,
        "wires": []
    },
    {
        "id": "6d66377056b75dcb",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "order": 0,
        "group": "1b47d71d8c0ca983",
        "width": 0,
        "height": 0,
        "label": "Lever1 forward position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SL1_Fwd",
        "x": 1060,
        "y": 820,
        "wires": []
    },
    {
        "id": "9a496939eb15a674",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "order": 0,
        "group": "1b47d71d8c0ca983",
        "width": 0,
        "height": 0,
        "label": "Lever2 back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SL2_Bck",
        "x": 1060,
        "y": 860,
        "wires": []
    },
    {
        "id": "b52f1c7a707119ca",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_60_SPart\" : false,\n            \"O_60_SInd\" : false,\n            \"O_60_SPhoto\" : false,\n            \"O_60_Part_Pass\" : false,\n            \"O_60_SL1_Bck\" : false,\n            \"O_60_SL1_Fwd\" : false,\n            \"O_60_SL2_Bck\" : false,\n            \"O_60_SL2_Fwd\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "68a7fbd4b8736eef"
            ]
        ]
    },
    {
        "id": "6099c0f8fbcf528d",
        "type": "OpcUa-Client",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "endpoint": "a51acaa1d54228bc",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "c5ecb95e4e16ca13",
                "d77a89844747851a"
            ],
            [
                "b52f1c7a707119ca"
            ]
        ]
    },
    {
        "id": "68a7fbd4b8736eef",
        "type": "trigger",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "3636d5042c2628a3"
            ]
        ]
    },
    {
        "id": "08a33635a6bc06d1",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "6099c0f8fbcf528d"
            ]
        ]
    },
    {
        "id": "c5ecb95e4e16ca13",
        "type": "debug",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "60 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 580,
        "wires": []
    },
    {
        "id": "3636d5042c2628a3",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "6916e31c5f3e2e45"
            ]
        ]
    },
    {
        "id": "e1b936c20c37b844",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "08a33635a6bc06d1"
            ]
        ]
    },
    {
        "id": "6916e31c5f3e2e45",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "f9ce3467ffb6d8c4"
            ]
        ]
    },
    {
        "id": "f9ce3467ffb6d8c4",
        "type": "file in",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "e1b936c20c37b844"
            ]
        ]
    },
    {
        "id": "0d597c6fecb07c51",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "item": "O_61_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Start",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "092291fb80eb00de"
            ]
        ]
    },
    {
        "id": "6c7046ae5a67a1e6",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "item": "O_61_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Stop",
        "x": 490,
        "y": 1120,
        "wires": [
            [
                "092291fb80eb00de"
            ]
        ]
    },
    {
        "id": "f2dfaf21eca230e3",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "item": "O_61_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Key_Pos",
        "x": 480,
        "y": 1160,
        "wires": [
            [
                "092291fb80eb00de"
            ]
        ]
    },
    {
        "id": "35f042ee98012ed3",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "item": "O_61_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Reset",
        "x": 490,
        "y": 1200,
        "wires": [
            [
                "092291fb80eb00de"
            ]
        ]
    },
    {
        "id": "804e69236e452e91",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "item": "O_61_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Panel_I4",
        "x": 480,
        "y": 1240,
        "wires": [
            [
                "092291fb80eb00de"
            ]
        ]
    },
    {
        "id": "c873c143b26cbd45",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "item": "O_61_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Panel_I5",
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "092291fb80eb00de"
            ]
        ]
    },
    {
        "id": "83dee5f77459c0c0",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "item": "O_61_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Panel_I6",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "092291fb80eb00de"
            ]
        ]
    },
    {
        "id": "092291fb80eb00de",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "60 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "b9a239ef82a3b81f",
            "bb684678e7cd0be5"
        ],
        "x": 645,
        "y": 1220,
        "wires": []
    },
    {
        "id": "94a142a01b4e3454",
        "type": "switch",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "60 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_61_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1220,
        "wires": [
            [
                "2654c43fdb582940"
            ],
            [
                "8e57ac737e19f551"
            ],
            [
                "cd3b4b1b33ac6566"
            ],
            [
                "38a641015019edfc"
            ],
            [
                "a65f2985f31dfd26"
            ],
            [
                "f2da313446b002ad"
            ],
            [
                "63935e9ab1954305"
            ],
            [
                "a4065fa4fa5a51de"
            ]
        ]
    },
    {
        "id": "2654c43fdb582940",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "order": 0,
        "group": "2490a20f6411791e",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Start",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "8e57ac737e19f551",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "order": 0,
        "group": "2490a20f6411791e",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Stop",
        "x": 1050,
        "y": 1120,
        "wires": []
    },
    {
        "id": "cd3b4b1b33ac6566",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "order": 0,
        "group": "2490a20f6411791e",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Key_Pos",
        "x": 1060,
        "y": 1160,
        "wires": []
    },
    {
        "id": "38a641015019edfc",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "order": 0,
        "group": "2490a20f6411791e",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Reset",
        "x": 1050,
        "y": 1200,
        "wires": []
    },
    {
        "id": "a65f2985f31dfd26",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "order": 0,
        "group": "2490a20f6411791e",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Panel_I4",
        "x": 1060,
        "y": 1240,
        "wires": []
    },
    {
        "id": "f2da313446b002ad",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "order": 0,
        "group": "2490a20f6411791e",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Panel_I5",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "63935e9ab1954305",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "order": 0,
        "group": "2490a20f6411791e",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Panel_I6",
        "x": 1060,
        "y": 1320,
        "wires": []
    },
    {
        "id": "b0166428880960bf",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "item": "O_61_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Panel_I7",
        "x": 480,
        "y": 1360,
        "wires": [
            [
                "092291fb80eb00de"
            ]
        ]
    },
    {
        "id": "a4065fa4fa5a51de",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "order": 0,
        "group": "2490a20f6411791e",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Panel_I7",
        "x": 1060,
        "y": 1360,
        "wires": []
    },
    {
        "id": "5a43084670490761",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1000,
        "wires": [
            [
                "df197fa5314d7812"
            ]
        ]
    },
    {
        "id": "b4cb9437f61f5cb0",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1000,
        "wires": [
            [
                "5a43084670490761"
            ]
        ]
    },
    {
        "id": "df197fa5314d7812",
        "type": "OpcUa-Client",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "endpoint": "a51acaa1d54228bc",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1000,
        "wires": [
            [
                "18b28621f469aefa",
                "e7524cc3ead85322"
            ],
            [
                "2598e0d654941d3a"
            ]
        ]
    },
    {
        "id": "4e91370af163771c",
        "type": "file in",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1000,
        "wires": [
            [
                "b4cb9437f61f5cb0"
            ]
        ]
    },
    {
        "id": "18b28621f469aefa",
        "type": "debug",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "60 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1040,
        "wires": []
    },
    {
        "id": "2598e0d654941d3a",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_61_Start\" : false,\n            \"O_61_Stop\" : false,\n            \"O_61_Key_Pos\" : false,\n            \"O_61_Reset\" : false,\n            \"O_61_Panel_I4\" : false,\n            \"O_61_Panel_I5\" : false,\n            \"O_61_Panel_I6\" : false,\n            \"O_61_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1000,
        "wires": [
            [
                "ce461a2db135ce2e"
            ]
        ]
    },
    {
        "id": "e8f94d37d5eb2374",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1000,
        "wires": [
            [
                "4e91370af163771c"
            ]
        ]
    },
    {
        "id": "ce461a2db135ce2e",
        "type": "trigger",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1000,
        "wires": [
            [
                "ebbe91f344dbb659"
            ]
        ]
    },
    {
        "id": "ebbe91f344dbb659",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1000,
        "wires": [
            [
                "e8f94d37d5eb2374"
            ]
        ]
    },
    {
        "id": "bfd5d6c7d0b501d3",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "item": "I_60_Conveyor",
        "datatype": "Boolean",
        "value": "",
        "name": "I_60_Conveyor",
        "x": 480,
        "y": 1540,
        "wires": [
            [
                "266f5f18065e3173"
            ]
        ]
    },
    {
        "id": "c5e0ae4710de859f",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "item": "I_60_P1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_60_P1",
        "x": 500,
        "y": 1580,
        "wires": [
            [
                "266f5f18065e3173"
            ]
        ]
    },
    {
        "id": "8323f3c3a4a519b0",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "item": "I_60_P2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_60_P2",
        "x": 500,
        "y": 1620,
        "wires": [
            [
                "266f5f18065e3173"
            ]
        ]
    },
    {
        "id": "66feb15cd16742b8",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "item": "I_60_Identify",
        "datatype": "Boolean",
        "value": "",
        "name": "I_60_Identify",
        "x": 490,
        "y": 1660,
        "wires": [
            [
                "266f5f18065e3173"
            ]
        ]
    },
    {
        "id": "266f5f18065e3173",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "60 Physical Actuators",
        "mode": "link",
        "links": [
            "b9a239ef82a3b81f",
            "bb684678e7cd0be5"
        ],
        "x": 645,
        "y": 1600,
        "wires": []
    },
    {
        "id": "79a60d0e4f663d8b",
        "type": "switch",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "60 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_60_Conveyor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_60_P1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_60_P2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_60_Identify",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 1600,
        "wires": [
            [
                "2b50447457748c23"
            ],
            [
                "a84147cc002044bb"
            ],
            [
                "96e297be905af560"
            ],
            [
                "474eacddd0a12c0e"
            ]
        ]
    },
    {
        "id": "eb0f1506dfd441aa",
        "type": "ui_switch",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "I_60_Conveyor",
        "label": "Conveyor on",
        "tooltip": "",
        "group": "9c6a1b14087dfad2",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1540,
        "wires": [
            [
                "bfd5d6c7d0b501d3"
            ]
        ]
    },
    {
        "id": "1e318c61076358f3",
        "type": "ui_switch",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "I_60_P1",
        "label": "Pushes Lever 1 forward",
        "tooltip": "",
        "group": "9c6a1b14087dfad2",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 180,
        "y": 1580,
        "wires": [
            [
                "c5e0ae4710de859f"
            ]
        ]
    },
    {
        "id": "e307cd41ce8e0ddb",
        "type": "ui_switch",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "I_60_P2",
        "label": "Pushes Lever 2 forward",
        "tooltip": "",
        "group": "9c6a1b14087dfad2",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 180,
        "y": 1620,
        "wires": [
            [
                "8323f3c3a4a519b0"
            ]
        ]
    },
    {
        "id": "24250ca6d35d547e",
        "type": "ui_switch",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "I_60_Identify",
        "label": "Identify pin",
        "tooltip": "",
        "group": "9c6a1b14087dfad2",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 1660,
        "wires": [
            [
                "66feb15cd16742b8"
            ]
        ]
    },
    {
        "id": "e9b4201bb89209ed",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1460,
        "wires": [
            [
                "e9790ba6b00ebfe0"
            ]
        ]
    },
    {
        "id": "f13bf9141fdbd4f5",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1460,
        "wires": [
            [
                "e9b4201bb89209ed"
            ]
        ]
    },
    {
        "id": "e9790ba6b00ebfe0",
        "type": "OpcUa-Client",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "endpoint": "a51acaa1d54228bc",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1460,
        "wires": [
            [
                "5cf3d23d7902edb0",
                "dc3028129967f3ce"
            ],
            [
                "4bb086180d276c70"
            ]
        ]
    },
    {
        "id": "cc24f5dc1c6d5cb9",
        "type": "file in",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1460,
        "wires": [
            [
                "f13bf9141fdbd4f5"
            ]
        ]
    },
    {
        "id": "5cf3d23d7902edb0",
        "type": "debug",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "60 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1500,
        "wires": []
    },
    {
        "id": "4bb086180d276c70",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_60_Conveyor\" : false,\n            \"I_60_P1\" : false,\n            \"I_60_P2\" : false,\n            \"I_60_Identify\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1460,
        "wires": [
            [
                "4f204a0d112596e2"
            ]
        ]
    },
    {
        "id": "6c35b0d068b0102c",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1460,
        "wires": [
            [
                "cc24f5dc1c6d5cb9"
            ]
        ]
    },
    {
        "id": "4f204a0d112596e2",
        "type": "trigger",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1460,
        "wires": [
            [
                "f4e6c2deaae415b0"
            ]
        ]
    },
    {
        "id": "f4e6c2deaae415b0",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1460,
        "wires": [
            [
                "6c35b0d068b0102c"
            ]
        ]
    },
    {
        "id": "010ae11985b040cc",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "item": "I_61_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Led_Start",
        "x": 480,
        "y": 1840,
        "wires": [
            [
                "96c9dd0d0a7b3d86"
            ]
        ]
    },
    {
        "id": "0923c18516c1e4af",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "item": "I_61_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Led_Reset",
        "x": 480,
        "y": 1880,
        "wires": [
            [
                "96c9dd0d0a7b3d86"
            ]
        ]
    },
    {
        "id": "36d58a3d43ef8164",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "item": "I_61_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Led_Extra1",
        "x": 470,
        "y": 1920,
        "wires": [
            [
                "96c9dd0d0a7b3d86"
            ]
        ]
    },
    {
        "id": "a065785123e7ad01",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "item": "I_61_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Led_Extra2",
        "x": 470,
        "y": 1960,
        "wires": [
            [
                "96c9dd0d0a7b3d86"
            ]
        ]
    },
    {
        "id": "58dcafe4ac23125f",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "item": "I_61_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Panel_O4",
        "x": 480,
        "y": 2000,
        "wires": [
            [
                "96c9dd0d0a7b3d86"
            ]
        ]
    },
    {
        "id": "96c9dd0d0a7b3d86",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "60 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "b9a239ef82a3b81f",
            "bb684678e7cd0be5"
        ],
        "x": 645,
        "y": 1980,
        "wires": []
    },
    {
        "id": "e756defcbd1d64ae",
        "type": "switch",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "60 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_61_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1980,
        "wires": [
            [
                "fa2b784d31084af6"
            ],
            [
                "bae32f041d311344"
            ],
            [
                "c0a3ab449a8a2c22"
            ],
            [
                "a1418dd571556384"
            ],
            [
                "9c63e3a1995d7eb2"
            ],
            [
                "27876203c7c85fb1"
            ],
            [
                "b7e171600ec82159"
            ],
            [
                "67a27bc78685635f"
            ]
        ]
    },
    {
        "id": "357b8966d16a2dab",
        "type": "ui_switch",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "a36d12a3bf252071",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1840,
        "wires": [
            [
                "010ae11985b040cc"
            ]
        ]
    },
    {
        "id": "2e93ec804387ffb0",
        "type": "ui_switch",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "a36d12a3bf252071",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1880,
        "wires": [
            [
                "0923c18516c1e4af"
            ]
        ]
    },
    {
        "id": "e7f25b836d038cc8",
        "type": "ui_switch",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "a36d12a3bf252071",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1920,
        "wires": [
            [
                "36d58a3d43ef8164"
            ]
        ]
    },
    {
        "id": "881c3a305b0fc6bb",
        "type": "ui_switch",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "a36d12a3bf252071",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1960,
        "wires": [
            [
                "a065785123e7ad01"
            ]
        ]
    },
    {
        "id": "f53d18aff75dd562",
        "type": "ui_switch",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "a36d12a3bf252071",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2000,
        "wires": [
            [
                "58dcafe4ac23125f"
            ]
        ]
    },
    {
        "id": "824c6aad27bdf679",
        "type": "ui_switch",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "a36d12a3bf252071",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2040,
        "wires": [
            [
                "c0f25b759d8bde0e"
            ]
        ]
    },
    {
        "id": "c0f25b759d8bde0e",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "item": "I_61_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Panel_O5",
        "x": 480,
        "y": 2040,
        "wires": [
            [
                "96c9dd0d0a7b3d86"
            ]
        ]
    },
    {
        "id": "2f27bb98e25aef9f",
        "type": "ui_switch",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "a36d12a3bf252071",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2080,
        "wires": [
            [
                "8ac659249dddcd75"
            ]
        ]
    },
    {
        "id": "8ac659249dddcd75",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "item": "I_61_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Panel_O6",
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "96c9dd0d0a7b3d86"
            ]
        ]
    },
    {
        "id": "7b322414e5c87821",
        "type": "ui_switch",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "a36d12a3bf252071",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2120,
        "wires": [
            [
                "929a95d5415bf450"
            ]
        ]
    },
    {
        "id": "929a95d5415bf450",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "item": "I_61_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Panel_O7",
        "x": 480,
        "y": 2120,
        "wires": [
            [
                "96c9dd0d0a7b3d86"
            ]
        ]
    },
    {
        "id": "655b380a6eeb4ae6",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1760,
        "wires": [
            [
                "0f647284021cf7c1"
            ]
        ]
    },
    {
        "id": "354221ca3102178c",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1760,
        "wires": [
            [
                "655b380a6eeb4ae6"
            ]
        ]
    },
    {
        "id": "0f647284021cf7c1",
        "type": "OpcUa-Client",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "endpoint": "a51acaa1d54228bc",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1760,
        "wires": [
            [
                "551149a073e431d5",
                "f595777cdc84b9be"
            ],
            [
                "9697d35016f83111"
            ]
        ]
    },
    {
        "id": "758780eb8e62baf1",
        "type": "file in",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1760,
        "wires": [
            [
                "354221ca3102178c"
            ]
        ]
    },
    {
        "id": "551149a073e431d5",
        "type": "debug",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "60 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1800,
        "wires": []
    },
    {
        "id": "9697d35016f83111",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_61_Led_Start\" : false,\n            \"I_61_Led_Reset\" : false,\n            \"I_61_Led_Extra1\" : false,\n            \"I_61_Led_Extra2\" : false,\n            \"I_61_Panel_O4\" : false,\n            \"I_61_Panel_O5\" : false,\n            \"I_61_Panel_O6\" : false,\n            \"I_61_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1760,
        "wires": [
            [
                "4b978edd23defb31"
            ]
        ]
    },
    {
        "id": "2167f57404e49c2d",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1760,
        "wires": [
            [
                "758780eb8e62baf1"
            ]
        ]
    },
    {
        "id": "4b978edd23defb31",
        "type": "trigger",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1760,
        "wires": [
            [
                "e0784e6bba7eb2b2"
            ]
        ]
    },
    {
        "id": "e0784e6bba7eb2b2",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1760,
        "wires": [
            [
                "2167f57404e49c2d"
            ]
        ]
    },
    {
        "id": "aacf53b06833087c",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "item": "F_62_Conveyor",
        "datatype": "Boolean",
        "value": "",
        "name": "F_62_Conveyor",
        "x": 480,
        "y": 2300,
        "wires": [
            [
                "58f8c1569237f3eb"
            ]
        ]
    },
    {
        "id": "2dbc699bda146bfe",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "item": "F_62_P1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_62_P1",
        "x": 500,
        "y": 2340,
        "wires": [
            [
                "58f8c1569237f3eb"
            ]
        ]
    },
    {
        "id": "274737c1c7fb3662",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "item": "F_62_P2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_62_P2",
        "x": 500,
        "y": 2380,
        "wires": [
            [
                "58f8c1569237f3eb"
            ]
        ]
    },
    {
        "id": "99782a81f67d8811",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "item": "F_62_Identify",
        "datatype": "Boolean",
        "value": "",
        "name": "F_62_Identify",
        "x": 480,
        "y": 2420,
        "wires": [
            [
                "58f8c1569237f3eb"
            ]
        ]
    },
    {
        "id": "58f8c1569237f3eb",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "60 Physical Feedback",
        "mode": "link",
        "links": [
            "b9a239ef82a3b81f",
            "bb684678e7cd0be5"
        ],
        "x": 645,
        "y": 2360,
        "wires": []
    },
    {
        "id": "cf81ce9cdd002742",
        "type": "switch",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "60 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_62_Conveyor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_62_P1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_62_P2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_62_Identify",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 2360,
        "wires": [
            [
                "5b224f45417d8e3c"
            ],
            [
                "5bb07a89de3c2478"
            ],
            [
                "43145703c1b3c1a3"
            ],
            [
                "d1913c4bdeedcc22"
            ]
        ]
    },
    {
        "id": "5b224f45417d8e3c",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "order": 0,
        "group": "6aa911ec249bae51",
        "width": 0,
        "height": 0,
        "label": "Conveyor on",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_62_Conveyor",
        "x": 1060,
        "y": 2300,
        "wires": []
    },
    {
        "id": "5bb07a89de3c2478",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "order": 0,
        "group": "6aa911ec249bae51",
        "width": 0,
        "height": 0,
        "label": "Pushes Lever 1 forward",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_62_P1",
        "x": 1040,
        "y": 2340,
        "wires": []
    },
    {
        "id": "43145703c1b3c1a3",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "order": 0,
        "group": "6aa911ec249bae51",
        "width": 0,
        "height": 0,
        "label": "Pushes Lever 2 forward",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_62_P2",
        "x": 1040,
        "y": 2380,
        "wires": []
    },
    {
        "id": "d1913c4bdeedcc22",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "order": 0,
        "group": "6aa911ec249bae51",
        "width": 0,
        "height": 0,
        "label": "Identify pin",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_62_Identify",
        "x": 1060,
        "y": 2420,
        "wires": []
    },
    {
        "id": "85011610de6dcbd8",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2220,
        "wires": [
            [
                "9d9fafea515a2b3a"
            ]
        ]
    },
    {
        "id": "2e3d206033e81191",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2220,
        "wires": [
            [
                "85011610de6dcbd8"
            ]
        ]
    },
    {
        "id": "9d9fafea515a2b3a",
        "type": "OpcUa-Client",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "endpoint": "a51acaa1d54228bc",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2220,
        "wires": [
            [
                "d332c24f27b4caa2",
                "b0ac318e71736e4d"
            ],
            [
                "2b45a1071ad065f8"
            ]
        ]
    },
    {
        "id": "22961121e55026b7",
        "type": "file in",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2220,
        "wires": [
            [
                "2e3d206033e81191"
            ]
        ]
    },
    {
        "id": "d332c24f27b4caa2",
        "type": "debug",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "60 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2260,
        "wires": []
    },
    {
        "id": "2b45a1071ad065f8",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_62_Conveyor\" : false,\n            \"F_62_P1\" : false,\n            \"F_62_P2\" : false,\n            \"F_62_Identify\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2220,
        "wires": [
            [
                "c2b5b9a15224cd29"
            ]
        ]
    },
    {
        "id": "2f5640d58d4548ee",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2220,
        "wires": [
            [
                "22961121e55026b7"
            ]
        ]
    },
    {
        "id": "c2b5b9a15224cd29",
        "type": "trigger",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2220,
        "wires": [
            [
                "e55b19814d58664e"
            ]
        ]
    },
    {
        "id": "e55b19814d58664e",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2220,
        "wires": [
            [
                "2f5640d58d4548ee"
            ]
        ]
    },
    {
        "id": "168bfadcb961b5ce",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "item": "F_63_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Led_Start",
        "x": 480,
        "y": 2600,
        "wires": [
            [
                "63ad378fb4e91567"
            ]
        ]
    },
    {
        "id": "90763ccb2bb458ac",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "item": "F_63_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Led_Reset",
        "x": 470,
        "y": 2640,
        "wires": [
            [
                "63ad378fb4e91567"
            ]
        ]
    },
    {
        "id": "d9c8b7f745c78c7f",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "item": "F_63_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Led_Extra1",
        "x": 470,
        "y": 2680,
        "wires": [
            [
                "63ad378fb4e91567"
            ]
        ]
    },
    {
        "id": "2d37d52ec45dd814",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "item": "F_63_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Led_Extra2",
        "x": 470,
        "y": 2720,
        "wires": [
            [
                "63ad378fb4e91567"
            ]
        ]
    },
    {
        "id": "6478ce98e7c17e9b",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "item": "F_63_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Panel_O4",
        "x": 480,
        "y": 2760,
        "wires": [
            [
                "63ad378fb4e91567"
            ]
        ]
    },
    {
        "id": "38dcd696fec0a7dd",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "item": "F_63_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Panel_O5",
        "x": 480,
        "y": 2800,
        "wires": [
            [
                "63ad378fb4e91567"
            ]
        ]
    },
    {
        "id": "ca899540279b6bd4",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "item": "F_63_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Panel_O6",
        "x": 480,
        "y": 2840,
        "wires": [
            [
                "63ad378fb4e91567"
            ]
        ]
    },
    {
        "id": "63ad378fb4e91567",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "60 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "b9a239ef82a3b81f",
            "bb684678e7cd0be5"
        ],
        "x": 645,
        "y": 2740,
        "wires": []
    },
    {
        "id": "4ed47a2dedc8082e",
        "type": "switch",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "60 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_63_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2740,
        "wires": [
            [
                "940b4368da43b00d"
            ],
            [
                "93445c7345bf2d89"
            ],
            [
                "3df99bd5deec9edc"
            ],
            [
                "5447f766c4bfafec"
            ],
            [
                "b070ed74b7300536"
            ],
            [
                "f187543a63630dfe"
            ],
            [
                "3fa56112326c4ba1"
            ],
            [
                "9ce5a328dd3abec7"
            ]
        ]
    },
    {
        "id": "940b4368da43b00d",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "order": 0,
        "group": "3347abf363555eb1",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Led_Start",
        "x": 1060,
        "y": 2600,
        "wires": []
    },
    {
        "id": "93445c7345bf2d89",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "order": 0,
        "group": "3347abf363555eb1",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Led_Reset",
        "x": 1070,
        "y": 2640,
        "wires": []
    },
    {
        "id": "3df99bd5deec9edc",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "order": 0,
        "group": "3347abf363555eb1",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Led_Extra1",
        "x": 1070,
        "y": 2680,
        "wires": []
    },
    {
        "id": "5447f766c4bfafec",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "order": 0,
        "group": "3347abf363555eb1",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Led_Extra2",
        "x": 1070,
        "y": 2720,
        "wires": []
    },
    {
        "id": "b070ed74b7300536",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "order": 0,
        "group": "3347abf363555eb1",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Panel_O4",
        "x": 1060,
        "y": 2760,
        "wires": []
    },
    {
        "id": "f187543a63630dfe",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "order": 0,
        "group": "3347abf363555eb1",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Panel_O5",
        "x": 1060,
        "y": 2800,
        "wires": []
    },
    {
        "id": "3fa56112326c4ba1",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "order": 0,
        "group": "3347abf363555eb1",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Panel_O6",
        "x": 1060,
        "y": 2840,
        "wires": []
    },
    {
        "id": "a5d797b6e65ab152",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "item": "F_63_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Panel_O7",
        "x": 480,
        "y": 2880,
        "wires": [
            [
                "63ad378fb4e91567"
            ]
        ]
    },
    {
        "id": "9ce5a328dd3abec7",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "order": 0,
        "group": "3347abf363555eb1",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Panel_O7",
        "x": 1060,
        "y": 2880,
        "wires": []
    },
    {
        "id": "fa09189bba0113ca",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2520,
        "wires": [
            [
                "083fc09133ee3bd0"
            ]
        ]
    },
    {
        "id": "d31b6e2af80c981b",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2520,
        "wires": [
            [
                "fa09189bba0113ca"
            ]
        ]
    },
    {
        "id": "083fc09133ee3bd0",
        "type": "OpcUa-Client",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "endpoint": "a51acaa1d54228bc",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2520,
        "wires": [
            [
                "276c34034a77c0ff",
                "9ba0a083a7953d38"
            ],
            [
                "5f48452a7b8ff4ea"
            ]
        ]
    },
    {
        "id": "543304b8aeeda0cc",
        "type": "file in",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2520,
        "wires": [
            [
                "d31b6e2af80c981b"
            ]
        ]
    },
    {
        "id": "276c34034a77c0ff",
        "type": "debug",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "60 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2560,
        "wires": []
    },
    {
        "id": "5f48452a7b8ff4ea",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_63_Led_Start\" : false,\n            \"F_63_Led_Reset\" : false,\n            \"F_63_Led_Extra1\" : false,\n            \"F_63_Led_Extra2\" : false,\n            \"F_63_Panel_O4\" : false,\n            \"F_63_Panel_O5\" : false,\n            \"F_63_Panel_O6\" : false,\n            \"F_63_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2520,
        "wires": [
            [
                "749052a187fb3af1"
            ]
        ]
    },
    {
        "id": "e61b2dcc7c3231ac",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2520,
        "wires": [
            [
                "543304b8aeeda0cc"
            ]
        ]
    },
    {
        "id": "749052a187fb3af1",
        "type": "trigger",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2520,
        "wires": [
            [
                "7640f1ee670e7d37"
            ]
        ]
    },
    {
        "id": "7640f1ee670e7d37",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2520,
        "wires": [
            [
                "e61b2dcc7c3231ac"
            ]
        ]
    },
    {
        "id": "5b6eea1823bd945a",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "item": "C_62_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_62_Profibus",
        "x": 640,
        "y": 3060,
        "wires": [
            [
                "08d7be0e5808c9bf"
            ]
        ]
    },
    {
        "id": "406134d510349ac8",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "item": "C_65_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_Initialization",
        "x": 630,
        "y": 3100,
        "wires": [
            [
                "08d7be0e5808c9bf"
            ]
        ]
    },
    {
        "id": "3eebcb73c93de55a",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "item": "C_65_RBS_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_RBS_Output",
        "x": 630,
        "y": 3340,
        "wires": [
            [
                "e69e201556168f9c"
            ]
        ]
    },
    {
        "id": "9381aaed704871ed",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "item": "C_65_RSB_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_RSB_Output",
        "x": 630,
        "y": 3380,
        "wires": [
            [
                "e69e201556168f9c"
            ]
        ]
    },
    {
        "id": "08d7be0e5808c9bf",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "60 Control Read",
        "mode": "link",
        "links": [
            "b9a239ef82a3b81f",
            "bb684678e7cd0be5"
        ],
        "x": 805,
        "y": 3120,
        "wires": []
    },
    {
        "id": "309c68f035ea6cfa",
        "type": "switch",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "60 CR",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_62_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_ID_1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_ID_2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 990,
        "y": 3120,
        "wires": [
            [
                "edc2b7bcf5b10c1b"
            ],
            [
                "f501a1d0236e114d"
            ],
            [
                "80f5af70c67fedee"
            ],
            [
                "d203e87958ed8bf5"
            ]
        ]
    },
    {
        "id": "edc2b7bcf5b10c1b",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "order": 2,
        "group": "35b4218b70272e4c",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_62_Profibus",
        "x": 1180,
        "y": 3060,
        "wires": []
    },
    {
        "id": "f501a1d0236e114d",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "order": 1,
        "group": "35b4218b70272e4c",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_65_Initialization",
        "x": 1190,
        "y": 3100,
        "wires": []
    },
    {
        "id": "c610a572b44a4b8a",
        "type": "ui_dropdown",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "35b4218b70272e4c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Red-Black-Silver Output",
                "value": "C_65_RBS_Output",
                "type": "str"
            },
            {
                "label": "Red-Silver-Black Output",
                "value": "C_65_RSB_Output",
                "type": "str"
            },
            {
                "label": "Black-Red-Silver Output",
                "value": "C_65_BRS_Output",
                "type": "str"
            },
            {
                "label": "Black-Silver-Red Output",
                "value": "C_65_BSR_Output",
                "type": "str"
            },
            {
                "label": "Silver-Red-Black Output",
                "value": "C_65_SRB_Output",
                "type": "str"
            },
            {
                "label": "Silver-Black_Red Output",
                "value": "C_65_SBR_Output",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 3440,
        "wires": [
            [
                "d3b528bacc2214c2",
                "457d0e02e3125537",
                "8705ee2e16221c17",
                "3d35da52300e06fd",
                "ca1d6b3453933b0c",
                "01d775480de3de82"
            ]
        ]
    },
    {
        "id": "d3b528bacc2214c2",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_RBS_Output",
        "func": "if (msg.payload === \"C_65_RBS_Output\") \nreturn { payload: true, topic: \"C_65_RBS_Output\"};\nelse return { payload: false, topic: \"C_65_RBS_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3340,
        "wires": [
            [
                "3eebcb73c93de55a"
            ]
        ]
    },
    {
        "id": "457d0e02e3125537",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_RSB_Output",
        "func": "if (msg.payload === \"C_65_RSB_Output\") \nreturn { payload: true, topic: \"C_65_RSB_Output\"};\nelse return { payload: false, topic: \"C_65_RSB_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3380,
        "wires": [
            [
                "9381aaed704871ed"
            ]
        ]
    },
    {
        "id": "75a3f71637d4c98b",
        "type": "inject",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_65_RBS_Output",
        "payloadType": "str",
        "x": 190,
        "y": 3480,
        "wires": [
            [
                "c610a572b44a4b8a"
            ]
        ]
    },
    {
        "id": "e2aee330b5ef0065",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2980,
        "wires": [
            [
                "9ac05366c0c4ec8c"
            ]
        ]
    },
    {
        "id": "1517bfc41466b09b",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2980,
        "wires": [
            [
                "e2aee330b5ef0065"
            ]
        ]
    },
    {
        "id": "9ac05366c0c4ec8c",
        "type": "OpcUa-Client",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "endpoint": "a51acaa1d54228bc",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2980,
        "wires": [
            [
                "a1225b80293aa574",
                "cdd77002a705fcc7"
            ],
            [
                "f2e905d8200f0e4f"
            ]
        ]
    },
    {
        "id": "413a1ec60708ae1f",
        "type": "file in",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2980,
        "wires": [
            [
                "1517bfc41466b09b"
            ]
        ]
    },
    {
        "id": "a1225b80293aa574",
        "type": "debug",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "60 CR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3020,
        "wires": []
    },
    {
        "id": "f2e905d8200f0e4f",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_65_Initialization\" : false,\n            \"C_65_ID_1\" : false,\n            \"C_65_ID_2\" : false,\n            \"C_62_Profibus\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2980,
        "wires": [
            [
                "80c7ca76232fc3a1"
            ]
        ]
    },
    {
        "id": "6af7e8708b0d1f0a",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2980,
        "wires": [
            [
                "413a1ec60708ae1f"
            ]
        ]
    },
    {
        "id": "80c7ca76232fc3a1",
        "type": "trigger",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2980,
        "wires": [
            [
                "a752626776bc025f"
            ]
        ]
    },
    {
        "id": "a752626776bc025f",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2980,
        "wires": [
            [
                "6af7e8708b0d1f0a"
            ]
        ]
    },
    {
        "id": "7073334922c765fe",
        "type": "comment",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "ebdf9bc37ca98445",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"A_\")) variableClass = \"AS-i\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "6f17343a1db9094c"
            ]
        ]
    },
    {
        "id": "6f17343a1db9094c",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Sorting_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "2d733d2203aa3330"
            ]
        ]
    },
    {
        "id": "646fc70b7d69ec97",
        "type": "file",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "f4ee2eea75307bf2",
        "type": "comment",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "2d733d2203aa3330",
        "type": "OpcUa-Client",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "endpoint": "a51acaa1d54228bc",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "3b7e44880f5740b2"
            ],
            [
                "8a96815c0ffd5117",
                "a0f84a6f71a0862d"
            ]
        ]
    },
    {
        "id": "3b7e44880f5740b2",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "226575268d8fa16b",
                "26f8e9b3bbe4a96a"
            ]
        ]
    },
    {
        "id": "226575268d8fa16b",
        "type": "file",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "26f8e9b3bbe4a96a",
        "type": "debug",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "19056cf9b1053a2e",
        "type": "comment",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "133dc8688c4e7718",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "b06b9757b0319c7a"
            ]
        ]
    },
    {
        "id": "1413ed1a2b7abcc9",
        "type": "OpcUa-Client",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "endpoint": "a51acaa1d54228bc",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "d89bfba653bd1e7d"
            ],
            []
        ]
    },
    {
        "id": "d89bfba653bd1e7d",
        "type": "debug",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "b9a239ef82a3b81f",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Write_Sort",
        "links": [
            "96c9dd0d0a7b3d86",
            "08d7be0e5808c9bf",
            "58f8c1569237f3eb",
            "63ad378fb4e91567",
            "266f5f18065e3173",
            "092291fb80eb00de",
            "245be97a9a22f33f",
            "e69e201556168f9c"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "f3bff491be07f5d1"
            ]
        ]
    },
    {
        "id": "f3bff491be07f5d1",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "395f51c66f059f9d"
            ]
        ]
    },
    {
        "id": "395f51c66f059f9d",
        "type": "file in",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "133dc8688c4e7718"
            ]
        ]
    },
    {
        "id": "b06b9757b0319c7a",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "1413ed1a2b7abcc9"
            ]
        ]
    },
    {
        "id": "8332edb44115c124",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "CSV Link",
        "links": [
            "8a96815c0ffd5117"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "b58efabaf21aadd3"
            ]
        ]
    },
    {
        "id": "b58efabaf21aadd3",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "0daf6dd490802f10"
            ]
        ]
    },
    {
        "id": "0daf6dd490802f10",
        "type": "trigger",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "646fc70b7d69ec97"
            ]
        ]
    },
    {
        "id": "8a96815c0ffd5117",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "8332edb44115c124",
            "df98325b1239b0cb"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "df98325b1239b0cb",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "CSV Link",
        "links": [
            "8a96815c0ffd5117"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "55bf5d5b43637b82"
            ]
        ]
    },
    {
        "id": "55bf5d5b43637b82",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_60_SPart\" : false,\n    \"O_60_SInd\" : false,\n    \"O_60_SPhoto\" : false,\n    \"O_60_Part_Pass\" : false,\n    \"O_60_SL1_Bck\" : false,\n    \"O_60_SL1_Fwd\" : false,\n    \"O_60_SL2_Bck\" : false,\n    \"O_60_SL2_Fwd\" : false,\n    \"O_61_Start\" : false,\n    \"O_61_Stop\" : false,\n    \"O_61_Key_Pos\" : false,\n    \"O_61_Reset\" : false,\n    \"O_61_Panel_I4\" : false,\n    \"O_61_Panel_I5\" : false,\n    \"O_61_Panel_I6\" : false,\n    \"O_61_Panel_I7\" : false,\n    \"F_62_Conveyor\" : false,\n    \"F_62_P1\" : false,\n    \"F_62_P2\" : false,\n    \"F_62_Identify\" : false,\n    \"F_63_Led_Start\" : false,\n    \"F_63_Led_Reset\" : false,\n    \"F_63_Led_Extra1\" : false,\n    \"F_63_Led_Extra2\" : false,\n    \"F_63_Panel_O4\" : false,\n    \"F_63_Panel_O5\" : false,\n    \"F_63_Panel_O6\" : false,\n    \"F_63_Panel_O7\" : false,\n    \"C_65_Initialization\" : false,\n    \"C_65_ID_1\" : false,\n    \"C_65_ID_2\" : false,\n    \"I_60_Conveyor\" : false,\n    \"I_60_P1\" : false,\n    \"I_60_P2\" : false,\n    \"I_60_Identify\" : false,\n    \"I_61_Led_Start\" : false,\n    \"I_61_Led_Reset\" : false,\n    \"I_61_Led_Extra1\" : false,\n    \"I_61_Led_Extra2\" : false,\n    \"I_61_Panel_O4\" : false,\n    \"I_61_Panel_O5\" : false,\n    \"I_61_Panel_O6\" : false,\n    \"I_61_Panel_O7\" : false,\n    \"C_62_Profibus\" : false,\n    \"C_65_RBS_Output\" : false,\n    \"C_65_RSB_Output\" : false,\n    \"C_65_BRS_Output\" : false,\n    \"C_65_BSR_Output\" : false,\n    \"C_65_SRB_Output\" : false,\n    \"C_65_SBR_Output\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "7ff97f0bf6962fbf"
            ]
        ]
    },
    {
        "id": "7ff97f0bf6962fbf",
        "type": "trigger",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "ebdf9bc37ca98445"
            ]
        ]
    },
    {
        "id": "be28680fab46d191",
        "type": "debug",
        "z": "e5f6790dee67bd7b",
        "g": "d905f7a5f1e0f40f",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "4f8b17124fcdded0",
        "type": "OpcUa-Server",
        "z": "e5f6790dee67bd7b",
        "g": "d905f7a5f1e0f40f",
        "port": "53886",
        "name": "Server : Sorting",
        "endpoint": "",
        "users": "",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Sorting",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "be28680fab46d191"
            ]
        ]
    },
    {
        "id": "4933509e08f36d8d",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "order": 0,
        "group": "1b47d71d8c0ca983",
        "width": 0,
        "height": 0,
        "label": "Lever2 forward position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SL2_Fwd",
        "x": 1060,
        "y": 900,
        "wires": []
    },
    {
        "id": "fbe3316e9a7553e7",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "item": "O_60_SL2_Fwd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SL2_Fwd",
        "x": 480,
        "y": 900,
        "wires": [
            [
                "245be97a9a22f33f"
            ]
        ]
    },
    {
        "id": "1c5453dc54e6ac67",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "item": "C_65_ID_1",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_ID_1",
        "x": 650,
        "y": 3140,
        "wires": [
            [
                "08d7be0e5808c9bf"
            ]
        ]
    },
    {
        "id": "80f5af70c67fedee",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "order": 3,
        "group": "35b4218b70272e4c",
        "width": 0,
        "height": 0,
        "label": "Identified  - Bit 1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_65_ID_1",
        "x": 1170,
        "y": 3140,
        "wires": []
    },
    {
        "id": "c883abbfd4d8874b",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "item": "C_65_ID_2",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_ID_2",
        "x": 650,
        "y": 3180,
        "wires": [
            [
                "08d7be0e5808c9bf"
            ]
        ]
    },
    {
        "id": "d203e87958ed8bf5",
        "type": "ui_led",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "order": 4,
        "group": "35b4218b70272e4c",
        "width": 0,
        "height": 0,
        "label": "Identified  - Bit 2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_65_ID_2",
        "x": 1170,
        "y": 3180,
        "wires": []
    },
    {
        "id": "21f0b63e3d698e00",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_65_RBS_Output\" : false,\n            \"C_65_RSB_Output\" : false,\n            \"C_65_BRS_Output\" : false,\n            \"C_65_BSR_Output\" : false,\n            \"C_65_SRB_Output\" : false,\n            \"C_65_SBR_Output\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3260,
        "wires": [
            [
                "181982a3625d399b"
            ]
        ]
    },
    {
        "id": "181982a3625d399b",
        "type": "trigger",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3260,
        "wires": [
            [
                "a840cac92bdf288b"
            ]
        ]
    },
    {
        "id": "a840cac92bdf288b",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3260,
        "wires": [
            [
                "82fee5075fb69701"
            ]
        ]
    },
    {
        "id": "82fee5075fb69701",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3260,
        "wires": [
            [
                "09bce4f3548f1fde"
            ]
        ]
    },
    {
        "id": "09bce4f3548f1fde",
        "type": "file in",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3260,
        "wires": [
            [
                "c3281936daa95cfb"
            ]
        ]
    },
    {
        "id": "c3281936daa95cfb",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3260,
        "wires": [
            [
                "c2aafa3a4b80749a"
            ]
        ]
    },
    {
        "id": "c2aafa3a4b80749a",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3260,
        "wires": [
            [
                "ef16f78b702f1150"
            ]
        ]
    },
    {
        "id": "ef16f78b702f1150",
        "type": "OpcUa-Client",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "endpoint": "a51acaa1d54228bc",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3260,
        "wires": [
            [
                "4cc97a775cb9da92",
                "a1700b95355a294c"
            ],
            [
                "21f0b63e3d698e00"
            ]
        ]
    },
    {
        "id": "4cc97a775cb9da92",
        "type": "debug",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "60 CW",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3300,
        "wires": []
    },
    {
        "id": "a40a9c3d73939ad2",
        "type": "switch",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "60 CW",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_65_RBS_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_RSB_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_BRS_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_BSR_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_SRB_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_SBR_Output",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 990,
        "y": 3440,
        "wires": [
            [
                "b6dbe7aa2207c3eb"
            ],
            [
                "d519a0ef71a39d60"
            ],
            [
                "19d288fc68e3e6dd"
            ],
            [
                "92771cdb0cfe907e"
            ],
            [
                "db83ebb07e01938b"
            ],
            [
                "8e7d2c74b44ea2ff"
            ]
        ]
    },
    {
        "id": "e69e201556168f9c",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "60 Control Write",
        "mode": "link",
        "links": [
            "b9a239ef82a3b81f",
            "bb684678e7cd0be5"
        ],
        "x": 805,
        "y": 3440,
        "wires": []
    },
    {
        "id": "8705ee2e16221c17",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_BRS_Output",
        "func": "if (msg.payload === \"C_65_BRS_Output\") \nreturn { payload: true, topic: \"C_65_BRS_Output\"};\nelse return { payload: false, topic: \"C_65_BRS_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3420,
        "wires": [
            [
                "6115328dfe7c7bb3"
            ]
        ]
    },
    {
        "id": "6115328dfe7c7bb3",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "item": "C_65_BRS_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_BRS_Output",
        "x": 630,
        "y": 3420,
        "wires": [
            [
                "e69e201556168f9c"
            ]
        ]
    },
    {
        "id": "fde3962270b9987f",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "item": "C_65_BSR_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_BSR_Output",
        "x": 630,
        "y": 3460,
        "wires": [
            [
                "e69e201556168f9c"
            ]
        ]
    },
    {
        "id": "3d35da52300e06fd",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_BSR_Output",
        "func": "if (msg.payload === \"C_65_BSR_Output\") \nreturn { payload: true, topic: \"C_65_BSR_Output\"};\nelse return { payload: false, topic: \"C_65_BSR_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3460,
        "wires": [
            [
                "fde3962270b9987f"
            ]
        ]
    },
    {
        "id": "ca1d6b3453933b0c",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_SRB_Output",
        "func": "if (msg.payload === \"C_65_SRB_Output\") \nreturn { payload: true, topic: \"C_65_SRB_Output\"};\nelse return { payload: false, topic: \"C_65_SRB_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3500,
        "wires": [
            [
                "3374982184863518"
            ]
        ]
    },
    {
        "id": "3374982184863518",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "item": "C_65_SRB_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_SRB_Output",
        "x": 630,
        "y": 3500,
        "wires": [
            [
                "e69e201556168f9c"
            ]
        ]
    },
    {
        "id": "7651ec515bf903f5",
        "type": "OpcUa-Item",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "item": "C_65_SBR_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_SBR_Output",
        "x": 630,
        "y": 3540,
        "wires": [
            [
                "e69e201556168f9c"
            ]
        ]
    },
    {
        "id": "01d775480de3de82",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_SBR_Output",
        "func": "if (msg.payload === \"C_65_SBR_Output\") \nreturn { payload: true, topic: \"C_65_SBR_Output\"};\nelse return { payload: false, topic: \"C_65_SBR_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3540,
        "wires": [
            [
                "7651ec515bf903f5"
            ]
        ]
    },
    {
        "id": "0d638688048b673d",
        "type": "debug",
        "z": "e5f6790dee67bd7b",
        "g": "3ee347e47570923f",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "801984acd1f1dc29",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "3ee347e47570923f",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "90ad399be610de12",
            "de1013cd30465b52",
            "d0a6ce797da27cd9",
            "9cb0785855199456",
            "66c13de388a11239"
        ],
        "x": 825,
        "y": 60,
        "wires": []
    },
    {
        "id": "6b92698d192a275e",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "O_60_SPart",
        "func": "if (msg.topic === \"O_60_SPart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SPart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 620,
        "wires": [
            [
                "4dae7798b5c2e6c1"
            ]
        ]
    },
    {
        "id": "b65e1174d146a190",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "Sub In 60 PS",
        "links": [
            "d77a89844747851a"
        ],
        "x": 775,
        "y": 760,
        "wires": [
            [
                "bd73199064cb9e23"
            ]
        ]
    },
    {
        "id": "d77a89844747851a",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "Sub Out 60 PS",
        "mode": "link",
        "links": [
            "b65e1174d146a190"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "90ad399be610de12",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "S7 PS",
        "links": [
            "801984acd1f1dc29"
        ],
        "x": 55,
        "y": 760,
        "wires": [
            [
                "6b92698d192a275e",
                "4935ae2bcbab36aa",
                "876a8eb5ccd92265",
                "be2e6c3502569241",
                "a1ad81b1683fe434",
                "2a554064b416b616",
                "c64ca51099634c1b",
                "fddc53eade468b90"
            ]
        ]
    },
    {
        "id": "a1ad81b1683fe434",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "O_60_SL1_Bck",
        "func": "if (msg.topic === \"O_60_SL1_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SL1_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 780,
        "wires": [
            [
                "308ddb65191b4b15"
            ]
        ]
    },
    {
        "id": "4935ae2bcbab36aa",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "O_60_SInd",
        "func": "if (msg.topic === \"O_60_SInd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SInd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 660,
        "wires": [
            [
                "bb58cff67cb8082c"
            ]
        ]
    },
    {
        "id": "876a8eb5ccd92265",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "O_60_SPhoto",
        "func": "if (msg.topic === \"O_60_SPhoto\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SPhoto\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 700,
        "wires": [
            [
                "1309b0426561c49c"
            ]
        ]
    },
    {
        "id": "be2e6c3502569241",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "O_60_Part_Pass",
        "func": "if (msg.topic === \"O_60_Part_Pass\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_Part_Pass\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 740,
        "wires": [
            [
                "1dc32eb90e7fef14"
            ]
        ]
    },
    {
        "id": "2a554064b416b616",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "O_60_SL1_Fwd",
        "func": "if (msg.topic === \"O_60_SL1_Fwd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SL1_Fwd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 820,
        "wires": [
            [
                "e2ee87ae3da78fd1"
            ]
        ]
    },
    {
        "id": "c64ca51099634c1b",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "O_60_SL2_Bck",
        "func": "if (msg.topic === \"O_60_SL2_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SL2_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 860,
        "wires": [
            [
                "38862857db85f758"
            ]
        ]
    },
    {
        "id": "fddc53eade468b90",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "O_60_SL2_Fwd",
        "func": "if (msg.topic === \"O_60_SL2_Fwd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SL2_Fwd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 900,
        "wires": [
            [
                "fbe3316e9a7553e7"
            ]
        ]
    },
    {
        "id": "e7524cc3ead85322",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "Sub Out 60 AS",
        "mode": "link",
        "links": [
            "089c3b214a524fea"
        ],
        "x": 1295,
        "y": 1000,
        "wires": []
    },
    {
        "id": "089c3b214a524fea",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "Sub In 60 AS",
        "links": [
            "e7524cc3ead85322"
        ],
        "x": 775,
        "y": 1220,
        "wires": [
            [
                "94a142a01b4e3454"
            ]
        ]
    },
    {
        "id": "38dffb51919bc22b",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "O_61_Start",
        "func": "if (msg.topic === \"O_61_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "0d597c6fecb07c51"
            ]
        ]
    },
    {
        "id": "de1013cd30465b52",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "S7 AS",
        "links": [
            "801984acd1f1dc29"
        ],
        "x": 55,
        "y": 1220,
        "wires": [
            [
                "38dffb51919bc22b",
                "e7992dc7cb5a49a1",
                "d0eb96162dee9996",
                "fe02b87ab8a3fc46",
                "c1cf2c7c64d11458",
                "9bb634d0a9d8fda1",
                "c7b2a9518b891018",
                "adef5e20f7e11154"
            ]
        ]
    },
    {
        "id": "c1cf2c7c64d11458",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "O_61_Panel_I4",
        "func": "if (msg.topic === \"O_61_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1240,
        "wires": [
            [
                "804e69236e452e91"
            ]
        ]
    },
    {
        "id": "e7992dc7cb5a49a1",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "O_61_Stop",
        "func": "if (msg.topic === \"O_61_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1120,
        "wires": [
            [
                "6c7046ae5a67a1e6"
            ]
        ]
    },
    {
        "id": "d0eb96162dee9996",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "O_61_Key_Pos",
        "func": "if (msg.topic === \"O_61_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1160,
        "wires": [
            [
                "f2dfaf21eca230e3"
            ]
        ]
    },
    {
        "id": "fe02b87ab8a3fc46",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "O_61_Reset",
        "func": "if (msg.topic === \"O_61_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1200,
        "wires": [
            [
                "35f042ee98012ed3"
            ]
        ]
    },
    {
        "id": "9bb634d0a9d8fda1",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "O_61_Panel_I5",
        "func": "if (msg.topic === \"O_61_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "c873c143b26cbd45"
            ]
        ]
    },
    {
        "id": "c7b2a9518b891018",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "O_61_Panel_I6",
        "func": "if (msg.topic === \"O_61_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "83dee5f77459c0c0"
            ]
        ]
    },
    {
        "id": "adef5e20f7e11154",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "O_61_Panel_I7",
        "func": "if (msg.topic === \"O_61_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1360,
        "wires": [
            [
                "b0166428880960bf"
            ]
        ]
    },
    {
        "id": "dc3028129967f3ce",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "Sub Out 60 PA",
        "mode": "link",
        "links": [
            "f2975d4095c58e3c"
        ],
        "x": 1295,
        "y": 1460,
        "wires": []
    },
    {
        "id": "f2975d4095c58e3c",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "Sub In 60 PA",
        "links": [
            "dc3028129967f3ce"
        ],
        "x": 775,
        "y": 1600,
        "wires": [
            [
                "79a60d0e4f663d8b"
            ]
        ]
    },
    {
        "id": "f595777cdc84b9be",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "Sub Out 60 AA",
        "mode": "link",
        "links": [
            "5ba746c368a64c8d"
        ],
        "x": 1295,
        "y": 1760,
        "wires": []
    },
    {
        "id": "5ba746c368a64c8d",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "Sub In 60 AA",
        "links": [
            "f595777cdc84b9be"
        ],
        "x": 775,
        "y": 1980,
        "wires": [
            [
                "e756defcbd1d64ae"
            ]
        ]
    },
    {
        "id": "b0ac318e71736e4d",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "Sub Out 60 PF",
        "mode": "link",
        "links": [
            "540f56f1314b65fc"
        ],
        "x": 1295,
        "y": 2220,
        "wires": []
    },
    {
        "id": "540f56f1314b65fc",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "Sub In 60 PF",
        "links": [
            "b0ac318e71736e4d"
        ],
        "x": 775,
        "y": 2360,
        "wires": [
            [
                "cf81ce9cdd002742"
            ]
        ]
    },
    {
        "id": "3cccd0d1015a06c1",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "name": "F_62_Conveyor",
        "func": "if (msg.topic === \"F_62_Conveyor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_62_Conveyor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2300,
        "wires": [
            [
                "aacf53b06833087c"
            ]
        ]
    },
    {
        "id": "ce13a383bd6530c8",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "name": "F_62_P1",
        "func": "if (msg.topic === \"F_62_P1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_62_P1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 2340,
        "wires": [
            [
                "2dbc699bda146bfe"
            ]
        ]
    },
    {
        "id": "734d25d6104f2d83",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "name": "F_62_P2",
        "func": "if (msg.topic === \"F_62_P2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_62_P2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 2380,
        "wires": [
            [
                "274737c1c7fb3662"
            ]
        ]
    },
    {
        "id": "687773996ef61d91",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "name": "F_62_Identify",
        "func": "if (msg.topic === \"F_62_Identify\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_62_Identify\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2420,
        "wires": [
            [
                "99782a81f67d8811"
            ]
        ]
    },
    {
        "id": "d0a6ce797da27cd9",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "S7 PF",
        "links": [
            "801984acd1f1dc29"
        ],
        "x": 55,
        "y": 2360,
        "wires": [
            [
                "3cccd0d1015a06c1",
                "ce13a383bd6530c8",
                "734d25d6104f2d83",
                "687773996ef61d91"
            ]
        ]
    },
    {
        "id": "9ba0a083a7953d38",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "Sub Out 60 AF",
        "mode": "link",
        "links": [
            "0939f963d8be9a1b"
        ],
        "x": 1295,
        "y": 2520,
        "wires": []
    },
    {
        "id": "0939f963d8be9a1b",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "Sub In 60 AF",
        "links": [
            "9ba0a083a7953d38"
        ],
        "x": 775,
        "y": 2740,
        "wires": [
            [
                "4ed47a2dedc8082e"
            ]
        ]
    },
    {
        "id": "d66521347fac4ecf",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "F_63_Led_Start",
        "func": "if (msg.topic === \"F_63_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2600,
        "wires": [
            [
                "168bfadcb961b5ce"
            ]
        ]
    },
    {
        "id": "9cb0785855199456",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "S7 AF",
        "links": [
            "801984acd1f1dc29"
        ],
        "x": 55,
        "y": 2740,
        "wires": [
            [
                "d66521347fac4ecf",
                "506db162273664fe",
                "ae0aa97915b67bbf",
                "c6f2b115a1e49126",
                "0c97eacc60380f9b",
                "5c5c1580b9538a74",
                "ab996cfd106315a6",
                "eeb8fea85721fbea"
            ]
        ]
    },
    {
        "id": "0c97eacc60380f9b",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "F_63_Panel_O4",
        "func": "if (msg.topic === \"F_63_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2760,
        "wires": [
            [
                "6478ce98e7c17e9b"
            ]
        ]
    },
    {
        "id": "506db162273664fe",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "F_63_Led_Reset",
        "func": "if (msg.topic === \"F_63_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2640,
        "wires": [
            [
                "90763ccb2bb458ac"
            ]
        ]
    },
    {
        "id": "ae0aa97915b67bbf",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "F_63_Led_Extra1",
        "func": "if (msg.topic === \"F_63_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2680,
        "wires": [
            [
                "d9c8b7f745c78c7f"
            ]
        ]
    },
    {
        "id": "c6f2b115a1e49126",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "F_63_Led_Extra2",
        "func": "if (msg.topic === \"F_63_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2720,
        "wires": [
            [
                "2d37d52ec45dd814"
            ]
        ]
    },
    {
        "id": "5c5c1580b9538a74",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "F_63_Panel_O5",
        "func": "if (msg.topic === \"F_63_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2800,
        "wires": [
            [
                "38dcd696fec0a7dd"
            ]
        ]
    },
    {
        "id": "ab996cfd106315a6",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "F_63_Panel_O6",
        "func": "if (msg.topic === \"F_63_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2840,
        "wires": [
            [
                "ca899540279b6bd4"
            ]
        ]
    },
    {
        "id": "eeb8fea85721fbea",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "F_63_Panel_O7",
        "func": "if (msg.topic === \"F_63_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2880,
        "wires": [
            [
                "a5d797b6e65ab152"
            ]
        ]
    },
    {
        "id": "cdd77002a705fcc7",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Sub Out 60 CR",
        "mode": "link",
        "links": [
            "18cad30d0ac9bed6"
        ],
        "x": 1295,
        "y": 2980,
        "wires": []
    },
    {
        "id": "18cad30d0ac9bed6",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Sub In 60 CR",
        "links": [
            "cdd77002a705fcc7"
        ],
        "x": 895,
        "y": 3120,
        "wires": [
            [
                "309c68f035ea6cfa"
            ]
        ]
    },
    {
        "id": "ed0deaa66f03a87b",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_62_Profibus",
        "func": "if (msg.topic === \"C_62_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_62_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3060,
        "wires": [
            [
                "5b6eea1823bd945a"
            ]
        ]
    },
    {
        "id": "5b728e822ba1d8ae",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_Initialization",
        "func": "if (msg.topic === \"C_65_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3100,
        "wires": [
            [
                "406134d510349ac8"
            ]
        ]
    },
    {
        "id": "8a0b082a74a6d0e4",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_ID_1",
        "func": "if (msg.topic === \"C_65_ID_1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_ID_1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3140,
        "wires": [
            [
                "1c5453dc54e6ac67"
            ]
        ]
    },
    {
        "id": "7ae309e94cae48e3",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_ID_2",
        "func": "if (msg.topic === \"C_65_ID_2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_ID_2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3180,
        "wires": [
            [
                "c883abbfd4d8874b"
            ]
        ]
    },
    {
        "id": "66c13de388a11239",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "S7 CR",
        "links": [
            "801984acd1f1dc29"
        ],
        "x": 55,
        "y": 3120,
        "wires": [
            [
                "ed0deaa66f03a87b",
                "5b728e822ba1d8ae",
                "8a0b082a74a6d0e4",
                "7ae309e94cae48e3"
            ]
        ]
    },
    {
        "id": "a1700b95355a294c",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Sub Out 60 CW",
        "mode": "link",
        "links": [
            "4eed6490c30140ec"
        ],
        "x": 1295,
        "y": 3260,
        "wires": []
    },
    {
        "id": "4eed6490c30140ec",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Sub In 60 CW",
        "links": [
            "a1700b95355a294c"
        ],
        "x": 895,
        "y": 3440,
        "wires": [
            [
                "a40a9c3d73939ad2"
            ]
        ]
    },
    {
        "id": "bc3a9fc6d1fa8841",
        "type": "mqtt in",
        "z": "e5f6790dee67bd7b",
        "g": "3ee347e47570923f",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d99579db50330f02",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "9481472733e26973"
            ]
        ]
    },
    {
        "id": "9481472733e26973",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "3ee347e47570923f",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "801984acd1f1dc29",
                "0d638688048b673d"
            ]
        ]
    },
    {
        "id": "a0f84a6f71a0862d",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "2e1e19ce8b302f46"
            ]
        ]
    },
    {
        "id": "2e1e19ce8b302f46",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "d62cd89dcedeeec8",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "3f3e57896decc733",
            "5655a27d1b79cfee",
            "85495055f1688b91",
            "b712e36896f474e2",
            "69ec1322f8813526",
            "41b55d1a83b37b66",
            "d9afbf4f24c5ee0d",
            "6880d2bb60bc55c7"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "3f3e57896decc733",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "8ed3cdaa3705473d",
        "name": "Read PS",
        "links": [
            "2e1e19ce8b302f46"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "b52f1c7a707119ca"
            ]
        ]
    },
    {
        "id": "5655a27d1b79cfee",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Read CW",
        "links": [
            "2e1e19ce8b302f46"
        ],
        "x": 55,
        "y": 3260,
        "wires": [
            [
                "21f0b63e3d698e00"
            ]
        ]
    },
    {
        "id": "85495055f1688b91",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "Read CR",
        "links": [
            "2e1e19ce8b302f46"
        ],
        "x": 55,
        "y": 2980,
        "wires": [
            [
                "f2e905d8200f0e4f"
            ]
        ]
    },
    {
        "id": "b712e36896f474e2",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "8961eab5ef24e7bf",
        "name": "Read AF",
        "links": [
            "2e1e19ce8b302f46"
        ],
        "x": 55,
        "y": 2520,
        "wires": [
            [
                "5f48452a7b8ff4ea"
            ]
        ]
    },
    {
        "id": "69ec1322f8813526",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "9db8cb4838a3232b",
        "name": "Read PF",
        "links": [
            "2e1e19ce8b302f46"
        ],
        "x": 55,
        "y": 2220,
        "wires": [
            [
                "2b45a1071ad065f8"
            ]
        ]
    },
    {
        "id": "41b55d1a83b37b66",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "Read AA",
        "links": [
            "2e1e19ce8b302f46"
        ],
        "x": 55,
        "y": 1760,
        "wires": [
            [
                "9697d35016f83111"
            ]
        ]
    },
    {
        "id": "d9afbf4f24c5ee0d",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "Read PA",
        "links": [
            "2e1e19ce8b302f46"
        ],
        "x": 55,
        "y": 1460,
        "wires": [
            [
                "4bb086180d276c70"
            ]
        ]
    },
    {
        "id": "6880d2bb60bc55c7",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "eeffea1ed5a2cc6a",
        "name": "Read AS",
        "links": [
            "2e1e19ce8b302f46"
        ],
        "x": 55,
        "y": 1000,
        "wires": [
            [
                "2598e0d654941d3a"
            ]
        ]
    },
    {
        "id": "36d035fe1464b844",
        "type": "mqtt out",
        "z": "e5f6790dee67bd7b",
        "g": "3ee347e47570923f",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d99579db50330f02",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "bf6885a7073cc106",
        "type": "link in",
        "z": "e5f6790dee67bd7b",
        "g": "3ee347e47570923f",
        "name": "S7 Actuators",
        "links": [
            "388144b14d3e5bf3",
            "3a1a721e4b9a47b9",
            "08424268e18795a7"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "36d035fe1464b844"
            ]
        ]
    },
    {
        "id": "2b50447457748c23",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "I_60_Conveyor",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1540,
        "wires": [
            [
                "388144b14d3e5bf3"
            ]
        ]
    },
    {
        "id": "a84147cc002044bb",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "I_60_P1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1580,
        "wires": [
            [
                "388144b14d3e5bf3"
            ]
        ]
    },
    {
        "id": "96e297be905af560",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "I_60_P2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1620,
        "wires": [
            [
                "388144b14d3e5bf3"
            ]
        ]
    },
    {
        "id": "474eacddd0a12c0e",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "I_60_Identify",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1660,
        "wires": [
            [
                "388144b14d3e5bf3"
            ]
        ]
    },
    {
        "id": "388144b14d3e5bf3",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "2ac8f6a6ef605225",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "bf6885a7073cc106"
        ],
        "x": 1235,
        "y": 1600,
        "wires": []
    },
    {
        "id": "fa2b784d31084af6",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1840,
        "wires": [
            [
                "3a1a721e4b9a47b9"
            ]
        ]
    },
    {
        "id": "bae32f041d311344",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1880,
        "wires": [
            [
                "3a1a721e4b9a47b9"
            ]
        ]
    },
    {
        "id": "c0a3ab449a8a2c22",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1920,
        "wires": [
            [
                "3a1a721e4b9a47b9"
            ]
        ]
    },
    {
        "id": "a1418dd571556384",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1960,
        "wires": [
            [
                "3a1a721e4b9a47b9"
            ]
        ]
    },
    {
        "id": "9c63e3a1995d7eb2",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2000,
        "wires": [
            [
                "3a1a721e4b9a47b9"
            ]
        ]
    },
    {
        "id": "27876203c7c85fb1",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2040,
        "wires": [
            [
                "3a1a721e4b9a47b9"
            ]
        ]
    },
    {
        "id": "b7e171600ec82159",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2080,
        "wires": [
            [
                "3a1a721e4b9a47b9"
            ]
        ]
    },
    {
        "id": "67a27bc78685635f",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "I_61_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2120,
        "wires": [
            [
                "3a1a721e4b9a47b9"
            ]
        ]
    },
    {
        "id": "3a1a721e4b9a47b9",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "37ebf220fe98f8a4",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "bf6885a7073cc106"
        ],
        "x": 1225,
        "y": 1980,
        "wires": []
    },
    {
        "id": "b6dbe7aa2207c3eb",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_RBS_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3340,
        "wires": [
            [
                "08424268e18795a7"
            ]
        ]
    },
    {
        "id": "d519a0ef71a39d60",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_RSB_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3380,
        "wires": [
            [
                "08424268e18795a7"
            ]
        ]
    },
    {
        "id": "19d288fc68e3e6dd",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_BRS_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3420,
        "wires": [
            [
                "08424268e18795a7"
            ]
        ]
    },
    {
        "id": "92771cdb0cfe907e",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_BSR_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3460,
        "wires": [
            [
                "08424268e18795a7"
            ]
        ]
    },
    {
        "id": "db83ebb07e01938b",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_SRB_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3500,
        "wires": [
            [
                "08424268e18795a7"
            ]
        ]
    },
    {
        "id": "8e7d2c74b44ea2ff",
        "type": "function",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "C_65_SBR_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3540,
        "wires": [
            [
                "08424268e18795a7"
            ]
        ]
    },
    {
        "id": "08424268e18795a7",
        "type": "link out",
        "z": "e5f6790dee67bd7b",
        "g": "e2b7d6253bba6c6f",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "bf6885a7073cc106"
        ],
        "x": 1365,
        "y": 3440,
        "wires": []
    },
    {
        "id": "1a934c357c47c592",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "item": "O_70_SInductive",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_SInductive",
        "x": 470,
        "y": 620,
        "wires": [
            [
                "80aba334a21c474b"
            ]
        ]
    },
    {
        "id": "134cc8956fd24315",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "item": "O_70_SPart",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_SPart",
        "x": 490,
        "y": 660,
        "wires": [
            [
                "80aba334a21c474b"
            ]
        ]
    },
    {
        "id": "682f2e6f12dfca94",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "item": "O_70_SStation",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_SStation",
        "x": 480,
        "y": 700,
        "wires": [
            [
                "80aba334a21c474b"
            ]
        ]
    },
    {
        "id": "63d13efc56c68903",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "item": "O_70_SPart_Height",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_SPart_Height",
        "x": 460,
        "y": 740,
        "wires": [
            [
                "80aba334a21c474b"
            ]
        ]
    },
    {
        "id": "02c0c82e58905e45",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "item": "O_70_Elev_High",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_Elev_High",
        "x": 470,
        "y": 780,
        "wires": [
            [
                "80aba334a21c474b"
            ]
        ]
    },
    {
        "id": "1a9da7542aa4e404",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "item": "O_70_Elev_Low",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_Elev_Low",
        "x": 480,
        "y": 820,
        "wires": [
            [
                "80aba334a21c474b"
            ]
        ]
    },
    {
        "id": "9ae278fe0606c31f",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "item": "O_70_Pist_Back",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_Pist_Back",
        "x": 470,
        "y": 860,
        "wires": [
            [
                "80aba334a21c474b"
            ]
        ]
    },
    {
        "id": "80aba334a21c474b",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "70 Physical Sensor",
        "mode": "link",
        "links": [
            "8545cdf631f5e34b"
        ],
        "x": 645,
        "y": 740,
        "wires": []
    },
    {
        "id": "82b924d9dbf47c78",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "96cc7e1c9e03596a"
            ]
        ]
    },
    {
        "id": "96cc7e1c9e03596a",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "639a5bd0de7b6ee9"
            ]
        ]
    },
    {
        "id": "639a5bd0de7b6ee9",
        "type": "file in",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "572ae3fd733a9efa"
            ]
        ]
    },
    {
        "id": "572ae3fd733a9efa",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "f9e40cbc2b8a978b"
            ]
        ]
    },
    {
        "id": "f9e40cbc2b8a978b",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "7b6ef021522b4120"
            ]
        ]
    },
    {
        "id": "7b6ef021522b4120",
        "type": "OpcUa-Client",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "endpoint": "b3349d57e68acd08",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "f8f6193cc3e2633f",
                "b0e2091161213a26"
            ],
            [
                "4551d252ff5e450e"
            ]
        ]
    },
    {
        "id": "0467eebee1d78fe9",
        "type": "switch",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "70 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_70_SInductive",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_SPart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_SStation",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_SPart_Height",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_Elev_High",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_Elev_Low",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_Pist_Back",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 740,
        "wires": [
            [
                "33d11a4b48b38991"
            ],
            [
                "bc07c62246662b97"
            ],
            [
                "9815bb08deb20f56"
            ],
            [
                "2dd9b32772ddcfad"
            ],
            [
                "0c685c357a656993"
            ],
            [
                "46a210380da420d4"
            ],
            [
                "9ec2df2991d94ea2"
            ]
        ]
    },
    {
        "id": "33d11a4b48b38991",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "order": 0,
        "group": "e3e178d792434d43",
        "width": 0,
        "height": 0,
        "label": "Inductive sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_SInductive",
        "x": 1070,
        "y": 620,
        "wires": []
    },
    {
        "id": "bc07c62246662b97",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "order": 0,
        "group": "e3e178d792434d43",
        "width": 0,
        "height": 0,
        "label": "Part in elevator",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_SPart",
        "x": 1050,
        "y": 660,
        "wires": []
    },
    {
        "id": "9815bb08deb20f56",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "order": 0,
        "group": "e3e178d792434d43",
        "width": 0,
        "height": 0,
        "label": "Station through",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_SStation",
        "x": 1060,
        "y": 700,
        "wires": []
    },
    {
        "id": "2dd9b32772ddcfad",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "order": 0,
        "group": "e3e178d792434d43",
        "width": 0,
        "height": 0,
        "label": "Part height sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_SPart_Height",
        "x": 1080,
        "y": 740,
        "wires": []
    },
    {
        "id": "0c685c357a656993",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "order": 0,
        "group": "e3e178d792434d43",
        "width": 0,
        "height": 0,
        "label": "Elevator in high position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_Elev_High",
        "x": 1070,
        "y": 780,
        "wires": []
    },
    {
        "id": "46a210380da420d4",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "order": 0,
        "group": "e3e178d792434d43",
        "width": 0,
        "height": 0,
        "label": "Elevator in low position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_Elev_Low",
        "x": 1060,
        "y": 820,
        "wires": []
    },
    {
        "id": "9ec2df2991d94ea2",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "order": 0,
        "group": "e3e178d792434d43",
        "width": 0,
        "height": 0,
        "label": "Eject piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_Pist_Back",
        "x": 1070,
        "y": 860,
        "wires": []
    },
    {
        "id": "f48283f93e83ba1e",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "item": "O_71_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Start",
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "eb10f1ab7fffd177"
            ]
        ]
    },
    {
        "id": "9129327b309f8471",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "item": "O_71_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Stop",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "eb10f1ab7fffd177"
            ]
        ]
    },
    {
        "id": "16886e335e769327",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "item": "O_71_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Key_Pos",
        "x": 480,
        "y": 1120,
        "wires": [
            [
                "eb10f1ab7fffd177"
            ]
        ]
    },
    {
        "id": "db6f7f2ebe51462c",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "item": "O_71_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Reset",
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "eb10f1ab7fffd177"
            ]
        ]
    },
    {
        "id": "944dda2fe3e63801",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "item": "O_71_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Panel_I4",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "eb10f1ab7fffd177"
            ]
        ]
    },
    {
        "id": "ffa1e32c0977a4ec",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "item": "O_71_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Panel_I5",
        "x": 480,
        "y": 1240,
        "wires": [
            [
                "eb10f1ab7fffd177"
            ]
        ]
    },
    {
        "id": "d183585ee8191e5d",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "item": "O_71_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Panel_I6",
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "eb10f1ab7fffd177"
            ]
        ]
    },
    {
        "id": "eb10f1ab7fffd177",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "70 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "8545cdf631f5e34b"
        ],
        "x": 645,
        "y": 1180,
        "wires": []
    },
    {
        "id": "e183aa2648f0fa96",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 960,
        "wires": [
            [
                "89276e93d2dd2b9e"
            ]
        ]
    },
    {
        "id": "89276e93d2dd2b9e",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 960,
        "wires": [
            [
                "5d65e98032f88a67"
            ]
        ]
    },
    {
        "id": "5d65e98032f88a67",
        "type": "file in",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 960,
        "wires": [
            [
                "c45ad6ad708ba8e4"
            ]
        ]
    },
    {
        "id": "c45ad6ad708ba8e4",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 960,
        "wires": [
            [
                "5f36f15544cfc5b5"
            ]
        ]
    },
    {
        "id": "5f36f15544cfc5b5",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 960,
        "wires": [
            [
                "e663337ee468e9a3"
            ]
        ]
    },
    {
        "id": "e663337ee468e9a3",
        "type": "OpcUa-Client",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "endpoint": "b3349d57e68acd08",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 960,
        "wires": [
            [
                "35d898e03e280248",
                "2ccdf06143f3ebc4"
            ],
            [
                "68158e74b8cd8ee0"
            ]
        ]
    },
    {
        "id": "3b251a38c024aca4",
        "type": "switch",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "70 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_71_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1180,
        "wires": [
            [
                "c5528fdbab62a484"
            ],
            [
                "320b9ef89bb550c6"
            ],
            [
                "fde1e14b80faf7ca"
            ],
            [
                "6e9c9455efff89e6"
            ],
            [
                "558bbc4951ddfa8f"
            ],
            [
                "0df7616f5f03f671"
            ],
            [
                "31b5bbc2dc22e06b"
            ],
            [
                "9f5e4d01d9130be7"
            ]
        ]
    },
    {
        "id": "c5528fdbab62a484",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "order": 0,
        "group": "2b828702e5f8954d",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Start",
        "x": 1050,
        "y": 1040,
        "wires": []
    },
    {
        "id": "320b9ef89bb550c6",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "order": 0,
        "group": "2b828702e5f8954d",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Stop",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "fde1e14b80faf7ca",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "order": 0,
        "group": "2b828702e5f8954d",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Key_Pos",
        "x": 1060,
        "y": 1120,
        "wires": []
    },
    {
        "id": "6e9c9455efff89e6",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "order": 0,
        "group": "2b828702e5f8954d",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Reset",
        "x": 1050,
        "y": 1160,
        "wires": []
    },
    {
        "id": "558bbc4951ddfa8f",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "order": 0,
        "group": "2b828702e5f8954d",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Panel_I4",
        "x": 1060,
        "y": 1200,
        "wires": []
    },
    {
        "id": "0df7616f5f03f671",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "order": 0,
        "group": "2b828702e5f8954d",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Panel_I5",
        "x": 1060,
        "y": 1240,
        "wires": []
    },
    {
        "id": "31b5bbc2dc22e06b",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "order": 0,
        "group": "2b828702e5f8954d",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Panel_I6",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b77dfd68cf750ad2",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "item": "O_71_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Panel_I7",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "eb10f1ab7fffd177"
            ]
        ]
    },
    {
        "id": "9f5e4d01d9130be7",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "order": 0,
        "group": "2b828702e5f8954d",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Panel_I7",
        "x": 1060,
        "y": 1320,
        "wires": []
    },
    {
        "id": "65ef2cc5ef58973b",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "item": "I_70_Elev_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "I_70_Elev_Down",
        "x": 470,
        "y": 1500,
        "wires": [
            [
                "93b9d2df8f07d360"
            ]
        ]
    },
    {
        "id": "8442f3f790d26692",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "item": "I_70_Elev_Up",
        "datatype": "Boolean",
        "value": "",
        "name": "I_70_Elev_Up",
        "x": 480,
        "y": 1540,
        "wires": [
            [
                "93b9d2df8f07d360"
            ]
        ]
    },
    {
        "id": "0ce12c24c5438b2c",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "item": "I_70_Eject_Part",
        "datatype": "Boolean",
        "value": "",
        "name": "I_70_Eject_Part",
        "x": 480,
        "y": 1580,
        "wires": [
            [
                "93b9d2df8f07d360"
            ]
        ]
    },
    {
        "id": "3ca299b4c4c09f69",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "item": "I_70_Air_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_70_Air_On",
        "x": 490,
        "y": 1620,
        "wires": [
            [
                "93b9d2df8f07d360"
            ]
        ]
    },
    {
        "id": "93b9d2df8f07d360",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "70 Physical Actuators",
        "mode": "link",
        "links": [
            "8545cdf631f5e34b"
        ],
        "x": 645,
        "y": 1560,
        "wires": []
    },
    {
        "id": "311c9ba58948ab01",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1420,
        "wires": [
            [
                "5472586ed8c0ee31"
            ]
        ]
    },
    {
        "id": "5472586ed8c0ee31",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "296cfd6bd0572374"
            ]
        ]
    },
    {
        "id": "296cfd6bd0572374",
        "type": "file in",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "2d45dcd63490c9d9"
            ]
        ]
    },
    {
        "id": "2d45dcd63490c9d9",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "cc85148af576389c"
            ]
        ]
    },
    {
        "id": "cc85148af576389c",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1420,
        "wires": [
            [
                "0218bc6e2e1307bc"
            ]
        ]
    },
    {
        "id": "0218bc6e2e1307bc",
        "type": "OpcUa-Client",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "endpoint": "b3349d57e68acd08",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1420,
        "wires": [
            [
                "71f9304fe8730567",
                "de03200721032c2d"
            ],
            [
                "9e6594c9976bd6d9"
            ]
        ]
    },
    {
        "id": "8bf753561d860210",
        "type": "switch",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "70 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_70_Elev_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_70_Elev_Up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_70_Eject_Part",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_70_Air_On",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 1560,
        "wires": [
            [
                "fc36cd05a735e69f"
            ],
            [
                "ca93cf3933a92a47"
            ],
            [
                "fcb716072ba50528"
            ],
            [
                "a51382bd19569034"
            ]
        ]
    },
    {
        "id": "de5c028e18ba114d",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "I_70_Elev_Down",
        "label": "Lowers elevator",
        "tooltip": "",
        "group": "3afd3721d248dc47",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1500,
        "wires": [
            [
                "65ef2cc5ef58973b"
            ]
        ]
    },
    {
        "id": "fd6437b0651baba9",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "I_80_Suction_On",
        "label": "Rises elevator",
        "tooltip": "",
        "group": "3afd3721d248dc47",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1540,
        "wires": [
            [
                "8442f3f790d26692"
            ]
        ]
    },
    {
        "id": "4d7c04f312c1fe9a",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "I_70_Eject_Part",
        "label": "Eject parts",
        "tooltip": "",
        "group": "3afd3721d248dc47",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1580,
        "wires": [
            [
                "0ce12c24c5438b2c"
            ]
        ]
    },
    {
        "id": "9e671babf83a3e4a",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "I_70_Air_On",
        "label": "Turns on air",
        "tooltip": "",
        "group": "3afd3721d248dc47",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 1620,
        "wires": [
            [
                "3ca299b4c4c09f69"
            ]
        ]
    },
    {
        "id": "ea9206096257360f",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "item": "I_71_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Led_Start",
        "x": 480,
        "y": 1800,
        "wires": [
            [
                "dbfc603c5ecf3c70"
            ]
        ]
    },
    {
        "id": "434decbe141c4307",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "item": "I_71_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Led_Reset",
        "x": 480,
        "y": 1840,
        "wires": [
            [
                "dbfc603c5ecf3c70"
            ]
        ]
    },
    {
        "id": "894fe17694fd10e4",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "item": "I_71_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Led_Extra1",
        "x": 470,
        "y": 1880,
        "wires": [
            [
                "dbfc603c5ecf3c70"
            ]
        ]
    },
    {
        "id": "7d6c3e38b991dc2f",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "item": "I_71_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Led_Extra2",
        "x": 470,
        "y": 1920,
        "wires": [
            [
                "dbfc603c5ecf3c70"
            ]
        ]
    },
    {
        "id": "c68534b5501ca814",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "item": "I_71_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Panel_O4",
        "x": 480,
        "y": 1960,
        "wires": [
            [
                "dbfc603c5ecf3c70"
            ]
        ]
    },
    {
        "id": "dbfc603c5ecf3c70",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "70 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "8545cdf631f5e34b"
        ],
        "x": 645,
        "y": 1940,
        "wires": []
    },
    {
        "id": "08a9539e19e32a5a",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1720,
        "wires": [
            [
                "37788a13669d3d0f"
            ]
        ]
    },
    {
        "id": "37788a13669d3d0f",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1720,
        "wires": [
            [
                "7f8211e75c7941f3"
            ]
        ]
    },
    {
        "id": "7f8211e75c7941f3",
        "type": "file in",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1720,
        "wires": [
            [
                "98099749cb6102d2"
            ]
        ]
    },
    {
        "id": "98099749cb6102d2",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1720,
        "wires": [
            [
                "57dd839d030b4611"
            ]
        ]
    },
    {
        "id": "57dd839d030b4611",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1720,
        "wires": [
            [
                "d6b2441daf18175e"
            ]
        ]
    },
    {
        "id": "d6b2441daf18175e",
        "type": "OpcUa-Client",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "endpoint": "b3349d57e68acd08",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1720,
        "wires": [
            [
                "d5cc70a39a5cd978",
                "08508f792cd589b6"
            ],
            [
                "1e3adbbc3d8ed089"
            ]
        ]
    },
    {
        "id": "b4f27a7452467149",
        "type": "switch",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "70 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_71_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1940,
        "wires": [
            [
                "c8602c8f47be0c9b"
            ],
            [
                "85b6133a70c87e7c"
            ],
            [
                "b7969ee6c541b320"
            ],
            [
                "e89c5299e6e7c799"
            ],
            [
                "006a6429d49a6023"
            ],
            [
                "275175d61beecdcb"
            ],
            [
                "b80ffd10e681f954"
            ],
            [
                "e116dd647b5298f5"
            ]
        ]
    },
    {
        "id": "1465464e3ee2c8d2",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "b8501b4cb16295f2",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1800,
        "wires": [
            [
                "ea9206096257360f"
            ]
        ]
    },
    {
        "id": "11f1993bdf0f82b8",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "b8501b4cb16295f2",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1840,
        "wires": [
            [
                "434decbe141c4307"
            ]
        ]
    },
    {
        "id": "83238a936414232b",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "b8501b4cb16295f2",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1880,
        "wires": [
            [
                "894fe17694fd10e4"
            ]
        ]
    },
    {
        "id": "1633a713e7720f1d",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "b8501b4cb16295f2",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1920,
        "wires": [
            [
                "7d6c3e38b991dc2f"
            ]
        ]
    },
    {
        "id": "567dc3dc9c3b2efb",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "b8501b4cb16295f2",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1960,
        "wires": [
            [
                "c68534b5501ca814"
            ]
        ]
    },
    {
        "id": "e45ff8c98be3deb8",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "b8501b4cb16295f2",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2000,
        "wires": [
            [
                "24e47dbb8f36f086"
            ]
        ]
    },
    {
        "id": "24e47dbb8f36f086",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "item": "I_71_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Panel_O5",
        "x": 480,
        "y": 2000,
        "wires": [
            [
                "dbfc603c5ecf3c70"
            ]
        ]
    },
    {
        "id": "72c324763c0da3e7",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "b8501b4cb16295f2",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2040,
        "wires": [
            [
                "749d723e1c6c1d17"
            ]
        ]
    },
    {
        "id": "749d723e1c6c1d17",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "item": "I_71_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Panel_O6",
        "x": 480,
        "y": 2040,
        "wires": [
            [
                "dbfc603c5ecf3c70"
            ]
        ]
    },
    {
        "id": "6493348c6e482485",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "b8501b4cb16295f2",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2080,
        "wires": [
            [
                "5c9f4d500e713c5c"
            ]
        ]
    },
    {
        "id": "5c9f4d500e713c5c",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "item": "I_71_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Panel_O7",
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "dbfc603c5ecf3c70"
            ]
        ]
    },
    {
        "id": "e58841e0a19df282",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "item": "F_72_Elev_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "F_72_Elev_Down",
        "x": 470,
        "y": 2260,
        "wires": [
            [
                "3c25c7554111a6a6"
            ]
        ]
    },
    {
        "id": "52d68857438e5489",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "item": "F_72_Elev_Up",
        "datatype": "Boolean",
        "value": "",
        "name": "F_72_Elev_Up",
        "x": 480,
        "y": 2300,
        "wires": [
            [
                "3c25c7554111a6a6"
            ]
        ]
    },
    {
        "id": "473b4009f45fddb0",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "item": "F_72_Eject_Part",
        "datatype": "Boolean",
        "value": "",
        "name": "F_72_Eject_Part",
        "x": 470,
        "y": 2340,
        "wires": [
            [
                "3c25c7554111a6a6"
            ]
        ]
    },
    {
        "id": "294dfbaa4feec667",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "item": "F_72_Air_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_72_Air_On",
        "x": 490,
        "y": 2380,
        "wires": [
            [
                "3c25c7554111a6a6"
            ]
        ]
    },
    {
        "id": "3c25c7554111a6a6",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "70 Physical Feedback",
        "mode": "link",
        "links": [
            "8545cdf631f5e34b"
        ],
        "x": 645,
        "y": 2320,
        "wires": []
    },
    {
        "id": "23469d566400480d",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2180,
        "wires": [
            [
                "c53fc1692900a138"
            ]
        ]
    },
    {
        "id": "c53fc1692900a138",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2180,
        "wires": [
            [
                "d908bffc4e60954e"
            ]
        ]
    },
    {
        "id": "d908bffc4e60954e",
        "type": "file in",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2180,
        "wires": [
            [
                "912c214b4142a030"
            ]
        ]
    },
    {
        "id": "912c214b4142a030",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2180,
        "wires": [
            [
                "8cc2c66ec3018035"
            ]
        ]
    },
    {
        "id": "8cc2c66ec3018035",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2180,
        "wires": [
            [
                "ea393e315e64a82b"
            ]
        ]
    },
    {
        "id": "ea393e315e64a82b",
        "type": "OpcUa-Client",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "endpoint": "b3349d57e68acd08",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2180,
        "wires": [
            [
                "aa5a07811ac9d11f",
                "33569a7216914e6f"
            ],
            [
                "69e502d17dce8315"
            ]
        ]
    },
    {
        "id": "955dafaad7f0cda8",
        "type": "switch",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "70 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_72_Elev_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_72_Elev_Up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_72_Eject_Part",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_72_Air_On",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 2320,
        "wires": [
            [
                "33cfabaea557ea45"
            ],
            [
                "c7ad19f80978b27a"
            ],
            [
                "c00c68ae6327dd35"
            ],
            [
                "83c0b4a0902d857b"
            ]
        ]
    },
    {
        "id": "33cfabaea557ea45",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "order": 0,
        "group": "8c68bade93d6199e",
        "width": 0,
        "height": 0,
        "label": "Lowers elevator",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_72_Elev_Down",
        "x": 1070,
        "y": 2260,
        "wires": []
    },
    {
        "id": "c7ad19f80978b27a",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "order": 0,
        "group": "8c68bade93d6199e",
        "width": 0,
        "height": 0,
        "label": "Rises elevator",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_72_Elev_Up",
        "x": 1060,
        "y": 2300,
        "wires": []
    },
    {
        "id": "c00c68ae6327dd35",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "order": 0,
        "group": "8c68bade93d6199e",
        "width": 0,
        "height": 0,
        "label": "Eject parts",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_72_Eject_Part",
        "x": 1070,
        "y": 2340,
        "wires": []
    },
    {
        "id": "83c0b4a0902d857b",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "order": 0,
        "group": "8c68bade93d6199e",
        "width": 0,
        "height": 0,
        "label": "Turns on air",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_72_Air_On",
        "x": 1050,
        "y": 2380,
        "wires": []
    },
    {
        "id": "573b68d52f8f124e",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "item": "F_73_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Led_Start",
        "x": 480,
        "y": 2560,
        "wires": [
            [
                "fde1ba9bdb997cc3"
            ]
        ]
    },
    {
        "id": "81167585f04b9d15",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "item": "F_73_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Led_Reset",
        "x": 470,
        "y": 2600,
        "wires": [
            [
                "fde1ba9bdb997cc3"
            ]
        ]
    },
    {
        "id": "c53cf67e021e4e7a",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "item": "F_73_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Led_Extra1",
        "x": 470,
        "y": 2640,
        "wires": [
            [
                "fde1ba9bdb997cc3"
            ]
        ]
    },
    {
        "id": "28a3d879ea3f50a4",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "item": "F_73_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Led_Extra2",
        "x": 470,
        "y": 2680,
        "wires": [
            [
                "fde1ba9bdb997cc3"
            ]
        ]
    },
    {
        "id": "21de10db7fb13f67",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "item": "F_73_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Panel_O4",
        "x": 480,
        "y": 2720,
        "wires": [
            [
                "fde1ba9bdb997cc3"
            ]
        ]
    },
    {
        "id": "0533e084719ead6a",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "item": "F_73_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Panel_O5",
        "x": 480,
        "y": 2760,
        "wires": [
            [
                "fde1ba9bdb997cc3"
            ]
        ]
    },
    {
        "id": "31dd1bd926e2298b",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "item": "F_73_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Panel_O6",
        "x": 480,
        "y": 2800,
        "wires": [
            [
                "fde1ba9bdb997cc3"
            ]
        ]
    },
    {
        "id": "fde1ba9bdb997cc3",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "70 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "8545cdf631f5e34b"
        ],
        "x": 645,
        "y": 2700,
        "wires": []
    },
    {
        "id": "aca0083b4458e562",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2480,
        "wires": [
            [
                "154e3b2d7723f243"
            ]
        ]
    },
    {
        "id": "154e3b2d7723f243",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2480,
        "wires": [
            [
                "0fc94a31dce02620"
            ]
        ]
    },
    {
        "id": "0fc94a31dce02620",
        "type": "file in",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2480,
        "wires": [
            [
                "6d3a49f47e179fde"
            ]
        ]
    },
    {
        "id": "6d3a49f47e179fde",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2480,
        "wires": [
            [
                "6002d7e1d62e4c45"
            ]
        ]
    },
    {
        "id": "6002d7e1d62e4c45",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2480,
        "wires": [
            [
                "dd2bbc2342858942"
            ]
        ]
    },
    {
        "id": "dd2bbc2342858942",
        "type": "OpcUa-Client",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "endpoint": "b3349d57e68acd08",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2480,
        "wires": [
            [
                "2627cb3b08e2a54f",
                "39739032c66a82a2"
            ],
            [
                "f90a05c1c52b1555"
            ]
        ]
    },
    {
        "id": "2b75e0852c81d54c",
        "type": "switch",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "70 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_73_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2700,
        "wires": [
            [
                "b6610579021a7269"
            ],
            [
                "d472281b68bfd84f"
            ],
            [
                "a0e66eecb54e4fe6"
            ],
            [
                "eee8e224624d0dba"
            ],
            [
                "0f58db633efd825f"
            ],
            [
                "9c6cf16af0184ff4"
            ],
            [
                "93fca9dcae3e58e1"
            ],
            [
                "571b2df2708a25fd"
            ]
        ]
    },
    {
        "id": "b6610579021a7269",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "order": 0,
        "group": "62a2d24d4829f761",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Led_Start",
        "x": 1060,
        "y": 2560,
        "wires": []
    },
    {
        "id": "d472281b68bfd84f",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "order": 0,
        "group": "62a2d24d4829f761",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Led_Reset",
        "x": 1070,
        "y": 2600,
        "wires": []
    },
    {
        "id": "a0e66eecb54e4fe6",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "order": 0,
        "group": "62a2d24d4829f761",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Led_Extra1",
        "x": 1070,
        "y": 2640,
        "wires": []
    },
    {
        "id": "eee8e224624d0dba",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "order": 0,
        "group": "62a2d24d4829f761",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Led_Extra2",
        "x": 1070,
        "y": 2680,
        "wires": []
    },
    {
        "id": "0f58db633efd825f",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "order": 0,
        "group": "62a2d24d4829f761",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Panel_O4",
        "x": 1060,
        "y": 2720,
        "wires": []
    },
    {
        "id": "9c6cf16af0184ff4",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "order": 0,
        "group": "62a2d24d4829f761",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Panel_O5",
        "x": 1060,
        "y": 2760,
        "wires": []
    },
    {
        "id": "93fca9dcae3e58e1",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "order": 0,
        "group": "62a2d24d4829f761",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Panel_O6",
        "x": 1060,
        "y": 2800,
        "wires": []
    },
    {
        "id": "7d7ade743b90f599",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "item": "F_73_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Panel_O7",
        "x": 480,
        "y": 2840,
        "wires": [
            [
                "fde1ba9bdb997cc3"
            ]
        ]
    },
    {
        "id": "571b2df2708a25fd",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "order": 0,
        "group": "62a2d24d4829f761",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Panel_O7",
        "x": 1060,
        "y": 2840,
        "wires": []
    },
    {
        "id": "4c9a81e29581359b",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "item": "C_72_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_72_Profibus",
        "x": 640,
        "y": 3020,
        "wires": [
            [
                "98c0897147dd21c3"
            ]
        ]
    },
    {
        "id": "48bcf271f699c115",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "item": "C_75_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_Initialization",
        "x": 630,
        "y": 3060,
        "wires": [
            [
                "98c0897147dd21c3"
            ]
        ]
    },
    {
        "id": "72e6b41b599fd02a",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "item": "C_75_RQ_Delivery2",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_RQ_Delivery2",
        "x": 620,
        "y": 3440,
        "wires": [
            [
                "4afeb9e7ab17fe6f"
            ]
        ]
    },
    {
        "id": "e8d9fa11f9444173",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "item": "C_75_Identified",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_Identified",
        "x": 640,
        "y": 3480,
        "wires": [
            [
                "4afeb9e7ab17fe6f"
            ]
        ]
    },
    {
        "id": "86a19ff5ce5d099a",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "item": "C_75_Requested",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_Requested",
        "x": 630,
        "y": 3520,
        "wires": [
            [
                "4afeb9e7ab17fe6f"
            ]
        ]
    },
    {
        "id": "98c0897147dd21c3",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "70 Control",
        "mode": "link",
        "links": [
            "8545cdf631f5e34b"
        ],
        "x": 795,
        "y": 3140,
        "wires": []
    },
    {
        "id": "dbaddb2323f3ef06",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2940,
        "wires": [
            [
                "cad21a3b174e5836"
            ]
        ]
    },
    {
        "id": "cad21a3b174e5836",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2940,
        "wires": [
            [
                "8f2e2cfedcd9800f"
            ]
        ]
    },
    {
        "id": "8f2e2cfedcd9800f",
        "type": "file in",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2940,
        "wires": [
            [
                "3958577d730c432c"
            ]
        ]
    },
    {
        "id": "3958577d730c432c",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2940,
        "wires": [
            [
                "62401ece6113b276"
            ]
        ]
    },
    {
        "id": "62401ece6113b276",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2940,
        "wires": [
            [
                "3f6ff214993924d4"
            ]
        ]
    },
    {
        "id": "3f6ff214993924d4",
        "type": "OpcUa-Client",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "endpoint": "b3349d57e68acd08",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2940,
        "wires": [
            [
                "153c47fc01272550",
                "6a70880d702aa9cf"
            ],
            [
                "ed87a21cb44f4764"
            ]
        ]
    },
    {
        "id": "672ba5dfa0d71bea",
        "type": "switch",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "70 CR",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_72_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_ID_Delivery1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_ID_Delivery2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_Part_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_RQ_Part_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_RQ_Wrong",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 1010,
        "y": 3140,
        "wires": [
            [
                "2433bcdc1496026b"
            ],
            [
                "0ccae1d5f915f73f"
            ],
            [
                "974d20b50bf5c62f"
            ],
            [
                "4a1c995af10377d7"
            ],
            [
                "54e0763699dab2fe"
            ],
            [
                "a5f4b0fa546cebea"
            ],
            [
                "525d72b99f44227e"
            ]
        ]
    },
    {
        "id": "2433bcdc1496026b",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "order": 2,
        "group": "7380eeb38be9e189",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_72_Profibus",
        "x": 1200,
        "y": 3020,
        "wires": []
    },
    {
        "id": "0ccae1d5f915f73f",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "order": 1,
        "group": "7380eeb38be9e189",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_Initialization",
        "x": 1210,
        "y": 3060,
        "wires": []
    },
    {
        "id": "a7e9141f0869d205",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_RQ_Delivery2",
        "label": "Requested Delivery - Bit 2",
        "tooltip": "Bit 2",
        "group": "7380eeb38be9e189",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 220,
        "y": 3440,
        "wires": [
            [
                "72e6b41b599fd02a"
            ]
        ]
    },
    {
        "id": "9345e3e54b928c89",
        "type": "ui_dropdown",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "7380eeb38be9e189",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Identified Delivery",
                "value": "C_75_Identified",
                "type": "str"
            },
            {
                "label": "Requested Delivery",
                "value": "C_75_Requested",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 3500,
        "wires": [
            [
                "51530931d55aa52e",
                "464c7687a75422b1"
            ]
        ]
    },
    {
        "id": "51530931d55aa52e",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_Identified",
        "func": "if (msg.payload === \"C_75_Identified\") return { payload: true, topic: \"C_75_Identified\"};\nelse return { payload: false, topic: \"C_75_Identified\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3480,
        "wires": [
            [
                "e8d9fa11f9444173"
            ]
        ]
    },
    {
        "id": "464c7687a75422b1",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_Requested",
        "func": "if (msg.payload === \"C_75_Requested\") return { payload: true, topic: \"C_75_Requested\"};\nelse return { payload: false, topic: \"C_75_Requested\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3520,
        "wires": [
            [
                "86a19ff5ce5d099a"
            ]
        ]
    },
    {
        "id": "89aa9dc85bb169e2",
        "type": "comment",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "a4da03c9a41a8c2f",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"A_\")) variableClass = \"AS-i\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "2e1d557ba97e1182"
            ]
        ]
    },
    {
        "id": "2e1d557ba97e1182",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Testing_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 340,
        "wires": [
            [
                "dd8b225641e85d99"
            ]
        ]
    },
    {
        "id": "f7656cc54541b65e",
        "type": "file",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "9e3cf119133f218e",
        "type": "comment",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "dd8b225641e85d99",
        "type": "OpcUa-Client",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "endpoint": "b3349d57e68acd08",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 850,
        "y": 340,
        "wires": [
            [
                "a54cf73b300d88f6"
            ],
            [
                "1b8529e9114e7ef1",
                "c84aed3bd74c6cd6"
            ]
        ]
    },
    {
        "id": "a54cf73b300d88f6",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 320,
        "wires": [
            [
                "a0270e912df28b09",
                "0e214e306b67d461"
            ]
        ]
    },
    {
        "id": "a0270e912df28b09",
        "type": "file",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1250,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "0e214e306b67d461",
        "type": "debug",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 360,
        "wires": []
    },
    {
        "id": "4d0af0b5765b3f16",
        "type": "OpcUa-Client",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "endpoint": "b3349d57e68acd08",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "cf40d9f0b8a02ed9"
            ],
            []
        ]
    },
    {
        "id": "6f2785753aed4896",
        "type": "comment",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "cf40d9f0b8a02ed9",
        "type": "debug",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "8545cdf631f5e34b",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Write_Test",
        "links": [
            "80aba334a21c474b",
            "dbfc603c5ecf3c70",
            "3c25c7554111a6a6",
            "93b9d2df8f07d360",
            "eb10f1ab7fffd177",
            "98c0897147dd21c3",
            "fde1ba9bdb997cc3",
            "b10fbab67411585e",
            "4afeb9e7ab17fe6f"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "8ea6a4f04a236ba0"
            ]
        ]
    },
    {
        "id": "8ea6a4f04a236ba0",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "66fff952aa0d8bb5"
            ]
        ]
    },
    {
        "id": "66fff952aa0d8bb5",
        "type": "file in",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "3f5721ac5ec1c637"
            ]
        ]
    },
    {
        "id": "3f5721ac5ec1c637",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "794597c114fe7a13"
            ]
        ]
    },
    {
        "id": "794597c114fe7a13",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "4d0af0b5765b3f16"
            ]
        ]
    },
    {
        "id": "b503c2222ce7b832",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3320,
        "wires": [
            [
                "5a429d22126661d7"
            ]
        ]
    },
    {
        "id": "5a429d22126661d7",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3320,
        "wires": [
            [
                "c0c74768fdd9121c"
            ]
        ]
    },
    {
        "id": "c0c74768fdd9121c",
        "type": "file in",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3320,
        "wires": [
            [
                "b28471862ec00bd9"
            ]
        ]
    },
    {
        "id": "b28471862ec00bd9",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3320,
        "wires": [
            [
                "13faf02218d68e8f"
            ]
        ]
    },
    {
        "id": "13faf02218d68e8f",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3320,
        "wires": [
            [
                "07513f6d196f0bcb"
            ]
        ]
    },
    {
        "id": "07513f6d196f0bcb",
        "type": "OpcUa-Client",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "endpoint": "b3349d57e68acd08",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3320,
        "wires": [
            [
                "14feb5c4e0d792e9",
                "e499e56b3df61fab"
            ],
            [
                "e91f2d808e45a654"
            ]
        ]
    },
    {
        "id": "f3547b1d1d88b742",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "item": "C_75_ID_Delivery1",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_ID_Delivery1",
        "x": 630,
        "y": 3100,
        "wires": [
            [
                "98c0897147dd21c3"
            ]
        ]
    },
    {
        "id": "b05a556efde449c8",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "item": "C_75_ID_Delivery2",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_ID_Delivery2",
        "x": 630,
        "y": 3140,
        "wires": [
            [
                "98c0897147dd21c3"
            ]
        ]
    },
    {
        "id": "974d20b50bf5c62f",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "order": 3,
        "group": "7380eeb38be9e189",
        "width": 0,
        "height": 0,
        "label": "Identified Delivery - Bit 1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_ID_Delivery1",
        "x": 1210,
        "y": 3100,
        "wires": []
    },
    {
        "id": "4a1c995af10377d7",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "order": 4,
        "group": "7380eeb38be9e189",
        "width": 0,
        "height": 0,
        "label": "Identified Delivery - Bit 2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_ID_Delivery2",
        "x": 1210,
        "y": 3140,
        "wires": []
    },
    {
        "id": "945214d983d415cb",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "item": "C_75_Part_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_Part_Del",
        "x": 640,
        "y": 3180,
        "wires": [
            [
                "98c0897147dd21c3"
            ]
        ]
    },
    {
        "id": "ddc77df6659206ab",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "item": "C_75_RQ_Part_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_RQ_Part_Del",
        "x": 620,
        "y": 3220,
        "wires": [
            [
                "98c0897147dd21c3"
            ]
        ]
    },
    {
        "id": "b05bbbe6bdba5a84",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "item": "C_75_RQ_Wrong",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_RQ_Wrong",
        "x": 630,
        "y": 3260,
        "wires": [
            [
                "98c0897147dd21c3"
            ]
        ]
    },
    {
        "id": "54e0763699dab2fe",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "order": 5,
        "group": "7380eeb38be9e189",
        "width": 0,
        "height": 0,
        "label": "Part Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_Part_Del",
        "x": 1200,
        "y": 3180,
        "wires": []
    },
    {
        "id": "a5f4b0fa546cebea",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "order": 6,
        "group": "7380eeb38be9e189",
        "width": 0,
        "height": 0,
        "label": "Requested Part Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_RQ_Part_Del",
        "x": 1220,
        "y": 3220,
        "wires": []
    },
    {
        "id": "525d72b99f44227e",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "order": 7,
        "group": "7380eeb38be9e189",
        "width": 0,
        "height": 0,
        "label": "Requested Wrong Part",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_RQ_Wrong",
        "x": 1210,
        "y": 3260,
        "wires": []
    },
    {
        "id": "d1a4fa51d8b31fc3",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "item": "C_75_RQ_Delivery1",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_RQ_Delivery1",
        "x": 620,
        "y": 3400,
        "wires": [
            [
                "4afeb9e7ab17fe6f"
            ]
        ]
    },
    {
        "id": "cb1c694616c3f15a",
        "type": "ui_switch",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_RQ_Delivery1",
        "label": "Requested Delivery - Bit 1",
        "tooltip": "Bit 1",
        "group": "7380eeb38be9e189",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 220,
        "y": 3400,
        "wires": [
            [
                "d1a4fa51d8b31fc3"
            ]
        ]
    },
    {
        "id": "e0eb7ba48b562baf",
        "type": "switch",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "70 CW",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_75_RQ_Delivery1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_RQ_Delivery2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_Identified",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_Requested",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1010,
        "y": 3460,
        "wires": [
            [
                "df10742c5c181a75"
            ],
            [
                "731674ed29fb55ed"
            ],
            [
                "28dc5aba67ccd5a2"
            ],
            [
                "ca6275869f28fbb5"
            ]
        ]
    },
    {
        "id": "842e501754f5ed7a",
        "type": "inject",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_75_Identified",
        "payloadType": "str",
        "x": 190,
        "y": 3540,
        "wires": [
            [
                "9345e3e54b928c89"
            ]
        ]
    },
    {
        "id": "0a2423b36dbc0c18",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "item": "A_74_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Cart_Stat",
        "x": 480,
        "y": 3720,
        "wires": [
            [
                "b10fbab67411585e"
            ]
        ]
    },
    {
        "id": "10b624f196323b48",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "item": "A_74_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Cart_Next",
        "x": 480,
        "y": 3760,
        "wires": [
            [
                "b10fbab67411585e"
            ]
        ]
    },
    {
        "id": "c7472c652e80958b",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "item": "A_74_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Optic",
        "x": 490,
        "y": 3800,
        "wires": [
            [
                "b10fbab67411585e"
            ]
        ]
    },
    {
        "id": "83c6d6154c1bcb03",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "item": "A_74_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Count",
        "x": 490,
        "y": 3840,
        "wires": [
            [
                "b10fbab67411585e"
            ]
        ]
    },
    {
        "id": "282d0f156b3399fc",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "item": "A_74_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Pist_Bck",
        "x": 480,
        "y": 3880,
        "wires": [
            [
                "b10fbab67411585e"
            ]
        ]
    },
    {
        "id": "0eea0bf978b7f70a",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "item": "A_74_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Release_FB",
        "x": 470,
        "y": 3920,
        "wires": [
            [
                "b10fbab67411585e"
            ]
        ]
    },
    {
        "id": "bb8a13ca06fbf9bb",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "item": "A_74_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Request",
        "x": 480,
        "y": 3960,
        "wires": [
            [
                "b10fbab67411585e"
            ]
        ]
    },
    {
        "id": "b10fbab67411585e",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "70 AS-i",
        "mode": "link",
        "links": [
            "8545cdf631f5e34b"
        ],
        "x": 645,
        "y": 3880,
        "wires": []
    },
    {
        "id": "8d62576e0103392c",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3640,
        "wires": [
            [
                "962ebc8d446ff69c"
            ]
        ]
    },
    {
        "id": "962ebc8d446ff69c",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3640,
        "wires": [
            [
                "f89d954fd04b2095"
            ]
        ]
    },
    {
        "id": "f89d954fd04b2095",
        "type": "file in",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3640,
        "wires": [
            [
                "1ea96faec10a4dbb"
            ]
        ]
    },
    {
        "id": "1ea96faec10a4dbb",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3640,
        "wires": [
            [
                "08501fca62c52f18"
            ]
        ]
    },
    {
        "id": "08501fca62c52f18",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3640,
        "wires": [
            [
                "fb98fcae1d82fc3f"
            ]
        ]
    },
    {
        "id": "fb98fcae1d82fc3f",
        "type": "OpcUa-Client",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "endpoint": "b3349d57e68acd08",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3640,
        "wires": [
            [
                "3146f2e9c1a4f2c3",
                "ac5b7cb170f19d28"
            ],
            [
                "98a876d20a1ffd6a"
            ]
        ]
    },
    {
        "id": "2df02b9ece67fb4a",
        "type": "switch",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "70 AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A_74_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_No_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Cart_Full",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 3880,
        "wires": [
            [
                "6843905984a1053a"
            ],
            [
                "c31c0983a6ab54b3"
            ],
            [
                "5379a871e7e413b9"
            ],
            [
                "eaf1a247e696cb0f"
            ],
            [
                "1a55c156f70a36b5"
            ],
            [
                "70f111052985a9b8"
            ],
            [
                "02192ff4b01f81c4"
            ],
            [
                "edb6e09ac889e87f"
            ],
            [
                "954d1921433b78f2"
            ]
        ]
    },
    {
        "id": "6843905984a1053a",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "order": 0,
        "group": "53e8979d8156c485",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Cart_Stat",
        "x": 1060,
        "y": 3720,
        "wires": []
    },
    {
        "id": "c31c0983a6ab54b3",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "order": 0,
        "group": "53e8979d8156c485",
        "width": 0,
        "height": 0,
        "label": "Cart near next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Cart_Next",
        "x": 1060,
        "y": 3760,
        "wires": []
    },
    {
        "id": "5379a871e7e413b9",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "order": 0,
        "group": "53e8979d8156c485",
        "width": 0,
        "height": 0,
        "label": "Optic sensor on station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Optic",
        "x": 1050,
        "y": 3800,
        "wires": []
    },
    {
        "id": "eaf1a247e696cb0f",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "order": 0,
        "group": "53e8979d8156c485",
        "width": 0,
        "height": 0,
        "label": "Cart count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Count",
        "x": 1050,
        "y": 3840,
        "wires": []
    },
    {
        "id": "1a55c156f70a36b5",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "order": 0,
        "group": "53e8979d8156c485",
        "width": 0,
        "height": 0,
        "label": "Piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Pist_Bck",
        "x": 1060,
        "y": 3880,
        "wires": []
    },
    {
        "id": "70f111052985a9b8",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "order": 0,
        "group": "53e8979d8156c485",
        "width": 0,
        "height": 0,
        "label": "Pin release feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Release_FB",
        "x": 1070,
        "y": 3920,
        "wires": []
    },
    {
        "id": "02192ff4b01f81c4",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "order": 0,
        "group": "53e8979d8156c485",
        "width": 0,
        "height": 0,
        "label": "Request cart",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Request",
        "x": 1060,
        "y": 3960,
        "wires": []
    },
    {
        "id": "c22e9231ad4d10ed",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "item": "A_74_No_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_No_Cart",
        "x": 480,
        "y": 4000,
        "wires": [
            [
                "b10fbab67411585e"
            ]
        ]
    },
    {
        "id": "edb6e09ac889e87f",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "order": 0,
        "group": "53e8979d8156c485",
        "width": 0,
        "height": 0,
        "label": "No Cart at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_No_Cart",
        "x": 1060,
        "y": 4000,
        "wires": []
    },
    {
        "id": "954d1921433b78f2",
        "type": "ui_led",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "order": 0,
        "group": "53e8979d8156c485",
        "width": 0,
        "height": 0,
        "label": "Cart Full at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Cart_Full",
        "x": 1060,
        "y": 4040,
        "wires": []
    },
    {
        "id": "861fca710e8d5ea6",
        "type": "OpcUa-Item",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "item": "A_74_Cart_Full",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Cart_Full",
        "x": 480,
        "y": 4040,
        "wires": [
            [
                "b10fbab67411585e"
            ]
        ]
    },
    {
        "id": "f8f6193cc3e2633f",
        "type": "debug",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "70 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 580,
        "wires": []
    },
    {
        "id": "35d898e03e280248",
        "type": "debug",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "70 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1000,
        "wires": []
    },
    {
        "id": "71f9304fe8730567",
        "type": "debug",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "70 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1460,
        "wires": []
    },
    {
        "id": "d5cc70a39a5cd978",
        "type": "debug",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "70 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1760,
        "wires": []
    },
    {
        "id": "aa5a07811ac9d11f",
        "type": "debug",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "70 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2220,
        "wires": []
    },
    {
        "id": "2627cb3b08e2a54f",
        "type": "debug",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "70 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2520,
        "wires": []
    },
    {
        "id": "153c47fc01272550",
        "type": "debug",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "70 CR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2980,
        "wires": []
    },
    {
        "id": "14feb5c4e0d792e9",
        "type": "debug",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "70 CW",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3360,
        "wires": []
    },
    {
        "id": "3146f2e9c1a4f2c3",
        "type": "debug",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "70 AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 3680,
        "wires": []
    },
    {
        "id": "4551d252ff5e450e",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_70_SInductive\" : false,\n            \"O_70_SPart\" : false,\n            \"O_70_SStation\" : false,\n            \"O_70_SPart_Height\" : false,\n            \"O_70_Elev_High\" : false,\n            \"O_70_Elev_Low\" : false,\n            \"O_70_Pist_Back\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "eb93ada902648a72"
            ]
        ]
    },
    {
        "id": "eb93ada902648a72",
        "type": "trigger",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "82b924d9dbf47c78"
            ]
        ]
    },
    {
        "id": "68158e74b8cd8ee0",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_71_Start\" : false,\n            \"O_71_Stop\" : false,\n            \"O_71_Key_Pos\" : false,\n            \"O_71_Reset\" : false,\n            \"O_71_Panel_I4\" : false,\n            \"O_71_Panel_I5\" : false,\n            \"O_71_Panel_I6\" : false,\n            \"O_71_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 960,
        "wires": [
            [
                "d38576d116fc661e"
            ]
        ]
    },
    {
        "id": "d38576d116fc661e",
        "type": "trigger",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 960,
        "wires": [
            [
                "e183aa2648f0fa96"
            ]
        ]
    },
    {
        "id": "9e6594c9976bd6d9",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_70_Elev_Down\" : false,\n            \"I_70_Elev_Up\" : false,\n            \"I_70_Eject_Part\" : false,\n            \"I_70_Air_On\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1420,
        "wires": [
            [
                "4115f2070706fb0d"
            ]
        ]
    },
    {
        "id": "4115f2070706fb0d",
        "type": "trigger",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1420,
        "wires": [
            [
                "311c9ba58948ab01"
            ]
        ]
    },
    {
        "id": "1e3adbbc3d8ed089",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_71_Led_Start\": false,\n            \"I_71_Led_Reset\": false,\n            \"I_71_Led_Extra1\": false,\n            \"I_71_Led_Extra2\": false,\n            \"I_71_Panel_O4\": false,\n            \"I_71_Panel_O5\": false,\n            \"I_71_Panel_O6\": false,\n            \"I_71_Panel_O7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1720,
        "wires": [
            [
                "e1741920a2179a9e"
            ]
        ]
    },
    {
        "id": "e1741920a2179a9e",
        "type": "trigger",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1720,
        "wires": [
            [
                "08a9539e19e32a5a"
            ]
        ]
    },
    {
        "id": "69e502d17dce8315",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_72_Elev_Down\" : false,\n            \"F_72_Elev_Up\" : false,\n            \"F_72_Eject_Part\" : false,\n            \"F_72_Air_On\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2180,
        "wires": [
            [
                "9bf7cf1f8e4a3bb2"
            ]
        ]
    },
    {
        "id": "9bf7cf1f8e4a3bb2",
        "type": "trigger",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2180,
        "wires": [
            [
                "23469d566400480d"
            ]
        ]
    },
    {
        "id": "f90a05c1c52b1555",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_73_Led_Start\": false,\n            \"F_73_Led_Reset\": false,\n            \"F_73_Led_Extra1\": false,\n            \"F_73_Led_Extra2\": false,\n            \"F_73_Panel_O4\": false,\n            \"F_73_Panel_O5\": false,\n            \"F_73_Panel_O6\": false,\n            \"F_73_Panel_O7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2480,
        "wires": [
            [
                "edddcb54cd3ebfb5"
            ]
        ]
    },
    {
        "id": "edddcb54cd3ebfb5",
        "type": "trigger",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2480,
        "wires": [
            [
                "aca0083b4458e562"
            ]
        ]
    },
    {
        "id": "ed87a21cb44f4764",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_72_Profibus\" : false,\n            \"C_75_Initialization\" : false,\n            \"C_75_ID_Delivery1\" : false,\n            \"C_75_ID_Delivery2\" : false,\n            \"C_75_Part_Del\" : false,\n            \"C_75_RQ_Part_Del\" : false,\n            \"C_75_RQ_Wrong\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2940,
        "wires": [
            [
                "60dd98516b2f92b2"
            ]
        ]
    },
    {
        "id": "60dd98516b2f92b2",
        "type": "trigger",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2940,
        "wires": [
            [
                "dbaddb2323f3ef06"
            ]
        ]
    },
    {
        "id": "e91f2d808e45a654",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_75_RQ_Delivery1\" : false,\n            \"C_75_RQ_Delivery2\" : false,\n            \"C_75_Identified\" : false,\n            \"C_75_Requested\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3320,
        "wires": [
            [
                "cbacf96885ab031a"
            ]
        ]
    },
    {
        "id": "cbacf96885ab031a",
        "type": "trigger",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3320,
        "wires": [
            [
                "b503c2222ce7b832"
            ]
        ]
    },
    {
        "id": "98a876d20a1ffd6a",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n                \"A_74_Request\": false,\n                \"A_74_No_Cart\": false,\n                \"A_74_Cart_Full\": false,\n                \"A_74_Cart_Stat\": false,\n                \"A_74_Cart_Next\": false,\n                \"A_74_Optic\": false,\n                \"A_74_Count\": false,\n                \"A_74_Pist_Bck\": false,\n                \"A_74_Release_FB\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3640,
        "wires": [
            [
                "e647bac3c1c84d8f"
            ]
        ]
    },
    {
        "id": "e647bac3c1c84d8f",
        "type": "trigger",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3640,
        "wires": [
            [
                "8d62576e0103392c"
            ]
        ]
    },
    {
        "id": "4afeb9e7ab17fe6f",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "70 Control",
        "mode": "link",
        "links": [
            "8545cdf631f5e34b"
        ],
        "x": 785,
        "y": 3460,
        "wires": []
    },
    {
        "id": "abcb408ddfe6df92",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_70_SInductive\" : false,\n    \"O_70_SPart\" : false,\n    \"O_70_SStation\" : false,\n    \"O_70_SPart_Height\" : false,\n    \"O_70_Elev_High\" : false,\n    \"O_70_Elev_Low\" : false,\n    \"O_70_Pist_Back\" : false,\n    \"O_71_Start\" : false,\n    \"O_71_Stop\" : false,\n    \"O_71_Key_Pos\" : false,\n    \"O_71_Reset\" : false,\n    \"O_71_Panel_I4\" : false,\n    \"O_71_Panel_I5\" : false,\n    \"O_71_Panel_I6\" : false,\n    \"O_71_Panel_I7\" : false,\n    \"F_72_Elev_Down\" : false,\n    \"F_72_Elev_Up\" : false,\n    \"F_72_Eject_Part\" : false,\n    \"F_72_Air_On\" : false,\n    \"F_73_Led_Start\" : false,\n    \"F_73_Led_Reset\" : false,\n    \"F_73_Led_Extra1\" : false,\n    \"F_73_Led_Extra2\" : false,\n    \"F_73_Panel_O4\" : false,\n    \"F_73_Panel_O5\" : false,\n    \"F_73_Panel_O6\" : false,\n    \"F_73_Panel_O7\" : false,\n    \"A_74_Request\" : false,\n    \"A_74_No_Cart\" : false,\n    \"A_74_Cart_Full\" : false,\n    \"C_75_Initialization\" : false,\n    \"C_75_ID_Delivery1\" : false,\n    \"C_75_ID_Delivery2\" : false,\n    \"C_75_Part_Del\" : false,\n    \"C_75_RQ_Part_Del\" : false,\n    \"C_75_RQ_Wrong\" : false,\n    \"C_75_Identified80\" : false,\n    \"C_75_Requested80\" : false,\n    \"I_70_Elev_Down\" : false,\n    \"I_70_Elev_Up\" : false,\n    \"I_70_Eject_Part\" : false,\n    \"I_70_Air_On\" : false,\n    \"I_71_Led_Start\" : false,\n    \"I_71_Led_Reset\" : false,\n    \"I_71_Led_Extra1\" : false,\n    \"I_71_Led_Extra2\" : false,\n    \"I_71_Panel_O4\" : false,\n    \"I_71_Panel_O5\" : false,\n    \"I_71_Panel_O6\" : false,\n    \"I_71_Panel_O7\" : false,\n    \"C_72_Profibus\" : false,\n    \"A_74_Cart_Stat\" : false,\n    \"A_74_Cart_Next\" : false,\n    \"A_74_Optic\" : false,\n    \"A_74_Count\" : false,\n    \"A_74_Pist_Bck\" : false,\n    \"A_74_Release_FB\" : false,\n    \"C_75_RQ_Delivery1\" : false,\n    \"C_75_RQ_Delivery2\" : false,\n    \"C_75_Identified\" : false,\n    \"C_75_Requested\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "22aed47214fe5351"
            ]
        ]
    },
    {
        "id": "22aed47214fe5351",
        "type": "trigger",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "a4da03c9a41a8c2f"
            ]
        ]
    },
    {
        "id": "c57cc4bf5e103c22",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "60d965f6b6e06d24"
            ]
        ]
    },
    {
        "id": "60d965f6b6e06d24",
        "type": "trigger",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "f7656cc54541b65e"
            ]
        ]
    },
    {
        "id": "1b8529e9114e7ef1",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "bb8cf266fe7a92fd",
            "1809231eb22c4475"
        ],
        "x": 975,
        "y": 360,
        "wires": []
    },
    {
        "id": "bb8cf266fe7a92fd",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "CSV Link",
        "links": [
            "1b8529e9114e7ef1"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "c57cc4bf5e103c22"
            ]
        ]
    },
    {
        "id": "1809231eb22c4475",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "CSV Link",
        "links": [
            "1b8529e9114e7ef1"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "abcb408ddfe6df92"
            ]
        ]
    },
    {
        "id": "e93011a9edefdcc2",
        "type": "debug",
        "z": "d736c5b40e5a53e8",
        "g": "a0169409f4bfd0f5",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "0aa25b08fe9a25cf",
        "type": "OpcUa-Server",
        "z": "d736c5b40e5a53e8",
        "g": "a0169409f4bfd0f5",
        "port": "53887",
        "name": "Server: Testing",
        "endpoint": "",
        "users": "",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Testing",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "e93011a9edefdcc2"
            ]
        ]
    },
    {
        "id": "31cfe46771b5e6db",
        "type": "debug",
        "z": "d736c5b40e5a53e8",
        "g": "58f8ff4ad6409111",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "a76a9b8889d984f7",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "58f8ff4ad6409111",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "90f435d37ac6eea5",
            "ba72c16b24ead3f4",
            "02acdea0cfa2d0ab",
            "fc14d2529698dd21",
            "cfda2d14899f1de8",
            "aed4077cd6befa5b"
        ],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "07f81fb6902d44fb",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "O_70_SInductive",
        "func": "if (msg.topic === \"O_70_SInductive\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_SInductive\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 620,
        "wires": [
            [
                "1a934c357c47c592"
            ]
        ]
    },
    {
        "id": "ba72c16b24ead3f4",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "S7 PS",
        "links": [
            "a76a9b8889d984f7"
        ],
        "x": 55,
        "y": 740,
        "wires": [
            [
                "07f81fb6902d44fb",
                "ced6d83f0308e3d6",
                "325381b53a8a05c0",
                "2ec6cae65b702213",
                "102976ef76872d8a",
                "f36c2c1d369f8f20",
                "8b11b730917f0445"
            ]
        ]
    },
    {
        "id": "102976ef76872d8a",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "O_70_Elev_High",
        "func": "if (msg.topic === \"O_70_Elev_High\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_Elev_High\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 780,
        "wires": [
            [
                "02c0c82e58905e45"
            ]
        ]
    },
    {
        "id": "ced6d83f0308e3d6",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "O_70_SPart",
        "func": "if (msg.topic === \"O_70_SPart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_SPart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 660,
        "wires": [
            [
                "134cc8956fd24315"
            ]
        ]
    },
    {
        "id": "325381b53a8a05c0",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "O_70_SStation",
        "func": "if (msg.topic === \"O_70_SStation\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_SStation\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 700,
        "wires": [
            [
                "682f2e6f12dfca94"
            ]
        ]
    },
    {
        "id": "2ec6cae65b702213",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "O_70_SPart_Height",
        "func": "if (msg.topic === \"O_70_SPart_Height\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_SPart_Height\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 740,
        "wires": [
            [
                "63d13efc56c68903"
            ]
        ]
    },
    {
        "id": "f36c2c1d369f8f20",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "O_70_Elev_Low",
        "func": "if (msg.topic === \"O_70_Elev_Low\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_Elev_Low\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 820,
        "wires": [
            [
                "1a9da7542aa4e404"
            ]
        ]
    },
    {
        "id": "8b11b730917f0445",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "O_70_Pist_Back",
        "func": "if (msg.topic === \"O_70_Pist_Back\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_Pist_Back\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 860,
        "wires": [
            [
                "9ae278fe0606c31f"
            ]
        ]
    },
    {
        "id": "47781e06a8adf13c",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "Sub In 70 PS",
        "links": [
            "b0e2091161213a26"
        ],
        "x": 775,
        "y": 740,
        "wires": [
            [
                "0467eebee1d78fe9"
            ]
        ]
    },
    {
        "id": "b0e2091161213a26",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "Sub Out 70 PS",
        "mode": "link",
        "links": [
            "47781e06a8adf13c"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "a6c62b2668ceaf6e",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "Sub In 70 AS",
        "links": [
            "2ccdf06143f3ebc4"
        ],
        "x": 775,
        "y": 1180,
        "wires": [
            [
                "3b251a38c024aca4"
            ]
        ]
    },
    {
        "id": "2ccdf06143f3ebc4",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "Sub Out 70 AS",
        "mode": "link",
        "links": [
            "a6c62b2668ceaf6e"
        ],
        "x": 1295,
        "y": 960,
        "wires": []
    },
    {
        "id": "cf940e0e1a7fd037",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "O_71_Start",
        "func": "if (msg.topic === \"O_71_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "f48283f93e83ba1e"
            ]
        ]
    },
    {
        "id": "90f435d37ac6eea5",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "S7 AS",
        "links": [
            "a76a9b8889d984f7"
        ],
        "x": 55,
        "y": 1180,
        "wires": [
            [
                "cf940e0e1a7fd037",
                "1aae62f3da3c1975",
                "7f2977c3b354a831",
                "72f48713bc40d838",
                "3a0de745ed11fca1",
                "31c9dfe8e0d91523",
                "2b6cba7d785c306e",
                "ddc735e4e81c7b15"
            ]
        ]
    },
    {
        "id": "3a0de745ed11fca1",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "O_71_Panel_I4",
        "func": "if (msg.topic === \"O_71_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "944dda2fe3e63801"
            ]
        ]
    },
    {
        "id": "1aae62f3da3c1975",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "O_71_Stop",
        "func": "if (msg.topic === \"O_71_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "9129327b309f8471"
            ]
        ]
    },
    {
        "id": "7f2977c3b354a831",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "O_71_Key_Pos",
        "func": "if (msg.topic === \"O_71_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "16886e335e769327"
            ]
        ]
    },
    {
        "id": "72f48713bc40d838",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "O_71_Reset",
        "func": "if (msg.topic === \"O_71_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "db6f7f2ebe51462c"
            ]
        ]
    },
    {
        "id": "31c9dfe8e0d91523",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "O_71_Panel_I5",
        "func": "if (msg.topic === \"O_71_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1240,
        "wires": [
            [
                "ffa1e32c0977a4ec"
            ]
        ]
    },
    {
        "id": "2b6cba7d785c306e",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "O_71_Panel_I6",
        "func": "if (msg.topic === \"O_71_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "d183585ee8191e5d"
            ]
        ]
    },
    {
        "id": "ddc735e4e81c7b15",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "O_71_Panel_I7",
        "func": "if (msg.topic === \"O_71_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "b77dfd68cf750ad2"
            ]
        ]
    },
    {
        "id": "de03200721032c2d",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "Sub Out 70 PA",
        "mode": "link",
        "links": [
            "a4950af8253d37c7"
        ],
        "x": 1295,
        "y": 1420,
        "wires": []
    },
    {
        "id": "a4950af8253d37c7",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "Sub In 70 PA",
        "links": [
            "de03200721032c2d"
        ],
        "x": 775,
        "y": 1560,
        "wires": [
            [
                "8bf753561d860210"
            ]
        ]
    },
    {
        "id": "08508f792cd589b6",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "Sub Out 70 AA",
        "mode": "link",
        "links": [
            "af0938b40a7a3892"
        ],
        "x": 1295,
        "y": 1720,
        "wires": []
    },
    {
        "id": "af0938b40a7a3892",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "Sub In 70 AA",
        "links": [
            "08508f792cd589b6"
        ],
        "x": 775,
        "y": 1940,
        "wires": [
            [
                "b4f27a7452467149"
            ]
        ]
    },
    {
        "id": "33569a7216914e6f",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "Sub Out 70 PF",
        "mode": "link",
        "links": [
            "92e927e36172476b"
        ],
        "x": 1295,
        "y": 2180,
        "wires": []
    },
    {
        "id": "92e927e36172476b",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "Sub In 70 PF",
        "links": [
            "33569a7216914e6f"
        ],
        "x": 775,
        "y": 2320,
        "wires": [
            [
                "955dafaad7f0cda8"
            ]
        ]
    },
    {
        "id": "3a2de58d26ca1618",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "F_72_Elev_Down",
        "func": "if (msg.topic === \"F_72_Elev_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_72_Elev_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2260,
        "wires": [
            [
                "e58841e0a19df282"
            ]
        ]
    },
    {
        "id": "02acdea0cfa2d0ab",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "S7 PF",
        "links": [
            "a76a9b8889d984f7"
        ],
        "x": 55,
        "y": 2320,
        "wires": [
            [
                "3a2de58d26ca1618",
                "e96b6f1e8c30e493",
                "5e2ca06781c54fa7",
                "dc8d7277b0a6badf"
            ]
        ]
    },
    {
        "id": "e96b6f1e8c30e493",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "F_72_Elev_Up",
        "func": "if (msg.topic === \"F_72_Elev_Up\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_72_Elev_Up\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2300,
        "wires": [
            [
                "52d68857438e5489"
            ]
        ]
    },
    {
        "id": "5e2ca06781c54fa7",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "F_72_Eject_Part",
        "func": "if (msg.topic === \"F_72_Eject_Part\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_72_Eject_Part\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2340,
        "wires": [
            [
                "473b4009f45fddb0"
            ]
        ]
    },
    {
        "id": "dc8d7277b0a6badf",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "F_72_Air_On",
        "func": "if (msg.topic === \"F_72_Air_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_72_Air_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2380,
        "wires": [
            [
                "294dfbaa4feec667"
            ]
        ]
    },
    {
        "id": "39739032c66a82a2",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "Sub Out 70 AF",
        "mode": "link",
        "links": [
            "7b5709f257e1daa1"
        ],
        "x": 1295,
        "y": 2480,
        "wires": []
    },
    {
        "id": "7b5709f257e1daa1",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "Sub In 70 AF",
        "links": [
            "39739032c66a82a2"
        ],
        "x": 775,
        "y": 2700,
        "wires": [
            [
                "2b75e0852c81d54c"
            ]
        ]
    },
    {
        "id": "3c195eb784a81ff0",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "F_73_Led_Start",
        "func": "if (msg.topic === \"F_73_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2560,
        "wires": [
            [
                "573b68d52f8f124e"
            ]
        ]
    },
    {
        "id": "fc14d2529698dd21",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "S7 AF",
        "links": [
            "a76a9b8889d984f7"
        ],
        "x": 55,
        "y": 2700,
        "wires": [
            [
                "3c195eb784a81ff0",
                "135d5ca5a025d98e",
                "29234ee7363455f7",
                "36a7080411c1bdc8",
                "88297d0a09109481",
                "86db26fa7b6e245c",
                "55be937779e0b7d3",
                "121c164cdad94ffa"
            ]
        ]
    },
    {
        "id": "88297d0a09109481",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "F_73_Panel_O4",
        "func": "if (msg.topic === \"F_73_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2720,
        "wires": [
            [
                "21de10db7fb13f67"
            ]
        ]
    },
    {
        "id": "135d5ca5a025d98e",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "F_73_Led_Reset",
        "func": "if (msg.topic === \"F_73_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2600,
        "wires": [
            [
                "81167585f04b9d15"
            ]
        ]
    },
    {
        "id": "29234ee7363455f7",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "F_73_Led_Extra1",
        "func": "if (msg.topic === \"F_73_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2640,
        "wires": [
            [
                "c53cf67e021e4e7a"
            ]
        ]
    },
    {
        "id": "36a7080411c1bdc8",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "F_73_Led_Extra2",
        "func": "if (msg.topic === \"F_73_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2680,
        "wires": [
            [
                "28a3d879ea3f50a4"
            ]
        ]
    },
    {
        "id": "86db26fa7b6e245c",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "F_73_Panel_O5",
        "func": "if (msg.topic === \"F_73_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2760,
        "wires": [
            [
                "0533e084719ead6a"
            ]
        ]
    },
    {
        "id": "55be937779e0b7d3",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "F_73_Panel_O6",
        "func": "if (msg.topic === \"F_73_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2800,
        "wires": [
            [
                "31dd1bd926e2298b"
            ]
        ]
    },
    {
        "id": "121c164cdad94ffa",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "F_73_Panel_O7",
        "func": "if (msg.topic === \"F_73_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2840,
        "wires": [
            [
                "7d7ade743b90f599"
            ]
        ]
    },
    {
        "id": "9a83dcda09285bf6",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_72_Profibus",
        "func": "if (msg.topic === \"C_72_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_72_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3020,
        "wires": [
            [
                "4c9a81e29581359b"
            ]
        ]
    },
    {
        "id": "cfda2d14899f1de8",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "S7 CR",
        "links": [
            "a76a9b8889d984f7"
        ],
        "x": 55,
        "y": 3140,
        "wires": [
            [
                "9a83dcda09285bf6",
                "c449de966ca2875e",
                "a40ed82853ae12c3",
                "7333d3f7bfda613f",
                "db043814c8a61165",
                "035d536689538fc9",
                "698224aa46da1cae"
            ]
        ]
    },
    {
        "id": "db043814c8a61165",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_Part_Del",
        "func": "if (msg.topic === \"C_75_Part_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_Part_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3180,
        "wires": [
            [
                "945214d983d415cb"
            ]
        ]
    },
    {
        "id": "c449de966ca2875e",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_Initialization",
        "func": "if (msg.topic === \"C_75_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3060,
        "wires": [
            [
                "48bcf271f699c115"
            ]
        ]
    },
    {
        "id": "a40ed82853ae12c3",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_ID_Delivery1",
        "func": "if (msg.topic === \"C_75_ID_Delivery1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_ID_Delivery1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3100,
        "wires": [
            [
                "f3547b1d1d88b742"
            ]
        ]
    },
    {
        "id": "7333d3f7bfda613f",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_ID_Delivery2",
        "func": "if (msg.topic === \"C_75_ID_Delivery2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_ID_Delivery2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3140,
        "wires": [
            [
                "b05a556efde449c8"
            ]
        ]
    },
    {
        "id": "035d536689538fc9",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_RQ_Part_Del",
        "func": "if (msg.topic === \"C_75_RQ_Part_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_RQ_Part_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 3220,
        "wires": [
            [
                "ddc77df6659206ab"
            ]
        ]
    },
    {
        "id": "698224aa46da1cae",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_RQ_Wrong",
        "func": "if (msg.topic === \"C_75_RQ_Wrong\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_RQ_Wrong\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3260,
        "wires": [
            [
                "b05bbbe6bdba5a84"
            ]
        ]
    },
    {
        "id": "6a70880d702aa9cf",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Sub Out 70 CR",
        "mode": "link",
        "links": [
            "b36fb1c4a62b447d"
        ],
        "x": 1295,
        "y": 2940,
        "wires": []
    },
    {
        "id": "b36fb1c4a62b447d",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Sub In 70 CR",
        "links": [
            "6a70880d702aa9cf"
        ],
        "x": 915,
        "y": 3140,
        "wires": [
            [
                "672ba5dfa0d71bea"
            ]
        ]
    },
    {
        "id": "e499e56b3df61fab",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Sub Out 70 CW",
        "mode": "link",
        "links": [
            "c97b40b8888cf499"
        ],
        "x": 1295,
        "y": 3320,
        "wires": []
    },
    {
        "id": "c97b40b8888cf499",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Sub In 70 CW",
        "links": [
            "e499e56b3df61fab"
        ],
        "x": 915,
        "y": 3460,
        "wires": [
            [
                "e0eb7ba48b562baf"
            ]
        ]
    },
    {
        "id": "035a9b2399adc5ad",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "A_74_Cart_Stat",
        "func": "if (msg.topic === \"A_74_Cart_Stat\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Cart_Stat\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3720,
        "wires": [
            [
                "0a2423b36dbc0c18"
            ]
        ]
    },
    {
        "id": "aed4077cd6befa5b",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "S7 AS-i",
        "links": [
            "a76a9b8889d984f7"
        ],
        "x": 55,
        "y": 3880,
        "wires": [
            [
                "035a9b2399adc5ad",
                "62995b38997ba973",
                "6d90e078f6734926",
                "e96246275ffafd2b",
                "e85e27681f96132e",
                "4e157ab0bf3592d4",
                "c67942432868beaa",
                "7197cac2714387c6",
                "f6e90cd349659ac5"
            ]
        ]
    },
    {
        "id": "e85e27681f96132e",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "A_74_Pist_Bck",
        "func": "if (msg.topic === \"A_74_Pist_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Pist_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3880,
        "wires": [
            [
                "282d0f156b3399fc"
            ]
        ]
    },
    {
        "id": "62995b38997ba973",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "A_74_Cart_Next",
        "func": "if (msg.topic === \"A_74_Cart_Next\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Cart_Next\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3760,
        "wires": [
            [
                "10b624f196323b48"
            ]
        ]
    },
    {
        "id": "6d90e078f6734926",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "A_74_Optic",
        "func": "if (msg.topic === \"A_74_Optic\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Optic\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3800,
        "wires": [
            [
                "c7472c652e80958b"
            ]
        ]
    },
    {
        "id": "e96246275ffafd2b",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "A_74_Count",
        "func": "if (msg.topic === \"A_74_Count\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Count\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3840,
        "wires": [
            [
                "83c6d6154c1bcb03"
            ]
        ]
    },
    {
        "id": "4e157ab0bf3592d4",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "A_74_Release_FB",
        "func": "if (msg.topic === \"A_74_Release_FB\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Release_FB\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3920,
        "wires": [
            [
                "0eea0bf978b7f70a"
            ]
        ]
    },
    {
        "id": "c67942432868beaa",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "A_74_Request",
        "func": "if (msg.topic === \"A_74_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3960,
        "wires": [
            [
                "bb8a13ca06fbf9bb"
            ]
        ]
    },
    {
        "id": "7197cac2714387c6",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "A_74_No_Cart",
        "func": "if (msg.topic === \"A_74_No_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_No_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4000,
        "wires": [
            [
                "c22e9231ad4d10ed"
            ]
        ]
    },
    {
        "id": "f6e90cd349659ac5",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "A_74_Cart_Full",
        "func": "if (msg.topic === \"A_74_Cart_Full\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Cart_Full\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4040,
        "wires": [
            [
                "861fca710e8d5ea6"
            ]
        ]
    },
    {
        "id": "ac5b7cb170f19d28",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "Sub Out 70 AS-i",
        "mode": "link",
        "links": [
            "d6a9642c81222ac6"
        ],
        "x": 1295,
        "y": 3640,
        "wires": []
    },
    {
        "id": "d6a9642c81222ac6",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "Sub In 70 AS-i",
        "links": [
            "ac5b7cb170f19d28"
        ],
        "x": 755,
        "y": 3880,
        "wires": [
            [
                "2df02b9ece67fb4a"
            ]
        ]
    },
    {
        "id": "360ecc922f83ecbb",
        "type": "mqtt in",
        "z": "d736c5b40e5a53e8",
        "g": "58f8ff4ad6409111",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d99579db50330f02",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "9f046c6deac2faec"
            ]
        ]
    },
    {
        "id": "9f046c6deac2faec",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "58f8ff4ad6409111",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "a76a9b8889d984f7",
                "31cfe46771b5e6db"
            ]
        ]
    },
    {
        "id": "c84aed3bd74c6cd6",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 400,
        "wires": [
            [
                "a58be6006de92bd3"
            ]
        ]
    },
    {
        "id": "a58be6006de92bd3",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "ef7f048981fa37e2",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "d8973a318cadfdbb",
            "78bb567ce5bdc4ac",
            "cd620bdf698f6f3c",
            "462fbbb627bd3dcd",
            "9e931db331cfe5e8",
            "ec436045c0aab340",
            "6445a723757ba9f6",
            "510784691a13bbee",
            "30be98f6ee25a9b3"
        ],
        "x": 1165,
        "y": 400,
        "wires": []
    },
    {
        "id": "d8973a318cadfdbb",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "20b5784759191df3",
        "name": "Read S",
        "links": [
            "a58be6006de92bd3"
        ],
        "x": 55,
        "y": 3640,
        "wires": [
            [
                "98a876d20a1ffd6a"
            ]
        ]
    },
    {
        "id": "78bb567ce5bdc4ac",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Read CR",
        "links": [
            "a58be6006de92bd3"
        ],
        "x": 55,
        "y": 2940,
        "wires": [
            [
                "ed87a21cb44f4764"
            ]
        ]
    },
    {
        "id": "cd620bdf698f6f3c",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "Read CW",
        "links": [
            "a58be6006de92bd3"
        ],
        "x": 55,
        "y": 3320,
        "wires": [
            [
                "e91f2d808e45a654"
            ]
        ]
    },
    {
        "id": "462fbbb627bd3dcd",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "183a3f3aa4586ad6",
        "name": "Read AF",
        "links": [
            "a58be6006de92bd3"
        ],
        "x": 55,
        "y": 2480,
        "wires": [
            [
                "f90a05c1c52b1555"
            ]
        ]
    },
    {
        "id": "9e931db331cfe5e8",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "7f7f1711f04c5640",
        "name": "Read PF",
        "links": [
            "a58be6006de92bd3"
        ],
        "x": 55,
        "y": 2180,
        "wires": [
            [
                "69e502d17dce8315"
            ]
        ]
    },
    {
        "id": "ec436045c0aab340",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "Read AA",
        "links": [
            "a58be6006de92bd3"
        ],
        "x": 55,
        "y": 1720,
        "wires": [
            [
                "1e3adbbc3d8ed089"
            ]
        ]
    },
    {
        "id": "6445a723757ba9f6",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "Read PA",
        "links": [
            "a58be6006de92bd3"
        ],
        "x": 55,
        "y": 1420,
        "wires": [
            [
                "9e6594c9976bd6d9"
            ]
        ]
    },
    {
        "id": "510784691a13bbee",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "daad07678c13c9b2",
        "name": "Read AS",
        "links": [
            "a58be6006de92bd3"
        ],
        "x": 55,
        "y": 960,
        "wires": [
            [
                "68158e74b8cd8ee0"
            ]
        ]
    },
    {
        "id": "30be98f6ee25a9b3",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "1f7604e1c2d09465",
        "name": "Read PS",
        "links": [
            "a58be6006de92bd3"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "4551d252ff5e450e"
            ]
        ]
    },
    {
        "id": "f9bd61ee87bb1a91",
        "type": "mqtt out",
        "z": "d736c5b40e5a53e8",
        "g": "58f8ff4ad6409111",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d99579db50330f02",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "e0394dcf6286012b",
        "type": "link in",
        "z": "d736c5b40e5a53e8",
        "g": "58f8ff4ad6409111",
        "name": "S7 Actuators",
        "links": [
            "47b8f7ab4c200f47",
            "4b2405a2a4c273c4",
            "a6f8de551f7abfe8"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "f9bd61ee87bb1a91"
            ]
        ]
    },
    {
        "id": "fc36cd05a735e69f",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "I_70_Elev_Down",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1500,
        "wires": [
            [
                "47b8f7ab4c200f47"
            ]
        ]
    },
    {
        "id": "ca93cf3933a92a47",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "I_70_Elev_Up",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1540,
        "wires": [
            [
                "47b8f7ab4c200f47"
            ]
        ]
    },
    {
        "id": "fcb716072ba50528",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "I_70_Eject_Part",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1580,
        "wires": [
            [
                "47b8f7ab4c200f47"
            ]
        ]
    },
    {
        "id": "a51382bd19569034",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "I_70_Air_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1620,
        "wires": [
            [
                "47b8f7ab4c200f47"
            ]
        ]
    },
    {
        "id": "47b8f7ab4c200f47",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "751c14d094020eb3",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "e0394dcf6286012b"
        ],
        "x": 1235,
        "y": 1560,
        "wires": []
    },
    {
        "id": "c8602c8f47be0c9b",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1800,
        "wires": [
            [
                "4b2405a2a4c273c4"
            ]
        ]
    },
    {
        "id": "85b6133a70c87e7c",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1840,
        "wires": [
            [
                "4b2405a2a4c273c4"
            ]
        ]
    },
    {
        "id": "b7969ee6c541b320",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1880,
        "wires": [
            [
                "4b2405a2a4c273c4"
            ]
        ]
    },
    {
        "id": "e89c5299e6e7c799",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1920,
        "wires": [
            [
                "4b2405a2a4c273c4"
            ]
        ]
    },
    {
        "id": "006a6429d49a6023",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1960,
        "wires": [
            [
                "4b2405a2a4c273c4"
            ]
        ]
    },
    {
        "id": "275175d61beecdcb",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2000,
        "wires": [
            [
                "4b2405a2a4c273c4"
            ]
        ]
    },
    {
        "id": "b80ffd10e681f954",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2040,
        "wires": [
            [
                "4b2405a2a4c273c4"
            ]
        ]
    },
    {
        "id": "e116dd647b5298f5",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "I_71_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2080,
        "wires": [
            [
                "4b2405a2a4c273c4"
            ]
        ]
    },
    {
        "id": "4b2405a2a4c273c4",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "3ec42e8b89cc090a",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "e0394dcf6286012b"
        ],
        "x": 1225,
        "y": 1940,
        "wires": []
    },
    {
        "id": "df10742c5c181a75",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_RQ_Delivery1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 3400,
        "wires": [
            [
                "a6f8de551f7abfe8"
            ]
        ]
    },
    {
        "id": "731674ed29fb55ed",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_RQ_Delivery2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 3440,
        "wires": [
            [
                "a6f8de551f7abfe8"
            ]
        ]
    },
    {
        "id": "28dc5aba67ccd5a2",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_Identified",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3480,
        "wires": [
            [
                "a6f8de551f7abfe8"
            ]
        ]
    },
    {
        "id": "ca6275869f28fbb5",
        "type": "function",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "C_75_Requested",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3520,
        "wires": [
            [
                "a6f8de551f7abfe8"
            ]
        ]
    },
    {
        "id": "a6f8de551f7abfe8",
        "type": "link out",
        "z": "d736c5b40e5a53e8",
        "g": "b52de45c7c76cf48",
        "name": "S7 CW",
        "mode": "link",
        "links": [
            "e0394dcf6286012b"
        ],
        "x": 1375,
        "y": 3460,
        "wires": []
    },
    {
        "id": "654915f5261f16d1",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "item": "O_80_Mag_Full",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Mag_Full",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "65ea9947719865a2"
            ]
        ]
    },
    {
        "id": "2c57310f17d38cf0",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "item": "O_80_Pist_Back",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Pist_Back",
        "x": 470,
        "y": 660,
        "wires": [
            [
                "65ea9947719865a2"
            ]
        ]
    },
    {
        "id": "e98e797f346c3cf3",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "item": "O_80_Pist_Fwd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Pist_Fwd",
        "x": 480,
        "y": 700,
        "wires": [
            [
                "65ea9947719865a2"
            ]
        ]
    },
    {
        "id": "11e34ab919958cdb",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "item": "O_80_Part_Stuck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Part_Stuck",
        "x": 470,
        "y": 740,
        "wires": [
            [
                "65ea9947719865a2"
            ]
        ]
    },
    {
        "id": "3f0398b2aa597698",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "item": "O_80_Arm_Mag",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Arm_Mag",
        "x": 480,
        "y": 780,
        "wires": [
            [
                "65ea9947719865a2"
            ]
        ]
    },
    {
        "id": "00f6bead6d6c8be7",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "item": "O_80_Arm_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Arm_Del",
        "x": 480,
        "y": 820,
        "wires": [
            [
                "65ea9947719865a2"
            ]
        ]
    },
    {
        "id": "3a4775e05ecdf3a7",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "item": "O_80_Mag_Empty",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Mag_Empty",
        "x": 470,
        "y": 860,
        "wires": [
            [
                "65ea9947719865a2"
            ]
        ]
    },
    {
        "id": "65ea9947719865a2",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "80 Physical Sensor",
        "mode": "link",
        "links": [
            "c5520d31cee473ba"
        ],
        "x": 645,
        "y": 740,
        "wires": []
    },
    {
        "id": "4cfecc15d21fbcb5",
        "type": "switch",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "80 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_80_Mag_Full",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Pist_Back",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Pist_Fwd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Part_Stuck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Arm_Mag",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Arm_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Mag_Empty",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 740,
        "wires": [
            [
                "14f17619dd2e5c2a"
            ],
            [
                "46c1f0bd0c786934"
            ],
            [
                "0c35799fd3b6f1c9"
            ],
            [
                "782c7574d3b8ba19"
            ],
            [
                "62223e9339a1fecf"
            ],
            [
                "64b9ae8126451c40"
            ],
            [
                "5d206e47c2b9a1fe"
            ]
        ]
    },
    {
        "id": "14f17619dd2e5c2a",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "order": 0,
        "group": "16e0c95c272a8083",
        "width": 0,
        "height": 0,
        "label": "Magazine full",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Mag_Full",
        "x": 1060,
        "y": 620,
        "wires": []
    },
    {
        "id": "46c1f0bd0c786934",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "order": 0,
        "group": "16e0c95c272a8083",
        "width": 0,
        "height": 0,
        "label": "Piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Pist_Back",
        "x": 1070,
        "y": 660,
        "wires": []
    },
    {
        "id": "0c35799fd3b6f1c9",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "order": 0,
        "group": "16e0c95c272a8083",
        "width": 0,
        "height": 0,
        "label": "Piston in forward position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Pist_Fwd",
        "x": 1060,
        "y": 700,
        "wires": []
    },
    {
        "id": "782c7574d3b8ba19",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "order": 0,
        "group": "16e0c95c272a8083",
        "width": 0,
        "height": 0,
        "label": "Part stuck in arm",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Part_Stuck",
        "x": 1070,
        "y": 740,
        "wires": []
    },
    {
        "id": "62223e9339a1fecf",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "order": 0,
        "group": "16e0c95c272a8083",
        "width": 0,
        "height": 0,
        "label": "Arm in magazine position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Arm_Mag",
        "x": 1060,
        "y": 780,
        "wires": []
    },
    {
        "id": "64b9ae8126451c40",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "order": 0,
        "group": "16e0c95c272a8083",
        "width": 0,
        "height": 0,
        "label": "Arm in delivery (elevator) position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Arm_Del",
        "x": 1060,
        "y": 820,
        "wires": []
    },
    {
        "id": "5d206e47c2b9a1fe",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "order": 0,
        "group": "16e0c95c272a8083",
        "width": 0,
        "height": 0,
        "label": "Magazine Empty",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Mag_Empty",
        "x": 1070,
        "y": 860,
        "wires": []
    },
    {
        "id": "0964351b143a8fd2",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "item": "O_81_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Start",
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "28cbac54f03f10ab"
            ]
        ]
    },
    {
        "id": "75a987a12f0f489e",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "item": "O_81_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Stop",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "28cbac54f03f10ab"
            ]
        ]
    },
    {
        "id": "f1d5141bb4356537",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "item": "O_81_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Key_Pos",
        "x": 480,
        "y": 1120,
        "wires": [
            [
                "28cbac54f03f10ab"
            ]
        ]
    },
    {
        "id": "012f6173d53ec15d",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "item": "O_81_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Reset",
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "28cbac54f03f10ab"
            ]
        ]
    },
    {
        "id": "93de3edebef4473e",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "item": "O_81_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Panel_I4",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "28cbac54f03f10ab"
            ]
        ]
    },
    {
        "id": "566a7687c9c0ed01",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "item": "O_81_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Panel_I5",
        "x": 480,
        "y": 1240,
        "wires": [
            [
                "28cbac54f03f10ab"
            ]
        ]
    },
    {
        "id": "55d06fd63486816b",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "item": "O_81_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Panel_I6",
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "28cbac54f03f10ab"
            ]
        ]
    },
    {
        "id": "28cbac54f03f10ab",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "80 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "c5520d31cee473ba"
        ],
        "x": 645,
        "y": 1180,
        "wires": []
    },
    {
        "id": "b9e93f7868ef6637",
        "type": "switch",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "80 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_81_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1180,
        "wires": [
            [
                "6d350646e43c21be"
            ],
            [
                "6f7f647b87141e5f"
            ],
            [
                "10e85009e66ce7cc"
            ],
            [
                "0f6b9cae0ec60e1e"
            ],
            [
                "d1be9d0726c84e73"
            ],
            [
                "8ff699ef47b8b7c7"
            ],
            [
                "9d030583d5a94a71"
            ],
            [
                "e71bbc31008a539b"
            ]
        ]
    },
    {
        "id": "6d350646e43c21be",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "order": 0,
        "group": "562da63f2b193a08",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Start",
        "x": 1050,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6f7f647b87141e5f",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "order": 0,
        "group": "562da63f2b193a08",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Stop",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "10e85009e66ce7cc",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "order": 0,
        "group": "562da63f2b193a08",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Key_Pos",
        "x": 1060,
        "y": 1120,
        "wires": []
    },
    {
        "id": "0f6b9cae0ec60e1e",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "order": 0,
        "group": "562da63f2b193a08",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Reset",
        "x": 1050,
        "y": 1160,
        "wires": []
    },
    {
        "id": "d1be9d0726c84e73",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "order": 0,
        "group": "562da63f2b193a08",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Panel_I4",
        "x": 1060,
        "y": 1200,
        "wires": []
    },
    {
        "id": "8ff699ef47b8b7c7",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "order": 0,
        "group": "562da63f2b193a08",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Panel_I5",
        "x": 1060,
        "y": 1240,
        "wires": []
    },
    {
        "id": "9d030583d5a94a71",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "order": 0,
        "group": "562da63f2b193a08",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Panel_I6",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "00446b64a4bc5a77",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "item": "O_81_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Panel_I7",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "28cbac54f03f10ab"
            ]
        ]
    },
    {
        "id": "e71bbc31008a539b",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "order": 0,
        "group": "562da63f2b193a08",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Panel_I7",
        "x": 1060,
        "y": 1320,
        "wires": []
    },
    {
        "id": "4a5eaf0d92df3638",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "item": "I_80_Pist_Adv",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Pist_Adv",
        "x": 480,
        "y": 1500,
        "wires": [
            [
                "769d1ff2538b1339"
            ]
        ]
    },
    {
        "id": "1bc64aeba16d8ea4",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "item": "I_80_Suction_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Suction_On",
        "x": 470,
        "y": 1540,
        "wires": [
            [
                "769d1ff2538b1339"
            ]
        ]
    },
    {
        "id": "83f8a7e5b5602ae9",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "item": "I_80_Suction_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Suction_Off",
        "x": 470,
        "y": 1580,
        "wires": [
            [
                "769d1ff2538b1339"
            ]
        ]
    },
    {
        "id": "55829d2e8012b059",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "item": "I_80_Arm_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Arm_2_Del",
        "x": 470,
        "y": 1620,
        "wires": [
            [
                "769d1ff2538b1339"
            ]
        ]
    },
    {
        "id": "6a08fb03bbacc1f4",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "item": "I_80_Arm_2_Mag",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Arm_2_Mag",
        "x": 470,
        "y": 1660,
        "wires": [
            [
                "769d1ff2538b1339"
            ]
        ]
    },
    {
        "id": "769d1ff2538b1339",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "80 Physical Actuators",
        "mode": "link",
        "links": [
            "c5520d31cee473ba"
        ],
        "x": 645,
        "y": 1580,
        "wires": []
    },
    {
        "id": "8d0ee572b1cfe17d",
        "type": "switch",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "80 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_80_Pist_Adv",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_80_Suction_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_80_Suction_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_80_Arm_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_80_Arm_2_Mag",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 870,
        "y": 1580,
        "wires": [
            [
                "942d2fb87a27e51c"
            ],
            [
                "c139df01be38efac"
            ],
            [
                "e85ff4e06dfc7be2"
            ],
            [
                "2430892405142d02"
            ],
            [
                "5c5c45ac8082f33d"
            ]
        ]
    },
    {
        "id": "a1af19bba66c756a",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "I_80_Pist_Adv",
        "label": "Pushes part out of the magazine",
        "tooltip": "",
        "group": "33943232d13182a3",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1500,
        "wires": [
            [
                "4a5eaf0d92df3638"
            ]
        ]
    },
    {
        "id": "45b6383cbc4e7cd8",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "I_80_Suction_On",
        "label": "Suction On",
        "tooltip": "",
        "group": "33943232d13182a3",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1540,
        "wires": [
            [
                "1bc64aeba16d8ea4"
            ]
        ]
    },
    {
        "id": "991ca245fafd859a",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "I_80_Suction_Off",
        "label": "Suction Off",
        "tooltip": "",
        "group": "33943232d13182a3",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1580,
        "wires": [
            [
                "83f8a7e5b5602ae9"
            ]
        ]
    },
    {
        "id": "cb2cf63797315d13",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "I_80_Arm_2_Del",
        "label": "Moves arm to delivery",
        "tooltip": "",
        "group": "33943232d13182a3",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1620,
        "wires": [
            [
                "55829d2e8012b059"
            ]
        ]
    },
    {
        "id": "7357f11a32a99c46",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "I_80_Arm_2_Mag",
        "label": "Moves arm to magazine",
        "tooltip": "",
        "group": "33943232d13182a3",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1660,
        "wires": [
            [
                "6a08fb03bbacc1f4"
            ]
        ]
    },
    {
        "id": "4f9760520e01a312",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "item": "I_81_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Led_Start",
        "x": 480,
        "y": 1840,
        "wires": [
            [
                "44546ec1879cc10d"
            ]
        ]
    },
    {
        "id": "85d52303dea965d1",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "item": "I_81_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Led_Reset",
        "x": 480,
        "y": 1880,
        "wires": [
            [
                "44546ec1879cc10d"
            ]
        ]
    },
    {
        "id": "86bad52243504f2a",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "item": "I_81_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Led_Extra1",
        "x": 470,
        "y": 1920,
        "wires": [
            [
                "44546ec1879cc10d"
            ]
        ]
    },
    {
        "id": "67bef6b7641324d6",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "item": "I_81_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Led_Extra2",
        "x": 470,
        "y": 1960,
        "wires": [
            [
                "44546ec1879cc10d"
            ]
        ]
    },
    {
        "id": "f804a3691a28695e",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "item": "I_81_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Panel_O4",
        "x": 480,
        "y": 2000,
        "wires": [
            [
                "44546ec1879cc10d"
            ]
        ]
    },
    {
        "id": "44546ec1879cc10d",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "80 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "c5520d31cee473ba"
        ],
        "x": 645,
        "y": 1980,
        "wires": []
    },
    {
        "id": "7db0828f093e4d8f",
        "type": "switch",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "80 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_81_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1980,
        "wires": [
            [
                "3c099e41e1a9da49"
            ],
            [
                "b373406dcecbb09e"
            ],
            [
                "bd9633e4579fc0f8"
            ],
            [
                "e827faf2b4940a89"
            ],
            [
                "28ec8683938d4870"
            ],
            [
                "f56c4a298e3ee867"
            ],
            [
                "02cbc0260c9166b2"
            ],
            [
                "e36fc45c06a751c8"
            ]
        ]
    },
    {
        "id": "26624d4be641128f",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "cfacadcd3dd540db",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1840,
        "wires": [
            [
                "4f9760520e01a312"
            ]
        ]
    },
    {
        "id": "9c7a5e9f53552960",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "cfacadcd3dd540db",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1880,
        "wires": [
            [
                "85d52303dea965d1"
            ]
        ]
    },
    {
        "id": "2ab52419c3aa0c29",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "cfacadcd3dd540db",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1920,
        "wires": [
            [
                "86bad52243504f2a"
            ]
        ]
    },
    {
        "id": "05987cdf857fd9fd",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "cfacadcd3dd540db",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1960,
        "wires": [
            [
                "67bef6b7641324d6"
            ]
        ]
    },
    {
        "id": "84a8f68155b7d372",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "cfacadcd3dd540db",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2000,
        "wires": [
            [
                "f804a3691a28695e"
            ]
        ]
    },
    {
        "id": "cc8b5dad2c253504",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "cfacadcd3dd540db",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2040,
        "wires": [
            [
                "c801ef42e57a7f9f"
            ]
        ]
    },
    {
        "id": "c801ef42e57a7f9f",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "item": "I_81_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Panel_O5",
        "x": 480,
        "y": 2040,
        "wires": [
            [
                "44546ec1879cc10d"
            ]
        ]
    },
    {
        "id": "2c0d2fedf454c18f",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "cfacadcd3dd540db",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2080,
        "wires": [
            [
                "86a9971c5508fd05"
            ]
        ]
    },
    {
        "id": "86a9971c5508fd05",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "item": "I_81_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Panel_O6",
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "44546ec1879cc10d"
            ]
        ]
    },
    {
        "id": "afc9d8b3d4569909",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "cfacadcd3dd540db",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2120,
        "wires": [
            [
                "7b046ee230ea2154"
            ]
        ]
    },
    {
        "id": "7b046ee230ea2154",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "item": "I_81_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Panel_O7",
        "x": 480,
        "y": 2120,
        "wires": [
            [
                "44546ec1879cc10d"
            ]
        ]
    },
    {
        "id": "775830629c0b7ccd",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "item": "F_82_Pist_Adv",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Pist_Adv",
        "x": 480,
        "y": 2300,
        "wires": [
            [
                "928e2bde42afd8fa"
            ]
        ]
    },
    {
        "id": "feacea305e1b2b9f",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "item": "F_82_Suction_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Suction_On",
        "x": 470,
        "y": 2340,
        "wires": [
            [
                "928e2bde42afd8fa"
            ]
        ]
    },
    {
        "id": "48da81c924dc5342",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "item": "F_82_Suction_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Suction_Off",
        "x": 470,
        "y": 2380,
        "wires": [
            [
                "928e2bde42afd8fa"
            ]
        ]
    },
    {
        "id": "1db3f67af7cc12ed",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "item": "F_82_Arm_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Arm_2_Del",
        "x": 470,
        "y": 2420,
        "wires": [
            [
                "928e2bde42afd8fa"
            ]
        ]
    },
    {
        "id": "2b2fd71c78ca704f",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "item": "F_82_Arm_2_Mag",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Arm_2_Mag",
        "x": 470,
        "y": 2460,
        "wires": [
            [
                "928e2bde42afd8fa"
            ]
        ]
    },
    {
        "id": "928e2bde42afd8fa",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "80 Physical Feedback",
        "mode": "link",
        "links": [
            "c5520d31cee473ba"
        ],
        "x": 645,
        "y": 2380,
        "wires": []
    },
    {
        "id": "7fa689fee53d0747",
        "type": "switch",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "80 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_82_Pist_Adv",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_82_Suction_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_82_Suction_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_82_Arm_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_82_Arm_2_Mag",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 870,
        "y": 2380,
        "wires": [
            [
                "cd0da55dcd949f15"
            ],
            [
                "244964249dd4137a"
            ],
            [
                "c4d7bd0803d27f1b"
            ],
            [
                "6db31a2e92b4cab9"
            ],
            [
                "93663c9c3a85d4b9"
            ]
        ]
    },
    {
        "id": "cd0da55dcd949f15",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "order": 0,
        "group": "1083ca62d37de8c5",
        "width": 0,
        "height": 0,
        "label": "Pushes part out of the magazine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Pist_Adv",
        "x": 1060,
        "y": 2300,
        "wires": []
    },
    {
        "id": "244964249dd4137a",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "order": 0,
        "group": "1083ca62d37de8c5",
        "width": 0,
        "height": 0,
        "label": "Suction On",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Suction_On",
        "x": 1070,
        "y": 2340,
        "wires": []
    },
    {
        "id": "c4d7bd0803d27f1b",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "order": 0,
        "group": "1083ca62d37de8c5",
        "width": 0,
        "height": 0,
        "label": "Suction Off",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Suction_Off",
        "x": 1070,
        "y": 2380,
        "wires": []
    },
    {
        "id": "6db31a2e92b4cab9",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "order": 0,
        "group": "1083ca62d37de8c5",
        "width": 0,
        "height": 0,
        "label": "Moves arm to delivery",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Arm_2_Del",
        "x": 1070,
        "y": 2420,
        "wires": []
    },
    {
        "id": "93663c9c3a85d4b9",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "order": 0,
        "group": "1083ca62d37de8c5",
        "width": 0,
        "height": 0,
        "label": "Moves arm to magazine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Arm_2_Mag",
        "x": 1070,
        "y": 2460,
        "wires": []
    },
    {
        "id": "d3ca328910160662",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "item": "F_83_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Led_Start",
        "x": 480,
        "y": 2640,
        "wires": [
            [
                "6ffe6c22adf80a5f"
            ]
        ]
    },
    {
        "id": "42293e5af782d2a5",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "item": "F_83_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Led_Reset",
        "x": 470,
        "y": 2680,
        "wires": [
            [
                "6ffe6c22adf80a5f"
            ]
        ]
    },
    {
        "id": "a220931570d15c88",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "item": "F_83_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Led_Extra1",
        "x": 470,
        "y": 2720,
        "wires": [
            [
                "6ffe6c22adf80a5f"
            ]
        ]
    },
    {
        "id": "712354e41379f588",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "item": "F_83_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Led_Extra2",
        "x": 470,
        "y": 2760,
        "wires": [
            [
                "6ffe6c22adf80a5f"
            ]
        ]
    },
    {
        "id": "3856dfb660d55f5d",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "item": "F_83_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Panel_O4",
        "x": 480,
        "y": 2800,
        "wires": [
            [
                "6ffe6c22adf80a5f"
            ]
        ]
    },
    {
        "id": "d171d9439556eaa8",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "item": "F_83_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Panel_O5",
        "x": 480,
        "y": 2840,
        "wires": [
            [
                "6ffe6c22adf80a5f"
            ]
        ]
    },
    {
        "id": "b3b7fa8e685cdbf8",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "item": "F_83_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Panel_O6",
        "x": 480,
        "y": 2880,
        "wires": [
            [
                "6ffe6c22adf80a5f"
            ]
        ]
    },
    {
        "id": "6ffe6c22adf80a5f",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "80 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "c5520d31cee473ba"
        ],
        "x": 645,
        "y": 2780,
        "wires": []
    },
    {
        "id": "69d358635f9f3a41",
        "type": "switch",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "80 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_83_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2780,
        "wires": [
            [
                "ba881b7b6e141dbe"
            ],
            [
                "0c360bd311b5e663"
            ],
            [
                "74a535c9bb3c418f"
            ],
            [
                "5e035eeb33449c4b"
            ],
            [
                "93bd8af097914bf2"
            ],
            [
                "353b34d9165edcca"
            ],
            [
                "3a44ea3dfe4c8161"
            ],
            [
                "e6c3de109c978571"
            ]
        ]
    },
    {
        "id": "ba881b7b6e141dbe",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "order": 0,
        "group": "60ef934333301133",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Led_Start",
        "x": 1060,
        "y": 2640,
        "wires": []
    },
    {
        "id": "0c360bd311b5e663",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "order": 0,
        "group": "60ef934333301133",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Led_Reset",
        "x": 1070,
        "y": 2680,
        "wires": []
    },
    {
        "id": "74a535c9bb3c418f",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "order": 0,
        "group": "60ef934333301133",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Led_Extra1",
        "x": 1070,
        "y": 2720,
        "wires": []
    },
    {
        "id": "5e035eeb33449c4b",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "order": 0,
        "group": "60ef934333301133",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Led_Extra2",
        "x": 1070,
        "y": 2760,
        "wires": []
    },
    {
        "id": "93bd8af097914bf2",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "order": 0,
        "group": "60ef934333301133",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Panel_O4",
        "x": 1060,
        "y": 2800,
        "wires": []
    },
    {
        "id": "353b34d9165edcca",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "order": 0,
        "group": "60ef934333301133",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Panel_O5",
        "x": 1060,
        "y": 2840,
        "wires": []
    },
    {
        "id": "3a44ea3dfe4c8161",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "order": 0,
        "group": "60ef934333301133",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Panel_O6",
        "x": 1060,
        "y": 2880,
        "wires": []
    },
    {
        "id": "b91b4cb3af15dc14",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "item": "F_83_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Panel_O7",
        "x": 480,
        "y": 2920,
        "wires": [
            [
                "6ffe6c22adf80a5f"
            ]
        ]
    },
    {
        "id": "e6c3de109c978571",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "order": 0,
        "group": "60ef934333301133",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Panel_O7",
        "x": 1060,
        "y": 2920,
        "wires": []
    },
    {
        "id": "115c668879175a2a",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "item": "C_82_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_82_Profibus",
        "x": 640,
        "y": 3100,
        "wires": [
            [
                "669f81ec99a994d9"
            ]
        ]
    },
    {
        "id": "1e7aa4aecab883e2",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "item": "C_83_RQ_Parts",
        "datatype": "Double",
        "value": "",
        "name": "C_83_RQ_Parts",
        "x": 640,
        "y": 3180,
        "wires": [
            [
                "669f81ec99a994d9"
            ]
        ]
    },
    {
        "id": "5874ca5b459206b8",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "item": "C_85_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Initialization",
        "x": 630,
        "y": 3140,
        "wires": [
            [
                "669f81ec99a994d9"
            ]
        ]
    },
    {
        "id": "7463652db9b035d6",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "item": "C_85_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Start",
        "x": 650,
        "y": 3220,
        "wires": [
            [
                "669f81ec99a994d9"
            ]
        ]
    },
    {
        "id": "f136050ba5ee87ee",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "item": "C_85_Single",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Single",
        "x": 650,
        "y": 3260,
        "wires": [
            [
                "669f81ec99a994d9"
            ]
        ]
    },
    {
        "id": "68c89dc9688fb264",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "item": "C_85_Continuous",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Continuous",
        "x": 630,
        "y": 3300,
        "wires": [
            [
                "669f81ec99a994d9"
            ]
        ]
    },
    {
        "id": "207a5a1a56002752",
        "type": "OpcUa-Item",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "item": "C_85_Counted",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Counted",
        "x": 640,
        "y": 3340,
        "wires": [
            [
                "669f81ec99a994d9"
            ]
        ]
    },
    {
        "id": "669f81ec99a994d9",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "80 Control",
        "mode": "link",
        "links": [
            "c5520d31cee473ba"
        ],
        "x": 805,
        "y": 3220,
        "wires": []
    },
    {
        "id": "254cc3599f9daebc",
        "type": "switch",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "80 C",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_82_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_83_RQ_Parts",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Single",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Continuous",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Counted",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 1010,
        "y": 3220,
        "wires": [
            [
                "62c2748fba188c99"
            ],
            [
                "d55dff261846decd"
            ],
            [
                "a14b22cbef7d3292"
            ],
            [
                "9616fe42a4605e4d"
            ],
            [
                "cd47ca5f41533904"
            ],
            [
                "8c0ce9ba9ab1dd86"
            ],
            [
                "22b9fd1e39ae283d"
            ]
        ]
    },
    {
        "id": "62c2748fba188c99",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "order": 2,
        "group": "746323899057de20",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_82_Profibus",
        "x": 1200,
        "y": 3100,
        "wires": []
    },
    {
        "id": "d55dff261846decd",
        "type": "ui_led",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "order": 1,
        "group": "746323899057de20",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_85_Initialization",
        "x": 1210,
        "y": 3140,
        "wires": []
    },
    {
        "id": "fe5d9a8fa9d4a813",
        "type": "ui_numeric",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "C_83_RQ_Parts",
        "label": "Requested Parts",
        "tooltip": "Number of Requested Parts to be used with C_85_Counted.",
        "group": "746323899057de20",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 200,
        "y": 3180,
        "wires": [
            [
                "1e7aa4aecab883e2"
            ]
        ]
    },
    {
        "id": "d60901029a60876d",
        "type": "ui_switch",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "C_85_Start",
        "label": "Start",
        "tooltip": "Start Production",
        "group": "746323899057de20",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 3220,
        "wires": [
            [
                "7463652db9b035d6"
            ]
        ]
    },
    {
        "id": "46fe66e096f005c4",
        "type": "ui_dropdown",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "746323899057de20",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Single Mode",
                "value": "C_85_Single",
                "type": "str"
            },
            {
                "label": "Continuous Mode",
                "value": "C_85_Continuous",
                "type": "str"
            },
            {
                "label": "Counted Mode",
                "value": "C_85_Counted",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 3300,
        "wires": [
            [
                "6eae74f2dedb55cf",
                "8e976f4a76b00b59",
                "e9a3543508c038a2"
            ]
        ]
    },
    {
        "id": "6eae74f2dedb55cf",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "C_85_Single",
        "func": "if (msg.payload === \"C_85_Single\") return { payload: true, topic: \"C_85_Single\"};\nelse return { payload: false, topic: \"C_85_Single\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3260,
        "wires": [
            [
                "f136050ba5ee87ee"
            ]
        ]
    },
    {
        "id": "8e976f4a76b00b59",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "C_85_Continuous",
        "func": "if (msg.payload === \"C_85_Continuous\") return { payload: true, topic: \"C_85_Continuous\"};\nelse return { payload: false, topic: \"C_85_Continuous\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3300,
        "wires": [
            [
                "68c89dc9688fb264"
            ]
        ]
    },
    {
        "id": "e9a3543508c038a2",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "C_85_Counted",
        "func": "if (msg.payload === \"C_85_Counted\") return { payload: true, topic: \"C_85_Counted\"};\nelse return { payload: false, topic: \"C_85_Counted\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3340,
        "wires": [
            [
                "207a5a1a56002752"
            ]
        ]
    },
    {
        "id": "b67977ad347f13a5",
        "type": "comment",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "1929da8b284e3acd",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "ebc07bf99bd9bf25"
            ]
        ]
    },
    {
        "id": "ebc07bf99bd9bf25",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Distribution_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "9629c4fe43e98c81"
            ]
        ]
    },
    {
        "id": "c1f51fd2110c74cd",
        "type": "file",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8310f9095b63dfe5",
        "type": "comment",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "9629c4fe43e98c81",
        "type": "OpcUa-Client",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "endpoint": "3b06444fa87faa55",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "6218bf7405367008"
            ],
            [
                "dbbed499b7503d0e",
                "501222a0d3af1a1a"
            ]
        ]
    },
    {
        "id": "6218bf7405367008",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "b8ebc079e3e78fca",
                "3409eb76bce6cf57"
            ]
        ]
    },
    {
        "id": "b8ebc079e3e78fca",
        "type": "file",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "3409eb76bce6cf57",
        "type": "debug",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "6d84ad72d296ae87",
        "type": "OpcUa-Client",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "endpoint": "3b06444fa87faa55",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "198ab475eb6d3a92"
            ],
            []
        ]
    },
    {
        "id": "b40babb7c3da19ce",
        "type": "comment",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "198ab475eb6d3a92",
        "type": "debug",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "c5520d31cee473ba",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Write_DIst",
        "links": [
            "65ea9947719865a2",
            "28cbac54f03f10ab",
            "669f81ec99a994d9",
            "6ffe6c22adf80a5f",
            "928e2bde42afd8fa",
            "769d1ff2538b1339",
            "44546ec1879cc10d"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "632640e45b2b3941"
            ]
        ]
    },
    {
        "id": "632640e45b2b3941",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "06189ac6c110c131"
            ]
        ]
    },
    {
        "id": "06189ac6c110c131",
        "type": "file in",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "70650a8f8deef7c3"
            ]
        ]
    },
    {
        "id": "70650a8f8deef7c3",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "f92b2f9e33399eb6"
            ]
        ]
    },
    {
        "id": "f92b2f9e33399eb6",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "6d84ad72d296ae87"
            ]
        ]
    },
    {
        "id": "75df7097d1b408c7",
        "type": "inject",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_85_Single",
        "payloadType": "str",
        "x": 190,
        "y": 3340,
        "wires": [
            [
                "46fe66e096f005c4"
            ]
        ]
    },
    {
        "id": "dc0ff94d89ca6b15",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "CSV Link",
        "links": [
            "dbbed499b7503d0e"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "51cd16177b2ff2f7"
            ]
        ]
    },
    {
        "id": "51cd16177b2ff2f7",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "d9a0558b213a0117"
            ]
        ]
    },
    {
        "id": "d9a0558b213a0117",
        "type": "trigger",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "c1f51fd2110c74cd"
            ]
        ]
    },
    {
        "id": "dbbed499b7503d0e",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "dc0ff94d89ca6b15",
            "14340a58ee4346fd"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "14340a58ee4346fd",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "CSV Link",
        "links": [
            "dbbed499b7503d0e"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "8c655d6deaab84bf"
            ]
        ]
    },
    {
        "id": "8c655d6deaab84bf",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_80_Mag_Full\" : false,\n    \"O_80_Pist_Back\" : false,\n    \"O_80_Pist_Fwd\" : false,\n    \"O_80_Part_Stuck\" : false,\n    \"O_80_Arm_Mag\": false,\n    \"O_80_Arm_Del\": false,\n    \"O_80_Mag_Empty\": false,\n    \"O_81_Start\": false,\n    \"O_81_Stop\": false,\n    \"O_81_Key_Pos\": false,\n    \"O_81_Reset\": false,\n    \"O_81_Panel_I4\": false,\n    \"O_81_Panel_I5\": false,\n    \"O_81_Panel_I6\": false,\n    \"O_81_Panel_I7\": false,\n    \"F_82_Pist_Adv\": false,\n    \"F_82_Suction_On\": false,\n    \"F_82_Suction_Off\": false,\n    \"F_82_Arm_2_Del\": false,\n    \"F_82_Arm_2_Mag\": false,\n    \"F_83_Led_Start\": false,\n    \"F_83_Led_Reset\": false,\n    \"F_83_Led_Extra1\": false,\n    \"F_83_Led_Extra2\": false,\n    \"F_83_Panel_O4\": false,\n    \"F_83_Panel_O5\": false,\n    \"F_83_Panel_O6\": false,\n    \"F_83_Panel_O7\": false,\n    \"I_80_Pist_Adv\": false,\n    \"I_80_Suction_On\": false,\n    \"I_80_Suction_Off\": false,\n    \"I_80_Arm_2_Del\": false,\n    \"I_80_Arm_2_Mag\": false,\n    \"I_81_Led_Start\": false,\n    \"I_81_Led_Reset\": false,\n    \"I_81_Led_Extra1\": false,\n    \"I_81_Led_Extra2\": false,\n    \"I_81_Panel_O4\": false,\n    \"I_81_Panel_O5\": false,\n    \"I_81_Panel_O6\": false,\n    \"I_81_Panel_O7\": false,\n    \"C_82_Profibus\": false,\n    \"C_83_RQ_Parts\": 0,\n    \"C_85_Initialization\": false,\n    \"C_85_Start\": false,\n    \"C_85_Single\": false,\n    \"C_85_Continuous\": false,\n    \"C_85_Counted\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "dc49b80048feedd0"
            ]
        ]
    },
    {
        "id": "dc49b80048feedd0",
        "type": "trigger",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "1929da8b284e3acd"
            ]
        ]
    },
    {
        "id": "4a779aab8b3fde88",
        "type": "debug",
        "z": "2a1ebdbf557110a0",
        "g": "c15de090718d98c1",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "9f3875db12c5b203",
        "type": "OpcUa-Server",
        "z": "2a1ebdbf557110a0",
        "g": "c15de090718d98c1",
        "port": "53888",
        "name": "Server : Distribution",
        "endpoint": "",
        "users": "",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Distribution",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "4a779aab8b3fde88"
            ]
        ]
    },
    {
        "id": "79949057253d1d4a",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_80_Mag_Full\" : false,\n            \"O_80_Pist_Back\" : false,\n            \"O_80_Pist_Fwd\" : false,\n            \"O_80_Part_Stuck\" : false,\n            \"O_80_Arm_Mag\": false,\n            \"O_80_Arm_Del\": false,\n            \"O_80_Mag_Empty\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "b10bfe3c8a90c972"
            ]
        ]
    },
    {
        "id": "ca23a677c3489dda",
        "type": "OpcUa-Client",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "endpoint": "3b06444fa87faa55",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "c50b7f9e9ec565d3",
                "2b5163c70cf96682"
            ],
            [
                "79949057253d1d4a"
            ]
        ]
    },
    {
        "id": "b10bfe3c8a90c972",
        "type": "trigger",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "6f8ce2f79c86961c"
            ]
        ]
    },
    {
        "id": "9bfeb211b02ffac2",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "ca23a677c3489dda"
            ]
        ]
    },
    {
        "id": "c50b7f9e9ec565d3",
        "type": "debug",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "80 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 580,
        "wires": []
    },
    {
        "id": "6f8ce2f79c86961c",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "ddb8843615cb0de9"
            ]
        ]
    },
    {
        "id": "77ba7f07ff435cda",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "9bfeb211b02ffac2"
            ]
        ]
    },
    {
        "id": "ddb8843615cb0de9",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "ca741e95abe61f8d"
            ]
        ]
    },
    {
        "id": "ca741e95abe61f8d",
        "type": "file in",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "77ba7f07ff435cda"
            ]
        ]
    },
    {
        "id": "8553e671312a4286",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 960,
        "wires": [
            [
                "4d43d46a326a3edd"
            ]
        ]
    },
    {
        "id": "e1f55bac734582bf",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 960,
        "wires": [
            [
                "8553e671312a4286"
            ]
        ]
    },
    {
        "id": "4d43d46a326a3edd",
        "type": "OpcUa-Client",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "endpoint": "3b06444fa87faa55",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 960,
        "wires": [
            [
                "532c65a3b284c61d",
                "8234d64c3e396a96"
            ],
            [
                "4597257a0c6d976b"
            ]
        ]
    },
    {
        "id": "81c45235b05ecbfd",
        "type": "file in",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 960,
        "wires": [
            [
                "e1f55bac734582bf"
            ]
        ]
    },
    {
        "id": "532c65a3b284c61d",
        "type": "debug",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "80 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4597257a0c6d976b",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_81_Start\": false,\n            \"O_81_Stop\": false,\n            \"O_81_Key_Pos\": false,\n            \"O_81_Reset\": false,\n            \"O_81_Panel_I4\": false,\n            \"O_81_Panel_I5\": false,\n            \"O_81_Panel_I6\": false,\n            \"O_81_Panel_I7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 960,
        "wires": [
            [
                "ad55a54163757003"
            ]
        ]
    },
    {
        "id": "8d094019e92e1e80",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 960,
        "wires": [
            [
                "81c45235b05ecbfd"
            ]
        ]
    },
    {
        "id": "ad55a54163757003",
        "type": "trigger",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 960,
        "wires": [
            [
                "727ced2e7df798ee"
            ]
        ]
    },
    {
        "id": "727ced2e7df798ee",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 960,
        "wires": [
            [
                "8d094019e92e1e80"
            ]
        ]
    },
    {
        "id": "0d74d24ffdc80ebc",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1420,
        "wires": [
            [
                "07e2e586c2cae930"
            ]
        ]
    },
    {
        "id": "b898856387a1fef6",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "0d74d24ffdc80ebc"
            ]
        ]
    },
    {
        "id": "07e2e586c2cae930",
        "type": "OpcUa-Client",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "endpoint": "3b06444fa87faa55",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1420,
        "wires": [
            [
                "57d747b196654a04",
                "f3e1aa6832a04acd"
            ],
            [
                "506e5ea8186275bc"
            ]
        ]
    },
    {
        "id": "acc39db77ef7ed93",
        "type": "file in",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "b898856387a1fef6"
            ]
        ]
    },
    {
        "id": "57d747b196654a04",
        "type": "debug",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "80 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1460,
        "wires": []
    },
    {
        "id": "506e5ea8186275bc",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_80_Pist_Adv\": false,\n            \"I_80_Suction_On\": false,\n            \"I_80_Suction_Off\": false,\n            \"I_80_Arm_2_Del\": false,\n            \"I_80_Arm_2_Mag\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1420,
        "wires": [
            [
                "b1306f68edc7e342"
            ]
        ]
    },
    {
        "id": "8641e69020b768a3",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "acc39db77ef7ed93"
            ]
        ]
    },
    {
        "id": "b1306f68edc7e342",
        "type": "trigger",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1420,
        "wires": [
            [
                "b626744c702d53e2"
            ]
        ]
    },
    {
        "id": "b626744c702d53e2",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1420,
        "wires": [
            [
                "8641e69020b768a3"
            ]
        ]
    },
    {
        "id": "1052b7610516c6bb",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1760,
        "wires": [
            [
                "abe41e68d7de22f6"
            ]
        ]
    },
    {
        "id": "61d75e21ce5ed07f",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1760,
        "wires": [
            [
                "1052b7610516c6bb"
            ]
        ]
    },
    {
        "id": "abe41e68d7de22f6",
        "type": "OpcUa-Client",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "endpoint": "3b06444fa87faa55",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1760,
        "wires": [
            [
                "6abc37c0f9c3c460",
                "f011765459831d5c"
            ],
            [
                "fde25dcba24b234d"
            ]
        ]
    },
    {
        "id": "a3691b3aaa018229",
        "type": "file in",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1760,
        "wires": [
            [
                "61d75e21ce5ed07f"
            ]
        ]
    },
    {
        "id": "6abc37c0f9c3c460",
        "type": "debug",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "80 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1800,
        "wires": []
    },
    {
        "id": "fde25dcba24b234d",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_81_Led_Start\": false,\n            \"I_81_Led_Reset\": false,\n            \"I_81_Led_Extra1\": false,\n            \"I_81_Led_Extra2\": false,\n            \"I_81_Panel_O4\": false,\n            \"I_81_Panel_O5\": false,\n            \"I_81_Panel_O6\": false,\n            \"I_81_Panel_O7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1760,
        "wires": [
            [
                "967172298c5cfc36"
            ]
        ]
    },
    {
        "id": "71baf45914cd7a88",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1760,
        "wires": [
            [
                "a3691b3aaa018229"
            ]
        ]
    },
    {
        "id": "967172298c5cfc36",
        "type": "trigger",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1760,
        "wires": [
            [
                "089b7e28c66a4887"
            ]
        ]
    },
    {
        "id": "089b7e28c66a4887",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1760,
        "wires": [
            [
                "71baf45914cd7a88"
            ]
        ]
    },
    {
        "id": "77562ab9f0430023",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2220,
        "wires": [
            [
                "6e6fdff3de6aa1b8"
            ]
        ]
    },
    {
        "id": "abf619971b7709f9",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2220,
        "wires": [
            [
                "77562ab9f0430023"
            ]
        ]
    },
    {
        "id": "6e6fdff3de6aa1b8",
        "type": "OpcUa-Client",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "endpoint": "3b06444fa87faa55",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2220,
        "wires": [
            [
                "0177d2d99374b807",
                "96d7a12fd30b1713"
            ],
            [
                "97bcd5e21f4f3d5a"
            ]
        ]
    },
    {
        "id": "770d10919d174cb3",
        "type": "file in",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2220,
        "wires": [
            [
                "abf619971b7709f9"
            ]
        ]
    },
    {
        "id": "0177d2d99374b807",
        "type": "debug",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "80 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2260,
        "wires": []
    },
    {
        "id": "97bcd5e21f4f3d5a",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_82_Pist_Adv\": false,\n            \"F_82_Suction_On\": false,\n            \"F_82_Suction_Off\": false,\n            \"F_82_Arm_2_Del\": false,\n            \"F_82_Arm_2_Mag\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2220,
        "wires": [
            [
                "98e7430402d6899b"
            ]
        ]
    },
    {
        "id": "1d834ab8bdba8d02",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2220,
        "wires": [
            [
                "770d10919d174cb3"
            ]
        ]
    },
    {
        "id": "98e7430402d6899b",
        "type": "trigger",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2220,
        "wires": [
            [
                "1430d1d4194becfb"
            ]
        ]
    },
    {
        "id": "1430d1d4194becfb",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2220,
        "wires": [
            [
                "1d834ab8bdba8d02"
            ]
        ]
    },
    {
        "id": "6319a9f9baa94018",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2560,
        "wires": [
            [
                "17b8e3b5c478d234"
            ]
        ]
    },
    {
        "id": "3175ad86251116de",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2560,
        "wires": [
            [
                "6319a9f9baa94018"
            ]
        ]
    },
    {
        "id": "17b8e3b5c478d234",
        "type": "OpcUa-Client",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "endpoint": "3b06444fa87faa55",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2560,
        "wires": [
            [
                "5bf79b35e883d178",
                "3203a3d404731a4c"
            ],
            [
                "e2fb2fa4ac890184"
            ]
        ]
    },
    {
        "id": "cfce01c5303003d9",
        "type": "file in",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2560,
        "wires": [
            [
                "3175ad86251116de"
            ]
        ]
    },
    {
        "id": "5bf79b35e883d178",
        "type": "debug",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "80 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2600,
        "wires": []
    },
    {
        "id": "e2fb2fa4ac890184",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_83_Led_Start\": false,\n            \"F_83_Led_Reset\": false,\n            \"F_83_Led_Extra1\": false,\n            \"F_83_Led_Extra2\": false,\n            \"F_83_Panel_O4\": false,\n            \"F_83_Panel_O5\": false,\n            \"F_83_Panel_O6\": false,\n            \"F_83_Panel_O7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2560,
        "wires": [
            [
                "c36e528d18ba911b"
            ]
        ]
    },
    {
        "id": "73619211551659f9",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2560,
        "wires": [
            [
                "cfce01c5303003d9"
            ]
        ]
    },
    {
        "id": "c36e528d18ba911b",
        "type": "trigger",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2560,
        "wires": [
            [
                "d0829dc36ca20884"
            ]
        ]
    },
    {
        "id": "d0829dc36ca20884",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2560,
        "wires": [
            [
                "73619211551659f9"
            ]
        ]
    },
    {
        "id": "aed1f8af576c3963",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3020,
        "wires": [
            [
                "b98374d25f40b14d"
            ]
        ]
    },
    {
        "id": "e336c608d7975656",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3020,
        "wires": [
            [
                "aed1f8af576c3963"
            ]
        ]
    },
    {
        "id": "b98374d25f40b14d",
        "type": "OpcUa-Client",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "endpoint": "3b06444fa87faa55",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3020,
        "wires": [
            [
                "d247259443b48f66",
                "853656f90ec0d3cd"
            ],
            [
                "9b72694b25fa0afc"
            ]
        ]
    },
    {
        "id": "e4002b2ed1781ecc",
        "type": "file in",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3020,
        "wires": [
            [
                "e336c608d7975656"
            ]
        ]
    },
    {
        "id": "d247259443b48f66",
        "type": "debug",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "80 C",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3060,
        "wires": []
    },
    {
        "id": "9b72694b25fa0afc",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_82_Profibus\": false,\n            \"C_83_RQ_Parts\": 0,\n            \"C_85_Initialization\": false,\n            \"C_85_Start\": false,\n            \"C_85_Single\": false,\n            \"C_85_Continuous\": false,\n            \"C_85_Counted\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3020,
        "wires": [
            [
                "b2bb3b10d3b9626a"
            ]
        ]
    },
    {
        "id": "5d54bc8011bda93d",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3020,
        "wires": [
            [
                "e4002b2ed1781ecc"
            ]
        ]
    },
    {
        "id": "b2bb3b10d3b9626a",
        "type": "trigger",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3020,
        "wires": [
            [
                "5c742084686470a5"
            ]
        ]
    },
    {
        "id": "5c742084686470a5",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3020,
        "wires": [
            [
                "5d54bc8011bda93d"
            ]
        ]
    },
    {
        "id": "fc7ccc08ea6a5b4e",
        "type": "debug",
        "z": "2a1ebdbf557110a0",
        "g": "64b1b1547cfaea6d",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "ad64ec0e862e8a48",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "64b1b1547cfaea6d",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "9148c991678949ee",
            "ec75639a7b6ea040",
            "49e3fd4a1d9571fd",
            "7a580a57601ba3f1",
            "35b6119467fad9c2"
        ],
        "x": 825,
        "y": 60,
        "wires": []
    },
    {
        "id": "758a6d74bb3eadfb",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "O_80_Mag_Full",
        "func": "if (msg.topic === \"O_80_Mag_Full\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Mag_Full\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 620,
        "wires": [
            [
                "654915f5261f16d1"
            ]
        ]
    },
    {
        "id": "9148c991678949ee",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "S7 PS",
        "links": [
            "ad64ec0e862e8a48"
        ],
        "x": 55,
        "y": 740,
        "wires": [
            [
                "758a6d74bb3eadfb",
                "d77bbb877abbb277",
                "99a1c1015e092d5d",
                "a2a0aaef7f343a52",
                "bb7ceac93f46da4a",
                "0ac028ae5a30e1e9",
                "56da14ebd1f1bf1e"
            ]
        ]
    },
    {
        "id": "bb7ceac93f46da4a",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "O_80_Arm_Mag",
        "func": "if (msg.topic === \"O_80_Arm_Mag\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Arm_Mag\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 780,
        "wires": [
            [
                "3f0398b2aa597698"
            ]
        ]
    },
    {
        "id": "d77bbb877abbb277",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "O_80_Pist_Back",
        "func": "if (msg.topic === \"O_80_Pist_Back\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Pist_Back\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 660,
        "wires": [
            [
                "2c57310f17d38cf0"
            ]
        ]
    },
    {
        "id": "99a1c1015e092d5d",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "O_80_Pist_Fwd",
        "func": "if (msg.topic === \"O_80_Pist_Fwd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Pist_Fwd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 700,
        "wires": [
            [
                "e98e797f346c3cf3"
            ]
        ]
    },
    {
        "id": "a2a0aaef7f343a52",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "O_80_Part_Stuck",
        "func": "if (msg.topic === \"O_80_Part_Stuck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Part_Stuck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 740,
        "wires": [
            [
                "11e34ab919958cdb"
            ]
        ]
    },
    {
        "id": "0ac028ae5a30e1e9",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "O_80_Arm_Del",
        "func": "if (msg.topic === \"O_80_Arm_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Arm_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 820,
        "wires": [
            [
                "00f6bead6d6c8be7"
            ]
        ]
    },
    {
        "id": "56da14ebd1f1bf1e",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "O_80_Mag_Empty",
        "func": "if (msg.topic === \"O_80_Mag_Empty\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Mag_Empty\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 860,
        "wires": [
            [
                "3a4775e05ecdf3a7"
            ]
        ]
    },
    {
        "id": "2b5163c70cf96682",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "Sub Out 80 PS",
        "mode": "link",
        "links": [
            "1efdc88d69953f11"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "1efdc88d69953f11",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "Sub In 80 PS",
        "links": [
            "2b5163c70cf96682"
        ],
        "x": 775,
        "y": 740,
        "wires": [
            [
                "4cfecc15d21fbcb5"
            ]
        ]
    },
    {
        "id": "9012599eb5a37695",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "Sub In 80 AS",
        "links": [
            "8234d64c3e396a96"
        ],
        "x": 775,
        "y": 1180,
        "wires": [
            [
                "b9e93f7868ef6637"
            ]
        ]
    },
    {
        "id": "8234d64c3e396a96",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "Sub Out 80 AS",
        "mode": "link",
        "links": [
            "9012599eb5a37695"
        ],
        "x": 1295,
        "y": 960,
        "wires": []
    },
    {
        "id": "c1db98cfc0a10590",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "O_81_Start",
        "func": "if (msg.topic === \"O_81_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "0964351b143a8fd2"
            ]
        ]
    },
    {
        "id": "ec75639a7b6ea040",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "S7 AS",
        "links": [
            "ad64ec0e862e8a48"
        ],
        "x": 55,
        "y": 1180,
        "wires": [
            [
                "c1db98cfc0a10590",
                "732a6dddfa817ce8",
                "f82fd2e7ddc2b1ce",
                "1b4b10e3b16fa2f7",
                "d28b0cc222bbebdf",
                "9a2ff2120f1f944f",
                "a35688ce7e8984a5",
                "5cead77e3a2820b9"
            ]
        ]
    },
    {
        "id": "d28b0cc222bbebdf",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "O_81_Panel_I4",
        "func": "if (msg.topic === \"O_81_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "93de3edebef4473e"
            ]
        ]
    },
    {
        "id": "732a6dddfa817ce8",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "O_81_Stop",
        "func": "if (msg.topic === \"O_81_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "75a987a12f0f489e"
            ]
        ]
    },
    {
        "id": "f82fd2e7ddc2b1ce",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "O_81_Key_Pos",
        "func": "if (msg.topic === \"O_81_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "f1d5141bb4356537"
            ]
        ]
    },
    {
        "id": "1b4b10e3b16fa2f7",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "O_81_Reset",
        "func": "if (msg.topic === \"O_81_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "012f6173d53ec15d"
            ]
        ]
    },
    {
        "id": "9a2ff2120f1f944f",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "O_81_Panel_I5",
        "func": "if (msg.topic === \"O_81_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1240,
        "wires": [
            [
                "566a7687c9c0ed01"
            ]
        ]
    },
    {
        "id": "a35688ce7e8984a5",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "O_81_Panel_I6",
        "func": "if (msg.topic === \"O_81_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "55d06fd63486816b"
            ]
        ]
    },
    {
        "id": "5cead77e3a2820b9",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "O_81_Panel_I7",
        "func": "if (msg.topic === \"O_81_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "00446b64a4bc5a77"
            ]
        ]
    },
    {
        "id": "f3e1aa6832a04acd",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "Sub Out 80 PA",
        "mode": "link",
        "links": [
            "909550d273956e4e"
        ],
        "x": 1295,
        "y": 1420,
        "wires": []
    },
    {
        "id": "909550d273956e4e",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "Sub In 80 PA",
        "links": [
            "f3e1aa6832a04acd"
        ],
        "x": 765,
        "y": 1580,
        "wires": [
            [
                "8d0ee572b1cfe17d"
            ]
        ]
    },
    {
        "id": "f011765459831d5c",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "Sub Out 80 AA",
        "mode": "link",
        "links": [
            "5bb5d2019e12d375"
        ],
        "x": 1295,
        "y": 1760,
        "wires": []
    },
    {
        "id": "5bb5d2019e12d375",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "Sub In 80 AA",
        "links": [
            "f011765459831d5c"
        ],
        "x": 775,
        "y": 1980,
        "wires": [
            [
                "7db0828f093e4d8f"
            ]
        ]
    },
    {
        "id": "b9f7edd7737e87b8",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "F_82_Pist_Adv",
        "func": "if (msg.topic === \"F_82_Pist_Adv\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Pist_Adv\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2300,
        "wires": [
            [
                "775830629c0b7ccd"
            ]
        ]
    },
    {
        "id": "49e3fd4a1d9571fd",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "S7 PF",
        "links": [
            "ad64ec0e862e8a48"
        ],
        "x": 55,
        "y": 2380,
        "wires": [
            [
                "b9f7edd7737e87b8",
                "438516793ba77437",
                "7deca0466d9b1bf0",
                "6a7a4883bb7d9868",
                "0ad8f273a79d60b2"
            ]
        ]
    },
    {
        "id": "0ad8f273a79d60b2",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "F_82_Arm_2_Mag",
        "func": "if (msg.topic === \"F_82_Arm_2_Mag\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Arm_2_Mag\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2460,
        "wires": [
            [
                "2b2fd71c78ca704f"
            ]
        ]
    },
    {
        "id": "438516793ba77437",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "F_82_Suction_On",
        "func": "if (msg.topic === \"F_82_Suction_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Suction_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2340,
        "wires": [
            [
                "feacea305e1b2b9f"
            ]
        ]
    },
    {
        "id": "7deca0466d9b1bf0",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "F_82_Suction_Off",
        "func": "if (msg.topic === \"F_82_Suction_Off\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Suction_Off\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2380,
        "wires": [
            [
                "48da81c924dc5342"
            ]
        ]
    },
    {
        "id": "6a7a4883bb7d9868",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "F_82_Arm_2_Del",
        "func": "if (msg.topic === \"F_82_Arm_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Arm_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2420,
        "wires": [
            [
                "1db3f67af7cc12ed"
            ]
        ]
    },
    {
        "id": "96d7a12fd30b1713",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "Sub Out 80 PF",
        "mode": "link",
        "links": [
            "ec6102f9c0168c84"
        ],
        "x": 1295,
        "y": 2220,
        "wires": []
    },
    {
        "id": "ec6102f9c0168c84",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "Sub In 80 PF",
        "links": [
            "96d7a12fd30b1713"
        ],
        "x": 775,
        "y": 2380,
        "wires": [
            [
                "7fa689fee53d0747"
            ]
        ]
    },
    {
        "id": "3203a3d404731a4c",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "Sub Out 80 AF",
        "mode": "link",
        "links": [
            "021a082934ae2ed3"
        ],
        "x": 1295,
        "y": 2560,
        "wires": []
    },
    {
        "id": "021a082934ae2ed3",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "Sub In 80 AF",
        "links": [
            "3203a3d404731a4c"
        ],
        "x": 775,
        "y": 2780,
        "wires": [
            [
                "69d358635f9f3a41"
            ]
        ]
    },
    {
        "id": "e150e865a873878e",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "F_83_Led_Start",
        "func": "if (msg.topic === \"F_83_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2640,
        "wires": [
            [
                "d3ca328910160662"
            ]
        ]
    },
    {
        "id": "7a580a57601ba3f1",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "S7 AF",
        "links": [
            "ad64ec0e862e8a48"
        ],
        "x": 55,
        "y": 2780,
        "wires": [
            [
                "e150e865a873878e",
                "592b795bc7fe09a7",
                "e144164b4c783bf7",
                "ef387cb10f34f823",
                "4346553443453f5b",
                "8adb7b0a26753547",
                "c7021f5ceae5f112",
                "49babdf1133a91f3"
            ]
        ]
    },
    {
        "id": "4346553443453f5b",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "F_83_Panel_O4",
        "func": "if (msg.topic === \"F_83_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2800,
        "wires": [
            [
                "3856dfb660d55f5d"
            ]
        ]
    },
    {
        "id": "592b795bc7fe09a7",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "F_83_Led_Reset",
        "func": "if (msg.topic === \"F_83_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2680,
        "wires": [
            [
                "42293e5af782d2a5"
            ]
        ]
    },
    {
        "id": "e144164b4c783bf7",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "F_83_Led_Extra1",
        "func": "if (msg.topic === \"F_83_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2720,
        "wires": [
            [
                "a220931570d15c88"
            ]
        ]
    },
    {
        "id": "ef387cb10f34f823",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "F_83_Led_Extra2",
        "func": "if (msg.topic === \"F_83_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2760,
        "wires": [
            [
                "712354e41379f588"
            ]
        ]
    },
    {
        "id": "8adb7b0a26753547",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "F_83_Panel_O5",
        "func": "if (msg.topic === \"F_83_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2840,
        "wires": [
            [
                "d171d9439556eaa8"
            ]
        ]
    },
    {
        "id": "c7021f5ceae5f112",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "F_83_Panel_O6",
        "func": "if (msg.topic === \"F_83_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2880,
        "wires": [
            [
                "b3b7fa8e685cdbf8"
            ]
        ]
    },
    {
        "id": "49babdf1133a91f3",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "F_83_Panel_O7",
        "func": "if (msg.topic === \"O_81_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2920,
        "wires": [
            [
                "b91b4cb3af15dc14"
            ]
        ]
    },
    {
        "id": "853656f90ec0d3cd",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "Sub Out 80 C",
        "mode": "link",
        "links": [
            "48cd05fe5ddcc875"
        ],
        "x": 1295,
        "y": 3020,
        "wires": []
    },
    {
        "id": "48cd05fe5ddcc875",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "Sub In 80 C",
        "links": [
            "853656f90ec0d3cd"
        ],
        "x": 905,
        "y": 3220,
        "wires": [
            [
                "254cc3599f9daebc"
            ]
        ]
    },
    {
        "id": "35b6119467fad9c2",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "S7 C",
        "links": [
            "ad64ec0e862e8a48"
        ],
        "x": 55,
        "y": 3120,
        "wires": [
            [
                "8865d5aa9e9780fd",
                "1ecd6d013001f0f1"
            ]
        ]
    },
    {
        "id": "8865d5aa9e9780fd",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "C_82_Profibus",
        "func": "if (msg.topic === \"C_82_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_82_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3100,
        "wires": [
            [
                "115c668879175a2a"
            ]
        ]
    },
    {
        "id": "1ecd6d013001f0f1",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "C_85_Initialization",
        "func": "if (msg.topic === \"C_85_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_85_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3140,
        "wires": [
            [
                "5874ca5b459206b8"
            ]
        ]
    },
    {
        "id": "e14c72dd568942ea",
        "type": "mqtt in",
        "z": "2a1ebdbf557110a0",
        "g": "64b1b1547cfaea6d",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d99579db50330f02",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "67789af2de5d4b26"
            ]
        ]
    },
    {
        "id": "67789af2de5d4b26",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "64b1b1547cfaea6d",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "ad64ec0e862e8a48",
                "fc7ccc08ea6a5b4e"
            ]
        ]
    },
    {
        "id": "501222a0d3af1a1a",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "09c26bef50b2b27e"
            ]
        ]
    },
    {
        "id": "09c26bef50b2b27e",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "004cb05ba7884471",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "52a643cb6c310407",
            "2f92245be18e3f2e",
            "1587b7f24980a36a",
            "1c357d8f7f8e2e6f",
            "550cdfe761a37e77",
            "caa620661c647b6f",
            "602f131bc656a156"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "52a643cb6c310407",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "Read C",
        "links": [
            "09c26bef50b2b27e"
        ],
        "x": 55,
        "y": 3020,
        "wires": [
            [
                "9b72694b25fa0afc"
            ]
        ]
    },
    {
        "id": "2f92245be18e3f2e",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "cb08f154ec3af5ed",
        "name": "Read AF",
        "links": [
            "09c26bef50b2b27e"
        ],
        "x": 55,
        "y": 2560,
        "wires": [
            [
                "e2fb2fa4ac890184"
            ]
        ]
    },
    {
        "id": "1587b7f24980a36a",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "1b879684f8bd0c3d",
        "name": "Read PF",
        "links": [
            "09c26bef50b2b27e"
        ],
        "x": 55,
        "y": 2220,
        "wires": [
            [
                "97bcd5e21f4f3d5a"
            ]
        ]
    },
    {
        "id": "1c357d8f7f8e2e6f",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "Read S",
        "links": [
            "09c26bef50b2b27e"
        ],
        "x": 55,
        "y": 1760,
        "wires": [
            [
                "fde25dcba24b234d"
            ]
        ]
    },
    {
        "id": "550cdfe761a37e77",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "Read PA",
        "links": [
            "09c26bef50b2b27e"
        ],
        "x": 55,
        "y": 1420,
        "wires": [
            [
                "506e5ea8186275bc"
            ]
        ]
    },
    {
        "id": "caa620661c647b6f",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "e30da53675cfa805",
        "name": "Read AS",
        "links": [
            "09c26bef50b2b27e"
        ],
        "x": 55,
        "y": 960,
        "wires": [
            [
                "4597257a0c6d976b"
            ]
        ]
    },
    {
        "id": "602f131bc656a156",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "c1be0aad196f1bb1",
        "name": "Read PS",
        "links": [
            "09c26bef50b2b27e"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "79949057253d1d4a"
            ]
        ]
    },
    {
        "id": "d324f9a7487baf3e",
        "type": "mqtt out",
        "z": "2a1ebdbf557110a0",
        "g": "64b1b1547cfaea6d",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d99579db50330f02",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "0c2a988b79ab8142",
        "type": "link in",
        "z": "2a1ebdbf557110a0",
        "g": "64b1b1547cfaea6d",
        "name": "S7 Actuators",
        "links": [
            "240a5f1ca1dde1dd"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "d324f9a7487baf3e"
            ]
        ]
    },
    {
        "id": "942d2fb87a27e51c",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "I_80_Pist_Adv",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1500,
        "wires": [
            [
                "eba4bfad34c35cdc"
            ]
        ]
    },
    {
        "id": "c139df01be38efac",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "I_80_Suction_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1540,
        "wires": [
            [
                "eba4bfad34c35cdc"
            ]
        ]
    },
    {
        "id": "e85ff4e06dfc7be2",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "I_80_Suction_Off",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1580,
        "wires": [
            [
                "eba4bfad34c35cdc"
            ]
        ]
    },
    {
        "id": "2430892405142d02",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "I_80_Arm_2_Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1620,
        "wires": [
            [
                "eba4bfad34c35cdc"
            ]
        ]
    },
    {
        "id": "5c5c45ac8082f33d",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "I_80_Arm_2_Mag",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1660,
        "wires": [
            [
                "eba4bfad34c35cdc"
            ]
        ]
    },
    {
        "id": "eba4bfad34c35cdc",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "1804bff54b332d68",
        "name": "S7 PA",
        "mode": "link",
        "links": [],
        "x": 1235,
        "y": 1580,
        "wires": []
    },
    {
        "id": "3c099e41e1a9da49",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1840,
        "wires": [
            [
                "240a5f1ca1dde1dd"
            ]
        ]
    },
    {
        "id": "b373406dcecbb09e",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1880,
        "wires": [
            [
                "240a5f1ca1dde1dd"
            ]
        ]
    },
    {
        "id": "bd9633e4579fc0f8",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1920,
        "wires": [
            [
                "240a5f1ca1dde1dd"
            ]
        ]
    },
    {
        "id": "e827faf2b4940a89",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1960,
        "wires": [
            [
                "240a5f1ca1dde1dd"
            ]
        ]
    },
    {
        "id": "28ec8683938d4870",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2000,
        "wires": [
            [
                "240a5f1ca1dde1dd"
            ]
        ]
    },
    {
        "id": "f56c4a298e3ee867",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2040,
        "wires": [
            [
                "240a5f1ca1dde1dd"
            ]
        ]
    },
    {
        "id": "02cbc0260c9166b2",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2080,
        "wires": [
            [
                "240a5f1ca1dde1dd"
            ]
        ]
    },
    {
        "id": "e36fc45c06a751c8",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "I_81_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2120,
        "wires": [
            [
                "240a5f1ca1dde1dd"
            ]
        ]
    },
    {
        "id": "240a5f1ca1dde1dd",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "094ae1941e421b23",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "0c2a988b79ab8142"
        ],
        "x": 1225,
        "y": 1980,
        "wires": []
    },
    {
        "id": "a14b22cbef7d3292",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "C_83_RQ_Parts",
        "func": "let Value\nlet TAG\n\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload})\n\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3180,
        "wires": [
            [
                "30dd8690d4953698"
            ]
        ]
    },
    {
        "id": "9616fe42a4605e4d",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "C_85_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3220,
        "wires": [
            [
                "30dd8690d4953698"
            ]
        ]
    },
    {
        "id": "cd47ca5f41533904",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "C_85_Single",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3260,
        "wires": [
            [
                "30dd8690d4953698"
            ]
        ]
    },
    {
        "id": "8c0ce9ba9ab1dd86",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "C_85_Continuous",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3300,
        "wires": [
            [
                "30dd8690d4953698"
            ]
        ]
    },
    {
        "id": "22b9fd1e39ae283d",
        "type": "function",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "C_85_Counted",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3340,
        "wires": [
            [
                "30dd8690d4953698"
            ]
        ]
    },
    {
        "id": "30dd8690d4953698",
        "type": "link out",
        "z": "2a1ebdbf557110a0",
        "g": "51751b99dd90a9a6",
        "name": "S7 PA",
        "mode": "link",
        "links": [],
        "x": 1365,
        "y": 3220,
        "wires": []
    },
    {
        "id": "08a28d34c76a49c1",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "item": "O_90_Part_Reserve",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Part_Reserve",
        "x": 460,
        "y": 620,
        "wires": [
            [
                "06faa55bb8738828"
            ]
        ]
    },
    {
        "id": "76e5ab889da0c2a9",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "item": "O_90_Claw_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_Del",
        "x": 480,
        "y": 660,
        "wires": [
            [
                "06faa55bb8738828"
            ]
        ]
    },
    {
        "id": "13139c34a07b7abd",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "item": "O_90_Claw_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_Cart",
        "x": 470,
        "y": 700,
        "wires": [
            [
                "06faa55bb8738828"
            ]
        ]
    },
    {
        "id": "b1dfa01461175ee6",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "item": "O_90_Claw_Reserve",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_Reserve",
        "x": 460,
        "y": 740,
        "wires": [
            [
                "06faa55bb8738828"
            ]
        ]
    },
    {
        "id": "ac0ad9fbd201ba36",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "item": "O_90_Claw_Low",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_Low",
        "x": 470,
        "y": 780,
        "wires": [
            [
                "06faa55bb8738828"
            ]
        ]
    },
    {
        "id": "82d9bc75f576fd8e",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "item": "O_90_Claw_High",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_High",
        "x": 470,
        "y": 820,
        "wires": [
            [
                "06faa55bb8738828"
            ]
        ]
    },
    {
        "id": "2ca26c250c6deb68",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "item": "O_90_Part_in_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Part_in_Claw",
        "x": 460,
        "y": 860,
        "wires": [
            [
                "06faa55bb8738828"
            ]
        ]
    },
    {
        "id": "06faa55bb8738828",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "90 Physical Sensor",
        "mode": "link",
        "links": [
            "8e0a247c544cc81f"
        ],
        "x": 645,
        "y": 740,
        "wires": []
    },
    {
        "id": "0ac8277c86d616a4",
        "type": "switch",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "90 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_90_Part_Reserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_Reserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_Low",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_High",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Part_in_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 740,
        "wires": [
            [
                "ea3f86d7ef2ae0b2"
            ],
            [
                "ca8e813dee59d3e5"
            ],
            [
                "2722a9e0a9e16b2e"
            ],
            [
                "b95247c0fe214d7b"
            ],
            [
                "956a8b6963038be8"
            ],
            [
                "76aaa4adb1dbed29"
            ],
            [
                "3fb1d59e69cc07a7"
            ]
        ]
    },
    {
        "id": "ea3f86d7ef2ae0b2",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "order": 0,
        "group": "e33f94144f1ed79e",
        "width": 0,
        "height": 0,
        "label": "Part in reserve position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Part_Reserve",
        "x": 1080,
        "y": 620,
        "wires": []
    },
    {
        "id": "ca8e813dee59d3e5",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "order": 0,
        "group": "e33f94144f1ed79e",
        "width": 0,
        "height": 0,
        "label": "Claw at delivery position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_Del",
        "x": 1060,
        "y": 660,
        "wires": []
    },
    {
        "id": "2722a9e0a9e16b2e",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "order": 0,
        "group": "e33f94144f1ed79e",
        "width": 0,
        "height": 0,
        "label": "Claw at cart position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_Cart",
        "x": 1070,
        "y": 700,
        "wires": []
    },
    {
        "id": "b95247c0fe214d7b",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "order": 0,
        "group": "e33f94144f1ed79e",
        "width": 0,
        "height": 0,
        "label": "Claw at reserve position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_Reserve",
        "x": 1080,
        "y": 740,
        "wires": []
    },
    {
        "id": "956a8b6963038be8",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "order": 0,
        "group": "e33f94144f1ed79e",
        "width": 0,
        "height": 0,
        "label": "Claw Low",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_Low",
        "x": 1070,
        "y": 780,
        "wires": []
    },
    {
        "id": "76aaa4adb1dbed29",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "order": 0,
        "group": "e33f94144f1ed79e",
        "width": 0,
        "height": 0,
        "label": "Claw high",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_High",
        "x": 1070,
        "y": 820,
        "wires": []
    },
    {
        "id": "3fb1d59e69cc07a7",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "order": 0,
        "group": "e33f94144f1ed79e",
        "width": 0,
        "height": 0,
        "label": "Part in claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Part_in_Claw",
        "x": 1080,
        "y": 860,
        "wires": []
    },
    {
        "id": "be4f1f0c254f4506",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_90_Part_Reserve\" : false,\n            \"O_90_Claw_Del\" : false,\n            \"O_90_Claw_Reserve\" : false,\n            \"O_90_Claw_Cart\" : false,\n            \"O_90_Claw_Low\" : false,\n            \"O_90_Claw_High\" : false,\n            \"O_90_Part_in_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "4cde2f21af84965d"
            ]
        ]
    },
    {
        "id": "8bd18eb7c75252f6",
        "type": "OpcUa-Client",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "endpoint": "ec71464ea3455bf5",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "794b5b61671857a5",
                "54b1e82eef9e16a7"
            ],
            [
                "be4f1f0c254f4506"
            ]
        ]
    },
    {
        "id": "4cde2f21af84965d",
        "type": "trigger",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "301958e643244736"
            ]
        ]
    },
    {
        "id": "93b9824950cf249f",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "8bd18eb7c75252f6"
            ]
        ]
    },
    {
        "id": "794b5b61671857a5",
        "type": "debug",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "90 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 580,
        "wires": []
    },
    {
        "id": "301958e643244736",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "122c2c6a562d4569"
            ]
        ]
    },
    {
        "id": "db33c0bb821b31ef",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "93b9824950cf249f"
            ]
        ]
    },
    {
        "id": "122c2c6a562d4569",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "9bece38cb2fd22d8"
            ]
        ]
    },
    {
        "id": "9bece38cb2fd22d8",
        "type": "file in",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "db33c0bb821b31ef"
            ]
        ]
    },
    {
        "id": "07f372a4fd29259d",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "item": "O_91_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Start",
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "253964af5901d63b"
            ]
        ]
    },
    {
        "id": "095f16fb559ce64e",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "item": "O_91_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Stop",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "253964af5901d63b"
            ]
        ]
    },
    {
        "id": "a435ab10672322ba",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "item": "O_91_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Key_Pos",
        "x": 480,
        "y": 1120,
        "wires": [
            [
                "253964af5901d63b"
            ]
        ]
    },
    {
        "id": "b1948d38bb933a25",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "item": "O_91_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Reset",
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "253964af5901d63b"
            ]
        ]
    },
    {
        "id": "e56565e48ce68274",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "item": "O_91_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Panel_I4",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "253964af5901d63b"
            ]
        ]
    },
    {
        "id": "ac3dd1c66241ae7c",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "item": "O_91_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Panel_I5",
        "x": 480,
        "y": 1240,
        "wires": [
            [
                "253964af5901d63b"
            ]
        ]
    },
    {
        "id": "ccf37a82f2135c7d",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "item": "O_91_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Panel_I6",
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "253964af5901d63b"
            ]
        ]
    },
    {
        "id": "253964af5901d63b",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "90 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "8e0a247c544cc81f"
        ],
        "x": 645,
        "y": 1180,
        "wires": []
    },
    {
        "id": "5f284cbd6294916b",
        "type": "switch",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "90 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_91_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1180,
        "wires": [
            [
                "885c3c785d43cc37"
            ],
            [
                "0f0fd8c22ff3f072"
            ],
            [
                "6b77e4b16c34881c"
            ],
            [
                "a454b9cd2da80667"
            ],
            [
                "537f551d7fa18f24"
            ],
            [
                "2e54d9e85ebab782"
            ],
            [
                "ecc7a98da25891b5"
            ],
            [
                "890507c923aa6d3f"
            ]
        ]
    },
    {
        "id": "885c3c785d43cc37",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "order": 0,
        "group": "5edaf6f20f77fea3",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Start",
        "x": 1050,
        "y": 1040,
        "wires": []
    },
    {
        "id": "0f0fd8c22ff3f072",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "order": 0,
        "group": "5edaf6f20f77fea3",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Stop",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "6b77e4b16c34881c",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "order": 0,
        "group": "5edaf6f20f77fea3",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Key_Pos",
        "x": 1060,
        "y": 1120,
        "wires": []
    },
    {
        "id": "a454b9cd2da80667",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "order": 0,
        "group": "5edaf6f20f77fea3",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Reset",
        "x": 1050,
        "y": 1160,
        "wires": []
    },
    {
        "id": "537f551d7fa18f24",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "order": 0,
        "group": "5edaf6f20f77fea3",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Panel_I4",
        "x": 1060,
        "y": 1200,
        "wires": []
    },
    {
        "id": "2e54d9e85ebab782",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "order": 0,
        "group": "5edaf6f20f77fea3",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Panel_I5",
        "x": 1060,
        "y": 1240,
        "wires": []
    },
    {
        "id": "ecc7a98da25891b5",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "order": 0,
        "group": "5edaf6f20f77fea3",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Panel_I6",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d8de48f203b4cfa8",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "item": "O_91_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Panel_I7",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "253964af5901d63b"
            ]
        ]
    },
    {
        "id": "890507c923aa6d3f",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "order": 0,
        "group": "5edaf6f20f77fea3",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Panel_I7",
        "x": 1060,
        "y": 1320,
        "wires": []
    },
    {
        "id": "25c8c2340332db4b",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 960,
        "wires": [
            [
                "c34dbdd2c56cfac3"
            ]
        ]
    },
    {
        "id": "7956df2a0d8c57d4",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 960,
        "wires": [
            [
                "25c8c2340332db4b"
            ]
        ]
    },
    {
        "id": "c34dbdd2c56cfac3",
        "type": "OpcUa-Client",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "endpoint": "ec71464ea3455bf5",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 960,
        "wires": [
            [
                "9e2acfdc87b4e4c8",
                "bd24380b95d5f19c"
            ],
            [
                "44f5229a878639de"
            ]
        ]
    },
    {
        "id": "5e644fcae172e92c",
        "type": "file in",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 960,
        "wires": [
            [
                "7956df2a0d8c57d4"
            ]
        ]
    },
    {
        "id": "9e2acfdc87b4e4c8",
        "type": "debug",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "90 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1000,
        "wires": []
    },
    {
        "id": "44f5229a878639de",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_91_Start\" : false,\n            \"O_91_Stop\" : false,\n            \"O_91_Key_Pos\" : false,\n            \"O_91_Reset\" : false,\n            \"O_91_Panel_I4\" : false,\n            \"O_91_Panel_I5\" : false,\n            \"O_91_Panel_I6\" : false,\n            \"O_91_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 960,
        "wires": [
            [
                "0345148913166178"
            ]
        ]
    },
    {
        "id": "65b223e43c78f602",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 960,
        "wires": [
            [
                "5e644fcae172e92c"
            ]
        ]
    },
    {
        "id": "0345148913166178",
        "type": "trigger",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 960,
        "wires": [
            [
                "044cb65150e54c59"
            ]
        ]
    },
    {
        "id": "044cb65150e54c59",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 960,
        "wires": [
            [
                "65b223e43c78f602"
            ]
        ]
    },
    {
        "id": "0f84f9d621e34558",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "item": "I_90_Claw_2_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "I_90_Claw_2_Cart",
        "x": 470,
        "y": 1500,
        "wires": [
            [
                "cf12d8777249af52"
            ]
        ]
    },
    {
        "id": "cf3c643c912de44f",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "item": "I_90_Claw_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "I_90_Claw_2_Del",
        "x": 470,
        "y": 1540,
        "wires": [
            [
                "cf12d8777249af52"
            ]
        ]
    },
    {
        "id": "449c58bfa507cfbe",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "item": "I_90_Claw_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "I_90_Claw_Down",
        "x": 470,
        "y": 1580,
        "wires": [
            [
                "cf12d8777249af52"
            ]
        ]
    },
    {
        "id": "4bdd8c58beb2115e",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "item": "I_90_Close_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "I_90_Close_Claw",
        "x": 470,
        "y": 1620,
        "wires": [
            [
                "cf12d8777249af52"
            ]
        ]
    },
    {
        "id": "cf12d8777249af52",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "90 Physical Actuators",
        "mode": "link",
        "links": [
            "8e0a247c544cc81f"
        ],
        "x": 645,
        "y": 1560,
        "wires": []
    },
    {
        "id": "1e5197c0d614deb6",
        "type": "switch",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "90 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_90_Claw_2_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_90_Claw_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_90_Claw_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_90_Close_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 1560,
        "wires": [
            [
                "9db9a7e2bf3bdd0f"
            ],
            [
                "4317356d730d9add"
            ],
            [
                "1cc209cb44d5ec75"
            ],
            [
                "265a6376a25bf015"
            ]
        ]
    },
    {
        "id": "3aa8f29785d0deb6",
        "type": "ui_switch",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "I_90_Claw_2_Cart",
        "label": "Moves claw to cart position",
        "tooltip": "",
        "group": "e896a5c0c82501cb",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1500,
        "wires": [
            [
                "0f84f9d621e34558"
            ]
        ]
    },
    {
        "id": "4b9a668aaf1e65ac",
        "type": "ui_switch",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "I_90_Claw_2_Del",
        "label": "Moves claw to delivery position",
        "tooltip": "",
        "group": "e896a5c0c82501cb",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1540,
        "wires": [
            [
                "cf3c643c912de44f"
            ]
        ]
    },
    {
        "id": "9296eb1fe39bd680",
        "type": "ui_switch",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "I_90_Claw_Down",
        "label": "Lowers claw",
        "tooltip": "",
        "group": "e896a5c0c82501cb",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1580,
        "wires": [
            [
                "449c58bfa507cfbe"
            ]
        ]
    },
    {
        "id": "591ecd48511403bf",
        "type": "ui_switch",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "I_90_Close_Claw",
        "label": "Closes claw",
        "tooltip": "",
        "group": "e896a5c0c82501cb",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1620,
        "wires": [
            [
                "4bdd8c58beb2115e"
            ]
        ]
    },
    {
        "id": "3653f09a37d2c56e",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1420,
        "wires": [
            [
                "56bf7992d352b57a"
            ]
        ]
    },
    {
        "id": "1888a3f6d85a6d49",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "3653f09a37d2c56e"
            ]
        ]
    },
    {
        "id": "56bf7992d352b57a",
        "type": "OpcUa-Client",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "endpoint": "ec71464ea3455bf5",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1420,
        "wires": [
            [
                "848e8677077826a6",
                "8f9ce11a0b811cdb"
            ],
            [
                "7518f54657f4a1c8"
            ]
        ]
    },
    {
        "id": "53290eac5893ed72",
        "type": "file in",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "1888a3f6d85a6d49"
            ]
        ]
    },
    {
        "id": "848e8677077826a6",
        "type": "debug",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "90 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1460,
        "wires": []
    },
    {
        "id": "7518f54657f4a1c8",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_90_Claw_2_Cart\" : false,\n            \"I_90_Claw_2_Del\" : false,\n            \"I_90_Claw_Down\" : false,\n            \"I_90_Close_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1420,
        "wires": [
            [
                "7ad134bf089ac3e6"
            ]
        ]
    },
    {
        "id": "67491b0a4ad0585b",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "53290eac5893ed72"
            ]
        ]
    },
    {
        "id": "7ad134bf089ac3e6",
        "type": "trigger",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1420,
        "wires": [
            [
                "1703f7f151d6aa39"
            ]
        ]
    },
    {
        "id": "1703f7f151d6aa39",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1420,
        "wires": [
            [
                "67491b0a4ad0585b"
            ]
        ]
    },
    {
        "id": "467e03d9fe735151",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "item": "I_91_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Led_Start",
        "x": 480,
        "y": 1800,
        "wires": [
            [
                "261f8fe56764cf3f"
            ]
        ]
    },
    {
        "id": "117948f594af4bab",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "item": "I_91_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Led_Reset",
        "x": 480,
        "y": 1840,
        "wires": [
            [
                "261f8fe56764cf3f"
            ]
        ]
    },
    {
        "id": "b9314cb3b3b4c929",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "item": "I_91_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Led_Extra1",
        "x": 470,
        "y": 1880,
        "wires": [
            [
                "261f8fe56764cf3f"
            ]
        ]
    },
    {
        "id": "ef2fca797146c18e",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "item": "I_91_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Led_Extra2",
        "x": 470,
        "y": 1920,
        "wires": [
            [
                "261f8fe56764cf3f"
            ]
        ]
    },
    {
        "id": "f3fbb0a2138014aa",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "item": "I_91_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Panel_O4",
        "x": 480,
        "y": 1960,
        "wires": [
            [
                "261f8fe56764cf3f"
            ]
        ]
    },
    {
        "id": "261f8fe56764cf3f",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "90 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "8e0a247c544cc81f"
        ],
        "x": 645,
        "y": 1940,
        "wires": []
    },
    {
        "id": "3ba3af385fa15bb4",
        "type": "switch",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "90 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_91_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1940,
        "wires": [
            [
                "7151ff3b09d1c1ed"
            ],
            [
                "ac15a5d087d4aad9"
            ],
            [
                "36fc90d7d534fe4e"
            ],
            [
                "bf1c4edd9830d0f3"
            ],
            [
                "95b6df25f6583035"
            ],
            [
                "5aceedde8b560454"
            ],
            [
                "b16f1d503bdbc6c7"
            ],
            [
                "81a11685b3f8ba37"
            ]
        ]
    },
    {
        "id": "66a9bba501962725",
        "type": "ui_switch",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "3e41ba95e9dcf89d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1800,
        "wires": [
            [
                "467e03d9fe735151"
            ]
        ]
    },
    {
        "id": "168193537e45bff8",
        "type": "ui_switch",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "3e41ba95e9dcf89d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1840,
        "wires": [
            [
                "117948f594af4bab"
            ]
        ]
    },
    {
        "id": "03ea819fe675ff6d",
        "type": "ui_switch",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "3e41ba95e9dcf89d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1880,
        "wires": [
            [
                "b9314cb3b3b4c929"
            ]
        ]
    },
    {
        "id": "1745876aa1e14b54",
        "type": "ui_switch",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "3e41ba95e9dcf89d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1920,
        "wires": [
            [
                "ef2fca797146c18e"
            ]
        ]
    },
    {
        "id": "7c647380386b9edd",
        "type": "ui_switch",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "3e41ba95e9dcf89d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1960,
        "wires": [
            [
                "f3fbb0a2138014aa"
            ]
        ]
    },
    {
        "id": "ed06d3f61d039d8a",
        "type": "ui_switch",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "3e41ba95e9dcf89d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2000,
        "wires": [
            [
                "199ecba906c88ffe"
            ]
        ]
    },
    {
        "id": "199ecba906c88ffe",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "item": "I_91_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Panel_O5",
        "x": 480,
        "y": 2000,
        "wires": [
            [
                "261f8fe56764cf3f"
            ]
        ]
    },
    {
        "id": "d9c496406e159b04",
        "type": "ui_switch",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "3e41ba95e9dcf89d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2040,
        "wires": [
            [
                "464fd05f7941c93b"
            ]
        ]
    },
    {
        "id": "464fd05f7941c93b",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "item": "I_91_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Panel_O6",
        "x": 480,
        "y": 2040,
        "wires": [
            [
                "261f8fe56764cf3f"
            ]
        ]
    },
    {
        "id": "fcf66e7d41ab312c",
        "type": "ui_switch",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "3e41ba95e9dcf89d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2080,
        "wires": [
            [
                "c18ecc39a3015af8"
            ]
        ]
    },
    {
        "id": "c18ecc39a3015af8",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "item": "I_91_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Panel_O7",
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "261f8fe56764cf3f"
            ]
        ]
    },
    {
        "id": "1cdc599fd026c341",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1720,
        "wires": [
            [
                "157041460bbce803"
            ]
        ]
    },
    {
        "id": "8a71623579019842",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1720,
        "wires": [
            [
                "1cdc599fd026c341"
            ]
        ]
    },
    {
        "id": "157041460bbce803",
        "type": "OpcUa-Client",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "endpoint": "ec71464ea3455bf5",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1720,
        "wires": [
            [
                "861aef9b6c1c480c",
                "3191b04be7d7d4b8"
            ],
            [
                "097729bd8d5778db"
            ]
        ]
    },
    {
        "id": "a8f72d3159c22440",
        "type": "file in",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1720,
        "wires": [
            [
                "8a71623579019842"
            ]
        ]
    },
    {
        "id": "861aef9b6c1c480c",
        "type": "debug",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "90 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1760,
        "wires": []
    },
    {
        "id": "097729bd8d5778db",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_91_Led_Start\" : false,\n            \"I_91_Led_Reset\" : false,\n            \"I_91_Led_Extra1\" : false,\n            \"I_91_Led_Extra2\" : false,\n            \"I_91_Panel_O4\" : false,\n            \"I_91_Panel_O5\" : false,\n            \"I_91_Panel_O6\" : false,\n            \"I_91_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1720,
        "wires": [
            [
                "b7001552a1faa353"
            ]
        ]
    },
    {
        "id": "0dc7ea6e6f910dbc",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1720,
        "wires": [
            [
                "a8f72d3159c22440"
            ]
        ]
    },
    {
        "id": "b7001552a1faa353",
        "type": "trigger",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1720,
        "wires": [
            [
                "fab32bb2a20b7c24"
            ]
        ]
    },
    {
        "id": "fab32bb2a20b7c24",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1720,
        "wires": [
            [
                "0dc7ea6e6f910dbc"
            ]
        ]
    },
    {
        "id": "2ce60a073f7a85a8",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "item": "F_92_Claw_2_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "F_92_Claw_2_Cart",
        "x": 470,
        "y": 2260,
        "wires": [
            [
                "5f589b7e49970af9"
            ]
        ]
    },
    {
        "id": "3ec9fa090a511026",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "item": "F_92_Claw_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "F_92_Claw_2_Del",
        "x": 470,
        "y": 2300,
        "wires": [
            [
                "5f589b7e49970af9"
            ]
        ]
    },
    {
        "id": "d26f45379c7205e7",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "item": "F_92_Claw_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "F_92_Claw_Down",
        "x": 470,
        "y": 2340,
        "wires": [
            [
                "5f589b7e49970af9"
            ]
        ]
    },
    {
        "id": "558ddc216456258e",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "item": "F_92_Close_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "F_92_Close_Claw",
        "x": 470,
        "y": 2380,
        "wires": [
            [
                "5f589b7e49970af9"
            ]
        ]
    },
    {
        "id": "5f589b7e49970af9",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "90 Physical Feedback",
        "mode": "link",
        "links": [
            "8e0a247c544cc81f"
        ],
        "x": 645,
        "y": 2320,
        "wires": []
    },
    {
        "id": "b0aba33452636f6f",
        "type": "switch",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "90 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_92_Claw_2_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_92_Claw_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_92_Claw_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_92_Close_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 2320,
        "wires": [
            [
                "492682ac7f7f10ae"
            ],
            [
                "05740d4f6c3fbde3"
            ],
            [
                "152b4edf53489c32"
            ],
            [
                "bae73b1ee9574570"
            ]
        ]
    },
    {
        "id": "492682ac7f7f10ae",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "order": 0,
        "group": "41c4a47d404ccd02",
        "width": 0,
        "height": 0,
        "label": "Moves claw to cart position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_92_Claw_2_Cart",
        "x": 1070,
        "y": 2260,
        "wires": []
    },
    {
        "id": "05740d4f6c3fbde3",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "order": 0,
        "group": "41c4a47d404ccd02",
        "width": 0,
        "height": 0,
        "label": "Moves claw to delivery position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_92_Claw_2_Del",
        "x": 1070,
        "y": 2300,
        "wires": []
    },
    {
        "id": "152b4edf53489c32",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "order": 0,
        "group": "41c4a47d404ccd02",
        "width": 0,
        "height": 0,
        "label": "Lowers claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_92_Claw_Down",
        "x": 1070,
        "y": 2340,
        "wires": []
    },
    {
        "id": "bae73b1ee9574570",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "order": 0,
        "group": "41c4a47d404ccd02",
        "width": 0,
        "height": 0,
        "label": "Closes claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_92_Close_Claw",
        "x": 1070,
        "y": 2380,
        "wires": []
    },
    {
        "id": "3facba2ddd9a1674",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2180,
        "wires": [
            [
                "d43f900d7bcc43ef"
            ]
        ]
    },
    {
        "id": "fa471da03ad65672",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2180,
        "wires": [
            [
                "3facba2ddd9a1674"
            ]
        ]
    },
    {
        "id": "d43f900d7bcc43ef",
        "type": "OpcUa-Client",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "endpoint": "ec71464ea3455bf5",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2180,
        "wires": [
            [
                "8c32ebcab89b4007",
                "3c3c2a960d361ca6"
            ],
            [
                "4ce0c64e21a30c3b"
            ]
        ]
    },
    {
        "id": "56ac04f7c1bd0c3c",
        "type": "file in",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2180,
        "wires": [
            [
                "fa471da03ad65672"
            ]
        ]
    },
    {
        "id": "8c32ebcab89b4007",
        "type": "debug",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "90 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2220,
        "wires": []
    },
    {
        "id": "4ce0c64e21a30c3b",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_92_Claw_2_Cart\" : false,\n            \"F_92_Claw_2_Del\" : false,\n            \"F_92_Claw_Down\" : false,\n            \"F_92_Close_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2180,
        "wires": [
            [
                "495c3f9c122838b9"
            ]
        ]
    },
    {
        "id": "2c0a64277952fbec",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2180,
        "wires": [
            [
                "56ac04f7c1bd0c3c"
            ]
        ]
    },
    {
        "id": "495c3f9c122838b9",
        "type": "trigger",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2180,
        "wires": [
            [
                "bce209c3c0c13369"
            ]
        ]
    },
    {
        "id": "bce209c3c0c13369",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2180,
        "wires": [
            [
                "2c0a64277952fbec"
            ]
        ]
    },
    {
        "id": "47c6f672355c69ee",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "item": "F_93_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Led_Start",
        "x": 480,
        "y": 2560,
        "wires": [
            [
                "6de1bb7768a15343"
            ]
        ]
    },
    {
        "id": "49804cda7657dfb6",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "item": "F_93_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Led_Reset",
        "x": 470,
        "y": 2600,
        "wires": [
            [
                "6de1bb7768a15343"
            ]
        ]
    },
    {
        "id": "048871b17afcb311",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "item": "F_93_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Led_Extra1",
        "x": 470,
        "y": 2640,
        "wires": [
            [
                "6de1bb7768a15343"
            ]
        ]
    },
    {
        "id": "f317de774243cb82",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "item": "F_93_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Led_Extra2",
        "x": 470,
        "y": 2680,
        "wires": [
            [
                "6de1bb7768a15343"
            ]
        ]
    },
    {
        "id": "95513a1d191874d9",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "item": "F_93_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Panel_O4",
        "x": 480,
        "y": 2720,
        "wires": [
            [
                "6de1bb7768a15343"
            ]
        ]
    },
    {
        "id": "87386babf6032c84",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "item": "F_93_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Panel_O5",
        "x": 480,
        "y": 2760,
        "wires": [
            [
                "6de1bb7768a15343"
            ]
        ]
    },
    {
        "id": "184b0ff69f3bd7d3",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "item": "F_93_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Panel_O6",
        "x": 480,
        "y": 2800,
        "wires": [
            [
                "6de1bb7768a15343"
            ]
        ]
    },
    {
        "id": "6de1bb7768a15343",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "90 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "8e0a247c544cc81f"
        ],
        "x": 645,
        "y": 2700,
        "wires": []
    },
    {
        "id": "ac0aa39612fc82c9",
        "type": "switch",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "90 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_93_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2700,
        "wires": [
            [
                "d3c2349ead3af20d"
            ],
            [
                "ebaf6f6299ceb1be"
            ],
            [
                "7a9322ebfed0f63d"
            ],
            [
                "6bc66ce29887f15d"
            ],
            [
                "dedc8bebf3365c21"
            ],
            [
                "607a57631c06e368"
            ],
            [
                "d7e74b39febb4844"
            ],
            [
                "7b3c6d22e4e61777"
            ]
        ]
    },
    {
        "id": "d3c2349ead3af20d",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "order": 0,
        "group": "018e5336b5eb1881",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Led_Start",
        "x": 1060,
        "y": 2560,
        "wires": []
    },
    {
        "id": "ebaf6f6299ceb1be",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "order": 0,
        "group": "018e5336b5eb1881",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Led_Reset",
        "x": 1070,
        "y": 2600,
        "wires": []
    },
    {
        "id": "7a9322ebfed0f63d",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "order": 0,
        "group": "018e5336b5eb1881",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Led_Extra1",
        "x": 1070,
        "y": 2640,
        "wires": []
    },
    {
        "id": "6bc66ce29887f15d",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "order": 0,
        "group": "018e5336b5eb1881",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Led_Extra2",
        "x": 1070,
        "y": 2680,
        "wires": []
    },
    {
        "id": "dedc8bebf3365c21",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "order": 0,
        "group": "018e5336b5eb1881",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Panel_O4",
        "x": 1060,
        "y": 2720,
        "wires": []
    },
    {
        "id": "607a57631c06e368",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "order": 0,
        "group": "018e5336b5eb1881",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Panel_O5",
        "x": 1060,
        "y": 2760,
        "wires": []
    },
    {
        "id": "d7e74b39febb4844",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "order": 0,
        "group": "018e5336b5eb1881",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Panel_O6",
        "x": 1060,
        "y": 2800,
        "wires": []
    },
    {
        "id": "2f4d1d3192f65903",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "item": "F_93_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Panel_O7",
        "x": 480,
        "y": 2840,
        "wires": [
            [
                "6de1bb7768a15343"
            ]
        ]
    },
    {
        "id": "7b3c6d22e4e61777",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "order": 0,
        "group": "018e5336b5eb1881",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Panel_O7",
        "x": 1060,
        "y": 2840,
        "wires": []
    },
    {
        "id": "467bab010babd181",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2480,
        "wires": [
            [
                "9aaa203c7bfc3b65"
            ]
        ]
    },
    {
        "id": "bc9cfea56dc09b36",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2480,
        "wires": [
            [
                "467bab010babd181"
            ]
        ]
    },
    {
        "id": "9aaa203c7bfc3b65",
        "type": "OpcUa-Client",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "endpoint": "ec71464ea3455bf5",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2480,
        "wires": [
            [
                "be37d6e7ea787ee0",
                "6554124d31b5989b"
            ],
            [
                "114d838896594f7f"
            ]
        ]
    },
    {
        "id": "021a8bbbd1b6cd98",
        "type": "file in",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2480,
        "wires": [
            [
                "bc9cfea56dc09b36"
            ]
        ]
    },
    {
        "id": "be37d6e7ea787ee0",
        "type": "debug",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "90 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2520,
        "wires": []
    },
    {
        "id": "114d838896594f7f",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_93_Led_Start\" : false,\n            \"F_93_Led_Reset\" : false,\n            \"F_93_Led_Extra1\" : false,\n            \"F_93_Led_Extra2\" : false,\n            \"F_93_Panel_O4\" : false,\n            \"F_93_Panel_O5\" : false,\n            \"F_93_Panel_O6\" : false,\n            \"F_93_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2480,
        "wires": [
            [
                "af531ec8fdca8a11"
            ]
        ]
    },
    {
        "id": "f4965dc58cd9396e",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2480,
        "wires": [
            [
                "021a8bbbd1b6cd98"
            ]
        ]
    },
    {
        "id": "af531ec8fdca8a11",
        "type": "trigger",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2480,
        "wires": [
            [
                "d9c5a34692c06748"
            ]
        ]
    },
    {
        "id": "d9c5a34692c06748",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2480,
        "wires": [
            [
                "f4965dc58cd9396e"
            ]
        ]
    },
    {
        "id": "ec26c3e970fcc29f",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "item": "C_92_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_92_Profibus",
        "x": 640,
        "y": 3020,
        "wires": [
            [
                "afd05e555e630f6a"
            ]
        ]
    },
    {
        "id": "f046e0cba6dfda6d",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "item": "C_95_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_95_Initialization",
        "x": 630,
        "y": 3060,
        "wires": [
            [
                "afd05e555e630f6a"
            ]
        ]
    },
    {
        "id": "9a600ed43e935730",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "item": "C_95_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "C_95_Start",
        "x": 650,
        "y": 3100,
        "wires": [
            [
                "afd05e555e630f6a"
            ]
        ]
    },
    {
        "id": "cf2058f313000bd4",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "item": "C_95_Cart2Del",
        "datatype": "Boolean",
        "value": "",
        "name": "C_95_Cart2Del",
        "x": 640,
        "y": 3140,
        "wires": [
            [
                "afd05e555e630f6a"
            ]
        ]
    },
    {
        "id": "5a2595b6a59c1a57",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "item": "C_95_Del2Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "C_95_Del2Cart",
        "x": 640,
        "y": 3180,
        "wires": [
            [
                "afd05e555e630f6a"
            ]
        ]
    },
    {
        "id": "afd05e555e630f6a",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "90 Control",
        "mode": "link",
        "links": [
            "8e0a247c544cc81f"
        ],
        "x": 805,
        "y": 3100,
        "wires": []
    },
    {
        "id": "0c055ac15650d38e",
        "type": "switch",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "90 C",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_92_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_95_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_95_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_95_Cart2Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_95_Del2Cart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1010,
        "y": 3100,
        "wires": [
            [
                "2c78119ab32fae37"
            ],
            [
                "053f6c899ee82f4b"
            ],
            [
                "05bdc64d33552670"
            ],
            [
                "adb80156f4abac53"
            ],
            [
                "9134100602db2e48"
            ]
        ]
    },
    {
        "id": "2c78119ab32fae37",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "order": 2,
        "group": "db369527e32a13be",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_92_Profibus",
        "x": 1200,
        "y": 3020,
        "wires": []
    },
    {
        "id": "053f6c899ee82f4b",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "order": 1,
        "group": "db369527e32a13be",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_95_Initialization",
        "x": 1210,
        "y": 3060,
        "wires": []
    },
    {
        "id": "09ad729d6a60424f",
        "type": "ui_dropdown",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "db369527e32a13be",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Cart to Delivery Mode",
                "value": "C_95_Cart2Del",
                "type": "str"
            },
            {
                "label": "Delivery to Cart Mode",
                "value": "C_95_Del2Cart",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 3160,
        "wires": [
            [
                "c002ac5a58f3a616",
                "57201a03e0808db3"
            ]
        ]
    },
    {
        "id": "c002ac5a58f3a616",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "C_95_Cart2Del",
        "func": "if (msg.payload === \"C_95_Cart2Del\") return { payload: true, topic: \"C_95_Cart2Del\"};\nelse return { payload: false, topic: \"C_95_Cart2Del\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3140,
        "wires": [
            [
                "cf2058f313000bd4"
            ]
        ]
    },
    {
        "id": "57201a03e0808db3",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "C_95_Del2Cart",
        "func": "if (msg.payload === \"C_95_Del2Cart\") return { payload: true, topic: \"C_95_Del2Cart\"};\nelse return { payload: false, topic: \"C_95_Del2Cart\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3180,
        "wires": [
            [
                "5a2595b6a59c1a57"
            ]
        ]
    },
    {
        "id": "dc3261a527d0979f",
        "type": "inject",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_95_Cart2Del",
        "payloadType": "str",
        "x": 190,
        "y": 3200,
        "wires": [
            [
                "09ad729d6a60424f"
            ]
        ]
    },
    {
        "id": "8330a7611ee5c5df",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2940,
        "wires": [
            [
                "578af1d8eea79a78"
            ]
        ]
    },
    {
        "id": "9405d386950f4e7c",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2940,
        "wires": [
            [
                "8330a7611ee5c5df"
            ]
        ]
    },
    {
        "id": "578af1d8eea79a78",
        "type": "OpcUa-Client",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "endpoint": "ec71464ea3455bf5",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2940,
        "wires": [
            [
                "307d31dea344f65e",
                "6fe368fe1905401f"
            ],
            [
                "e4dfd175d86c9654"
            ]
        ]
    },
    {
        "id": "13c400c779e24775",
        "type": "file in",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2940,
        "wires": [
            [
                "9405d386950f4e7c"
            ]
        ]
    },
    {
        "id": "307d31dea344f65e",
        "type": "debug",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "90 C",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2980,
        "wires": []
    },
    {
        "id": "e4dfd175d86c9654",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_92_Profibus\" : false,\n            \"C_95_Initialization\" : false,\n            \"C_95_Start\" : false,\n            \"C_95_Cart2Del\" : false,\n            \"C_95_Del2Cart\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2940,
        "wires": [
            [
                "badce356d623e98c"
            ]
        ]
    },
    {
        "id": "2f45fbeefe068588",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2940,
        "wires": [
            [
                "13c400c779e24775"
            ]
        ]
    },
    {
        "id": "badce356d623e98c",
        "type": "trigger",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2940,
        "wires": [
            [
                "b954e4c5efaca309"
            ]
        ]
    },
    {
        "id": "b954e4c5efaca309",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2940,
        "wires": [
            [
                "2f45fbeefe068588"
            ]
        ]
    },
    {
        "id": "63bb1919a5a7262c",
        "type": "comment",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "451aebc5ba9f8e89",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"A_\")) variableClass = \"AS-i\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "5a95b17a0cda2027"
            ]
        ]
    },
    {
        "id": "5a95b17a0cda2027",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Handling2_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "f0b48bb9697bfd2b"
            ]
        ]
    },
    {
        "id": "edab1cde3b155242",
        "type": "file",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5b376a4ea31a20c4",
        "type": "comment",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "f0b48bb9697bfd2b",
        "type": "OpcUa-Client",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "endpoint": "ec71464ea3455bf5",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "86b8f3f7de5222b4"
            ],
            [
                "56a0b418d22bf169",
                "2494dc4c33657af5"
            ]
        ]
    },
    {
        "id": "86b8f3f7de5222b4",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "768b93ffcfa43ae8",
                "562b90f6bd47dde8"
            ]
        ]
    },
    {
        "id": "768b93ffcfa43ae8",
        "type": "file",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "562b90f6bd47dde8",
        "type": "debug",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "46d1c605fcac25b8",
        "type": "comment",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "07c5b4b04e9f8639",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "f209822467a0b51e"
            ]
        ]
    },
    {
        "id": "d5067b8ee95ee2d8",
        "type": "OpcUa-Client",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "endpoint": "ec71464ea3455bf5",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "391b35b9c751b42d"
            ],
            []
        ]
    },
    {
        "id": "391b35b9c751b42d",
        "type": "debug",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "8e0a247c544cc81f",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Write_Hand2",
        "links": [
            "253964af5901d63b",
            "afd05e555e630f6a",
            "261f8fe56764cf3f",
            "06faa55bb8738828",
            "5f589b7e49970af9",
            "6de1bb7768a15343",
            "cf12d8777249af52",
            "df9ce3d4414cd34e"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "240257af997e9394"
            ]
        ]
    },
    {
        "id": "240257af997e9394",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "1fd95972bf57f450"
            ]
        ]
    },
    {
        "id": "1fd95972bf57f450",
        "type": "file in",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "07c5b4b04e9f8639"
            ]
        ]
    },
    {
        "id": "f209822467a0b51e",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "d5067b8ee95ee2d8"
            ]
        ]
    },
    {
        "id": "3189f1fa7b5b04a4",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "CSV Link",
        "links": [
            "56a0b418d22bf169"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "4f9b20d7f61330df"
            ]
        ]
    },
    {
        "id": "4f9b20d7f61330df",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "11fdbf2385745128"
            ]
        ]
    },
    {
        "id": "11fdbf2385745128",
        "type": "trigger",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "edab1cde3b155242"
            ]
        ]
    },
    {
        "id": "56a0b418d22bf169",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "3189f1fa7b5b04a4",
            "8fbab37cf8e0dc95"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "8fbab37cf8e0dc95",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "CSV Link",
        "links": [
            "56a0b418d22bf169"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "3ae630225419508a"
            ]
        ]
    },
    {
        "id": "3ae630225419508a",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_90_Part_Reserve\" : false,\n    \"O_90_Claw_Del\" : false,\n    \"O_90_Claw_Reserve\" : false,\n    \"O_90_Claw_Cart\" : false,\n    \"O_90_Claw_Low\" : false,\n    \"O_90_Claw_High\" : false,\n    \"O_90_Part_in_Claw\" : false,\n    \"O_91_Start\" : false,\n    \"O_91_Stop\" : false,\n    \"O_91_Key_Pos\" : false,\n    \"O_91_Reset\" : false,\n    \"O_91_Panel_I4\" : false,\n    \"O_91_Panel_I5\" : false,\n    \"O_91_Panel_I6\" : false,\n    \"O_91_Panel_I7\" : false,\n    \"F_92_Claw_2_Cart\" : false,\n    \"F_92_Claw_2_Del\" : false,\n    \"F_92_Claw_Down\" : false,\n    \"F_92_Close_Claw\" : false,\n    \"F_93_Led_Start\" : false,\n    \"F_93_Led_Reset\" : false,\n    \"F_93_Led_Extra1\" : false,\n    \"F_93_Led_Extra2\" : false,\n    \"F_93_Panel_O4\" : false,\n    \"F_93_Panel_O5\" : false,\n    \"F_93_Panel_O6\" : false,\n    \"F_93_Panel_O7\" : false,\n    \"A_94_Request\" : false,\n    \"A_94_No_Cart\" : false,\n    \"A_94_Cart_Full\" : false,\n    \"C_95_Initialization\" : false,\n    \"I_90_Claw_2_Cart\" : false,\n    \"I_90_Claw_2_Del\" : false,\n    \"I_90_Claw_Down\" : false,\n    \"I_90_Close_Claw\" : false,\n    \"I_91_Led_Start\" : false,\n    \"I_91_Led_Reset\" : false,\n    \"I_91_Led_Extra1\" : false,\n    \"I_91_Led_Extra2\" : false,\n    \"I_91_Panel_O4\" : false,\n    \"I_91_Panel_O5\" : false,\n    \"I_91_Panel_O6\" : false,\n    \"I_91_Panel_O7\" : false,\n    \"C_92_Profibus\" : false,\n    \"A_94_Cart_Stat\" : false,\n    \"A_94_Cart_Next\" : false,\n    \"A_94_Optic\" : false,\n    \"A_94_Count\" : false,\n    \"A_94_Pist_Bck\" : false,\n    \"A_94_Release_FB\" : false,\n    \"C_95_Start\" : false,\n    \"C_95_Cart2Del\" : false,\n    \"C_95_Del2Cart\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "1f91bb7dbb87cada"
            ]
        ]
    },
    {
        "id": "1f91bb7dbb87cada",
        "type": "trigger",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "451aebc5ba9f8e89"
            ]
        ]
    },
    {
        "id": "c027ac31175a6f26",
        "type": "debug",
        "z": "59c61210c102e4a0",
        "g": "2263a560dfae91c9",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "d110733ed783a6f9",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "item": "A_94_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Cart_Stat",
        "x": 480,
        "y": 3380,
        "wires": [
            [
                "df9ce3d4414cd34e"
            ]
        ]
    },
    {
        "id": "d6743c616523e5d6",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "item": "A_94_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Cart_Next",
        "x": 470,
        "y": 3420,
        "wires": [
            [
                "df9ce3d4414cd34e"
            ]
        ]
    },
    {
        "id": "dffa0982220248ca",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "item": "A_94_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Optic",
        "x": 490,
        "y": 3460,
        "wires": [
            [
                "df9ce3d4414cd34e"
            ]
        ]
    },
    {
        "id": "03bd84514f223190",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "item": "A_94_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Count",
        "x": 490,
        "y": 3500,
        "wires": [
            [
                "df9ce3d4414cd34e"
            ]
        ]
    },
    {
        "id": "71b864667e14f2ea",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "item": "A_94_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Pist_Bck",
        "x": 480,
        "y": 3540,
        "wires": [
            [
                "df9ce3d4414cd34e"
            ]
        ]
    },
    {
        "id": "1a4ac09fdb543565",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "item": "A_94_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Release_FB",
        "x": 470,
        "y": 3580,
        "wires": [
            [
                "df9ce3d4414cd34e"
            ]
        ]
    },
    {
        "id": "06bd0aa551d41162",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "item": "A_94_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Request",
        "x": 480,
        "y": 3620,
        "wires": [
            [
                "df9ce3d4414cd34e"
            ]
        ]
    },
    {
        "id": "df9ce3d4414cd34e",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "90 AS-i",
        "mode": "link",
        "links": [
            "8e0a247c544cc81f"
        ],
        "x": 645,
        "y": 3540,
        "wires": []
    },
    {
        "id": "988289a4dcafc6eb",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3300,
        "wires": [
            [
                "538f692e718390d9"
            ]
        ]
    },
    {
        "id": "538f692e718390d9",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3300,
        "wires": [
            [
                "330feaf9400efb4f"
            ]
        ]
    },
    {
        "id": "330feaf9400efb4f",
        "type": "file in",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3300,
        "wires": [
            [
                "792006c7b577491b"
            ]
        ]
    },
    {
        "id": "792006c7b577491b",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3300,
        "wires": [
            [
                "f9a5d5a219dec9f6"
            ]
        ]
    },
    {
        "id": "f9a5d5a219dec9f6",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3300,
        "wires": [
            [
                "8f63a653e94e8133"
            ]
        ]
    },
    {
        "id": "8f63a653e94e8133",
        "type": "OpcUa-Client",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "endpoint": "ec71464ea3455bf5",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3300,
        "wires": [
            [
                "9185e850ca03e215",
                "c1eff053d9e9a76b"
            ],
            [
                "8640be8172a857a8"
            ]
        ]
    },
    {
        "id": "536629e07e478cb2",
        "type": "switch",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "90 AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A_94_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_No_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Cart_Full",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 3540,
        "wires": [
            [
                "1173a9af0fd9abba"
            ],
            [
                "467e1add1ca6d41e"
            ],
            [
                "fd4329bcc4072463"
            ],
            [
                "7c5a8b036c86c284"
            ],
            [
                "915dee70ace19a31"
            ],
            [
                "0a8da1678e2c8ba8"
            ],
            [
                "df1cc32048f08947"
            ],
            [
                "f18cc0abad5ac806"
            ],
            [
                "e6d11ae489842f57"
            ]
        ]
    },
    {
        "id": "1173a9af0fd9abba",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "order": 0,
        "group": "a00547b320dc993c",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Cart_Stat",
        "x": 1060,
        "y": 3380,
        "wires": []
    },
    {
        "id": "467e1add1ca6d41e",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "order": 0,
        "group": "a00547b320dc993c",
        "width": 0,
        "height": 0,
        "label": "Cart near next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Cart_Next",
        "x": 1070,
        "y": 3420,
        "wires": []
    },
    {
        "id": "fd4329bcc4072463",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "order": 0,
        "group": "a00547b320dc993c",
        "width": 0,
        "height": 0,
        "label": "Optic sensor on station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Optic",
        "x": 1050,
        "y": 3460,
        "wires": []
    },
    {
        "id": "7c5a8b036c86c284",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "order": 0,
        "group": "a00547b320dc993c",
        "width": 0,
        "height": 0,
        "label": "Cart count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Count",
        "x": 1050,
        "y": 3500,
        "wires": []
    },
    {
        "id": "915dee70ace19a31",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "order": 0,
        "group": "a00547b320dc993c",
        "width": 0,
        "height": 0,
        "label": "Piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Pist_Bck",
        "x": 1060,
        "y": 3540,
        "wires": []
    },
    {
        "id": "0a8da1678e2c8ba8",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "order": 0,
        "group": "a00547b320dc993c",
        "width": 0,
        "height": 0,
        "label": "Pin release feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Release_FB",
        "x": 1070,
        "y": 3580,
        "wires": []
    },
    {
        "id": "df1cc32048f08947",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "order": 0,
        "group": "a00547b320dc993c",
        "width": 0,
        "height": 0,
        "label": "Request cart",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Request",
        "x": 1060,
        "y": 3620,
        "wires": []
    },
    {
        "id": "15325b74d0147b10",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "item": "A_94_No_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_No_Cart",
        "x": 480,
        "y": 3660,
        "wires": [
            [
                "df9ce3d4414cd34e"
            ]
        ]
    },
    {
        "id": "f18cc0abad5ac806",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "order": 0,
        "group": "a00547b320dc993c",
        "width": 0,
        "height": 0,
        "label": "No Cart at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_No_Cart",
        "x": 1060,
        "y": 3660,
        "wires": []
    },
    {
        "id": "e6d11ae489842f57",
        "type": "ui_led",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "order": 0,
        "group": "a00547b320dc993c",
        "width": 0,
        "height": 0,
        "label": "Cart Full at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Cart_Full",
        "x": 1060,
        "y": 3700,
        "wires": []
    },
    {
        "id": "a838ea65021be9b5",
        "type": "OpcUa-Item",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "item": "A_94_Cart_Full",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Cart_Full",
        "x": 480,
        "y": 3700,
        "wires": [
            [
                "df9ce3d4414cd34e"
            ]
        ]
    },
    {
        "id": "9185e850ca03e215",
        "type": "debug",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "90 AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 3340,
        "wires": []
    },
    {
        "id": "8640be8172a857a8",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"A_94_Cart_Stat\" : false,\n            \"A_94_Cart_Next\" : false,\n            \"A_94_Optic\" : false,\n            \"A_94_Count\" : false,\n            \"A_94_Pist_Bck\" : false,\n            \"A_94_Release_FB\" : false,\n            \"A_94_Request\" : false,\n            \"A_94_No_Cart\" : false,\n            \"A_94_Cart_Full\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3300,
        "wires": [
            [
                "8e34aa12cf7d143e"
            ]
        ]
    },
    {
        "id": "8e34aa12cf7d143e",
        "type": "trigger",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3300,
        "wires": [
            [
                "988289a4dcafc6eb"
            ]
        ]
    },
    {
        "id": "0bc0d9cdc7a12672",
        "type": "ui_switch",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "C_95_Start",
        "label": "Start",
        "tooltip": "Start Production",
        "group": "db369527e32a13be",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 3100,
        "wires": [
            [
                "9a600ed43e935730"
            ]
        ]
    },
    {
        "id": "2881de38a15b6aa7",
        "type": "OpcUa-Server",
        "z": "59c61210c102e4a0",
        "g": "2263a560dfae91c9",
        "port": "53889",
        "name": "Server: Handling 2",
        "endpoint": "",
        "users": "",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Handling2",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": 0,
        "maxNodesPerHistoryReadData": 0,
        "maxNodesPerHistoryReadEvents": 0,
        "maxNodesPerHistoryUpdateData": 0,
        "maxNodesPerRead": 0,
        "maxNodesPerWrite": 0,
        "maxNodesPerMethodCall": 0,
        "maxNodesPerRegisterNodes": 0,
        "maxNodesPerNodeManagement": 0,
        "maxMonitoredItemsPerCall": 0,
        "maxNodesPerHistoryUpdateEvents": 0,
        "maxNodesPerTranslateBrowsePathsToNodeIds": 0,
        "maxConnectionsPerEndpoint": 20,
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": 20,
        "x": 130,
        "y": 60,
        "wires": [
            [
                "c027ac31175a6f26"
            ]
        ]
    },
    {
        "id": "c8a2ad6ae423a05e",
        "type": "debug",
        "z": "59c61210c102e4a0",
        "g": "634be726669e1e3a",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "06c281fab16e0285",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "634be726669e1e3a",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "9821b08ea0ba6aa8",
            "523f0fea2ea53b5a",
            "d083414310cd2cbd",
            "5d1433ba91347c1a",
            "387f6050366560f3",
            "6a6d275d488a4d0b"
        ],
        "x": 825,
        "y": 60,
        "wires": []
    },
    {
        "id": "74dda970c5a9a4b2",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "O_90_Part_Reserve",
        "func": "if (msg.topic === \"O_90_Part_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Part_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 620,
        "wires": [
            [
                "08a28d34c76a49c1"
            ]
        ]
    },
    {
        "id": "9821b08ea0ba6aa8",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "S7 PS",
        "links": [
            "06c281fab16e0285"
        ],
        "x": 55,
        "y": 740,
        "wires": [
            [
                "74dda970c5a9a4b2",
                "50206ce8d1e152bd",
                "fc9b602417aa4e65",
                "de926af2254792b1",
                "fbe3a8f939f96a3e",
                "a171efa4ad9c9818",
                "27c19c6c0cc556b7"
            ]
        ]
    },
    {
        "id": "fbe3a8f939f96a3e",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "O_90_Claw_Low",
        "func": "if (msg.topic === \"O_90_Claw_Low\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_Low\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 780,
        "wires": [
            [
                "ac0ad9fbd201ba36"
            ]
        ]
    },
    {
        "id": "50206ce8d1e152bd",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "O_90_Claw_Del",
        "func": "if (msg.topic === \"O_90_Claw_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 660,
        "wires": [
            [
                "76e5ab889da0c2a9"
            ]
        ]
    },
    {
        "id": "fc9b602417aa4e65",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "O_90_Claw_Cart",
        "func": "if (msg.topic === \"O_90_Claw_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 700,
        "wires": [
            [
                "13139c34a07b7abd"
            ]
        ]
    },
    {
        "id": "de926af2254792b1",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "O_90_Claw_Reserve",
        "func": "if (msg.topic === \"O_90_Claw_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 740,
        "wires": [
            [
                "b1dfa01461175ee6"
            ]
        ]
    },
    {
        "id": "a171efa4ad9c9818",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "O_90_Claw_High",
        "func": "if (msg.topic === \"O_90_Claw_High\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_High\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 820,
        "wires": [
            [
                "82d9bc75f576fd8e"
            ]
        ]
    },
    {
        "id": "27c19c6c0cc556b7",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "O_90_Part_in_Claw",
        "func": "if (msg.topic === \"O_90_Part_in_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Part_in_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 860,
        "wires": [
            [
                "2ca26c250c6deb68"
            ]
        ]
    },
    {
        "id": "54b1e82eef9e16a7",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "Sub Out 90 PS",
        "mode": "link",
        "links": [
            "110deeef4f5fc6a6"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "110deeef4f5fc6a6",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "Sub In 90 PS",
        "links": [
            "54b1e82eef9e16a7"
        ],
        "x": 775,
        "y": 740,
        "wires": [
            [
                "0ac8277c86d616a4"
            ]
        ]
    },
    {
        "id": "bd24380b95d5f19c",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "Sub Out 90 AS",
        "mode": "link",
        "links": [
            "ede121e46c074adb"
        ],
        "x": 1295,
        "y": 960,
        "wires": []
    },
    {
        "id": "ede121e46c074adb",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "Sub In 90 AS",
        "links": [
            "bd24380b95d5f19c"
        ],
        "x": 775,
        "y": 1180,
        "wires": [
            [
                "5f284cbd6294916b"
            ]
        ]
    },
    {
        "id": "1edc461a3449c1c2",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "O_91_Start",
        "func": "if (msg.topic === \"O_91_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "07f372a4fd29259d"
            ]
        ]
    },
    {
        "id": "523f0fea2ea53b5a",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "S7 AS",
        "links": [
            "06c281fab16e0285"
        ],
        "x": 55,
        "y": 1180,
        "wires": [
            [
                "1edc461a3449c1c2",
                "1be1f8dd83bae203",
                "85040faddb6961d2",
                "f591b02c30f8b551",
                "35eb04167ea96260",
                "93085287396ea01c",
                "a25e49f8438648f0",
                "6d72a6e3bc6eacc7"
            ]
        ]
    },
    {
        "id": "35eb04167ea96260",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "O_91_Panel_I4",
        "func": "if (msg.topic === \"O_91_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "e56565e48ce68274"
            ]
        ]
    },
    {
        "id": "1be1f8dd83bae203",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "O_91_Stop",
        "func": "if (msg.topic === \"O_91_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "095f16fb559ce64e"
            ]
        ]
    },
    {
        "id": "85040faddb6961d2",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "O_91_Key_Pos",
        "func": "if (msg.topic === \"O_91_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "a435ab10672322ba"
            ]
        ]
    },
    {
        "id": "f591b02c30f8b551",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "O_91_Reset",
        "func": "if (msg.topic === \"O_91_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "b1948d38bb933a25"
            ]
        ]
    },
    {
        "id": "93085287396ea01c",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "O_91_Panel_I5",
        "func": "if (msg.topic === \"O_91_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1240,
        "wires": [
            [
                "ac3dd1c66241ae7c"
            ]
        ]
    },
    {
        "id": "a25e49f8438648f0",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "O_91_Panel_I6",
        "func": "if (msg.topic === \"O_91_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "ccf37a82f2135c7d"
            ]
        ]
    },
    {
        "id": "6d72a6e3bc6eacc7",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "O_91_Panel_I7",
        "func": "if (msg.topic === \"O_91_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "d8de48f203b4cfa8"
            ]
        ]
    },
    {
        "id": "8f9ce11a0b811cdb",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "Sub Out 90 PA",
        "mode": "link",
        "links": [
            "c6c76f72d619705e"
        ],
        "x": 1295,
        "y": 1420,
        "wires": []
    },
    {
        "id": "c6c76f72d619705e",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "Sub In 90 PA",
        "links": [
            "8f9ce11a0b811cdb"
        ],
        "x": 775,
        "y": 1560,
        "wires": [
            [
                "1e5197c0d614deb6"
            ]
        ]
    },
    {
        "id": "3191b04be7d7d4b8",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "Sub Out 90 AA",
        "mode": "link",
        "links": [
            "57f1a9d1af40adb6"
        ],
        "x": 1295,
        "y": 1720,
        "wires": []
    },
    {
        "id": "57f1a9d1af40adb6",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "Sub In 90 AA",
        "links": [
            "3191b04be7d7d4b8"
        ],
        "x": 775,
        "y": 1940,
        "wires": [
            [
                "3ba3af385fa15bb4"
            ]
        ]
    },
    {
        "id": "3c3c2a960d361ca6",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "Sub Out 90 PF",
        "mode": "link",
        "links": [
            "6612c9a788329f93"
        ],
        "x": 1295,
        "y": 2180,
        "wires": []
    },
    {
        "id": "6612c9a788329f93",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "Sub In 90 PF",
        "links": [
            "3c3c2a960d361ca6"
        ],
        "x": 775,
        "y": 2320,
        "wires": [
            [
                "b0aba33452636f6f"
            ]
        ]
    },
    {
        "id": "481c0c393977b258",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "F_92_Claw_2_Cart",
        "func": "if (msg.topic === \"F_92_Claw_2_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_92_Claw_2_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2260,
        "wires": [
            [
                "2ce60a073f7a85a8"
            ]
        ]
    },
    {
        "id": "d083414310cd2cbd",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "S7 PF",
        "links": [
            "06c281fab16e0285"
        ],
        "x": 55,
        "y": 2320,
        "wires": [
            [
                "481c0c393977b258",
                "4c8e9eed2d6c0af2",
                "b373376db0761036",
                "75c2bb7d2b4808b7"
            ]
        ]
    },
    {
        "id": "4c8e9eed2d6c0af2",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "F_92_Claw_2_Del",
        "func": "if (msg.topic === \"F_92_Claw_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_92_Claw_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2300,
        "wires": [
            [
                "3ec9fa090a511026"
            ]
        ]
    },
    {
        "id": "b373376db0761036",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "F_92_Claw_Down",
        "func": "if (msg.topic === \"F_92_Claw_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_92_Claw_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2340,
        "wires": [
            [
                "d26f45379c7205e7"
            ]
        ]
    },
    {
        "id": "75c2bb7d2b4808b7",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "F_92_Close_Claw",
        "func": "if (msg.topic === \"F_92_Close_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_92_Close_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2380,
        "wires": [
            [
                "558ddc216456258e"
            ]
        ]
    },
    {
        "id": "6554124d31b5989b",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "Sub Out 90 AF",
        "mode": "link",
        "links": [
            "a4d116264f0fa25f"
        ],
        "x": 1295,
        "y": 2480,
        "wires": []
    },
    {
        "id": "a4d116264f0fa25f",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "Sub In 90 AF",
        "links": [
            "6554124d31b5989b"
        ],
        "x": 775,
        "y": 2700,
        "wires": [
            [
                "ac0aa39612fc82c9"
            ]
        ]
    },
    {
        "id": "804c9d220ee281ea",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "F_93_Led_Start",
        "func": "if (msg.topic === \"F_93_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2560,
        "wires": [
            [
                "47c6f672355c69ee"
            ]
        ]
    },
    {
        "id": "5d1433ba91347c1a",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "S7 AF",
        "links": [
            "06c281fab16e0285"
        ],
        "x": 55,
        "y": 2700,
        "wires": [
            [
                "804c9d220ee281ea",
                "e1c28163c4cdf096",
                "1d04bb4226b9f629",
                "a4021c8761875c7e",
                "0bf6af175e071160",
                "37577e5fbde3fa9a",
                "f1da6c0ab2cf7cf7",
                "02ce5f9480961c3c"
            ]
        ]
    },
    {
        "id": "0bf6af175e071160",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "F_93_Panel_O4",
        "func": "if (msg.topic === \"F_93_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2720,
        "wires": [
            [
                "95513a1d191874d9"
            ]
        ]
    },
    {
        "id": "e1c28163c4cdf096",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "F_93_Led_Reset",
        "func": "if (msg.topic === \"F_93_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2600,
        "wires": [
            [
                "49804cda7657dfb6"
            ]
        ]
    },
    {
        "id": "1d04bb4226b9f629",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "F_93_Led_Extra1",
        "func": "if (msg.topic === \"F_93_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2640,
        "wires": [
            [
                "048871b17afcb311"
            ]
        ]
    },
    {
        "id": "a4021c8761875c7e",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "F_93_Led_Extra2",
        "func": "if (msg.topic === \"F_93_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2680,
        "wires": [
            [
                "f317de774243cb82"
            ]
        ]
    },
    {
        "id": "37577e5fbde3fa9a",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "F_93_Panel_O5",
        "func": "if (msg.topic === \"F_93_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2760,
        "wires": [
            [
                "87386babf6032c84"
            ]
        ]
    },
    {
        "id": "f1da6c0ab2cf7cf7",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "F_93_Panel_O6",
        "func": "if (msg.topic === \"F_93_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2800,
        "wires": [
            [
                "184b0ff69f3bd7d3"
            ]
        ]
    },
    {
        "id": "02ce5f9480961c3c",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "F_93_Panel_O7",
        "func": "if (msg.topic === \"F_93_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2840,
        "wires": [
            [
                "2f4d1d3192f65903"
            ]
        ]
    },
    {
        "id": "6fe368fe1905401f",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "Sub Out 90 C",
        "mode": "link",
        "links": [
            "35fdd1c4b4dac7e7"
        ],
        "x": 1295,
        "y": 2940,
        "wires": []
    },
    {
        "id": "35fdd1c4b4dac7e7",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "Sub In 90 C",
        "links": [
            "6fe368fe1905401f"
        ],
        "x": 915,
        "y": 3100,
        "wires": [
            [
                "0c055ac15650d38e"
            ]
        ]
    },
    {
        "id": "387f6050366560f3",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "S7 C",
        "links": [
            "06c281fab16e0285"
        ],
        "x": 55,
        "y": 3040,
        "wires": [
            [
                "acba3f3a5bcc7cc8",
                "be61ef867b80e51f"
            ]
        ]
    },
    {
        "id": "be61ef867b80e51f",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "C_95_Initialization",
        "func": "if (msg.topic === \"C_95_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_95_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3060,
        "wires": [
            [
                "f046e0cba6dfda6d"
            ]
        ]
    },
    {
        "id": "acba3f3a5bcc7cc8",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "C_92_Profibus",
        "func": "if (msg.topic === \"C_92_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_92_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3020,
        "wires": [
            [
                "ec26c3e970fcc29f"
            ]
        ]
    },
    {
        "id": "c1eff053d9e9a76b",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "Sub Out 90 AS-i",
        "mode": "link",
        "links": [
            "5c57f609ae23ca07"
        ],
        "x": 1295,
        "y": 3300,
        "wires": []
    },
    {
        "id": "5c57f609ae23ca07",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "Sub In 90 AF",
        "links": [
            "c1eff053d9e9a76b"
        ],
        "x": 755,
        "y": 3540,
        "wires": [
            [
                "536629e07e478cb2"
            ]
        ]
    },
    {
        "id": "468e6a91329799ab",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "A_94_Cart_Stat",
        "func": "if (msg.topic === \"A_94_Cart_Stat\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Cart_Stat\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3380,
        "wires": [
            [
                "d110733ed783a6f9"
            ]
        ]
    },
    {
        "id": "6a6d275d488a4d0b",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "S7 AS-i",
        "links": [
            "06c281fab16e0285"
        ],
        "x": 55,
        "y": 3540,
        "wires": [
            [
                "468e6a91329799ab",
                "2b04a2c33bfad721",
                "952b850767384f93",
                "33c8dad9ea69a93c",
                "2e4ec86c5d5cc794",
                "a497b51fbc65f32a",
                "50869085dff9569d",
                "8dd16b80ac614085",
                "86efec31f18488a3"
            ]
        ]
    },
    {
        "id": "2e4ec86c5d5cc794",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "A_94_Pist_Bck",
        "func": "if (msg.topic === \"A_94_Pist_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Pist_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3540,
        "wires": [
            [
                "71b864667e14f2ea"
            ]
        ]
    },
    {
        "id": "2b04a2c33bfad721",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "A_94_Cart_Next",
        "func": "if (msg.topic === \"A_94_Cart_Next\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Cart_Next\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3420,
        "wires": [
            [
                "d6743c616523e5d6"
            ]
        ]
    },
    {
        "id": "952b850767384f93",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "A_94_Optic",
        "func": "if (msg.topic === \"A_94_Optic\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Optic\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3460,
        "wires": [
            [
                "dffa0982220248ca"
            ]
        ]
    },
    {
        "id": "33c8dad9ea69a93c",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "A_94_Count",
        "func": "if (msg.topic === \"A_94_Count\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Count\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3500,
        "wires": [
            [
                "03bd84514f223190"
            ]
        ]
    },
    {
        "id": "a497b51fbc65f32a",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "A_94_Release_FB",
        "func": "if (msg.topic === \"A_94_Release_FB\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Release_FB\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3580,
        "wires": [
            [
                "1a4ac09fdb543565"
            ]
        ]
    },
    {
        "id": "50869085dff9569d",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "A_94_Request",
        "func": "if (msg.topic === \"A_94_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3620,
        "wires": [
            [
                "06bd0aa551d41162"
            ]
        ]
    },
    {
        "id": "8dd16b80ac614085",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "A_94_No_Cart",
        "func": "if (msg.topic === \"A_94_No_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_No_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3660,
        "wires": [
            [
                "15325b74d0147b10"
            ]
        ]
    },
    {
        "id": "86efec31f18488a3",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "A_94_Cart_Full",
        "func": "if (msg.topic === \"A_94_Cart_Full\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Cart_Full\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3700,
        "wires": [
            [
                "a838ea65021be9b5"
            ]
        ]
    },
    {
        "id": "591d00dc07eac48b",
        "type": "mqtt in",
        "z": "59c61210c102e4a0",
        "g": "634be726669e1e3a",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d99579db50330f02",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "4842725f6f06ebbe"
            ]
        ]
    },
    {
        "id": "4842725f6f06ebbe",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "634be726669e1e3a",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "06c281fab16e0285",
                "c8a2ad6ae423a05e"
            ]
        ]
    },
    {
        "id": "2494dc4c33657af5",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "bc18228b5cbebd9c"
            ]
        ]
    },
    {
        "id": "bc18228b5cbebd9c",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "fe2f195af845ceea",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "1ed4ba4e3b5ffe9f",
            "c24a9b438c73fa21",
            "27cbb6cfd1728564",
            "fb242041b26a5192",
            "a832e59338fa2611",
            "9773d97524bbf51e",
            "58ad998751ecd7f6",
            "a76314bee2de47d4"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "1ed4ba4e3b5ffe9f",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "6d3466125999caf2",
        "name": "Read AS-i",
        "links": [
            "bc18228b5cbebd9c"
        ],
        "x": 55,
        "y": 3300,
        "wires": [
            [
                "8640be8172a857a8"
            ]
        ]
    },
    {
        "id": "c24a9b438c73fa21",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "Read C",
        "links": [
            "bc18228b5cbebd9c"
        ],
        "x": 55,
        "y": 2940,
        "wires": [
            [
                "e4dfd175d86c9654"
            ]
        ]
    },
    {
        "id": "27cbb6cfd1728564",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "1b8013576f09c4ad",
        "name": "Read AF",
        "links": [
            "bc18228b5cbebd9c"
        ],
        "x": 55,
        "y": 2480,
        "wires": [
            [
                "114d838896594f7f"
            ]
        ]
    },
    {
        "id": "fb242041b26a5192",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "78a9da7e0d9a874a",
        "name": "Read PF",
        "links": [
            "bc18228b5cbebd9c"
        ],
        "x": 55,
        "y": 2180,
        "wires": [
            [
                "4ce0c64e21a30c3b"
            ]
        ]
    },
    {
        "id": "a832e59338fa2611",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "Read AA",
        "links": [
            "bc18228b5cbebd9c"
        ],
        "x": 55,
        "y": 1720,
        "wires": [
            [
                "097729bd8d5778db"
            ]
        ]
    },
    {
        "id": "9773d97524bbf51e",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "Read S",
        "links": [
            "bc18228b5cbebd9c"
        ],
        "x": 55,
        "y": 1420,
        "wires": [
            [
                "7518f54657f4a1c8"
            ]
        ]
    },
    {
        "id": "58ad998751ecd7f6",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "52e638f9547acf81",
        "name": "Read S",
        "links": [
            "bc18228b5cbebd9c"
        ],
        "x": 55,
        "y": 960,
        "wires": [
            [
                "44f5229a878639de"
            ]
        ]
    },
    {
        "id": "a76314bee2de47d4",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "7e9c2623c41daf19",
        "name": "Read S",
        "links": [
            "bc18228b5cbebd9c"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "be4f1f0c254f4506"
            ]
        ]
    },
    {
        "id": "4e91f1a685f057cf",
        "type": "mqtt out",
        "z": "59c61210c102e4a0",
        "g": "634be726669e1e3a",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d99579db50330f02",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "9db9a7e2bf3bdd0f",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "I_90_Claw_2_Cart",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1500,
        "wires": [
            [
                "8700e8e5ba1148c7"
            ]
        ]
    },
    {
        "id": "4317356d730d9add",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "I_90_Claw_2_Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1540,
        "wires": [
            [
                "8700e8e5ba1148c7"
            ]
        ]
    },
    {
        "id": "1cc209cb44d5ec75",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "I_90_Claw_Down",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1580,
        "wires": [
            [
                "8700e8e5ba1148c7"
            ]
        ]
    },
    {
        "id": "265a6376a25bf015",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "I_90_Close_Claw",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1620,
        "wires": [
            [
                "8700e8e5ba1148c7"
            ]
        ]
    },
    {
        "id": "8700e8e5ba1148c7",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "64add5de46ea2f3b",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "b3da54a8f1f472c4"
        ],
        "x": 1235,
        "y": 1560,
        "wires": []
    },
    {
        "id": "b3da54a8f1f472c4",
        "type": "link in",
        "z": "59c61210c102e4a0",
        "g": "634be726669e1e3a",
        "name": "S7 Actuators",
        "links": [
            "8700e8e5ba1148c7",
            "1a19796aaf7a4f39",
            "46a17f07bedbc425",
            "4d3fda8090259723"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "4e91f1a685f057cf"
            ]
        ]
    },
    {
        "id": "7151ff3b09d1c1ed",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1800,
        "wires": [
            [
                "1a19796aaf7a4f39"
            ]
        ]
    },
    {
        "id": "ac15a5d087d4aad9",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1840,
        "wires": [
            [
                "1a19796aaf7a4f39"
            ]
        ]
    },
    {
        "id": "36fc90d7d534fe4e",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1880,
        "wires": [
            [
                "1a19796aaf7a4f39"
            ]
        ]
    },
    {
        "id": "bf1c4edd9830d0f3",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1920,
        "wires": [
            [
                "1a19796aaf7a4f39"
            ]
        ]
    },
    {
        "id": "95b6df25f6583035",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1960,
        "wires": [
            [
                "1a19796aaf7a4f39"
            ]
        ]
    },
    {
        "id": "5aceedde8b560454",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2000,
        "wires": [
            [
                "1a19796aaf7a4f39"
            ]
        ]
    },
    {
        "id": "b16f1d503bdbc6c7",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2040,
        "wires": [
            [
                "1a19796aaf7a4f39"
            ]
        ]
    },
    {
        "id": "81a11685b3f8ba37",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "I_91_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2080,
        "wires": [
            [
                "1a19796aaf7a4f39"
            ]
        ]
    },
    {
        "id": "1a19796aaf7a4f39",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "45e3c9005f27abae",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "b3da54a8f1f472c4"
        ],
        "x": 1225,
        "y": 1940,
        "wires": []
    },
    {
        "id": "05bdc64d33552670",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "C_95_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3100,
        "wires": [
            [
                "46a17f07bedbc425"
            ]
        ]
    },
    {
        "id": "adb80156f4abac53",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "C_95_Cart2Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3140,
        "wires": [
            [
                "46a17f07bedbc425"
            ]
        ]
    },
    {
        "id": "9134100602db2e48",
        "type": "function",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "C_95_Del2Cart",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3180,
        "wires": [
            [
                "46a17f07bedbc425"
            ]
        ]
    },
    {
        "id": "46a17f07bedbc425",
        "type": "link out",
        "z": "59c61210c102e4a0",
        "g": "82847bbe3027eeba",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "b3da54a8f1f472c4"
        ],
        "x": 1355,
        "y": 3100,
        "wires": []
    },
    {
        "id": "61d4eb1bbf59204e",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "item": "O_100_PInit_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "'O_100_PInit_Pos",
        "x": 470,
        "y": 620,
        "wires": [
            [
                "e590dc0fde9e6594"
            ]
        ]
    },
    {
        "id": "227ad57296c45855",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "item": "O_100_PDrill_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_PDrill_Pos",
        "x": 470,
        "y": 660,
        "wires": [
            [
                "e590dc0fde9e6594"
            ]
        ]
    },
    {
        "id": "c276280a2e76e3d1",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "item": "O_100_PTest_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_PTest_Pos",
        "x": 470,
        "y": 700,
        "wires": [
            [
                "e590dc0fde9e6594"
            ]
        ]
    },
    {
        "id": "61f20c616fd4605f",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "item": "O_100_SDrill_High",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_SDrill_High",
        "x": 470,
        "y": 740,
        "wires": [
            [
                "e590dc0fde9e6594"
            ]
        ]
    },
    {
        "id": "956520b50d86791f",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "item": "O_100_SDrill_Low",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_SDrill_Low",
        "x": 470,
        "y": 780,
        "wires": [
            [
                "e590dc0fde9e6594"
            ]
        ]
    },
    {
        "id": "027240d122e16be6",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "item": "O_100_RT_Sensor",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_RT_Sensor",
        "x": 470,
        "y": 820,
        "wires": [
            [
                "e590dc0fde9e6594"
            ]
        ]
    },
    {
        "id": "fe69f40ee51bab44",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "item": "O_100_PTest_Ok",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_PTest_Ok",
        "x": 470,
        "y": 860,
        "wires": [
            [
                "e590dc0fde9e6594"
            ]
        ]
    },
    {
        "id": "e590dc0fde9e6594",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "100 Physical Sensor",
        "mode": "link",
        "links": [
            "8920d4393978f0c6"
        ],
        "x": 645,
        "y": 740,
        "wires": []
    },
    {
        "id": "26d55f57a7fd7458",
        "type": "switch",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "100 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_100_PInit_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_PDrill_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_PTest_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_SDrill_High",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_SDrill_Low",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_RT_Sensor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_PTest_Ok",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 860,
        "y": 740,
        "wires": [
            [
                "02c8a532f542804f"
            ],
            [
                "78378fb9d7e285e5"
            ],
            [
                "c8b301b9b99e5b32"
            ],
            [
                "0cf90d691b6d6e56"
            ],
            [
                "59052e44e8de6350"
            ],
            [
                "4e3b3536c2ceef36"
            ],
            [
                "2711df8d9f08a1de"
            ]
        ]
    },
    {
        "id": "02c8a532f542804f",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "order": 0,
        "group": "f0b86134ea48aae1",
        "width": 0,
        "height": 0,
        "label": "Part in initial position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_PInit_Pos",
        "x": 1070,
        "y": 620,
        "wires": []
    },
    {
        "id": "78378fb9d7e285e5",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "order": 0,
        "group": "f0b86134ea48aae1",
        "width": 0,
        "height": 0,
        "label": "Part in drill position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_PDrill_Pos",
        "x": 1070,
        "y": 660,
        "wires": []
    },
    {
        "id": "c8b301b9b99e5b32",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "order": 0,
        "group": "f0b86134ea48aae1",
        "width": 0,
        "height": 0,
        "label": "Part in test position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_PTest_Pos",
        "x": 1070,
        "y": 700,
        "wires": []
    },
    {
        "id": "0cf90d691b6d6e56",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "order": 0,
        "group": "f0b86134ea48aae1",
        "width": 0,
        "height": 0,
        "label": "Drill in high position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_SDrill_High",
        "x": 1070,
        "y": 740,
        "wires": []
    },
    {
        "id": "59052e44e8de6350",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "order": 0,
        "group": "f0b86134ea48aae1",
        "width": 0,
        "height": 0,
        "label": "Drill in low position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_SDrill_Low",
        "x": 1070,
        "y": 780,
        "wires": []
    },
    {
        "id": "4e3b3536c2ceef36",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "order": 0,
        "group": "f0b86134ea48aae1",
        "width": 0,
        "height": 0,
        "label": "Rotating table sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_RT_Sensor",
        "x": 1070,
        "y": 820,
        "wires": []
    },
    {
        "id": "2711df8d9f08a1de",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "order": 0,
        "group": "f0b86134ea48aae1",
        "width": 0,
        "height": 0,
        "label": "Test Ok",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_PTest_Ok",
        "x": 1070,
        "y": 860,
        "wires": []
    },
    {
        "id": "08a91e57f16f9910",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_100_PInit_Pos\" : false,\n            \"O_100_PDrill_Pos\" : false,\n            \"O_100_PTest_Pos\" : false,\n            \"O_100_SDrill_High\" : false,\n            \"O_100_SDrill_Low\" : false,\n            \"O_100_RT_Sensor\" : false,\n            \"O_100_PTest_Ok\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "af9c2453d33257c0"
            ]
        ]
    },
    {
        "id": "6709fce96e9e46c1",
        "type": "OpcUa-Client",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "endpoint": "f2f8310065c20774",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 540,
        "wires": [
            [
                "8aed3e99cef6d803",
                "941195c9de5f5e22"
            ],
            [
                "08a91e57f16f9910"
            ]
        ]
    },
    {
        "id": "af9c2453d33257c0",
        "type": "trigger",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 540,
        "wires": [
            [
                "d32b4317694a0f41"
            ]
        ]
    },
    {
        "id": "5f683799a19730d3",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "6709fce96e9e46c1"
            ]
        ]
    },
    {
        "id": "8aed3e99cef6d803",
        "type": "debug",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "100 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 580,
        "wires": []
    },
    {
        "id": "d32b4317694a0f41",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "338619029d78e2b5"
            ]
        ]
    },
    {
        "id": "5c3980e8d1ef5578",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "5f683799a19730d3"
            ]
        ]
    },
    {
        "id": "338619029d78e2b5",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "04b4c4228e2495f3"
            ]
        ]
    },
    {
        "id": "04b4c4228e2495f3",
        "type": "file in",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "5c3980e8d1ef5578"
            ]
        ]
    },
    {
        "id": "72d5ff89ef10de61",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "item": "O_101_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Start",
        "x": 490,
        "y": 1040,
        "wires": [
            [
                "6e46228f0f21551c"
            ]
        ]
    },
    {
        "id": "718a7e63aab8bfa3",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "item": "O_101_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Stop",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "6e46228f0f21551c"
            ]
        ]
    },
    {
        "id": "7e4d55879d5a8cc9",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "item": "O_101_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Key_Pos",
        "x": 470,
        "y": 1120,
        "wires": [
            [
                "6e46228f0f21551c"
            ]
        ]
    },
    {
        "id": "8c078b2a4e69a3c6",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "item": "O_101_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Reset",
        "x": 480,
        "y": 1160,
        "wires": [
            [
                "6e46228f0f21551c"
            ]
        ]
    },
    {
        "id": "6105207bb50c1be1",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "item": "O_101_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Panel_I4",
        "x": 470,
        "y": 1200,
        "wires": [
            [
                "6e46228f0f21551c"
            ]
        ]
    },
    {
        "id": "e85712bf390d093e",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "item": "O_101_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Panel_I5",
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "6e46228f0f21551c"
            ]
        ]
    },
    {
        "id": "6badb6980eddccd1",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "item": "O_101_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Panel_I6",
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "6e46228f0f21551c"
            ]
        ]
    },
    {
        "id": "6e46228f0f21551c",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "100 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "8920d4393978f0c6"
        ],
        "x": 645,
        "y": 1180,
        "wires": []
    },
    {
        "id": "76724bb7e3d984f0",
        "type": "switch",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "100 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_101_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 860,
        "y": 1180,
        "wires": [
            [
                "40179859f768015b"
            ],
            [
                "5138c056a40334c6"
            ],
            [
                "8b35ac5f32f1e395"
            ],
            [
                "91603c8af1485e37"
            ],
            [
                "c2e15918b309be4c"
            ],
            [
                "345c8814b46040f7"
            ],
            [
                "8cfc2ffd5cca9902"
            ],
            [
                "218b7ed21e145e77"
            ]
        ]
    },
    {
        "id": "40179859f768015b",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "order": 0,
        "group": "0107743d478382d4",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Start",
        "x": 1050,
        "y": 1040,
        "wires": []
    },
    {
        "id": "5138c056a40334c6",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "order": 0,
        "group": "0107743d478382d4",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Stop",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "8b35ac5f32f1e395",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "order": 0,
        "group": "0107743d478382d4",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Key_Pos",
        "x": 1070,
        "y": 1120,
        "wires": []
    },
    {
        "id": "91603c8af1485e37",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "order": 0,
        "group": "0107743d478382d4",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Reset",
        "x": 1060,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c2e15918b309be4c",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "order": 0,
        "group": "0107743d478382d4",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Panel_I4",
        "x": 1070,
        "y": 1200,
        "wires": []
    },
    {
        "id": "345c8814b46040f7",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "order": 0,
        "group": "0107743d478382d4",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Panel_I5",
        "x": 1070,
        "y": 1240,
        "wires": []
    },
    {
        "id": "8cfc2ffd5cca9902",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "order": 0,
        "group": "0107743d478382d4",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Panel_I6",
        "x": 1070,
        "y": 1280,
        "wires": []
    },
    {
        "id": "1e358b74e795c3e6",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "item": "O_101_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Panel_I7",
        "x": 470,
        "y": 1320,
        "wires": [
            [
                "6e46228f0f21551c"
            ]
        ]
    },
    {
        "id": "218b7ed21e145e77",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "order": 0,
        "group": "0107743d478382d4",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Panel_I7",
        "x": 1070,
        "y": 1320,
        "wires": []
    },
    {
        "id": "a9263ad2d6efa858",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 960,
        "wires": [
            [
                "fc5f484dc4ba5317"
            ]
        ]
    },
    {
        "id": "33d3249df3697446",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 960,
        "wires": [
            [
                "a9263ad2d6efa858"
            ]
        ]
    },
    {
        "id": "fc5f484dc4ba5317",
        "type": "OpcUa-Client",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "endpoint": "f2f8310065c20774",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 960,
        "wires": [
            [
                "399dbeb512a84e10",
                "8045ce6081fdf24c"
            ],
            [
                "6aa03e3f532d4945"
            ]
        ]
    },
    {
        "id": "4c54d114cdecc39c",
        "type": "file in",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 960,
        "wires": [
            [
                "33d3249df3697446"
            ]
        ]
    },
    {
        "id": "399dbeb512a84e10",
        "type": "debug",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "100 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1000,
        "wires": []
    },
    {
        "id": "6aa03e3f532d4945",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_101_Start\" : false,\n            \"O_101_Stop\" : false,\n            \"O_101_Key_Pos\" : false,\n            \"O_101_Reset\" : false,\n            \"O_101_Panel_I4\" : false,\n            \"O_101_Panel_I5\" : false,\n            \"O_101_Panel_I6\" : false,\n            \"O_101_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 960,
        "wires": [
            [
                "cee0b7a449991a70"
            ]
        ]
    },
    {
        "id": "a580d8e218795542",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 960,
        "wires": [
            [
                "4c54d114cdecc39c"
            ]
        ]
    },
    {
        "id": "cee0b7a449991a70",
        "type": "trigger",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 960,
        "wires": [
            [
                "80d73f37b5ce1b7f"
            ]
        ]
    },
    {
        "id": "80d73f37b5ce1b7f",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 960,
        "wires": [
            [
                "a580d8e218795542"
            ]
        ]
    },
    {
        "id": "2f7499d579de1330",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "item": "I_100_Drill_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Drill_On",
        "x": 480,
        "y": 1500,
        "wires": [
            [
                "840bd354263cc33f"
            ]
        ]
    },
    {
        "id": "7066c4693ecc8971",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "item": "I_100_RT_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_RT_On",
        "x": 480,
        "y": 1540,
        "wires": [
            [
                "840bd354263cc33f"
            ]
        ]
    },
    {
        "id": "445ad47766190f60",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "item": "I_100_Drill_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Drill_Down",
        "x": 470,
        "y": 1580,
        "wires": [
            [
                "840bd354263cc33f"
            ]
        ]
    },
    {
        "id": "84f23c75493732c2",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "item": "I_100_Drill_Up",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Drill_Up",
        "x": 480,
        "y": 1620,
        "wires": [
            [
                "840bd354263cc33f"
            ]
        ]
    },
    {
        "id": "7e996cb64e895558",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "item": "I_100_Drill_Pin",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Drill_Pin",
        "x": 480,
        "y": 1660,
        "wires": [
            [
                "840bd354263cc33f"
            ]
        ]
    },
    {
        "id": "840bd354263cc33f",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "100 Physical Actuators",
        "mode": "link",
        "links": [
            "8920d4393978f0c6"
        ],
        "x": 645,
        "y": 1600,
        "wires": []
    },
    {
        "id": "5b698114e20a388f",
        "type": "switch",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "100 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_100_Drill_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_RT_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_Drill_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_Drill_Up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_Drill_Pin",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_Test_Pin",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 860,
        "y": 1600,
        "wires": [
            [
                "2b261e1493dce231"
            ],
            [
                "227a0e31339fd411"
            ],
            [
                "6027e3c54a865192"
            ],
            [
                "e77dec640257ba7f"
            ],
            [
                "7c711af666f5463f"
            ],
            [
                "8948b1dba335944e"
            ]
        ]
    },
    {
        "id": "633795040d173b2e",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "I_100_Drill_On",
        "label": "Turns drill on",
        "tooltip": "",
        "group": "35ffe3a911b5678e",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1500,
        "wires": [
            [
                "2f7499d579de1330"
            ]
        ]
    },
    {
        "id": "5ae833a7e47c9e4a",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "I_100_RT_On",
        "label": "Moves rotating table",
        "tooltip": "",
        "group": "35ffe3a911b5678e",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1540,
        "wires": [
            [
                "7066c4693ecc8971"
            ]
        ]
    },
    {
        "id": "8661992f879c8372",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "I_100_Drill_Down",
        "label": "Lowers drill",
        "tooltip": "",
        "group": "35ffe3a911b5678e",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1580,
        "wires": [
            [
                "445ad47766190f60"
            ]
        ]
    },
    {
        "id": "a68805f0d53d7282",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "I_100_Drill_Up",
        "label": "Raises drill",
        "tooltip": "",
        "group": "35ffe3a911b5678e",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1620,
        "wires": [
            [
                "84f23c75493732c2"
            ]
        ]
    },
    {
        "id": "2883024e39d758f7",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "I_100_Drill_Pin",
        "label": "Advances drill pin",
        "tooltip": "",
        "group": "35ffe3a911b5678e",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1660,
        "wires": [
            [
                "7e996cb64e895558"
            ]
        ]
    },
    {
        "id": "6af6a55891683f39",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1420,
        "wires": [
            [
                "e2aa5e89d8c73427"
            ]
        ]
    },
    {
        "id": "a400f3c4daf775f5",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "6af6a55891683f39"
            ]
        ]
    },
    {
        "id": "e2aa5e89d8c73427",
        "type": "OpcUa-Client",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "endpoint": "f2f8310065c20774",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1420,
        "wires": [
            [
                "d7e047d50e4a5850",
                "67201729af365f1b"
            ],
            [
                "220caf913e5995c7"
            ]
        ]
    },
    {
        "id": "cdf66cc7016ce1d9",
        "type": "file in",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "a400f3c4daf775f5"
            ]
        ]
    },
    {
        "id": "d7e047d50e4a5850",
        "type": "debug",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "100 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1460,
        "wires": []
    },
    {
        "id": "220caf913e5995c7",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_100_Drill_On\" : false,\n            \"I_100_RT_On\" : false,\n            \"I_100_Drill_Down\" : false,\n            \"I_100_Drill_Up\" : false,\n            \"I_100_Drill_Pin\" : false,\n            \"I_100_Test_Pin\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1420,
        "wires": [
            [
                "407de56ee3ed67f2"
            ]
        ]
    },
    {
        "id": "8a82f1e2d211eeeb",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "cdf66cc7016ce1d9"
            ]
        ]
    },
    {
        "id": "407de56ee3ed67f2",
        "type": "trigger",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1420,
        "wires": [
            [
                "ebebeb677856cafb"
            ]
        ]
    },
    {
        "id": "ebebeb677856cafb",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1420,
        "wires": [
            [
                "8a82f1e2d211eeeb"
            ]
        ]
    },
    {
        "id": "2f553639d47786de",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "item": "I_101_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Led_Start",
        "x": 470,
        "y": 1880,
        "wires": [
            [
                "89f8d5c9b7e326be"
            ]
        ]
    },
    {
        "id": "63d749e0ba2db253",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "item": "I_101_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Led_Reset",
        "x": 470,
        "y": 1920,
        "wires": [
            [
                "89f8d5c9b7e326be"
            ]
        ]
    },
    {
        "id": "0e77c145dda5018d",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "item": "I_101_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Led_Extra1",
        "x": 470,
        "y": 1960,
        "wires": [
            [
                "89f8d5c9b7e326be"
            ]
        ]
    },
    {
        "id": "32a4f94e98a75237",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "item": "I_101_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Led_Extra2",
        "x": 470,
        "y": 2000,
        "wires": [
            [
                "89f8d5c9b7e326be"
            ]
        ]
    },
    {
        "id": "e6fcd3dd90977b22",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "item": "I_101_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Panel_O4",
        "x": 470,
        "y": 2040,
        "wires": [
            [
                "89f8d5c9b7e326be"
            ]
        ]
    },
    {
        "id": "89f8d5c9b7e326be",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "100 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "8920d4393978f0c6"
        ],
        "x": 645,
        "y": 2020,
        "wires": []
    },
    {
        "id": "a021dbf059f60883",
        "type": "switch",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "100 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_101_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 860,
        "y": 2020,
        "wires": [
            [
                "be212be61be44017"
            ],
            [
                "35cd5df82328f6bb"
            ],
            [
                "4c391cb87e4c083d"
            ],
            [
                "cbc2d181721a2aaf"
            ],
            [
                "c25afe52ad674ba1"
            ],
            [
                "1ff946ac123c8715"
            ],
            [
                "23abd7179160ed2e"
            ],
            [
                "e2e61df9be203d77"
            ]
        ]
    },
    {
        "id": "90280930caec7af9",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "89ff460aaad01d53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1880,
        "wires": [
            [
                "2f553639d47786de"
            ]
        ]
    },
    {
        "id": "1d47fc9c18bc52ba",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "89ff460aaad01d53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1920,
        "wires": [
            [
                "63d749e0ba2db253"
            ]
        ]
    },
    {
        "id": "30f8c8fbe3eff726",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "89ff460aaad01d53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1960,
        "wires": [
            [
                "0e77c145dda5018d"
            ]
        ]
    },
    {
        "id": "8435cd9a2e70b6c1",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "89ff460aaad01d53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 2000,
        "wires": [
            [
                "32a4f94e98a75237"
            ]
        ]
    },
    {
        "id": "b3ecad7fd0a9311a",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "89ff460aaad01d53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 2040,
        "wires": [
            [
                "e6fcd3dd90977b22"
            ]
        ]
    },
    {
        "id": "9b85048daeb8ee53",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "89ff460aaad01d53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 2080,
        "wires": [
            [
                "bf1be44347e87d2f"
            ]
        ]
    },
    {
        "id": "bf1be44347e87d2f",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "item": "I_101_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Panel_O5",
        "x": 470,
        "y": 2080,
        "wires": [
            [
                "89f8d5c9b7e326be"
            ]
        ]
    },
    {
        "id": "e670d502b2bee626",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "89ff460aaad01d53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 2120,
        "wires": [
            [
                "f447bf595dca202c"
            ]
        ]
    },
    {
        "id": "f447bf595dca202c",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "item": "I_101_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Panel_O6",
        "x": 470,
        "y": 2120,
        "wires": [
            [
                "89f8d5c9b7e326be"
            ]
        ]
    },
    {
        "id": "eca1550ac0e4685c",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "89ff460aaad01d53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 2160,
        "wires": [
            [
                "91bf2f27626bc228"
            ]
        ]
    },
    {
        "id": "91bf2f27626bc228",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "item": "I_101_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Panel_O7",
        "x": 470,
        "y": 2160,
        "wires": [
            [
                "89f8d5c9b7e326be"
            ]
        ]
    },
    {
        "id": "02e91a1271c0ca88",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1800,
        "wires": [
            [
                "debf232125cf9bd9"
            ]
        ]
    },
    {
        "id": "2a7bc139e4e95da5",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1800,
        "wires": [
            [
                "02e91a1271c0ca88"
            ]
        ]
    },
    {
        "id": "debf232125cf9bd9",
        "type": "OpcUa-Client",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "endpoint": "f2f8310065c20774",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 1800,
        "wires": [
            [
                "eb761ac18a4917e6",
                "f2d9694fcc43aac2"
            ],
            [
                "a4d68b8e1514dccf"
            ]
        ]
    },
    {
        "id": "a90f5672ae420880",
        "type": "file in",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1800,
        "wires": [
            [
                "2a7bc139e4e95da5"
            ]
        ]
    },
    {
        "id": "eb761ac18a4917e6",
        "type": "debug",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "100 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1840,
        "wires": []
    },
    {
        "id": "a4d68b8e1514dccf",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_101_Led_Start\" : false,\n            \"I_101_Led_Reset\" : false,\n            \"I_101_Led_Extra1\" : false,\n            \"I_101_Led_Extra2\" : false,\n            \"I_101_Panel_O4\" : false,\n            \"I_101_Panel_O5\" : false,\n            \"I_101_Panel_O6\" : false,\n            \"I_101_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1800,
        "wires": [
            [
                "651a8cca98bc39e6"
            ]
        ]
    },
    {
        "id": "3da672cf758c0e9d",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1800,
        "wires": [
            [
                "a90f5672ae420880"
            ]
        ]
    },
    {
        "id": "651a8cca98bc39e6",
        "type": "trigger",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1800,
        "wires": [
            [
                "e50eb513339a8d0b"
            ]
        ]
    },
    {
        "id": "e50eb513339a8d0b",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1800,
        "wires": [
            [
                "3da672cf758c0e9d"
            ]
        ]
    },
    {
        "id": "e388752b27f04cdf",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "item": "F_102_Drill_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Drill_On",
        "x": 480,
        "y": 2340,
        "wires": [
            [
                "9d01a80873327a98"
            ]
        ]
    },
    {
        "id": "016378a53e52774d",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "item": "F_102_RT_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_RT_On",
        "x": 480,
        "y": 2380,
        "wires": [
            [
                "9d01a80873327a98"
            ]
        ]
    },
    {
        "id": "4dcb038b09645e8b",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "item": "F_102_Drill_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Drill_Down",
        "x": 470,
        "y": 2420,
        "wires": [
            [
                "9d01a80873327a98"
            ]
        ]
    },
    {
        "id": "f9346ee333b634ec",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "item": "F_102_Drill_Up",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Drill_Up",
        "x": 480,
        "y": 2460,
        "wires": [
            [
                "9d01a80873327a98"
            ]
        ]
    },
    {
        "id": "9530abf1aad23f02",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "item": "F_102_Drill_Pin",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Drill_Pin",
        "x": 480,
        "y": 2500,
        "wires": [
            [
                "9d01a80873327a98"
            ]
        ]
    },
    {
        "id": "9d01a80873327a98",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "100 Physical Feedback",
        "mode": "link",
        "links": [
            "8920d4393978f0c6"
        ],
        "x": 645,
        "y": 2440,
        "wires": []
    },
    {
        "id": "c6823ba0fb656234",
        "type": "switch",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "100 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_102_Drill_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_RT_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_Drill_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_Drill_Up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_Drill_Pin",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_Test_Pin",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 860,
        "y": 2440,
        "wires": [
            [
                "bbcfc11fb0a55bfb"
            ],
            [
                "75e79debe2c86c45"
            ],
            [
                "46e0aa3c1dbedf91"
            ],
            [
                "c776a871f5786b40"
            ],
            [
                "c34c7e6d96618229"
            ],
            [
                "b7950de714bbb84b"
            ]
        ]
    },
    {
        "id": "bbcfc11fb0a55bfb",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "order": 0,
        "group": "d6f3f56ef8efed4d",
        "width": 0,
        "height": 0,
        "label": "Turns drill on",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Drill_On",
        "x": 1060,
        "y": 2340,
        "wires": []
    },
    {
        "id": "75e79debe2c86c45",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "order": 0,
        "group": "d6f3f56ef8efed4d",
        "width": 0,
        "height": 0,
        "label": "Moves rotating table",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_RT_On",
        "x": 1060,
        "y": 2380,
        "wires": []
    },
    {
        "id": "46e0aa3c1dbedf91",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "order": 0,
        "group": "d6f3f56ef8efed4d",
        "width": 0,
        "height": 0,
        "label": "Lowers drill",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Drill_Down",
        "x": 1070,
        "y": 2420,
        "wires": []
    },
    {
        "id": "c776a871f5786b40",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "order": 0,
        "group": "d6f3f56ef8efed4d",
        "width": 0,
        "height": 0,
        "label": "Raises drill",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Drill_Up",
        "x": 1060,
        "y": 2460,
        "wires": []
    },
    {
        "id": "c34c7e6d96618229",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "order": 0,
        "group": "d6f3f56ef8efed4d",
        "width": 0,
        "height": 0,
        "label": "Advances drill pin",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Drill_Pin",
        "x": 1060,
        "y": 2500,
        "wires": []
    },
    {
        "id": "20d0935957c4a639",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2260,
        "wires": [
            [
                "d5687736994d7751"
            ]
        ]
    },
    {
        "id": "516a19a90334cd6a",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2260,
        "wires": [
            [
                "20d0935957c4a639"
            ]
        ]
    },
    {
        "id": "d5687736994d7751",
        "type": "OpcUa-Client",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "endpoint": "f2f8310065c20774",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2260,
        "wires": [
            [
                "71143b5e2d5c6ffd",
                "bdb4a20e57ab1d7c"
            ],
            [
                "e1395e565cae6d3e"
            ]
        ]
    },
    {
        "id": "950b91aec8496f4d",
        "type": "file in",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2260,
        "wires": [
            [
                "516a19a90334cd6a"
            ]
        ]
    },
    {
        "id": "71143b5e2d5c6ffd",
        "type": "debug",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "100 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 2300,
        "wires": []
    },
    {
        "id": "e1395e565cae6d3e",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_102_Drill_On\" : false,\n            \"F_102_RT_On\" : false,\n            \"F_102_Drill_Down\" : false,\n            \"F_102_Drill_Up\" : false,\n            \"F_102_Drill_Pin\" : false,\n            \"F_102_Test_Pin\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2260,
        "wires": [
            [
                "e4f213e156bfbfbf"
            ]
        ]
    },
    {
        "id": "9c60eb450f53f302",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2260,
        "wires": [
            [
                "950b91aec8496f4d"
            ]
        ]
    },
    {
        "id": "e4f213e156bfbfbf",
        "type": "trigger",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2260,
        "wires": [
            [
                "f7ba1bd99b0e9a27"
            ]
        ]
    },
    {
        "id": "f7ba1bd99b0e9a27",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2260,
        "wires": [
            [
                "9c60eb450f53f302"
            ]
        ]
    },
    {
        "id": "a7fb56f6836cb531",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "item": "F_103_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Led_Start",
        "x": 470,
        "y": 2720,
        "wires": [
            [
                "148b026f65917570"
            ]
        ]
    },
    {
        "id": "47617b7839fed67e",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "item": "F_103_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Led_Reset",
        "x": 470,
        "y": 2760,
        "wires": [
            [
                "148b026f65917570"
            ]
        ]
    },
    {
        "id": "ba610bf74c25b4b6",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "item": "F_103_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Led_Extra1",
        "x": 470,
        "y": 2800,
        "wires": [
            [
                "148b026f65917570"
            ]
        ]
    },
    {
        "id": "4ede621096ce1163",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "item": "F_103_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Led_Extra2",
        "x": 470,
        "y": 2840,
        "wires": [
            [
                "148b026f65917570"
            ]
        ]
    },
    {
        "id": "6211377b409dd359",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "item": "F_103_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Panel_O4",
        "x": 470,
        "y": 2880,
        "wires": [
            [
                "148b026f65917570"
            ]
        ]
    },
    {
        "id": "d5640f6471a0d3f5",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "item": "F_103_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Panel_O5",
        "x": 470,
        "y": 2920,
        "wires": [
            [
                "148b026f65917570"
            ]
        ]
    },
    {
        "id": "233589432bbaf5cd",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "item": "F_103_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Panel_O6",
        "x": 470,
        "y": 2960,
        "wires": [
            [
                "148b026f65917570"
            ]
        ]
    },
    {
        "id": "148b026f65917570",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "100 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "8920d4393978f0c6"
        ],
        "x": 645,
        "y": 2860,
        "wires": []
    },
    {
        "id": "69fa58d5671e8de4",
        "type": "switch",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "100 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_103_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 860,
        "y": 2860,
        "wires": [
            [
                "2c90129eb983c035"
            ],
            [
                "9aae5b230f72229e"
            ],
            [
                "9d4569a4a303fcbb"
            ],
            [
                "905872713c03c9f9"
            ],
            [
                "d310b867ad959f6c"
            ],
            [
                "c3846bcafcc6b086"
            ],
            [
                "6b284cf3e4664be4"
            ],
            [
                "ba6d0403ef79e557"
            ]
        ]
    },
    {
        "id": "2c90129eb983c035",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "order": 0,
        "group": "388650bffa901920",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Led_Start",
        "x": 1070,
        "y": 2720,
        "wires": []
    },
    {
        "id": "9aae5b230f72229e",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "order": 0,
        "group": "388650bffa901920",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Led_Reset",
        "x": 1070,
        "y": 2760,
        "wires": []
    },
    {
        "id": "9d4569a4a303fcbb",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "order": 0,
        "group": "388650bffa901920",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Led_Extra1",
        "x": 1070,
        "y": 2800,
        "wires": []
    },
    {
        "id": "905872713c03c9f9",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "order": 0,
        "group": "388650bffa901920",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Led_Extra2",
        "x": 1070,
        "y": 2840,
        "wires": []
    },
    {
        "id": "d310b867ad959f6c",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "order": 0,
        "group": "388650bffa901920",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Panel_O4",
        "x": 1070,
        "y": 2880,
        "wires": []
    },
    {
        "id": "c3846bcafcc6b086",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "order": 0,
        "group": "388650bffa901920",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Panel_O5",
        "x": 1070,
        "y": 2920,
        "wires": []
    },
    {
        "id": "6b284cf3e4664be4",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "order": 0,
        "group": "388650bffa901920",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Panel_O6",
        "x": 1070,
        "y": 2960,
        "wires": []
    },
    {
        "id": "a449c6d0f0da14b6",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "item": "F_103_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Panel_O7",
        "x": 470,
        "y": 3000,
        "wires": [
            [
                "148b026f65917570"
            ]
        ]
    },
    {
        "id": "ba6d0403ef79e557",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "order": 0,
        "group": "388650bffa901920",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Panel_O7",
        "x": 1070,
        "y": 3000,
        "wires": []
    },
    {
        "id": "3fe51ff631a355e3",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2640,
        "wires": [
            [
                "68dae40340b0fbc1"
            ]
        ]
    },
    {
        "id": "106384e20276db72",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2640,
        "wires": [
            [
                "3fe51ff631a355e3"
            ]
        ]
    },
    {
        "id": "68dae40340b0fbc1",
        "type": "OpcUa-Client",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "endpoint": "f2f8310065c20774",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 2640,
        "wires": [
            [
                "e4c63b1e57af95a5",
                "6d07d0cd7c2d1644"
            ],
            [
                "5559c0607bf44962"
            ]
        ]
    },
    {
        "id": "20127e52cd82a778",
        "type": "file in",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2640,
        "wires": [
            [
                "106384e20276db72"
            ]
        ]
    },
    {
        "id": "e4c63b1e57af95a5",
        "type": "debug",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "100 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 2680,
        "wires": []
    },
    {
        "id": "5559c0607bf44962",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_103_Led_Start\" : false,\n            \"F_103_Led_Reset\" : false,\n            \"F_103_Led_Extra1\" : false,\n            \"F_103_Led_Extra2\" : false,\n            \"F_103_Panel_O4\" : false,\n            \"F_103_Panel_O5\" : false,\n            \"F_103_Panel_O6\" : false,\n            \"F_103_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2640,
        "wires": [
            [
                "9d90b408b76aad1f"
            ]
        ]
    },
    {
        "id": "ca91f8d0fea74d27",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2640,
        "wires": [
            [
                "20127e52cd82a778"
            ]
        ]
    },
    {
        "id": "9d90b408b76aad1f",
        "type": "trigger",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2640,
        "wires": [
            [
                "cdcbb261d93e16aa"
            ]
        ]
    },
    {
        "id": "cdcbb261d93e16aa",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2640,
        "wires": [
            [
                "ca91f8d0fea74d27"
            ]
        ]
    },
    {
        "id": "b3c62782f28a5d0a",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "item": "C_102_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_102_Profibus",
        "x": 640,
        "y": 3180,
        "wires": [
            [
                "8fe9f951015d69cb"
            ]
        ]
    },
    {
        "id": "038bd031054dd51e",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "item": "C_105_Initialization",
        "datatype": "Double",
        "value": "",
        "name": "C_105_Initialization",
        "x": 630,
        "y": 3220,
        "wires": [
            [
                "8fe9f951015d69cb"
            ]
        ]
    },
    {
        "id": "c4312facf8855dfd",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "item": "C_105_Part_ready",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_Part_ready",
        "x": 630,
        "y": 3260,
        "wires": [
            [
                "8fe9f951015d69cb"
            ]
        ]
    },
    {
        "id": "0cbc30eac32b1ce4",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "item": "C_105_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_Start",
        "x": 650,
        "y": 3300,
        "wires": [
            [
                "8fe9f951015d69cb"
            ]
        ]
    },
    {
        "id": "30a7edd1e7b9acbb",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "item": "C_105_Test",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_Test",
        "x": 650,
        "y": 3340,
        "wires": [
            [
                "8fe9f951015d69cb"
            ]
        ]
    },
    {
        "id": "c7b3206a957aae57",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "item": "C_105_TestDrill",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_TestDrill",
        "x": 640,
        "y": 3380,
        "wires": [
            [
                "8fe9f951015d69cb"
            ]
        ]
    },
    {
        "id": "3e51d18c1fbc551d",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "item": "C_105_Rotation",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_Rotation",
        "x": 640,
        "y": 3420,
        "wires": [
            [
                "8fe9f951015d69cb"
            ]
        ]
    },
    {
        "id": "8fe9f951015d69cb",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "100 Control",
        "mode": "link",
        "links": [
            "8920d4393978f0c6"
        ],
        "x": 805,
        "y": 3300,
        "wires": []
    },
    {
        "id": "ee682a23b7dbd4c5",
        "type": "switch",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "100 C",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_102_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Part_ready",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Test",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_TestDrill",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Rotation",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 1010,
        "y": 3300,
        "wires": [
            [
                "589eb17ab0816984"
            ],
            [
                "71b06616bf916322"
            ],
            [
                "baf922d2e2b977e3"
            ],
            [
                "76a9e204ed38e544"
            ],
            [
                "b2c84ae6b8eaec7f"
            ],
            [
                "de6e46e145fdd88d"
            ],
            [
                "c9512b570246b50f"
            ]
        ]
    },
    {
        "id": "589eb17ab0816984",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "order": 2,
        "group": "2c4b7f181a78b351",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_102_Profibus",
        "x": 1200,
        "y": 3180,
        "wires": []
    },
    {
        "id": "baf922d2e2b977e3",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "order": 3,
        "group": "2c4b7f181a78b351",
        "width": 0,
        "height": 0,
        "label": "Part Ready for Transport",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_105_Part_ready",
        "x": 1210,
        "y": 3260,
        "wires": []
    },
    {
        "id": "495b95bb4e7d78a7",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "C_105_Start",
        "label": "Start",
        "tooltip": "Start Production",
        "group": "2c4b7f181a78b351",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 3300,
        "wires": [
            [
                "0cbc30eac32b1ce4"
            ]
        ]
    },
    {
        "id": "f36d066a41a27c91",
        "type": "ui_dropdown",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "2c4b7f181a78b351",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Test Only Mode",
                "value": "C_105_Test",
                "type": "str"
            },
            {
                "label": "Test and Drill Mode",
                "value": "C_105_TestDrill",
                "type": "str"
            },
            {
                "label": "Rotation Mode",
                "value": "C_105_Rotation",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 3380,
        "wires": [
            [
                "72971af639e5e24a",
                "669fd860209bad31",
                "14d35e11bf105daa"
            ]
        ]
    },
    {
        "id": "72971af639e5e24a",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "C_105_Test",
        "func": "if (msg.payload === \"C_105_Test\") \nreturn { payload: true, topic: \"C_105_Test\"};\nelse return { payload: false, topic: \"C_105_Test\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3340,
        "wires": [
            [
                "30a7edd1e7b9acbb"
            ]
        ]
    },
    {
        "id": "669fd860209bad31",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "C_105_TestDrill",
        "func": "if (msg.payload === \"C_105_TestDrill\") \nreturn { payload: true, topic: \"C_105_TestDrill\"};\nelse return { payload: false, topic: \"C_105_TestDrill\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3380,
        "wires": [
            [
                "c7b3206a957aae57"
            ]
        ]
    },
    {
        "id": "14d35e11bf105daa",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "C_105_Rotation",
        "func": "if (msg.payload === \"C_105_Rotation\") \nreturn { payload: true, topic: \"C_105_Rotation\"};\nelse return { payload: false, topic: \"C_105_Rotation\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3420,
        "wires": [
            [
                "3e51d18c1fbc551d"
            ]
        ]
    },
    {
        "id": "d7eaa626168ba466",
        "type": "inject",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_105_Test",
        "payloadType": "str",
        "x": 190,
        "y": 3420,
        "wires": [
            [
                "f36d066a41a27c91"
            ]
        ]
    },
    {
        "id": "7504f38cedbe0f86",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3100,
        "wires": [
            [
                "7de04b85bfc557fb"
            ]
        ]
    },
    {
        "id": "3777b617c7ed5c4f",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3100,
        "wires": [
            [
                "7504f38cedbe0f86"
            ]
        ]
    },
    {
        "id": "7de04b85bfc557fb",
        "type": "OpcUa-Client",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "endpoint": "f2f8310065c20774",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Subscribe",
        "x": 1140,
        "y": 3100,
        "wires": [
            [
                "8dd7655c735bcf69",
                "76003d949fe6cf98"
            ],
            [
                "cced60d76fdd0483"
            ]
        ]
    },
    {
        "id": "9f6217427d597010",
        "type": "file in",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3100,
        "wires": [
            [
                "3777b617c7ed5c4f"
            ]
        ]
    },
    {
        "id": "8dd7655c735bcf69",
        "type": "debug",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "100 C",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3140,
        "wires": []
    },
    {
        "id": "cced60d76fdd0483",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_102_Profibus\" : false,\n            \"C_105_Initialization\" : false,\n            \"C_105_Part_ready\" : false,\n            \"C_105_Start\" : false,\n            \"C_105_Test\" : false,\n            \"C_105_TestDrill\" : false,\n            \"C_105_Rotation\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3100,
        "wires": [
            [
                "abfe5bd76e0baca2"
            ]
        ]
    },
    {
        "id": "68d4a608b3236888",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3100,
        "wires": [
            [
                "9f6217427d597010"
            ]
        ]
    },
    {
        "id": "abfe5bd76e0baca2",
        "type": "trigger",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3100,
        "wires": [
            [
                "322c47a47ba2525c"
            ]
        ]
    },
    {
        "id": "322c47a47ba2525c",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3100,
        "wires": [
            [
                "68d4a608b3236888"
            ]
        ]
    },
    {
        "id": "ee4001f8f4aaddf4",
        "type": "comment",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "e528f95e2a05d667",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "0c4b130cef843ce0"
            ]
        ]
    },
    {
        "id": "0c4b130cef843ce0",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Processing_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "4eda42cecdd0ae7a"
            ]
        ]
    },
    {
        "id": "cba3d7e070946f99",
        "type": "file",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Creates CSV Header",
        "filename": "C:\\ProjetoGemeo\\AAS\\Processing\\Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "202a13887c7fa8c5",
        "type": "comment",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "4eda42cecdd0ae7a",
        "type": "OpcUa-Client",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "endpoint": "f2f8310065c20774",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "862f278de7bc203b"
            ],
            [
                "4fd9baec6a67f774",
                "215646a16d7a1bc5"
            ]
        ]
    },
    {
        "id": "862f278de7bc203b",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "cd160891fd6165cc",
                "3e9c58db5e28ec16"
            ]
        ]
    },
    {
        "id": "cd160891fd6165cc",
        "type": "file",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Creates CSV List",
        "filename": "C:\\ProjetoGemeo\\AAS\\Processing\\Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "3e9c58db5e28ec16",
        "type": "debug",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "1068d74ea470687e",
        "type": "comment",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "8e50e90c8522fd45",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "0d3403389d64611f"
            ]
        ]
    },
    {
        "id": "28c69ef468c0d3e5",
        "type": "OpcUa-Client",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "endpoint": "f2f8310065c20774",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "44b7029d1c48793c"
            ],
            []
        ]
    },
    {
        "id": "44b7029d1c48793c",
        "type": "debug",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "8920d4393978f0c6",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Write_DIst",
        "links": [
            "e590dc0fde9e6594",
            "6e46228f0f21551c",
            "8fe9f951015d69cb",
            "148b026f65917570",
            "9d01a80873327a98",
            "840bd354263cc33f",
            "89f8d5c9b7e326be"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "de618c857bb13926"
            ]
        ]
    },
    {
        "id": "de618c857bb13926",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "759511134cfef588"
            ]
        ]
    },
    {
        "id": "759511134cfef588",
        "type": "file in",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "CSV File",
        "filename": "C:\\ProjetoGemeo\\AAS\\Processing\\Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "8e50e90c8522fd45"
            ]
        ]
    },
    {
        "id": "0d3403389d64611f",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "28c69ef468c0d3e5"
            ]
        ]
    },
    {
        "id": "533aac6cc4775e8a",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "CSV Link",
        "links": [
            "4fd9baec6a67f774"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "072642c4ec9937be"
            ]
        ]
    },
    {
        "id": "072642c4ec9937be",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "dcb3518e525924b3"
            ]
        ]
    },
    {
        "id": "dcb3518e525924b3",
        "type": "trigger",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "cba3d7e070946f99"
            ]
        ]
    },
    {
        "id": "4fd9baec6a67f774",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "533aac6cc4775e8a",
            "41195bec6f15320a"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "41195bec6f15320a",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "CSV Link",
        "links": [
            "4fd9baec6a67f774"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "f4caa04c9181f2af"
            ]
        ]
    },
    {
        "id": "f4caa04c9181f2af",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"O_100_PInit_Pos\" : false,\n    \"O_100_PDrill_Pos\" : false,\n    \"O_100_PTest_Pos\" : false,\n    \"O_100_SDrill_High\" : false,\n    \"O_100_SDrill_Low\" : false,\n    \"O_100_RT_Sensor\" : false,\n    \"O_100_PTest_Ok\" : false,\n    \"O_101_Start\" : false,\n    \"O_101_Stop\" : false,\n    \"O_101_Key_Pos\" : false,\n    \"O_101_Reset\" : false,\n    \"O_101_Panel_I4\" : false,\n    \"O_101_Panel_I5\" : false,\n    \"O_101_Panel_I6\" : false,\n    \"O_101_Panel_I7\" : false,\n    \"I_100_Drill_On\" : false,\n    \"I_100_RT_On\" : false,\n    \"I_100_Drill_Down\" : false,\n    \"I_100_Drill_Up\" : false,\n    \"I_100_Drill_Pin\" : false,\n    \"I_100_Test_Pin\" : false,\n    \"I_101_Led_Start\" : false,\n    \"I_101_Led_Reset\" : false,\n    \"I_101_Led_Extra1\" : false,\n    \"I_101_Led_Extra2\" : false,\n    \"I_101_Panel_O4\" : false,\n    \"I_101_Panel_O5\" : false,\n    \"I_101_Panel_O6\" : false,\n    \"I_101_Panel_O7\" : false,\n    \"F_102_Drill_On\" : false,\n    \"F_102_RT_On\" : false,\n    \"F_102_Drill_Down\" : false,\n    \"F_102_Drill_Up\" : false,\n    \"F_102_Drill_Pin\" : false,\n    \"F_102_Test_Pin\" : false,\n    \"F_103_Led_Start\" : false,\n    \"F_103_Led_Reset\" : false,\n    \"F_103_Led_Extra1\" : false,\n    \"F_103_Led_Extra2\" : false,\n    \"F_103_Panel_O4\" : false,\n    \"F_103_Panel_O5\" : false,\n    \"F_103_Panel_O6\" : false,\n    \"F_103_Panel_O7\" : false,\n    \"C_102_Profibus\" : false,\n    \"C_105_Initialization\" : false,\n    \"C_105_Part_ready\" : false,\n    \"C_105_Start\" : false,\n    \"C_105_Test\" : false,\n    \"C_105_TestDrill\" : false,\n    \"C_105_Rotation\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "daffd679b4b1f42b"
            ]
        ]
    },
    {
        "id": "daffd679b4b1f42b",
        "type": "trigger",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "e528f95e2a05d667"
            ]
        ]
    },
    {
        "id": "90668e595c930f56",
        "type": "debug",
        "z": "77b7c78952a73362",
        "g": "322de5f09fab19c3",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 100,
        "wires": []
    },
    {
        "id": "6faed54bf6449ca1",
        "type": "OpcUa-Server",
        "z": "77b7c78952a73362",
        "g": "322de5f09fab19c3",
        "port": "53890",
        "name": "Server : Processing",
        "endpoint": "",
        "users": "",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Processing",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "90668e595c930f56"
            ]
        ]
    },
    {
        "id": "d5d41f5b110def19",
        "type": "ui_switch",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "I_100_Test_Pin",
        "label": "Advances test pin",
        "tooltip": "",
        "group": "35ffe3a911b5678e",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1700,
        "wires": [
            [
                "a10ba01e2ba2d7af"
            ]
        ]
    },
    {
        "id": "a10ba01e2ba2d7af",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "item": "I_100_Test_Pin",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Test_Pin",
        "x": 480,
        "y": 1700,
        "wires": [
            [
                "840bd354263cc33f"
            ]
        ]
    },
    {
        "id": "c3c1e70f864356e4",
        "type": "OpcUa-Item",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "item": "F_102_Test_Pin",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Test_Pin",
        "x": 480,
        "y": 2540,
        "wires": [
            [
                "9d01a80873327a98"
            ]
        ]
    },
    {
        "id": "b7950de714bbb84b",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "order": 0,
        "group": "d6f3f56ef8efed4d",
        "width": 0,
        "height": 0,
        "label": "Advances test pin",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Test_Pin",
        "x": 1060,
        "y": 2540,
        "wires": []
    },
    {
        "id": "71b06616bf916322",
        "type": "ui_led",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "order": 1,
        "group": "2c4b7f181a78b351",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_105_Initialization",
        "x": 1210,
        "y": 3220,
        "wires": []
    },
    {
        "id": "192e6edbede6a74d",
        "type": "debug",
        "z": "77b7c78952a73362",
        "g": "f9dae9a4a02d5963",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 100,
        "wires": []
    },
    {
        "id": "6c8020b23a7d4bc2",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "f9dae9a4a02d5963",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "61f7ab5f9355ad17",
            "ceeb4e575ae1ac57",
            "743027ba08825592",
            "4b5416de39525d1b",
            "a11ae86ed7e94f3e"
        ],
        "x": 855,
        "y": 60,
        "wires": []
    },
    {
        "id": "8bc0b9f8e0531666",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "O_100_PInit_Pos",
        "func": "if (msg.topic === \"O_100_PInit_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_PInit_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 620,
        "wires": [
            [
                "61d4eb1bbf59204e"
            ]
        ]
    },
    {
        "id": "61f7ab5f9355ad17",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "S7 PS",
        "links": [
            "6c8020b23a7d4bc2"
        ],
        "x": 55,
        "y": 740,
        "wires": [
            [
                "8bc0b9f8e0531666",
                "e18e758ae1c810ac",
                "5eed80b3ce9fa408",
                "a22bcbf4022f06f4",
                "05d8f959dd3b7818",
                "e3234828aa789eef",
                "e3f464337b78fdbd"
            ]
        ]
    },
    {
        "id": "05d8f959dd3b7818",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "O_100_SDrill_Low",
        "func": "if (msg.topic === \"O_100_SDrill_Low\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_SDrill_Low\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 780,
        "wires": [
            [
                "956520b50d86791f"
            ]
        ]
    },
    {
        "id": "e18e758ae1c810ac",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "O_100_PDrill_Pos",
        "func": "if (msg.topic === \"O_100_PDrill_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_PDrill_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 660,
        "wires": [
            [
                "227ad57296c45855"
            ]
        ]
    },
    {
        "id": "5eed80b3ce9fa408",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "O_100_PTest_Pos",
        "func": "if (msg.topic === \"O_100_PTest_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_PTest_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 700,
        "wires": [
            [
                "c276280a2e76e3d1"
            ]
        ]
    },
    {
        "id": "a22bcbf4022f06f4",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "O_100_SDrill_High",
        "func": "if (msg.topic === \"O_100_SDrill_High\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_SDrill_High\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 740,
        "wires": [
            [
                "61f20c616fd4605f"
            ]
        ]
    },
    {
        "id": "e3234828aa789eef",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "O_100_RT_Sensor",
        "func": "if (msg.topic === \"O_100_RT_Sensor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_RT_Sensor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 820,
        "wires": [
            [
                "027240d122e16be6"
            ]
        ]
    },
    {
        "id": "e3f464337b78fdbd",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "O_100_PTest_Ok",
        "func": "if (msg.topic === \"O_100_PTest_Ok\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_PTest_Ok\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 860,
        "wires": [
            [
                "fe69f40ee51bab44"
            ]
        ]
    },
    {
        "id": "1e8a62274991a940",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "Sub In 100 PS",
        "links": [
            "941195c9de5f5e22"
        ],
        "x": 755,
        "y": 740,
        "wires": [
            [
                "26d55f57a7fd7458"
            ]
        ]
    },
    {
        "id": "941195c9de5f5e22",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "Sub Out 100 PS",
        "mode": "link",
        "links": [
            "1e8a62274991a940"
        ],
        "x": 1295,
        "y": 540,
        "wires": []
    },
    {
        "id": "7c0bc39301b1b293",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "O_101_Start",
        "func": "if (msg.topic === \"O_101_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "72d5ff89ef10de61"
            ]
        ]
    },
    {
        "id": "ceeb4e575ae1ac57",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "S7 AS",
        "links": [
            "6c8020b23a7d4bc2"
        ],
        "x": 55,
        "y": 1180,
        "wires": [
            [
                "7c0bc39301b1b293",
                "586147dc53dc4642",
                "2333e34ca25ae266",
                "2a6bab77cf327361",
                "cd69a002cd217793",
                "fc7911406159e895",
                "db4cad58c1e339b6",
                "4cefc044ead134a2"
            ]
        ]
    },
    {
        "id": "cd69a002cd217793",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "O_101_Panel_I4",
        "func": "if (msg.topic === \"O_101_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1200,
        "wires": [
            [
                "6105207bb50c1be1"
            ]
        ]
    },
    {
        "id": "586147dc53dc4642",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "O_101_Stop",
        "func": "if (msg.topic === \"O_101_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "718a7e63aab8bfa3"
            ]
        ]
    },
    {
        "id": "2333e34ca25ae266",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "O_101_Key_Pos",
        "func": "if (msg.topic === \"O_101_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1120,
        "wires": [
            [
                "7e4d55879d5a8cc9"
            ]
        ]
    },
    {
        "id": "2a6bab77cf327361",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "O_101_Reset",
        "func": "if (msg.topic === \"O_101_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1160,
        "wires": [
            [
                "8c078b2a4e69a3c6"
            ]
        ]
    },
    {
        "id": "fc7911406159e895",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "O_101_Panel_I5",
        "func": "if (msg.topic === \"O_101_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1240,
        "wires": [
            [
                "e85712bf390d093e"
            ]
        ]
    },
    {
        "id": "db4cad58c1e339b6",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "O_101_Panel_I6",
        "func": "if (msg.topic === \"O_101_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1280,
        "wires": [
            [
                "6badb6980eddccd1"
            ]
        ]
    },
    {
        "id": "4cefc044ead134a2",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "O_101_Panel_I7",
        "func": "if (msg.topic === \"O_101_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1320,
        "wires": [
            [
                "1e358b74e795c3e6"
            ]
        ]
    },
    {
        "id": "8045ce6081fdf24c",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "Sub Out 100 AS",
        "mode": "link",
        "links": [
            "c88a2c3aea979fdc"
        ],
        "x": 1295,
        "y": 960,
        "wires": []
    },
    {
        "id": "c88a2c3aea979fdc",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "Sub In 100 AS",
        "links": [
            "8045ce6081fdf24c"
        ],
        "x": 755,
        "y": 1180,
        "wires": [
            [
                "76724bb7e3d984f0"
            ]
        ]
    },
    {
        "id": "67201729af365f1b",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "Sub Out 100 PA",
        "mode": "link",
        "links": [
            "a528d69e0456c82b"
        ],
        "x": 1295,
        "y": 1420,
        "wires": []
    },
    {
        "id": "a528d69e0456c82b",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "Sub In 100 PA",
        "links": [
            "67201729af365f1b"
        ],
        "x": 755,
        "y": 1600,
        "wires": [
            [
                "5b698114e20a388f"
            ]
        ]
    },
    {
        "id": "f2d9694fcc43aac2",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "Sub Out 100 AA",
        "mode": "link",
        "links": [
            "b73c20e5af1c999a"
        ],
        "x": 1295,
        "y": 1800,
        "wires": []
    },
    {
        "id": "b73c20e5af1c999a",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "Sub In 100 AA",
        "links": [
            "f2d9694fcc43aac2"
        ],
        "x": 755,
        "y": 2020,
        "wires": [
            [
                "a021dbf059f60883"
            ]
        ]
    },
    {
        "id": "bdb4a20e57ab1d7c",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "Sub Out 100 PF",
        "mode": "link",
        "links": [
            "df284da39adcf1f2"
        ],
        "x": 1295,
        "y": 2260,
        "wires": []
    },
    {
        "id": "df284da39adcf1f2",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "Sub In 100 PF",
        "links": [
            "bdb4a20e57ab1d7c"
        ],
        "x": 755,
        "y": 2440,
        "wires": [
            [
                "c6823ba0fb656234"
            ]
        ]
    },
    {
        "id": "5ffc9fbf3492d0d8",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "F_102_Drill_On",
        "func": "if (msg.topic === \"F_102_Drill_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Drill_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2340,
        "wires": [
            [
                "e388752b27f04cdf"
            ]
        ]
    },
    {
        "id": "743027ba08825592",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "S7 PF",
        "links": [
            "6c8020b23a7d4bc2"
        ],
        "x": 55,
        "y": 2440,
        "wires": [
            [
                "5ffc9fbf3492d0d8",
                "1b44a249fbf21db7",
                "349b61a443b9da23",
                "2d16a3dc93aba5c4",
                "27ec636a20abf191",
                "9fb44db82ed3ef56"
            ]
        ]
    },
    {
        "id": "27ec636a20abf191",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "F_102_Drill_Pin",
        "func": "if (msg.topic === \"F_102_Drill_Pin\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Drill_Pin\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2500,
        "wires": [
            [
                "9530abf1aad23f02"
            ]
        ]
    },
    {
        "id": "1b44a249fbf21db7",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "F_102_RT_On",
        "func": "if (msg.topic === \"F_102_RT_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_RT_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2380,
        "wires": [
            [
                "016378a53e52774d"
            ]
        ]
    },
    {
        "id": "349b61a443b9da23",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "F_102_Drill_Down",
        "func": "if (msg.topic === \"F_102_Drill_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Drill_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2420,
        "wires": [
            [
                "4dcb038b09645e8b"
            ]
        ]
    },
    {
        "id": "2d16a3dc93aba5c4",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "F_102_Drill_Up",
        "func": "if (msg.topic === \"F_102_Drill_Up\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Drill_Up\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2460,
        "wires": [
            [
                "f9346ee333b634ec"
            ]
        ]
    },
    {
        "id": "9fb44db82ed3ef56",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "F_102_Test_Pin",
        "func": "if (msg.topic === \"F_102_Test_Pin\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Test_Pin\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2540,
        "wires": [
            [
                "c3c1e70f864356e4"
            ]
        ]
    },
    {
        "id": "6d07d0cd7c2d1644",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "Sub Out 100 AF",
        "mode": "link",
        "links": [
            "481a29548515967e"
        ],
        "x": 1295,
        "y": 2640,
        "wires": []
    },
    {
        "id": "481a29548515967e",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "Sub In 100 AF",
        "links": [
            "6d07d0cd7c2d1644"
        ],
        "x": 755,
        "y": 2860,
        "wires": [
            [
                "69fa58d5671e8de4"
            ]
        ]
    },
    {
        "id": "bdb698c7be139255",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "F_103_Led_Start",
        "func": "if (msg.topic === \"F_103_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2720,
        "wires": [
            [
                "a7fb56f6836cb531"
            ]
        ]
    },
    {
        "id": "4b5416de39525d1b",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "S7 AF",
        "links": [
            "6c8020b23a7d4bc2"
        ],
        "x": 55,
        "y": 2860,
        "wires": [
            [
                "bdb698c7be139255",
                "1d5b4d0abb75a730",
                "d71ececaf9998ce3",
                "a44f80bcb9a742f8",
                "e61cd8be51fa9505",
                "d3832916987421e7",
                "fe7ff166aeae7a10",
                "08a4d09b1ce4e48c"
            ]
        ]
    },
    {
        "id": "e61cd8be51fa9505",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "F_103_Panel_O4",
        "func": "if (msg.topic === \"F_103_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2880,
        "wires": [
            [
                "6211377b409dd359"
            ]
        ]
    },
    {
        "id": "1d5b4d0abb75a730",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "F_103_Led_Reset",
        "func": "if (msg.topic === \"F_103_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2760,
        "wires": [
            [
                "47617b7839fed67e"
            ]
        ]
    },
    {
        "id": "d71ececaf9998ce3",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "F_103_Led_Extra1",
        "func": "if (msg.topic === \"F_103_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2800,
        "wires": [
            [
                "ba610bf74c25b4b6"
            ]
        ]
    },
    {
        "id": "a44f80bcb9a742f8",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "F_103_Led_Extra2",
        "func": "if (msg.topic === \"F_103_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2840,
        "wires": [
            [
                "4ede621096ce1163"
            ]
        ]
    },
    {
        "id": "d3832916987421e7",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "F_103_Panel_O5",
        "func": "if (msg.topic === \"F_103_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2920,
        "wires": [
            [
                "d5640f6471a0d3f5"
            ]
        ]
    },
    {
        "id": "fe7ff166aeae7a10",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "F_103_Panel_O6",
        "func": "if (msg.topic === \"F_103_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2960,
        "wires": [
            [
                "233589432bbaf5cd"
            ]
        ]
    },
    {
        "id": "08a4d09b1ce4e48c",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "F_103_Panel_O7",
        "func": "if (msg.topic === \"F_103_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3000,
        "wires": [
            [
                "a449c6d0f0da14b6"
            ]
        ]
    },
    {
        "id": "76003d949fe6cf98",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "Sub Out 100 C",
        "mode": "link",
        "links": [
            "2a99c3bedea19ba8"
        ],
        "x": 1295,
        "y": 3100,
        "wires": []
    },
    {
        "id": "2a99c3bedea19ba8",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "Sub In 100 C",
        "links": [
            "76003d949fe6cf98"
        ],
        "x": 915,
        "y": 3300,
        "wires": [
            [
                "ee682a23b7dbd4c5"
            ]
        ]
    },
    {
        "id": "a11ae86ed7e94f3e",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "S7 C",
        "links": [
            "6c8020b23a7d4bc2"
        ],
        "x": 55,
        "y": 3220,
        "wires": [
            [
                "5e621c3b25cfd109",
                "282d29c0f19a9b71",
                "4e425781d4be8cd0"
            ]
        ]
    },
    {
        "id": "4e425781d4be8cd0",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "C_105_Part_ready",
        "func": "if (msg.topic === \"C_105_Part_ready\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_Part_ready\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3260,
        "wires": [
            [
                "c4312facf8855dfd"
            ]
        ]
    },
    {
        "id": "5e621c3b25cfd109",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "C_102_Profibus",
        "func": "if (msg.topic === \"C_102_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_102_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3180,
        "wires": [
            [
                "b3c62782f28a5d0a"
            ]
        ]
    },
    {
        "id": "282d29c0f19a9b71",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "C_105_Initialization",
        "func": "if (msg.topic === \"C_105_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3220,
        "wires": [
            [
                "038bd031054dd51e"
            ]
        ]
    },
    {
        "id": "26effca9785f898f",
        "type": "mqtt in",
        "z": "77b7c78952a73362",
        "g": "f9dae9a4a02d5963",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d99579db50330f02",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 530,
        "y": 60,
        "wires": [
            [
                "327414aa6675ffd2"
            ]
        ]
    },
    {
        "id": "327414aa6675ffd2",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "f9dae9a4a02d5963",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 60,
        "wires": [
            [
                "6c8020b23a7d4bc2",
                "192e6edbede6a74d"
            ]
        ]
    },
    {
        "id": "215646a16d7a1bc5",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "e1ce0e77da6f308b"
            ]
        ]
    },
    {
        "id": "e1ce0e77da6f308b",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "2551a40d7b1b7db6",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "16993bc5c9781741",
            "5c3965386fa8110d",
            "c821f8961213c79e",
            "e25e78f73a831398",
            "afa19eac8e2713db",
            "d6a3e64efe560a6a",
            "36fb5af8a2823e94"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "16993bc5c9781741",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "0535f0e16e7fc362",
        "name": "Read PS",
        "links": [
            "e1ce0e77da6f308b"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "08a91e57f16f9910"
            ]
        ]
    },
    {
        "id": "5c3965386fa8110d",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "791c07b0e0bd34a3",
        "name": "Read AS",
        "links": [
            "e1ce0e77da6f308b"
        ],
        "x": 55,
        "y": 960,
        "wires": [
            [
                "6aa03e3f532d4945"
            ]
        ]
    },
    {
        "id": "c821f8961213c79e",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "Read S",
        "links": [
            "e1ce0e77da6f308b"
        ],
        "x": 55,
        "y": 1420,
        "wires": [
            [
                "220caf913e5995c7"
            ]
        ]
    },
    {
        "id": "e25e78f73a831398",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "Read AA",
        "links": [
            "e1ce0e77da6f308b"
        ],
        "x": 55,
        "y": 1800,
        "wires": [
            [
                "a4d68b8e1514dccf"
            ]
        ]
    },
    {
        "id": "afa19eac8e2713db",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "ce97b803457fbbb6",
        "name": "Read PF",
        "links": [
            "e1ce0e77da6f308b"
        ],
        "x": 55,
        "y": 2260,
        "wires": [
            [
                "e1395e565cae6d3e"
            ]
        ]
    },
    {
        "id": "d6a3e64efe560a6a",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "4decdff9a7a7aa2d",
        "name": "Read AF",
        "links": [
            "e1ce0e77da6f308b"
        ],
        "x": 55,
        "y": 2640,
        "wires": [
            [
                "5559c0607bf44962"
            ]
        ]
    },
    {
        "id": "36fb5af8a2823e94",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "Read C",
        "links": [
            "e1ce0e77da6f308b"
        ],
        "x": 55,
        "y": 3100,
        "wires": [
            [
                "cced60d76fdd0483"
            ]
        ]
    },
    {
        "id": "dfb6846fd55e0261",
        "type": "mqtt out",
        "z": "77b7c78952a73362",
        "g": "f9dae9a4a02d5963",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d99579db50330f02",
        "x": 690,
        "y": 100,
        "wires": []
    },
    {
        "id": "3f39d9d002249f08",
        "type": "link in",
        "z": "77b7c78952a73362",
        "g": "f9dae9a4a02d5963",
        "name": "S7 Actuators",
        "links": [
            "fe659e930d0cb0f7",
            "8c8fc5ba9fbdf0e6"
        ],
        "x": 585,
        "y": 100,
        "wires": [
            [
                "dfb6846fd55e0261"
            ]
        ]
    },
    {
        "id": "2b261e1493dce231",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "I_100_Drill_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1500,
        "wires": [
            [
                "fe659e930d0cb0f7"
            ]
        ]
    },
    {
        "id": "227a0e31339fd411",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "I_100_RT_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1540,
        "wires": [
            [
                "fe659e930d0cb0f7"
            ]
        ]
    },
    {
        "id": "6027e3c54a865192",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "I_100_Drill_Down",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1580,
        "wires": [
            [
                "fe659e930d0cb0f7"
            ]
        ]
    },
    {
        "id": "e77dec640257ba7f",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "I_100_Drill_Up",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1620,
        "wires": [
            [
                "fe659e930d0cb0f7"
            ]
        ]
    },
    {
        "id": "7c711af666f5463f",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "I_100_Drill_Pin",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1660,
        "wires": [
            [
                "fe659e930d0cb0f7"
            ]
        ]
    },
    {
        "id": "8948b1dba335944e",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "I_100_Test_Pin",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1700,
        "wires": [
            [
                "fe659e930d0cb0f7"
            ]
        ]
    },
    {
        "id": "fe659e930d0cb0f7",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "52361bc1ecaf849d",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "3f39d9d002249f08"
        ],
        "x": 1235,
        "y": 1600,
        "wires": []
    },
    {
        "id": "be212be61be44017",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1880,
        "wires": [
            [
                "4d3fda8090259723"
            ]
        ]
    },
    {
        "id": "35cd5df82328f6bb",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1920,
        "wires": [
            [
                "4d3fda8090259723"
            ]
        ]
    },
    {
        "id": "4c391cb87e4c083d",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1960,
        "wires": [
            [
                "4d3fda8090259723"
            ]
        ]
    },
    {
        "id": "cbc2d181721a2aaf",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 2000,
        "wires": [
            [
                "4d3fda8090259723"
            ]
        ]
    },
    {
        "id": "c25afe52ad674ba1",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 2040,
        "wires": [
            [
                "4d3fda8090259723"
            ]
        ]
    },
    {
        "id": "1ff946ac123c8715",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 2080,
        "wires": [
            [
                "4d3fda8090259723"
            ]
        ]
    },
    {
        "id": "23abd7179160ed2e",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 2120,
        "wires": [
            [
                "4d3fda8090259723"
            ]
        ]
    },
    {
        "id": "e2e61df9be203d77",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "I_101_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 2160,
        "wires": [
            [
                "4d3fda8090259723"
            ]
        ]
    },
    {
        "id": "4d3fda8090259723",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "0a35f589c8f9826d",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "b3da54a8f1f472c4"
        ],
        "x": 1225,
        "y": 2020,
        "wires": []
    },
    {
        "id": "76a9e204ed38e544",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "C_105_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3300,
        "wires": [
            [
                "8c8fc5ba9fbdf0e6"
            ]
        ]
    },
    {
        "id": "b2c84ae6b8eaec7f",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "C_105_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3340,
        "wires": [
            [
                "8c8fc5ba9fbdf0e6"
            ]
        ]
    },
    {
        "id": "de6e46e145fdd88d",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "C_105_TestDrill",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3380,
        "wires": [
            [
                "8c8fc5ba9fbdf0e6"
            ]
        ]
    },
    {
        "id": "c9512b570246b50f",
        "type": "function",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "C_105_Rotation",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3420,
        "wires": [
            [
                "8c8fc5ba9fbdf0e6"
            ]
        ]
    },
    {
        "id": "8c8fc5ba9fbdf0e6",
        "type": "link out",
        "z": "77b7c78952a73362",
        "g": "0c886b6a48498f56",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "3f39d9d002249f08"
        ],
        "x": 1365,
        "y": 3300,
        "wires": []
    }
]