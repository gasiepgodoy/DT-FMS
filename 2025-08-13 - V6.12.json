[
    {
        "id": "f6d07cedc827abbb",
        "type": "tab",
        "label": "Version Info",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "789bbace3c2df385",
        "type": "tab",
        "label": "MQTT Broker",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "c7cba4aaafa7d336",
        "type": "tab",
        "label": "Master [20]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "aefdc2670756e2cc",
        "type": "tab",
        "label": "Robot [30]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "3ff8f0e7fc264904",
        "type": "tab",
        "label": "RFID",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "18b0dae29c8592d2",
        "type": "tab",
        "label": "RFID Routing",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "5461c9957ffd23af",
        "type": "tab",
        "label": "Storage [40]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "4de9747ea9a0b29e",
        "type": "tab",
        "label": "Handling 1 [50]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "ebda326947bc6818",
        "type": "tab",
        "label": "Sorting [60]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "7b73d224df5f2e4d",
        "type": "tab",
        "label": "Testing [70]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "1b6d40929ba9c133",
        "type": "tab",
        "label": "Distribution [80]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "078507e39b438a2b",
        "type": "tab",
        "label": "Handling 2 [90]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "7b3114de0a2b4bca",
        "type": "tab",
        "label": "Processing [100]",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "36d7cb4474ef8f7a",
        "type": "group",
        "z": "1b6d40929ba9c133",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "a12d6ca34207c56d",
            "bb7a1c6a3b11b339",
            "368baa89b9c56ca3",
            "90c6fcef68027233",
            "dbb2b117aaa669df",
            "2f19a4bfe40cf688",
            "be75bb52e8ebef80",
            "6df57eec20b1df84",
            "250936f3f03489ee",
            "2030522432246d3f",
            "c0bcfd6a7483bfbc",
            "25b6bdd4c9a2da56",
            "15834f872d4efd86",
            "79b1c0cadadb15a8",
            "e7322293fd6605ad",
            "b126db2e91fb6450",
            "2954bce11504ab12",
            "29e9c05c291eac17",
            "1ab6aad4771410b4",
            "91e8829b6e5e3c2a",
            "ac8b19ba9b2910f0",
            "7c789d113f07a31c",
            "b37077a140b7c657",
            "f6f0b627a24eee08",
            "38e05ae407d41aba",
            "5a638411ece54167",
            "57c1e4fb38ba6102",
            "ca1ad0b2687a0237",
            "9ec60d76b80cc0b8",
            "ed3fb5e06b4bd34e"
        ],
        "x": 14,
        "y": 1959,
        "w": 1412,
        "h": 322
    },
    {
        "id": "3718a9c73445aedc",
        "type": "group",
        "z": "1b6d40929ba9c133",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "e6950825e4f0b75b",
            "9be49f8d33ca028e",
            "c91165956d74b1d4",
            "0bea80e3742e9e47",
            "c0dd6f95ba148714",
            "d9da3793788167c3",
            "0e94c0e8c48266c3",
            "0f999fe3477a4fbf",
            "39f008e14a17b66a",
            "5b40b9624f782275",
            "94421e57a70cded4",
            "25e7e206a52f322a",
            "1eb55db0fc7d55ad",
            "ec7414b53d764a80",
            "eeef9c81ec9fa421",
            "989f6cae9736d06e",
            "ee228e650f1e0172",
            "aa62e02202b81173",
            "0f53dbdbfef2dc70",
            "4fed8ff346c51dce",
            "4bada79a91a1b373",
            "51aeaee0e32fb386",
            "232bc465586acd19",
            "3ac8264eaa71bc31",
            "33afbe741620855b",
            "888354b72817e87a",
            "975d8519092d5dd4",
            "68942cc70c44cfef",
            "99d6f237552bfd8e",
            "c7ac25944e2acedc",
            "119f65194accee4e",
            "ea67a5c90cc091ef",
            "5f372017f61785b6",
            "3eb34f921c4e4d1b",
            "50cfd58057e2de41",
            "d1de76b3bef231b4",
            "7dd2d81e99c93bf1",
            "f592a7646d838c25",
            "00da2ddfb125096b"
        ],
        "x": 14,
        "y": 2299,
        "w": 1412,
        "h": 442
    },
    {
        "id": "114c542473af4663",
        "type": "group",
        "z": "1b6d40929ba9c133",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e2540e542afa75aa",
            "0b04f8718c6eb043",
            "4d313108088c6b72",
            "a204127349c9be64",
            "e1df524beecdf85d",
            "9fb00f355519abd1",
            "5a6c5e2035853cf1",
            "828b893cec0e30f3",
            "7d8295f391670177",
            "b8b987957d16104a",
            "4ec95bbd9a3bbd55",
            "ee65fb93046c1419",
            "eeec56f5d1bef3b7",
            "1cbab702eef23edf",
            "3270d7873d3377f8",
            "47f63ed35d0588f7",
            "18bdb5acd1968620",
            "c5e64a33de83c673",
            "8ae05721095ab939",
            "61db171f74c8ad70",
            "398a0ad3ef5fd0ea",
            "c8e5e02ffbc33c38",
            "03bafc96ab6bcb7e",
            "13341916d281cffe",
            "9dbb28e043cd2b45",
            "378b01d430a7c7d1"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "1366b9efc31e9a8e",
        "type": "group",
        "z": "7b73d224df5f2e4d",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d7b15052c0eed941",
            "cc2b29e2d7edddd6",
            "129603202de21f07",
            "00d5b7d7ad51943c",
            "696bb30ffa8a2d62",
            "6554052639670932",
            "d2e5e661ba5ce806",
            "d905e5171b7b7300",
            "2c98a48d7758cb65",
            "895e78a122d03323",
            "dc00aff1ca9fd01e",
            "2c383aec8d101b24",
            "603a9e3b7502cbd5",
            "86aef96a6c0005e2",
            "4614c911f16a1486",
            "d236f2d0cabf89df",
            "fc2586fa98deb30f",
            "25f31b08c3ed75b6",
            "afeb713d84db0645",
            "b7077665c0d3d12a",
            "ebeac108db56595f",
            "a87ca68483dc1486",
            "01d0953408662110",
            "5d680736365220ed",
            "be06b5acf6f2fdb3",
            "1f7a70769653bb99"
        ],
        "x": 14,
        "y": 159,
        "w": 1352,
        "h": 322
    },
    {
        "id": "6bb9db7ea39af927",
        "type": "group",
        "z": "7b73d224df5f2e4d",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f055c540c0467f2b",
            "515e6b1f40a7901c"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "a604ebd94dd93e65",
        "type": "group",
        "z": "1b6d40929ba9c133",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "47fcc8c5021b0457",
            "ed2f688aa784bf33"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "5013d4b8351d33d6",
        "type": "group",
        "z": "078507e39b438a2b",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "9dad70c2c97bab03",
            "4cec187110a8ebfd",
            "ad16192df3c8dd57",
            "9c1981d4248a6c26",
            "8c808091b70742a1",
            "acdaa4ca374bc711",
            "e87395ebcfd1bc9e",
            "6e2f686d7f22348d",
            "083f09df52f5a95c",
            "90bcafc099d09b99",
            "d96bbe1a09e3acc9",
            "69a1b49807dd9c2f",
            "965d0bdbde7f1676",
            "52b03e51cb306264",
            "f7d89e1bd0ca63e0",
            "14c1c61b237ab4d2",
            "a467ee2ce64a7fb7",
            "0f19f96fa0f4075c",
            "2889ba191e92c29f",
            "152a23d6ee15d13f",
            "355e0e0b4184b0e0",
            "4b7088d7a25f7b9c",
            "f2c35ee224a1b49a",
            "f4acd4083aa18fc9",
            "d318ca9f80a01da6",
            "05515ec289b3a6dd",
            "52d5115293cab3be"
        ],
        "x": 14,
        "y": 2359,
        "w": 1412,
        "h": 282
    },
    {
        "id": "8a2bb225ff15aa30",
        "type": "group",
        "z": "078507e39b438a2b",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "683b29343d0636a8",
            "5f21aec030c7e784",
            "f3913f43f2cc742b",
            "6d5ef480efa75883",
            "cc2eb643b5800635",
            "fa254c7d78ac9c9a",
            "d41a61fe717c9a68",
            "f512c9b2f44f30dd",
            "ef7b187bf4481352",
            "ca7e611834a66788",
            "2126a20940bc8bcf",
            "f14171e680744e8c",
            "2b8f9f4fa460ebdf",
            "6321ba54dc90e2b5",
            "d1e593f353650fb9",
            "6f0cc638407545af",
            "0401c9b84bc2e8f4",
            "f6700249220c808a",
            "f142708a735f0338",
            "776e7720d311cac6",
            "3229cca2704428c1",
            "87771fd380103f78",
            "3302f69813a56a7b",
            "4a30202590d76011",
            "cd886c350f3fd96c",
            "eda64c12db7bf495",
            "ef822fc73c2f884d",
            "d388edc9420db302",
            "fabe55b700b02bf2",
            "1dbc69deaf10ea95",
            "5b83013aa6e829c7",
            "a38c785cd14fb938",
            "7aa3bf1bf8abdbf2",
            "27c498d7ca23cd80",
            "c086a841b4ba7731",
            "e48cb0dafb032ed9",
            "25aa39aa2f2c7c75",
            "b2bd59523984c6f0",
            "07ce958e8a6808fe"
        ],
        "x": 14,
        "y": 2659,
        "w": 1412,
        "h": 442
    },
    {
        "id": "8bc8dad591767a58",
        "type": "group",
        "z": "078507e39b438a2b",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "50c88bb6a3fee3ba",
            "21bf85898d4f2fe8",
            "fc27cffb95bd65df",
            "0cbbfeb1118474e3",
            "4893556c0bd0baf6",
            "d379578ecea16ea5",
            "f148658c1a9d0132",
            "2efee3e3f911a3df",
            "d582da83dfc60ce3",
            "db9e17e96a7d2abd",
            "fc6e1f006ef423d4",
            "40036dd5fbc10f13",
            "19fb43b94073a8ba",
            "b6bc552313f3f14f",
            "b79273a1e7ceb1e8",
            "c37bd28a4d92f098",
            "2b5fc042b1f1d405",
            "e80d9ce7100c1ede",
            "ef0d5fb4165cecea",
            "f6e7e5c907fb9cde",
            "3f35cb0203a87714",
            "255587c999fd53f0",
            "c59662bd1d229bfc",
            "4a5c743c7d2b7392",
            "73b4286462c0d18c",
            "c4a016bca2449959"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "21809d9ceb4a9b5f",
        "type": "group",
        "z": "078507e39b438a2b",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fa2c4470b22e3017",
            "91440968ff4d670d"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "73c0b2c25d36a13c",
        "type": "group",
        "z": "7b3114de0a2b4bca",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "4a273bcd123bdf2e",
            "ed1b7e904c183720",
            "33448a9e309c290c",
            "a6bee765bbfc6aad",
            "72c277dcc4dbfd13",
            "aa96f40cc1df2d3b",
            "38ef7ce8c36618d8",
            "c4ec9645b65ef137",
            "3554cdf7bc51bbf9",
            "f10c77f5ad9f7f71",
            "d09da6bcce4a5d27",
            "ee8dd78b328ff08b",
            "0b73698fc7bdcb30",
            "f78a46bc19a54163",
            "df9364583ca6bf20",
            "441707cc55cbb0a1",
            "db170fc5a03be704",
            "d05811343481f838",
            "a11348aec0c92878",
            "5d66419185c16e6f",
            "25a10aa70ecebd71",
            "9fb7edf9b886f4c9",
            "6fb9a1064a0cd507",
            "9c41495b875e37b0",
            "97855369c9559d81",
            "7e424319d3a55adb",
            "21e6668ee2720618",
            "097c5ba5a3adf1a1",
            "6bd9664ea04e57b1",
            "1482f9d2e66ef9d1",
            "bc8a4597e5cbd9f6",
            "c9ecd1625eead13a",
            "555176c2f21b28b3"
        ],
        "x": 14,
        "y": 739,
        "w": 1432,
        "h": 362
    },
    {
        "id": "b2c67090221487a5",
        "type": "group",
        "z": "7b3114de0a2b4bca",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "ecee94a4c68de1d6",
            "b4a0f692d8045ac1",
            "464b8874636b8c74",
            "364744a317ce5db1",
            "f0519abe2a593bf6",
            "b091c824bce6b739",
            "70048d7e8df034ea",
            "7099e85cb0a7dc3e",
            "a175d77a84bcef3a",
            "e25820e7d0d82c51",
            "3e5250e597a7c401",
            "5ad54af1f3dda3a3",
            "d8f2b2fde65d92d8",
            "40e0924beefdc058",
            "a481b897d893de3b",
            "81038acdb606bed9",
            "98ce6dbb41e9a088",
            "0e8d080b33999f2e",
            "897516fa3bbef246",
            "1feeadb9e12b088d",
            "1a5a36f179ecdcb4",
            "1b385837b2a7d3d7",
            "c0a12e93d514d9f0",
            "a8607bbedc3d7873",
            "77447c37755f4361",
            "962d3e87427ad45e",
            "2bad94e85aad2c9d",
            "a5edeb3a57740ad2",
            "1e3559f5af740d8a",
            "9c32d138859261c8",
            "9739582985781f23",
            "08cf3aed5ab0bdf7",
            "742c5b8954b7a2b5",
            "76de80859601896e",
            "b74eb6049a20d4fd",
            "50f505e373fc9bf2",
            "a1a89eea3647fb50",
            "b3dfc0f95cfd2120",
            "b46f240a5a48d184"
        ],
        "x": 14,
        "y": 1119,
        "w": 1432,
        "h": 442
    },
    {
        "id": "8719c38384e7fef3",
        "type": "group",
        "z": "7b3114de0a2b4bca",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "6956885a2ab5e3ef",
            "c0429fc88d6e9185",
            "47c95372af36ebaf",
            "2575616b99487c83",
            "f93c2bf8fa404e1c",
            "6ec7acd3ce5b8887",
            "ea20c3a1e3a7b0ef",
            "543b9a24de00af21",
            "1be6d1d2f0ac0ac8",
            "bcd2625f47e92f19",
            "ba5cece87c61a70b",
            "177a15ceb3d3d0f9",
            "cb67c77651795a1d",
            "51c19b5fe30ecb09",
            "9f2b5d7a64bbfc89",
            "33180d0cf0fd1dd2",
            "683cb1843187d985",
            "fa771d289400741b",
            "fa22e040030fb1df",
            "80bf6031ace7d279",
            "47bfda427d7dc302",
            "6a8a47f274161670",
            "e38b713c88041ae2",
            "151224ac7899d3e8",
            "1affcbb413a4215e",
            "8b5d2180685512a7",
            "0afffc3ce2e1c0bc",
            "7b54194776382f16",
            "6c069ef08a8f8168",
            "35292d809cfba348",
            "3f0562d14deff578",
            "419aeb8222e57ee5",
            "3a0e7164c0f5127e"
        ],
        "x": 14,
        "y": 1999,
        "w": 1432,
        "h": 362
    },
    {
        "id": "c0a43e6bb6d59102",
        "type": "group",
        "z": "7b3114de0a2b4bca",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "3831d172e6138810",
            "6cfef3f45d9a5223",
            "6a5adc7664e926f8",
            "05e01f8d1863da86",
            "3317c136a7c5744a",
            "18a16c9e251316ea",
            "35ba2608c44b91a6",
            "6a4796169480a6e6",
            "4905a2b91c3fc094",
            "96d77bd7d58a804c",
            "0f0924dd8b6663a8",
            "12bb6b152ea3e358",
            "d4a2bc6031cebd03",
            "afad8f8e0a222adc",
            "f96911038da147cf",
            "b485c8279534c228",
            "72f34cd83a196f9b",
            "c70cf18922a3207b",
            "4afd693728fc93c5",
            "a7041a896cc4f62e",
            "f41896369f55eb58",
            "814ec8b2c6c06e40",
            "8650b358d6967627",
            "ce91cf92ae300893",
            "0ceb31401ae8a316",
            "7a51b1dc485c0b78",
            "d6c1697613504d7d",
            "cd5ba6a804508214",
            "de3270b4617198a9",
            "beffe88c2924914d",
            "ae32a560b342247b",
            "d082bfcbe6eaf625",
            "85b611d570e440af",
            "e0c6817bbd750b27",
            "af1a9b077693beb3",
            "586ed6fe35b8f4f2",
            "8d63ef55b4348ba7",
            "4922ea4293c42e76",
            "34aa5cd4c7757e1f"
        ],
        "x": 14,
        "y": 2379,
        "w": 1432,
        "h": 442
    },
    {
        "id": "475b67fb7463e3ae",
        "type": "group",
        "z": "7b3114de0a2b4bca",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e91977b42fe167ba",
            "6c64517945bdac8e",
            "b50292146808172a",
            "3f6189653b498a20",
            "db7fd21999992b29",
            "af1a2019bf8da17c",
            "c04a3d21e8d4ade1",
            "d3ad95500d8c6480",
            "3f311d665778e05c",
            "654570d615ee3c9f",
            "0f6b6cd2fa77f71e",
            "2576d38274a51900",
            "12b106b88318eede",
            "3228eca40ff4e66c",
            "f29fb4df729d0046",
            "2370326a447ba52a",
            "a2bf2b8c39195192",
            "c1ba3b58760631ad",
            "32152b9250863ca3",
            "4aa05c0b26287c70",
            "ed1a912080d65f64",
            "6dcfaaa40e7a9246",
            "33beb7ee1ff0e8b5",
            "f99fd6032fd5d492",
            "8b4de4b5f8172be8",
            "c11b30a7bc385e40"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "8093d73ad9a75ea4",
        "type": "group",
        "z": "7b3114de0a2b4bca",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4899acb2dc72becd",
            "852d7a2fa7629155"
        ],
        "x": 14,
        "y": 19,
        "w": 392,
        "h": 122
    },
    {
        "id": "3e44cdce01a6e9af",
        "type": "group",
        "z": "4de9747ea9a0b29e",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "ca304fe48bfb89a9",
            "3f5ee780b5844d42",
            "16460b003c5ec2e9",
            "d55696ae4eeee409",
            "a8076e2c31b4fa0f",
            "31632afa536d9f3a",
            "e39a05453aea3a7c",
            "5c34738ac111843e",
            "4fd5220f730afa89",
            "c5e98497c63fe070",
            "aaa4ba392a2bbb24",
            "edab9e65ea6bfdbb",
            "bf7cda9e1e49e21a",
            "27bfd0070937131b",
            "86f0554e5eb708ec",
            "a98d7bdd76eac367",
            "36f94901bad4dd1a",
            "bb0ffc6e87dbaa4f",
            "b12318509733b6d8",
            "a02586e8e858d3ec",
            "9c402374e00888bf",
            "3cb84559e0306eb2",
            "114837c1fe7fbf8f",
            "47062eefee72f9b9",
            "ad43972793b34012",
            "541c92d07c8ad060",
            "43d0451330402ee0"
        ],
        "x": 14,
        "y": 739,
        "w": 1412,
        "h": 282
    },
    {
        "id": "be30a18b8c49b745",
        "type": "group",
        "z": "4de9747ea9a0b29e",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "6bc8614d05bbb1c5",
            "412591ba733b684e",
            "2cef8a0f1d4c43eb",
            "0e7fd4baa7879d4a",
            "5103b1b26c2b4c4c",
            "d0e9d6fbac8cae7f",
            "d0b0cb85843aa140",
            "305f379b27eb06c0",
            "45eaac3a79fbcf45",
            "c62aaed8697438f0",
            "b00754828c065388",
            "1c9e79dfa9a759fd",
            "34f01ed7a7f0db6e",
            "2fe6bcc2454d0b89",
            "baad1da7e7c48995",
            "9c48794e18310dd1",
            "13a8099146cdeb6f",
            "0ffd688dd5b8489c",
            "92cb68af7e8be953",
            "10397c35f666f846",
            "b6f57aec1bb95e68",
            "9cb1bf32ebddf80a",
            "5e5d02ab6050b9b2",
            "472ed03fbc158883",
            "345bf4cffe57476e",
            "1a86e41054a609b4",
            "77ea1f38943403ed",
            "311237385d40f528",
            "1284cf2f458953d6",
            "dcc75defa869e6fc",
            "6d0e6caceecd80db",
            "d66cdc93e852c912",
            "ea779c5f88fc812a",
            "6ea689893dbfaa2d",
            "4e770379f697582b",
            "75b03dbc784f003a",
            "e83428a4c8f19eed",
            "9745350cb492c72f"
        ],
        "x": 14,
        "y": 1039,
        "w": 1412,
        "h": 442
    },
    {
        "id": "3b2b054108e23c24",
        "type": "group",
        "z": "4de9747ea9a0b29e",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "068a9ad86d7f8773",
            "b627d1dc15df411f",
            "762902940eadcc71",
            "52119c51785be6e6",
            "47d9f1af4b952fe5",
            "aeaad594774b8332",
            "87318e375bae4377",
            "5faf241ab0c7b739",
            "61c5fe2c1b65c299",
            "5f09985152488b7c",
            "c96d0c3aef74855a",
            "6ae9a42666e4abbd",
            "b53ec761629a68cd",
            "472cf2deedd2118f",
            "958abb5bdc4c5bd0",
            "e7b234cfd48579fc",
            "744302f10fcc8629",
            "ea6216320346ecee",
            "205099398f8d6094",
            "4b48264b358bbcf1",
            "58581bd0bc4f0692",
            "90946cb79b9ddb20",
            "d71bd855f646074d",
            "0767f3fab4e7ad5f",
            "83764c753dc835fe",
            "ecf0ae3a39c03fb4"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "50d54e5d988940a8",
        "type": "group",
        "z": "4de9747ea9a0b29e",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "447b2717f50a71c2",
            "59383dbea254948e"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "55647d8ac7987a80",
        "type": "group",
        "z": "ebda326947bc6818",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "25fb3aa77ab2a028",
            "4d46b4669a343888",
            "db85a2a0d6925f6c",
            "ba29f33ef212a7e5",
            "20cc20402f9c71d9",
            "c0f7138fa74ef1be",
            "f56a20962c3d649a",
            "96a50669353c9d40",
            "93eae190a7ce5734",
            "dbfe026cd4d1b353",
            "68a35ba6e26c1b58",
            "0e532938adad4c1f",
            "ae58e5cd22a563ce",
            "4fab15dc3b9818fe",
            "d19d52c80f8aa529",
            "981c75357d8d2e35",
            "dc52daf973eba772",
            "967acdc68aee4ea1",
            "e4a179dd91b58965",
            "dc555c9ee09269e1",
            "e1342e355a81dfdd",
            "e8957e6d9f566a25",
            "4f46f63ba3379483"
        ],
        "x": 14,
        "y": 2159,
        "w": 1412,
        "h": 282
    },
    {
        "id": "0bd8616a38070833",
        "type": "group",
        "z": "ebda326947bc6818",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2698adf299778541",
            "d60d72622e90629c",
            "515420237e57a7df",
            "46f637529ee0e107",
            "79ee2e1243f61a9f",
            "e70b89c151375ad1",
            "afe5824318ea2517",
            "9ab06aad1bcea0b1",
            "8bf9d312ea440499",
            "18b8521fc47398c9",
            "2994ab83b522c87b",
            "93cad13bffe2bc32",
            "50b244685ed54922",
            "d9ee14905bd2b097",
            "43efb01192847188",
            "8f1c36f9bc8b88a7",
            "fa437742a8ba7281",
            "6e36d5ac219ee7a6",
            "24f81d0e4a730383",
            "d1444a420e87910f",
            "e74ef712a31669e0",
            "704d79b99033c6d3",
            "c97ab39141f2c675",
            "91cd13a972552eab",
            "8cd958ab7d0e7121",
            "2f78182bc064ba97",
            "531765fb7f8e0c12",
            "e2a39b7f4246b04c",
            "91519321bdcfb6a5",
            "44769a7efe783b7e",
            "3d1a6d3dd834edbd",
            "7aae526762aab330",
            "438d4bae531d9cfd",
            "1ea70a58a764a5f9",
            "ddccf78e790720a4",
            "6732c5b24567fd8d",
            "598563ca32957b34",
            "4675b0ba3bdd946b",
            "80bad71c98debd87"
        ],
        "x": 14,
        "y": 2459,
        "w": 1412,
        "h": 442
    },
    {
        "id": "ec2c2ba3b3bc3655",
        "type": "group",
        "z": "ebda326947bc6818",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "05db6b9fd23ceec1",
            "bd7f6cccbcc996f7",
            "9723a4b320d5e982",
            "cf92770368587a28",
            "ee84c35d5750ddf2",
            "82a59b953a0d5394",
            "83d0db05a5628463",
            "5fcbb1bf15da2f1e",
            "1d82d95ee9603962",
            "f6f64a10ff83162c",
            "1b5154d7a2977bd4",
            "2d87e366a9b20563",
            "07ba2fa8713f8ccb",
            "1f151589e0bb6940",
            "ed61aae8ed8b5d76",
            "cb201819f657d793",
            "0bf4bc6dbb4c09aa",
            "6f3cdbb1cf703e10",
            "5b7bde26052da85d",
            "4d66a9625d724998",
            "ae6449878c69e6d2",
            "ef042c927c828716",
            "a9a039f6bb15e945",
            "8e12322662cddc77",
            "b08d2bf2147153e2",
            "09552fee4a585657"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "dd3cb4f8204f6bde",
        "type": "group",
        "z": "ebda326947bc6818",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8f7dd2ed5e821f8a",
            "31b7777bfec28112"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "7611643950b3cdee",
        "type": "group",
        "z": "c7cba4aaafa7d336",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9e6f40e5b3b0ba66",
            "4521cb6f939097a8"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "93252b1968230560",
        "type": "group",
        "z": "c7cba4aaafa7d336",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e1be596920d8e4cb",
            "1e866a4b54290184",
            "60fcf799dc0b1345",
            "75b397ef8fbc4415",
            "8bf3fc16091c4e51",
            "bc511ab6b56d785d",
            "95e06d3cca54a938",
            "f1fdecdeeca2b7f2",
            "b24ec4189f63f3a4",
            "821249d1e58754b8",
            "c2bd3064d5b3f843",
            "861fb09cb6cc2036",
            "79836d7aec61c359",
            "4c5c21df37d2d438",
            "fde733d2aaa7b338",
            "9414a5c74d8adb02",
            "8802c8a813d5a3d8",
            "1caf2c7a1c282376",
            "171157a12681ac53",
            "c6b3cdbe1add68ac",
            "dcbfb6fa4a0599ed",
            "09d5cc2f0ddcd3c5",
            "ef555363ace34f35",
            "768c06636b3a22e3",
            "f25b5456f23b4e74",
            "33402bc357dd96aa"
        ],
        "x": 14,
        "y": 159,
        "w": 1292,
        "h": 322
    },
    {
        "id": "800e85020857b6f8",
        "type": "group",
        "z": "c7cba4aaafa7d336",
        "name": "Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "60d38b46051db02f",
            "a1fe4ad577c9e25d",
            "7cea204f0f10d929",
            "911ef4227e18eee0",
            "df0418046c11cebd",
            "fb538f8416b72beb",
            "32e87998a32bc914",
            "9a97a1f060644b94",
            "e189f618cf81dc4d",
            "96603dfa2e449947",
            "bd1a33aba30ad7b8",
            "839b6abb4c8fdcd8",
            "5c521db1e91360e2",
            "e3922c1a1b02fcca",
            "e73bf79d091a5de0",
            "c18b8f7d75664019",
            "ca65d705719aa383",
            "260e70b1ff8dbe8f",
            "2a211358756f0c48",
            "8aeb27b3ad28b21b",
            "be8eb813ff11f05c",
            "15f9a8b41bc2add0",
            "87106d7d4327e22d",
            "6c7bb8d1bbb01e06"
        ],
        "x": 14,
        "y": 739,
        "w": 1412,
        "h": 242
    },
    {
        "id": "64af3f7680204396",
        "type": "group",
        "z": "c7cba4aaafa7d336",
        "name": "Test AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "e668be1192b0bf3f",
            "82f96a38e10ac879",
            "7a0ad6d968d1e080",
            "48480d2aeb16b112",
            "266d7f744d39a86f",
            "bf228f767b435da2",
            "2f5c73b44932d1d7",
            "5e948fae52e287fa",
            "1b10e59622ab7ae8",
            "e3b19a9cb2a9343f",
            "b4f24d706aae7319",
            "75e832ed3782e9d5",
            "629ba8b2185214f4",
            "126d389975786aa1",
            "bc5e6407f75dc7b0",
            "762ca61b2241353f",
            "a1e3ebfa92777cf9",
            "859a635163a43721",
            "a2d55db84866ab31",
            "c25d0cfca39f12d2",
            "dbce6b164c4dd473",
            "12e70ac22c120972",
            "604a46b885caea09",
            "6b6e6658b0db0202",
            "50d46109f37c1a22",
            "34504ea2be5a4ef5",
            "9f685a9d24ac1f27",
            "112143e1f6c8147e",
            "8864c8149e024e16",
            "a6a58cfb4cc3efac",
            "69ea8f3a7a6478f9",
            "a5f0f0cbfab6fb19",
            "a1ac9e55542de985",
            "8d366e8e2a5da35b",
            "82b8942c8d5e3023",
            "91d152fcd0ad3405",
            "06d346784bd4007c",
            "7ac22b68de309b99",
            "8804a35aa3960090",
            "1233eb03e49c7514",
            "e90723a8f3872e32",
            "1ff1adcd566d1674",
            "b3c66ce9bc247ae8"
        ],
        "x": 14,
        "y": 999,
        "w": 1472,
        "h": 482
    },
    {
        "id": "40a6a4ea34da2cec",
        "type": "group",
        "z": "c7cba4aaafa7d336",
        "name": "Proc AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "59664db4436d8d7f",
            "2e6f2542f74afe45",
            "42d60879509840a1",
            "b25f2b9993ab29e4",
            "2c2be224375b81da",
            "a6303da2766202ac",
            "8cbbd5eec3416c03",
            "bfc73101056aed9f",
            "9cce6fb88fc22142",
            "08c67ed51e8b4554",
            "967a5b58baa6e34d",
            "8d51548a85772f2f",
            "30a29b2d03332ba2",
            "638e73202bbbc7cf",
            "a67757a60d03eafa",
            "4ce958a78e43d6bb",
            "14d8f9ef15b3c0ab",
            "7cbf6fa7b59f2d30",
            "74fdb2c2c017cdc0",
            "3a06423e1e6c4374",
            "a14a1de8750ea4fd",
            "7846dd068bf2fb64",
            "349d0ea8faf41d28",
            "906f92bc35035b43",
            "60d041f9d5c5e4f3",
            "fecffc4f5679fadf",
            "5e54b40503cd058b",
            "34f016a636b8362f",
            "aaaa6a56863c61f2",
            "bdd77a6c163030c5",
            "c2b8594538708401",
            "4b3661709c4079d8",
            "ef6a481ffc44c485",
            "b50caea74e62c6aa",
            "cd7da842deb7fd2c",
            "1f27691773aead78",
            "b9e26bd4023e2962",
            "3ccc3b93b951196b",
            "1e3536a2b3a5b37f",
            "a9f51aa830aaebb5",
            "b05dbf73d79d818e",
            "acc38bbccdeec0bc",
            "65452c5b099fcec9"
        ],
        "x": 14,
        "y": 1499,
        "w": 1472,
        "h": 482.9998321533203
    },
    {
        "id": "d3629dca6cd9937b",
        "type": "group",
        "z": "c7cba4aaafa7d336",
        "name": "Visi AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "ddec7048ed30555c",
            "98b165d1cbb726f0",
            "aba579596edb1277",
            "396c57fdb5bf057c",
            "ec29c50447a9fd9c",
            "5d87fd39b39b17a9",
            "fc6f5d324c7dddd7",
            "ae2b9c6d8a4df312",
            "09d57ca1954cdefd",
            "de6a686acfa1bf54",
            "8c86b6378202d8ef",
            "48791a7bf1c095cf",
            "db7a13161df26211",
            "cb2fc30973ae536b",
            "c6c405c67e345cfc",
            "b51ce8170794e8a7",
            "2e02992897e2bf9f",
            "f2124666ad016c64",
            "6f2b3543531e34a4",
            "a4c2f28ef991cd76",
            "dfbc7dbbca879bdf",
            "3304fe03d3be861b",
            "b3be22663e489c44",
            "8be42feda7bbc701",
            "c02e3e8cc286fb4f",
            "c391846fa0abddf2",
            "899967db06e50b51",
            "61f05e701a0bf22e",
            "260281b655249067",
            "888f3ad74e03f53c",
            "84db40dcf71e194b",
            "89bbb943d725dab1",
            "19e58cc702e4369f",
            "a49f9b613b701b5c",
            "bac59fb66692fcb8",
            "494bfa4e672417f2",
            "df09806f61a4c33b",
            "eb03d76f9a51b380",
            "3df94756375f606b",
            "188c0b5315480130",
            "2d8cb7bb21dda252",
            "b9d1874457848bc3",
            "3f21a90b9d4c4425"
        ],
        "x": 14,
        "y": 1999,
        "w": 1472,
        "h": 482
    },
    {
        "id": "53a45fdfbbbdfef5",
        "type": "group",
        "z": "c7cba4aaafa7d336",
        "name": "Robo AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "03f432acf002c473",
            "83ef7b60c579403d",
            "c4da594cb20d1443",
            "2a76cfc9ab24516c",
            "d8c70eb603c06ca7",
            "b4cb09dc6ef55d9b",
            "60a33971d6a1e5a4",
            "b41fbb1dcd8fedf2",
            "b2ad782a8b469880",
            "919d860f34cf9551",
            "0907d5034a4f0bd0",
            "6522a585a4df89fb",
            "98f511dd5c0cfb9d",
            "8f5be4ea0057ef9c",
            "07b415ea68498d69",
            "d6f59366fe348b88",
            "204ae3c72788fb69",
            "f64ace6629aa15ac",
            "1682d9ef47317bfb",
            "8879a79d9831cc02",
            "4a2fa06f1b3e4ab0",
            "d0cf83b792f50beb",
            "1ed339634553e295",
            "2600e7d787ddf67e",
            "18849a722e925abd",
            "8cec1f9ee2af7664",
            "6f0d730a268046ce",
            "625c315b08507c95",
            "26997d0460b8049a",
            "59e7b40f121d63c2",
            "8c58be97902506ee",
            "6f9cb23d93999ff7",
            "713012f2c03e894c",
            "13e438d1ae7ee679",
            "a17c02ce6ca9edc6",
            "57540185ec67eb39",
            "c317c7b3f9785949",
            "d7fc8571693b9d7c",
            "e5e242c00e6af390",
            "1362cf0d3534dd01",
            "114a441bd5d1ee24",
            "f180051222c46452",
            "a521a3086ad6eefd"
        ],
        "x": 14,
        "y": 2499,
        "w": 1492,
        "h": 482
    },
    {
        "id": "66483056bd426d80",
        "type": "group",
        "z": "c7cba4aaafa7d336",
        "name": "Stor AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "85e8c153eb53140f",
            "6a0ff09abf48e1d0",
            "110476b48e7f3b9d",
            "d6925ad64fe647d2",
            "373bb3c60e5f59e3",
            "2c2cb0a3c60d2fec",
            "604c8d2ae87eb956",
            "d0d8142d2b6d6240",
            "31983a2584182dee",
            "1b7f686264aaa6a2",
            "ef2f9a4fdf548420",
            "103755169c3e878f",
            "d18b0da034a8e99b",
            "4233b286553d6a4e",
            "99b4dc9824fb9ab2",
            "f85094ccd16a93f4",
            "430c2fe40216e585",
            "f6834d2a4e0762ce",
            "1cb47bf21f55f49d",
            "245045fd2aee151f",
            "686079e2a8362f74",
            "a76a724f6c310794",
            "7fed8ee1e437e29f",
            "989359ba9bf737eb",
            "69f88d24f6510913",
            "d0c143f0991a630d",
            "1dfe949361c7ea0f",
            "0ab26985bab00e6f",
            "22fe3a05199382f6",
            "53e3fed1e065a151",
            "ab643c045e0f02da",
            "250c7e72ed323f34",
            "97646bb50b06a2e9",
            "a284510f6150140c",
            "25315409f41284b0",
            "0c0a76aed5d0b3d9",
            "919f996fc2952091",
            "a17337d491c62ddc",
            "8e7042e9033cbba5",
            "af6c5bc33da7ec39",
            "462f66dd811af0c1",
            "faa4a8bcbf564b1b",
            "56dcb45ae43428b6"
        ],
        "x": 14,
        "y": 2999,
        "w": 1472,
        "h": 482
    },
    {
        "id": "29013442cbae9878",
        "type": "group",
        "z": "c7cba4aaafa7d336",
        "name": "Sort AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "a74b0d36d2a1073d",
            "76c44c7028aa1d13",
            "6ac6418dc769d84d",
            "c530a7717fec6256",
            "96901028e5c04a41",
            "5546c45c65fd6ac3",
            "b49b3c3b68877bef",
            "874ad73e71e6fae7",
            "88bd0bc79b36058d",
            "2f99734077cd19c4",
            "db289fca486386f9",
            "204c461c2f9ed53a",
            "31bc101492eb4e17",
            "10c6eba8a4695a11",
            "bc6c7157d674f4a2",
            "84b02069b0982da7",
            "2f9aa231679c0a88",
            "b15f393bd0b812dc",
            "099c5c8561494938",
            "c375381fefca1283",
            "e0536a05a720bde7",
            "7a6c1796e9396249",
            "18b6eca6895fd4ad",
            "a10a76f16988a20f",
            "f765bc3307036516",
            "87f25cdfc42867f0",
            "692d1d13b05a510e",
            "44fb1fa93f6162e6",
            "d32ef2df3f93b031",
            "2b4ab9fac061d69f",
            "a5a5a1b1071f261e",
            "43a31129fae616c0",
            "09f0cbb0d7c93f0c",
            "606f773f6519cbd2",
            "c1576a2ba88a386d",
            "faa4d047527d022c",
            "f7317d988ff64823",
            "fead3009a83b2cce",
            "d15d12032702475e",
            "329e22de4694e918",
            "e06323f985254be0",
            "7beab7c14cddddc3",
            "7fc80455e324b382"
        ],
        "x": 14,
        "y": 3499,
        "w": 1472,
        "h": 482
    },
    {
        "id": "6648d1b14f7b4c0c",
        "type": "group",
        "z": "aefdc2670756e2cc",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c805b1791097ee24",
            "b2414296d6934ef6"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "1d9c647512f9a9e4",
        "type": "group",
        "z": "5461c9957ffd23af",
        "name": "OPC UA Server",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3d2c9e37010f6acf",
            "686c5d7932c88291"
        ],
        "x": 14,
        "y": 19,
        "w": 372,
        "h": 122
    },
    {
        "id": "b560905a2f6f812f",
        "type": "group",
        "z": "c7cba4aaafa7d336",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7c750c3e8cde039b",
            "a22ac95b62bf863b",
            "1e1d1586ad9d8546",
            "50a02c973e8ea5a6",
            "defba664a618284a",
            "72cb437b37e0124b"
        ],
        "x": 414,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "b642bc0042165ff1",
        "type": "group",
        "z": "aefdc2670756e2cc",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a4a0694987af1fec",
            "b9b9ab27d3fa9222",
            "b756e6f2c185655e",
            "7f8634f00fed6af1",
            "3e2eb62c82c95c2e"
        ],
        "x": 414,
        "y": 19,
        "w": 582,
        "h": 122
    },
    {
        "id": "08cbd30554c6888b",
        "type": "group",
        "z": "4de9747ea9a0b29e",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "63866b29bda15db7",
            "0231d3f3d6f8a0ea",
            "bbc408e6e3cad197",
            "9b77d627f6827872",
            "1eae7165989d3b92",
            "a648b8cfe2f24972"
        ],
        "x": 414,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "4e8d3a5991cab92f",
        "type": "group",
        "z": "ebda326947bc6818",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c4436d112b1b1431",
            "6582c61b55afdc95",
            "95a529fe131a7550",
            "2154ce8f847dbcde",
            "53db88faf58ade31",
            "ecf1b6741783886a"
        ],
        "x": 414,
        "y": 19,
        "w": 582,
        "h": 122
    },
    {
        "id": "000dc32cc31a9586",
        "type": "group",
        "z": "7b73d224df5f2e4d",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2149a1fc60ba41a5",
            "dc9a228a04ca7786",
            "0567a5955148cf97",
            "422e3d3479c15406",
            "ce71095a691ef2c7",
            "8a187640432f2304"
        ],
        "x": 414,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "73b37925d92886ab",
        "type": "group",
        "z": "5461c9957ffd23af",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fa10632d6e9379e5",
            "7c2efcd5f36682a2",
            "d3db967a57ed9a1b",
            "2776c12eca3c238e",
            "bd36a4718ec2ddd4",
            "a935e13d2510785a"
        ],
        "x": 414,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "89b6403c89367438",
        "type": "group",
        "z": "1b6d40929ba9c133",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "727dfd8d2e24fdd1",
            "bddf79de184afa27",
            "861e9c8aa7cac6ec",
            "dcbb25b160b3a832",
            "d896c2120cb5ccff",
            "8fc492043ebf02b7"
        ],
        "x": 414,
        "y": 19,
        "w": 582,
        "h": 122
    },
    {
        "id": "fe54e8f3bb4da20f",
        "type": "group",
        "z": "078507e39b438a2b",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "52c32fd4f19e797a",
            "516d17040f361a78",
            "7cb0a432ac4c3fe5",
            "ef9e81862cedd8ab",
            "0def3965ced795b4",
            "fba4ecfb29f40396"
        ],
        "x": 414,
        "y": 19,
        "w": 582,
        "h": 122
    },
    {
        "id": "ce317878932abc8c",
        "type": "group",
        "z": "7b3114de0a2b4bca",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "19932d1de534997f",
            "5f3a1094ae5e61a7",
            "598a5222f417c290",
            "9d6ea4ccd5b86f6c",
            "8724a2f488ac2598",
            "a1997b66de515dcc"
        ],
        "x": 434,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "2a4c34d4f3b195c3",
        "type": "group",
        "z": "789bbace3c2df385",
        "name": "MQQT Broker",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7529b4682593f575"
        ],
        "x": 34,
        "y": 19,
        "w": 192,
        "h": 82
    },
    {
        "id": "bfbf4c9db2b8522c",
        "type": "group",
        "z": "789bbace3c2df385",
        "name": "Transmission",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5cb200f24b2668ea",
            "6afbc19bdfd5bed9",
            "fd336c36302abeb5",
            "3505e7fc203ac832"
        ],
        "x": 254,
        "y": 19,
        "w": 572,
        "h": 142
    },
    {
        "id": "f9312b90064424f9",
        "type": "group",
        "z": "789bbace3c2df385",
        "name": "Reading",
        "style": {
            "label": true,
            "color": "#000000",
            "fill": "#ffefbf"
        },
        "nodes": [
            "53d1b907097a048a",
            "c789da41b2f32677",
            "09da1394c125df30"
        ],
        "x": 854,
        "y": 19,
        "w": 462,
        "h": 82
    },
    {
        "id": "ed38fd3cda23b5f7",
        "type": "group",
        "z": "789bbace3c2df385",
        "name": "Master [20]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "1cec931aeca20682",
            "0765722ba5e4222c",
            "cfba58092a3e675a",
            "2a9997e5c21af802",
            "dfec9371bbda4180",
            "fce8efdba69b1b23",
            "36c67df168c1a0b9",
            "17674006d3372bf6",
            "7378b98e5a545e2e",
            "096f2bfad5ce9fae",
            "f8c64a1231c96993",
            "8db4b5da622baa81",
            "e16e8ea5699c1995",
            "ea0e0967c108d7cc",
            "6ca27e4dd8d8f706",
            "ae1433f21040f73e",
            "bfbc02bc601557f8",
            "c82d826e9a2fa036",
            "ccc5785c1b8b943b",
            "22f34f697ebf2aef",
            "937c628b79f1a7b9",
            "cf5091844cb1cb02",
            "4e4d3f160225652b",
            "dfd6edc74adce56d",
            "92df757f57b0e39c",
            "7f0ea1510ca5975a",
            "63fdb257e65a2726",
            "11cd1a9722fb15db",
            "d5d196e5768bbc56",
            "e0b63946a8499461",
            "b1e1665447aa0967"
        ],
        "x": 34,
        "y": 179,
        "w": 492,
        "h": 642
    },
    {
        "id": "ab22b0258e7678c1",
        "type": "group",
        "z": "789bbace3c2df385",
        "name": "Robot [30]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "52a4d08ec2792eb6",
            "388666e06346cafe",
            "01a42345b4428662",
            "7fe915e6d624a59f",
            "90c1f91120c2978c",
            "b7e8581e81b71437",
            "89734d2973aefc28",
            "0278a6e22e98bc66",
            "af07cf61df5b2aa3",
            "994e8ec6c9e9b65c",
            "227140cfbdafb91f",
            "321375de1bdec664",
            "7566704ffaae137d",
            "12d8d71656ae0257",
            "78ba478363b2b1f0",
            "461c331208c9c0c2",
            "a3f6e8c162b52c4a"
        ],
        "x": 554,
        "y": 179,
        "w": 532,
        "h": 362
    },
    {
        "id": "a4de022e04309496",
        "type": "group",
        "z": "789bbace3c2df385",
        "name": "Handlong [50]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "cff5bfad6e8e6ffe",
            "9dcb81f1f3849c2b",
            "dd5baee9ab2cbf0d",
            "e7391e304a747f0f",
            "808650a484d4620b",
            "e26df4d364fdb46d",
            "0e4e79d470673e08",
            "2535774ee5ec9fc1",
            "e045ba27de27cdbc",
            "417245fea02a22fa",
            "72780160e3149c97",
            "ed0ef13f0dfa2359",
            "02095ae4b5d8f9d7",
            "055f0f83cd2949f8",
            "ccf283e8f079e023",
            "5336561fc433c0c9",
            "a72c530309865a25",
            "513fb6a5ee3d55e1",
            "db48c79597269e34",
            "cb51af8c3f743502",
            "86f53689822587d4",
            "6575e1eee224a196",
            "ccdae4b2351af933",
            "d44fb8f3ea2c9659",
            "41ccef75b8ed0b9b",
            "33f1c5d84b751472",
            "43fffc3f803952b4",
            "e4b2bc61b95cedee",
            "88b0de12a078cbb4",
            "2c9e97d090c5d96e",
            "027e5e04ed94cd9a"
        ],
        "x": 1114,
        "y": 179,
        "w": 552,
        "h": 642
    },
    {
        "id": "dba5bc648668d048",
        "type": "group",
        "z": "789bbace3c2df385",
        "name": "Sorting [60]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "af012887bf6103dd",
            "689a4db64c1ccf82",
            "3fec4591327ad775",
            "d3f252f91ece2a24",
            "4073a22b7c120ca1",
            "2f7ea3f304faccdd",
            "a982e806550f30a9",
            "441a5bce9c13903e",
            "674e0452df8ce428",
            "3317970b018ebb5d",
            "49121f7f5a7452b4",
            "4def3acc508a15b6",
            "0f4907b8c462bfb0",
            "1f49c813fdefc29b",
            "b8838d230cfa6bd5",
            "aa251d5957e8a2d8",
            "04ea64d3b04ea7e6",
            "9e0fb092e72eda30",
            "5515451dba9a02f0",
            "04e6613c01d1eaa5",
            "e973cafde5467bdd",
            "e5acb8170eb64f92",
            "e3094110547f2b42",
            "fd2f6175bb45b18f",
            "ca4436c0e169aa21",
            "b322d1493e345da3",
            "d8f61a4179988ace",
            "162f4fe147f59bc4",
            "2b2c3b529196d654",
            "e7b2d2096fea3778",
            "ba5ee1e5dadafcc5",
            "7e41338918e26262",
            "10cefde783123211",
            "e5a6740909b618d7",
            "8e05bbefbe829371",
            "013833bdd5f57db0",
            "48132fd317420b9c"
        ],
        "x": 1694,
        "y": 179,
        "w": 552,
        "h": 762
    },
    {
        "id": "0dda248161f8d090",
        "type": "group",
        "z": "789bbace3c2df385",
        "name": "Testing [70]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f0682f8de52c72f7",
            "e7ae67d676d3c9a6",
            "fc5f12ca7e44718b",
            "f28154125732171e",
            "08fef73d42b7d8c4",
            "3591cb8c121e6b21",
            "3387c0efa4da56ce",
            "8c8a7568be776da6",
            "38bb5b5ab962a896",
            "2939dc3e83eba9ac",
            "ab6d903a02ef413f",
            "bb6b41c5bc446fa9",
            "f0a318247355ab97",
            "7d25dc78f1800100",
            "140f93bca2f0abf0",
            "a6ea7d41bc145d0c",
            "b978d9578ebdc941",
            "9948b9386b181a4e",
            "ea3d5038889b36e9",
            "242dcdd9d1c52a59",
            "d25b4439a8b397bb",
            "af8a4d2ac4e4b5ea",
            "b90ac946093d4bcd",
            "b004fc9fa76615fa",
            "6365dfa6ca424a3f",
            "80b4c273f5efc80e",
            "11736570b1376806",
            "7b04942b7fa8076c",
            "33c0f3b822bb3e6f",
            "6409dab1c027eb15",
            "c09defc770d64a3d",
            "3ce622ec356c0b04",
            "df0e1e8f284f902b"
        ],
        "x": 2274,
        "y": 179,
        "w": 552,
        "h": 682
    },
    {
        "id": "07defeba84499708",
        "type": "group",
        "z": "789bbace3c2df385",
        "name": "Distribution [80]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0aceaf2b6e14d39b",
            "ab51064132e50338",
            "4dfc39d53d683898",
            "475a02eace807627",
            "a9b24d7ae9111bb3",
            "de9c6a2e34798dbd",
            "989613d7dcbaa611",
            "1cf7664efad4ae9a",
            "c3a6383670f70821",
            "c53c9085704ba640",
            "0bd3f7853a9d5849",
            "329a8c6fda6423ad",
            "b8a8fa61d0f9bf87",
            "ebb3741ed3859e43",
            "3f8dfa7bf6748bf5",
            "6b8494196670d461",
            "8fefb0da3337acb7",
            "667b5f4a3c70b5c0",
            "8e4167285a622df0",
            "5cc8851569f60adb",
            "3030c93199b84526",
            "92177fa4196659e7",
            "fd5607646f2a7f65",
            "efe5411e1b6f2109",
            "c404bcb0f2a4d872",
            "48b92cd77d3fca0b",
            "e826b01e35489679",
            "013d95d2122cd80a",
            "1746268c1a6877d2",
            "4246e7a3f28d8cdd",
            "a1fde3b3342866a9",
            "086ae5803784455b",
            "cc0ab8505ed83516",
            "e07293f09c523f1d",
            "4e0948801169e25e",
            "4b58f042b3868f61",
            "b5dd262e2006090a"
        ],
        "x": 2854,
        "y": 179,
        "w": 552,
        "h": 762
    },
    {
        "id": "fb5eb2ba139ec7fc",
        "type": "group",
        "z": "789bbace3c2df385",
        "name": "Handling 2 [90]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "74c73b1513d97947",
            "0e5a4c5ab1c943de",
            "2e9a7f6f9f048fd6",
            "d26f17e4e7e7217d",
            "e52feaed8d472489",
            "91b228a796bd1ce2",
            "f913dadf937dd706",
            "04210e91c4769c95",
            "6ea75c2a92480e69",
            "267b57dc636ceffd",
            "dc2124cb1348c6a3",
            "09c05efa444188a3",
            "c4186b9e4dc6a220",
            "56053f18039f22c7",
            "76baef6193f71f76",
            "a3e9be796dc60e9b",
            "9b2c4fb52bbe8cf7",
            "ba9e6c18633cb968",
            "cd9d780600c5deef",
            "4192a126f8201605",
            "30e5d538e7b9171e",
            "24f4f42ea5cdc873",
            "35c42c8048df655c",
            "dcecb7dc5f21a3d9",
            "e323edc1b7ddf005",
            "fc3d6bfe80e305a4",
            "d231d69867b2bc76",
            "5d8c1dc343448608",
            "7342bde5df911366",
            "6c48fcb7a6fa5972",
            "80c164a04bde3dea"
        ],
        "x": 3434,
        "y": 179,
        "w": 552,
        "h": 642
    },
    {
        "id": "0a1fb4f625d8c32e",
        "type": "group",
        "z": "789bbace3c2df385",
        "name": "Processing [100]",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "73a8d9a1df3571e5",
            "89d5b71aac4a4ee5",
            "084934ecb2143f5b",
            "7714f0f239480df5",
            "b864708222383090",
            "2a662decc17ac841",
            "a316bcc74a55d394",
            "eebbf832f37ee9b7",
            "0dfc3326ce46d040",
            "0b4f69cab946a931",
            "8766b73644a65c6b",
            "47eab31882316c56",
            "69b7a1910c8ae767",
            "3f68c5d70779bd3d",
            "4524477427082dce",
            "07a83db0c1954b1a",
            "61e624e31bfefb12",
            "c72a376176f9dcb9",
            "0aefc5c0d6a4c898",
            "aa9b860f0bbbf731",
            "6b7e54704ec35a89",
            "2edfbe63f86397e9",
            "13a896cd7fa1a6bb",
            "51c77a8bdbe39724",
            "a38948a2c0794723",
            "479f71e33b81f301",
            "967ac2ac8fe70f67",
            "569b696128090aa1",
            "23789e5ee8348555",
            "73f903a8ff588fb0",
            "e7c5bd02d0beba49",
            "21bb4255aab749df",
            "52f47a450960d545",
            "0c515d6604fe817e",
            "0880bb4cb564af49",
            "802f2997252ff3ce",
            "8e4460cf3f48cda1"
        ],
        "x": 4014,
        "y": 179,
        "w": 552,
        "h": 762
    },
    {
        "id": "b00197371b411656",
        "type": "group",
        "z": "3ff8f0e7fc264904",
        "name": "RFID System Configuration",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d87e64762305f506",
            "f7f4c859274b5e11",
            "e785ce5b735ec3d4",
            "221466aff7ee9532",
            "4183fbc30b7fdf1f",
            "a0b91a14bfca8c0d",
            "50c0c084ece37844",
            "47202d7fef6b54e4",
            "98fa441a2faa7e62",
            "3f21772a72fa9651",
            "e7d1ad22c96f3667",
            "bb48b945303405ab",
            "4faef94e5be76e06",
            "ba02f3865fa46f28"
        ],
        "x": 14,
        "y": 19,
        "w": 1612,
        "h": 242
    },
    {
        "id": "c53d100d77413243",
        "type": "group",
        "z": "3ff8f0e7fc264904",
        "name": "Read via Dashboard",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5a3d7807229e14e0",
            "299be10abb5aedd7",
            "1165e430fb1ed2b1",
            "164480ee59237fdf",
            "7b73b950093aaa5a",
            "db4c360fb9f767c9",
            "b573dc9dbf3388a0",
            "e6371789be789ea6",
            "a8ad2bcb08b0f956",
            "f148d89c087eda3e",
            "bf8dc29265ebbb10"
        ],
        "x": 14,
        "y": 279,
        "w": 1092,
        "h": 162
    },
    {
        "id": "f196d0901e7c1361",
        "type": "group",
        "z": "3ff8f0e7fc264904",
        "name": "Write via DashBoard",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4b9364f6aa702894",
            "5b50f224557cc80a",
            "1c28df48d9380276",
            "5a2602cd1cc48931",
            "bd1a556421398190",
            "193ae8268b4d93b5",
            "103fc12450eb92fd",
            "51ffc784bad16867",
            "5c83394e099624a3"
        ],
        "x": 14,
        "y": 459,
        "w": 1072,
        "h": 142
    },
    {
        "id": "2277aaf5df48566c",
        "type": "group",
        "z": "3ff8f0e7fc264904",
        "name": "TagReport - Diagnostics",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "94df3e20533a36b2",
            "8c27e4b37b93b5e8",
            "ad3ca155558b191f",
            "9ef16d043e2c2cd5",
            "aba6794c907c1e98",
            "119c3836019e599b"
        ],
        "x": 1134,
        "y": 279,
        "w": 472,
        "h": 202
    },
    {
        "id": "395ec64593a73cca",
        "type": "group",
        "z": "18b0dae29c8592d2",
        "name": "Teste",
        "style": {
            "stroke": "#000000",
            "fill": "#a4a4a4",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "f60169e0447c4522",
            "7c1eb519b9cd7da5",
            "4aa188fb30a12564",
            "956b01032a9fe72b",
            "1be052a0e437e19a",
            "bb3a5e20fbcff4ca",
            "7ece890aa7ea023c",
            "85dc6ab18cb87b4e",
            "1540f2d22c817cf9",
            "fcb6441d2bf474d5",
            "d070db2f7bb1aed8",
            "941826ae1b2783b4",
            "900e49d0bc75f135",
            "49a8286765e5ed86",
            "87a34ff96d342f32",
            "09e5622b0e94f5ef",
            "7f45df3c01693a01",
            "319d3a334aa55531",
            "7e3b3e37f20f7e8d",
            "6cfc2910b83aa0d1",
            "193c6585e06228b1",
            "7abe0fbbcb8f9036",
            "a567ad791b4c20c1",
            "0934e59b6d7728d8",
            "37542a97a5d95d62",
            "d1d2125332bc136f",
            "52722b914cdd7930",
            "90ab35cd5481d3fc",
            "aab5e4dd83ad3b6f",
            "f88a84a5180b1d74",
            "42d671b203138297",
            "a0a64d32a21ebda0",
            "b704bc570bc2a08e",
            "65b267a924b90f25",
            "1e2de62036bf53e6",
            "458aa3f8dad500dd",
            "9695eba042e91d84",
            "79d17745ef305464",
            "ee4957565a51c3e3",
            "0fa2fb900670f5c9",
            "705ef0c989bd9bd1",
            "db0f6ad6c2fe5653",
            "4b09f5e135f20693",
            "fa254fb7b511e788",
            "352d0d27c218c31f",
            "b5ca070f945a7f73",
            "a775292a08480839",
            "800268f4df14b764",
            "5ee3b0a4db72b4b7",
            "90f497842de1e250",
            "cac8feb16c432161",
            "e71caf117c1f9e69",
            "333df76b3b259182",
            "17ab5217b5de7cab",
            "4883306ef3d1b5e2",
            "b0f07c4070871348",
            "9aa35d454e7ef409",
            "dcc4a2013b828362",
            "72b6fb4c5175ccb4",
            "cfb15254c2d7e826",
            "5885316ae79e819f",
            "5b7cda3a5da84acd",
            "431901c61929fbd1",
            "f84ea90e8e81db74",
            "dbf24ea31af1dbd5"
        ],
        "x": 34,
        "y": 479,
        "w": 1332,
        "h": 802
    },
    {
        "id": "24fc674938ac64ce",
        "type": "group",
        "z": "18b0dae29c8592d2",
        "name": "Table Config.",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "521d9e3d1592610c",
            "acdb2944a3758514",
            "cdda28c1dec0e218",
            "f48b1d263f11ab10",
            "190add8fcef503a8",
            "22d818cf4d0107a3",
            "598eb8aa6cada444",
            "662fe75120762951",
            "513239f92f9d501d",
            "f17c4c42bf323e41",
            "5791c4ab479c79f9",
            "575ec6bc0d0440df",
            "947e6806e64edcc6"
        ],
        "x": 54,
        "y": 239,
        "w": 1172,
        "h": 202
    },
    {
        "id": "6529954173568b6c",
        "type": "group",
        "z": "18b0dae29c8592d2",
        "name": "S7 Sensors Connection",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c7782c7b6fdb2549",
            "0b2c1469437c9ab7",
            "b53499d8f03cd37e",
            "22223017bb406c1f",
            "5238cf5e90e24b9a",
            "21607d0abf17c152"
        ],
        "x": 14,
        "y": 19,
        "w": 592,
        "h": 122
    },
    {
        "id": "157f66a69d4ea344",
        "type": "group",
        "z": "aefdc2670756e2cc",
        "name": "Reading and Writing of Variables on AAS",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "672e01ee87110670",
            "38480de98d34502a",
            "c8d61e2d5475f017",
            "0b26627a5bd39024",
            "53287a21a289981a",
            "a9231162b76c9776",
            "fa2aed924f6e2669",
            "2106f4a6e208753c",
            "8db3b48b94e9266e",
            "d246dd8eee0231ff",
            "0927510fa3df56ab",
            "e96bafcca16f7c14",
            "b53bdda2de0f43b6",
            "b8e40abae024d9d9",
            "4ef108b754c4c8a7",
            "ddbb5db472ecb00a",
            "d1203d5dd9794667",
            "2c35b0c1b48b04bd",
            "84a9598ef8ab589c",
            "4267339902bbc63c",
            "0d4acc439131b757",
            "dc2b691e431dbf0e",
            "c3227cb79c53ddb0",
            "7820259435e08d02",
            "869b79db9fce6786",
            "3337773dd175de51"
        ],
        "x": 14,
        "y": 159,
        "w": 1312,
        "h": 322
    },
    {
        "id": "a840280332c72426",
        "type": "group",
        "z": "aefdc2670756e2cc",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "1b48b9cdb32d5e4a",
            "eec1aec8736d9482",
            "069910bb08aa1094",
            "38b4f6ca1a90f975",
            "83ab97cb5db7d82b",
            "2fb506dd7a70c033",
            "d87eebbe00d601b8",
            "257bc111308d3d8b",
            "d87d3adf4f3ff09f",
            "47e85a3b67685565",
            "96c2defefc67de60",
            "d279be999dd8b589",
            "09e4844601b8099e",
            "118053d17461b7d2",
            "a87433d2b8ad7265",
            "62126fd1f0c9e467",
            "217ee029dcca907f",
            "61e204068e17eeed",
            "07a8381c927446b9",
            "438ee78fa3d875d2",
            "f196ecf99386c192"
        ],
        "x": 14,
        "y": 739,
        "w": 1412,
        "h": 202
    },
    {
        "id": "074fc67dcc15cb32",
        "type": "group",
        "z": "aefdc2670756e2cc",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "8a30d21730e0181d",
            "e914a6cfbcb51b26",
            "cf73413344189e5d",
            "504c0f9844bb81fe",
            "86437c3bf0ef23b0",
            "a85b16ea77dc9df0",
            "9808bbf4dad94d50",
            "fa57552cc27bb282",
            "d633e27d3e289fa4",
            "f89a1647619c30f2",
            "5aebbe78159398d9",
            "f1c09230242793a6",
            "ed8b75dbe95dccbe",
            "6473d6f4b1e282cd",
            "cef6974a47760ae8",
            "98bb078e54affc29",
            "42851707eb28a768",
            "fb674ab08a122ae3",
            "61ac2d457645c962",
            "3c5276be7583bd64",
            "d4d0efa1de346929",
            "61810174409a0641",
            "1778ad7cb257b57f",
            "dadfddc573b3c436",
            "71d55ffad1ad4875",
            "306df2579dea5445",
            "a65e8a71cc29bfeb"
        ],
        "x": 14,
        "y": 959,
        "w": 1412,
        "h": 282
    },
    {
        "id": "903fcf7d655e3763",
        "type": "group",
        "z": "aefdc2670756e2cc",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "13cc43c70bb7d3d0",
            "9c790dcad630c36a",
            "7de6c10476cddbcb",
            "4ba4a4be928c5a99",
            "f9b4996ca17de304",
            "0935e480d0a45d02",
            "f360d774c8eb8451",
            "c5850687da6e5958",
            "6c2a6d006ca6391d",
            "fdd9d6a204cd98dd",
            "1b9e90b5d8e7a1bd",
            "6b554bf2ef2ea109",
            "7a63fa8f1e6f339f",
            "77ae5c8a858ea348",
            "d9ea1d669a2546bd",
            "1b79ddeb150fb8a9",
            "728be3ea934b2e41",
            "46bdd0b015e4cdc6",
            "4458deedbab4cea7",
            "4b8a9fdbc2c8fac5",
            "71bebcc343a8c8a5"
        ],
        "x": 14,
        "y": 1999,
        "w": 1412,
        "h": 202
    },
    {
        "id": "6901addae79cfb3e",
        "type": "group",
        "z": "aefdc2670756e2cc",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "a95b38ca462532ca",
            "f89203e80f965336",
            "2ca2da41218cda4d",
            "29e084e6c83533a1",
            "427a8db1bb0443d0",
            "0a057bf2a9072626",
            "3935001f9f1d4493",
            "a848224ef0ee3e5d",
            "b7c159781e511954",
            "7657d334839505e4",
            "477f009178115dc9",
            "3af99f52092e9629",
            "122352317dbf1f68",
            "0121f5dc5ea5c0ac",
            "0d4c2a24e4085fef",
            "5d7ca9fee32cc424",
            "3bcc6d89f5116a7b",
            "9d043759fd48b908",
            "877d50d855de0aeb",
            "f5b379a6da21e56f",
            "22fc03578d38a4e9",
            "783057c345dab0c8",
            "2536ab603783d038",
            "87b7bfe17a35bf82",
            "306518714fa4fe1f",
            "b2285cde50e3fb2e",
            "813d063216e74fdd"
        ],
        "x": 14,
        "y": 2219,
        "w": 1412,
        "h": 282
    },
    {
        "id": "e0291f80669d386b",
        "type": "group",
        "z": "3ff8f0e7fc264904",
        "name": "Tag ID and User Data",
        "style": {
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e90b3bb7d8bee356",
            "c22b95ad1fa8a276",
            "bc65cc48e6ec8824",
            "7fe34908125c9fff",
            "c6fc6458c1ceca79",
            "f84dcb00da2c7be8",
            "ac7b715d5d98d8dc",
            "0cbb48aaa7b21081",
            "fa937cab2b143063",
            "b82b845ed26877b2",
            "62ecf97fd8b4e39c",
            "8fa4c809675e893e",
            "e0b97b7bdc562836",
            "d4892ae096e1cfc4",
            "8d17f7fa3e6a59e3",
            "dc00564d54fa4022",
            "5dda72f1be5a2a2e",
            "acaac739fd715019",
            "0a50a918afddb626",
            "141d4ff1986718b9",
            "a9664d1246d03009",
            "49b396ba9a15dd21",
            "aa4e360929521482",
            "ac034e867f4cee17",
            "25e7e69dadd6d610",
            "bb177087d64c1938",
            "6c9f7a65f7b4a236",
            "604612014368204e",
            "ea92e94379175915",
            "da0a8a8f03c71feb",
            "96ca7e3808aa93ee",
            "377b74b6bc2f32b8",
            "bb90e0c5606cb609",
            "7db2ec459a6e5ed7",
            "057aba946e5eb286",
            "edced847a984f603",
            "009a8cc9c56ebd3a",
            "6eadbf0c30a19177",
            "dd8fdfbebea5fdbc",
            "6dac11e739352a03",
            "0ed4dd000396d668",
            "ed1eaeaeb6e5d62b",
            "f779e2d03e87234d",
            "629988721f8816df",
            "8f2da2c991155a34",
            "a86b1135f5c0ac06"
        ],
        "x": 14,
        "y": 619,
        "w": 1412,
        "h": 362
    },
    {
        "id": "09c3bfc43109a2e7",
        "type": "group",
        "z": "c7cba4aaafa7d336",
        "name": "Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "a5f6d9f2d8398e6b",
            "dd028c7ea9900769",
            "bfd89bd82b03fb8f",
            "c68aa3710bc77f83",
            "f0eb97f74d4a14ef",
            "9b69dbd32689c2a9",
            "a9abc0520823345c",
            "e90783e7b752fe39",
            "18ca636c50789ba6",
            "6b5c6c3da3e96ba7",
            "6f5a0914bae50d6c",
            "9f734ab8f80d8ea5",
            "4e1379379d096b4c",
            "01c27ec2ba14439f",
            "03d29f90c2b89da0",
            "904f8f499605b4c1",
            "2815713a16ecda20",
            "9c98f8d64a7b2cda",
            "2e9fe836f0288a20",
            "d27bdf526efffcc4",
            "88a88917ef367e8a",
            "8fe96253482ab8ad",
            "4f88a61a33427fe6",
            "491063f0d72282fd"
        ],
        "x": 14,
        "y": 4259,
        "w": 1412,
        "h": 242
    },
    {
        "id": "bb75e62daf9598b2",
        "type": "group",
        "z": "c7cba4aaafa7d336",
        "name": "Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "70a22d17272a97aa",
            "43db5cda6c4ae1c9",
            "6149b238f070308b",
            "902277105c459939",
            "698ad4ba2c4792b2",
            "fd723db4e12f9046",
            "8f28a753f04a5446",
            "b4e5dd801eeceacf",
            "8de6fb424fa6bca8",
            "3823545e98483698",
            "c4a5ec6f4d79763b",
            "85d5b19bac7c79a7",
            "917ff329fceb2f1c",
            "f01884650a728dc5",
            "c90104bdfb954c5c",
            "78c628d450915b2b",
            "63bb63ae4da021fa",
            "57df8714169ef3e5",
            "1df7c43e7e4bedcc",
            "2de161fa1c98b690",
            "44135846d865f568",
            "d473262c1dbb5474",
            "4e245c030a9f88cb",
            "d056968906d658b9"
        ],
        "x": 14,
        "y": 3999,
        "w": 1412,
        "h": 242
    },
    {
        "id": "81f4dd717f34106f",
        "type": "group",
        "z": "c7cba4aaafa7d336",
        "name": "Simulated Variables CSV",
        "style": {
            "fill": "#bfbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c9eb3fc1b97c1e4e",
            "7d3ab858dc66cfd0",
            "c87e434fa8507abb",
            "ef5046050f14e0d4",
            "7e57766fcf1e2105",
            "5ca6f6ffc03e591a",
            "b00894032aec742a",
            "4aedc1458cae8355",
            "3c92096f65150684",
            "4ec848f241b19fb2",
            "5669a317bc530e04",
            "599eebfbe15ad346",
            "64fab0b6b2bf804c",
            "58b789e733124a30",
            "872c63020430eca9",
            "9e1d3ff02e9c0c80"
        ],
        "x": 14,
        "y": 499,
        "w": 1352,
        "h": 222
    },
    {
        "id": "495ea2525a5f4823",
        "type": "group",
        "z": "aefdc2670756e2cc",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2cb45ad1539fb1a8",
            "08e0cabcc1e00c4b",
            "39eabb9d065107c3",
            "1aafa0d09548669e",
            "21786f305d15cf44",
            "ab38db3c234cbce0",
            "7badd2cf7c176795",
            "8c78111309acc11e",
            "22395fe63acbfb47",
            "cfbcd7718e4f8a1d",
            "db702609eef8134a",
            "aeeeebc4efaff7bc",
            "e6ad64bf9c32320b",
            "75ca404d1059f0cd",
            "99c6b16b064f897b",
            "21179b0b2c0c92d2",
            "dca48e5e8f06d5a9",
            "bddfa92f58bde416",
            "76c27fca6efbb8c3",
            "ca6bc35066c2ae38",
            "08754457e53c8dad",
            "992fa65e0177ed10",
            "04cb868e854f1488",
            "b79cdde4709ff37d",
            "8a0e335fa2889a26",
            "93685ed19bdd2f80",
            "2cdf99f625bee94d",
            "3672d5df516b03e0",
            "e5e1c59bb12b01ea",
            "aec66d94d7ec8d15",
            "ddf1e8b536f2fd87",
            "5e201d1c364e44f2",
            "6e1f80ff04d23a9a",
            "0fb14040475d73bd",
            "1b406eeb1690affb",
            "a43a342c71ebf7a2",
            "7905de6cc946599c",
            "c6e21991b030dd30",
            "91334bd303317348",
            "a7a755a29947caa3",
            "6f0a28b93fd279c8",
            "3a0e6c712c16f185"
        ],
        "x": 14,
        "y": 2519,
        "w": 1412,
        "h": 482
    },
    {
        "id": "42f2673a8d87d519",
        "type": "group",
        "z": "aefdc2670756e2cc",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "4fbe524a8db5d6fe",
            "3c32d4c8b5e5a24b",
            "5b8ab877dfb62b41",
            "799b0da9b80a9434",
            "ddba0780b882803d",
            "fd6b5dcfef7995cc",
            "b09c0e45311f70ff",
            "a318692254f7a03c",
            "225d5c8f785e4ab0",
            "04b23ef942f0f0c9",
            "59f228666f06703a",
            "7fe8847deed22b9b",
            "492e6241c3a20dca",
            "2b05752e966a6533",
            "c13e394f56c239e8",
            "8f3932a1af0484e1",
            "8bc718c03385704e",
            "de7b48fbbee2958b",
            "659e7f79df2fc01c",
            "962fca7a76d14982",
            "1b6831c4373caee5",
            "fabaec2babf62edf",
            "c9f0585587f5c612",
            "3f6614f1f505c8df"
        ],
        "x": 14,
        "y": 3019,
        "w": 1412,
        "h": 242
    },
    {
        "id": "3981b0a5446d5bcb",
        "type": "group",
        "z": "aefdc2670756e2cc",
        "name": "Simulated Variables CSV",
        "style": {
            "fill": "#bfbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "acfbc94377590fed",
            "6997546508cdc53f",
            "c7dcdf5dd4e170d2",
            "0751d73846a030e0",
            "3c46c11588da4ec1",
            "2f239b1de513f0e1",
            "d98f45953a7a76f3",
            "b574ddad275f3060",
            "eb6fa7476a0e73bc",
            "90a70082d3fd1697",
            "d4474f681d3b44f7",
            "4e5d5f6ae625daad",
            "a26e0a6c8a011691",
            "955a855d84c4ee19",
            "f5f326e6b81cb007",
            "24d159d0c4ec22d5"
        ],
        "x": 14,
        "y": 499,
        "w": 1352,
        "h": 222
    },
    {
        "id": "c75cbb06b774e3f1",
        "type": "group",
        "z": "aefdc2670756e2cc",
        "name": "AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "3403f7bbbf06f2f0",
            "413c65016304e887",
            "ebc077d5bb00d618",
            "c98ba62338238153",
            "dee7be7b8f56d228",
            "ba4af659a05b9ba4",
            "58efb168ee0b0689",
            "3ddee7d7f2773dc1",
            "028fff959919154f",
            "2b065d5f9bf3c5c2",
            "8271871d66ccc793",
            "92a360c6a436799d",
            "06ddc69b6dada613",
            "e247ac5119e0cd3a",
            "c1bedb25469a19c7",
            "85a1f8d56bf89b24",
            "d1b7ac76f3b137cb",
            "4c888777c26d26df",
            "d024d6e8c3f39742",
            "2b762d28d4285e25",
            "3ac3af994aba63e6",
            "fe1cbb2488b728fa",
            "b2c01a1ea0c228f1",
            "4a26aeea07c0f227",
            "46a76cd6081f52fc",
            "1cad4973816708c6",
            "373ad2e34f61e686",
            "4f55d4ef694f5101",
            "8cf8304cce8a0d9c",
            "9451ed2a86fc38d1",
            "eefa8de7bdad0ea4",
            "e088e3d807302316",
            "8cdb94372801fbc9",
            "a74b3d68d8856396",
            "0d22da323f421515",
            "692ce3083da3cd5c",
            "cfb25b735a0254e7",
            "932d0f8356de37fb",
            "abf8349930a04f3a",
            "c059d2b10994b4e4",
            "480dafa3c8bcd426",
            "0f58f22e36d8f9bc"
        ],
        "x": 14,
        "y": 1259,
        "w": 1432,
        "h": 482
    },
    {
        "id": "2f0b0ff43a59be24",
        "type": "group",
        "z": "aefdc2670756e2cc",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "d84c8566e0d0f82a",
            "573b9b4659fe4ffa",
            "f94676193db1dd15",
            "756d93447b263a4f",
            "c38956a89d44a321",
            "9abbdc0ff2ce861c",
            "feb1b593aa0494d9",
            "ae8b7b609432570a",
            "7285cfd13fa4871d",
            "ca591f16f88d9483",
            "67e87aa0d216ba50",
            "b60ab1bd602676ea",
            "ebde0f484efa6ca2",
            "805d3d58595950ad",
            "5a1a5ccac536b9a5",
            "f792bf584ca12e9b",
            "086610c339e5add6",
            "3d108f219928489e",
            "fe9e151c35a0ebe0",
            "e2eb9ff581590b29",
            "cbcc62a7f4150513",
            "211e404cce5a25d6",
            "0c7fb8fb654d7365"
        ],
        "x": 14,
        "y": 1759,
        "w": 1412,
        "h": 222
    },
    {
        "id": "4c635431c7d6078b",
        "type": "group",
        "z": "4de9747ea9a0b29e",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "77f325e5145b3933",
            "6b63a759da3e32e4",
            "ca188b3c7fa3aa13",
            "efb6d4771547da77",
            "559ade062636a353",
            "f90bd7f538849952",
            "ca9b1ca913b4fac8",
            "5f41b81dc4f6777f",
            "b3dcf9f0711ee3cc",
            "70be91e539c1b053",
            "922de0ed62f56faf",
            "7fdce55b3813d581",
            "4d7bf04f5b5a2e7c",
            "cf1f36bbb24f755e",
            "17b64601327dc4c1",
            "1ddda4e763e9f1b6",
            "24cb2444f617abdf",
            "323cbab5564b9bd5",
            "97eca0a4ae518a31",
            "52b92bc7602153aa",
            "e1282588a0187d70",
            "87cf0bdd45335eba",
            "ffb8462c8b37f60b",
            "9c39871caf8ef1d8",
            "1d079d61c6776449",
            "29837981bd3550e7",
            "00b79567b90835b2",
            "a1fa4c11e4894d27",
            "bd892b844c03daef",
            "69f5dad37b47c647",
            "3acd2a1ac53b6bbd",
            "791ebfef69437bb5",
            "438ba8390afbdaea",
            "355d7d3b8d1ee3e3",
            "769a382fdb14a5e1",
            "fd2c370189086972"
        ],
        "x": 14,
        "y": 3119,
        "w": 1412,
        "h": 402
    },
    {
        "id": "1af9d861c5f1c840",
        "type": "group",
        "z": "4de9747ea9a0b29e",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "4e6136c2b4772410",
            "15672f683977c86b",
            "9dacd2aeecaf4769",
            "285c74b5f811bbe5",
            "07582675ad8d8b37",
            "4f4be8b1e77fae95",
            "3d1a95787a9ef6b1",
            "82bd991973aa164e",
            "9c6244c74ba00ec6",
            "d5f193ca720c5df3",
            "6d8b1f7ad2629da5",
            "cdee6ef06b1e959b",
            "3771c84855004e66",
            "868ed426287e3a87",
            "18ec17bdc096e4ec",
            "e0720580daa8fcea",
            "1ba2abe2aad2115e",
            "1c452bc656fc0795",
            "9da9bf73a52018c9",
            "ce7b0b6d6301a1e7",
            "610fdedeb94aacb8",
            "a01794779bcc1106",
            "f95c4aa62b28c317",
            "cba456535d11afc8",
            "8d28e3e768b43eec",
            "57a2e9133c5912e8",
            "b3ded730b6dd4e1b",
            "7e322d06867a91e1",
            "bfa7be8bd572bc97",
            "02f70a24095a2899",
            "c2f9690347c7b044",
            "ec72b84587247929",
            "da65e0ba2c6fcb82",
            "76d70b4c23369e54",
            "80f8eaa9b340d52e",
            "5fc29807b3a87315",
            "c35a73acbf8f989c",
            "2f5d52d6f0decffc",
            "bafb708c76f4b53b"
        ],
        "x": 14,
        "y": 3539,
        "w": 1412,
        "h": 442
    },
    {
        "id": "1b35f758ba3fbaa7",
        "type": "group",
        "z": "4de9747ea9a0b29e",
        "name": "Simulated Variables CSV",
        "style": {
            "fill": "#bfbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c031e14f7907a3dd",
            "09dad749e20adc34",
            "bf44f2ce5fae2962",
            "0bdfb086f93384cf",
            "0d351a80bcb82762",
            "e06f2531fd9409ce",
            "364090e472efdd30",
            "36aee55d1ea0fe1d",
            "96bb8470eb8c1097",
            "6fb13f6591e810f3",
            "607a303429c23b58",
            "51f561794e2829d0",
            "fd3a0a593603ba9f",
            "e4d22e5721607494",
            "5e29a24b29db1432",
            "d58be5320f2f091c"
        ],
        "x": 14,
        "y": 499,
        "w": 1352,
        "h": 222
    },
    {
        "id": "55fa58c806cbfc46",
        "type": "group",
        "z": "4de9747ea9a0b29e",
        "name": "AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "99921e1dbc482676",
            "407631ddc6992ae8",
            "d78cf9f25fca08c0",
            "487b1a446ce2f42a",
            "5530216d15f02052",
            "6616d76adc6e909f",
            "f83c3517652f5637",
            "35b8eb6c944181e7",
            "21e0d02491ab2d6f",
            "5761902a6ba968c4",
            "0ea4884ecf024f2a",
            "9cadbea3b22a51ff",
            "f90739316ffe5fa6",
            "a3b8245ddb3394c2",
            "0a71ddd46140d18d",
            "8266dfde6e631e52",
            "af7534cb37bcd8b5",
            "47feb8c1b63e86ca",
            "af6669ca79b353a8",
            "100cbe5c4b2ebbd8",
            "10f542da63346659",
            "775adea449b245b9",
            "6638e0aafb16aa68",
            "f75f68feaed55d82",
            "35df38b9f6f4d517",
            "b4828dbbc99fd4cc",
            "454016c8590642f3",
            "a2d8012654b1826e",
            "5f1a1b7a74f2b2d3",
            "defbc6f50de822bb",
            "895b453bc55934d2",
            "98581ab1fa2cb612",
            "33245159805b2093",
            "91b6ce48e423f67a",
            "130485ccf6bea9c4",
            "63e128df9dc0d942",
            "4869fade704126d7",
            "b9b7151d3bfdf502",
            "43c49ada4762c0ae",
            "1e60e0a215e5e91e",
            "1964d0e395dcc8c8",
            "feefd42e7297784e"
        ],
        "x": 14,
        "y": 1499,
        "w": 1432,
        "h": 482
    },
    {
        "id": "3f196e9a4ab9135e",
        "type": "group",
        "z": "4de9747ea9a0b29e",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2f7d95378d595619",
            "682fcb0a480ae99a",
            "7913ae8be4585176",
            "1c62a011a359405d",
            "c22b05f0d8a0bd43",
            "f25d7315f04e1058",
            "c77a2d4e47fd6936",
            "e56c1039ec271841",
            "fbb48066e7adc237",
            "8adf2671eeeda68e",
            "97634cc1930b0b16",
            "a70121a863260b3f",
            "48da3dff4acb0b84",
            "a470fa627a470cee",
            "e6b8ffc771cec55b",
            "75621c758db9ab6b",
            "260805929e7181bb",
            "670f99879e94da95",
            "d696de8f9f4a10a2",
            "6c4e921dc481198f",
            "05dbfa053a373ca4",
            "615dc6810557b32e",
            "6206d1500cb97f36",
            "94e102b0bc875d9a",
            "5916edd05b33b72a",
            "95f5975c9aa5aa90",
            "51deee3d66db4f96"
        ],
        "x": 14,
        "y": 2359,
        "w": 1412,
        "h": 282
    },
    {
        "id": "98dc49bf5fe999eb",
        "type": "group",
        "z": "4de9747ea9a0b29e",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "66e975f9062f01ed",
            "a152351d96a2590f",
            "9b4f58b91cc3d291",
            "dd944eaaa0944d64",
            "ef983037686bf018",
            "e6d72f810f7a9e7e",
            "dad5ab508a5af671",
            "b9c97ca38e753dfd",
            "fcbd0dd56029d084",
            "ead1040466da773f",
            "fd7c9c167e4208a6",
            "ddd541bb3624f8eb",
            "d70a2c4c8adfece8",
            "112397bb9cef5a58",
            "1f25b3328f9dd6db",
            "fac145875fadbf86",
            "9cc453fb86ad9ae3",
            "52fa7cfa27fe8bd2",
            "f6421271f4109aab",
            "11d75f6d2f1571e2",
            "d42f5f71d4503f0f",
            "c102b8ec4c83ffb2",
            "014bf096f36f847b",
            "390a3ebcd2fdbf3b",
            "ca5598b99abf5a5e",
            "5e9ec54a0f0bd90a",
            "886726f08558802e",
            "69e34e8b1e1e1996",
            "4cfda07404d7c964",
            "a4f0803a6a779255",
            "bdb4781f8dfe9965",
            "90ba43dc71ecb8b8",
            "8dc16606cfb02fa4",
            "a2a2fca9d13aa1f0",
            "7db2a9dc75394074",
            "3dbd13353573afb1",
            "669b22bfd1bf4d9f",
            "97038a263b541da4",
            "f553f5d9ec2f7387"
        ],
        "x": 14,
        "y": 2659,
        "w": 1412,
        "h": 442
    },
    {
        "id": "b6a79e8c037964d3",
        "type": "group",
        "z": "4de9747ea9a0b29e",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "3f3d55c5f59bc07c",
            "aec1cf9eb6786309",
            "5ce9ceaabd7eb629",
            "7c86545532203028",
            "ee2eab7fddac5aa8",
            "216541db84121ca1",
            "9db2c83aac706bbe",
            "392c5348cd2113ee",
            "f20f39bae490e74e",
            "2bfdf17546992b58",
            "5928de7111060c9d",
            "dd8e4d1b75b323c2",
            "ebd2e4d52808cd88",
            "c05f771c25c6ae60",
            "3184f8c760940b07",
            "7e5e35fc88b1b330",
            "dfceab44b7c520ee",
            "325797df2f7dbad5",
            "39d22c34d1edd45f",
            "c82a6f3501197877",
            "176a0c8244d714f4",
            "e2e10c94e71846c5",
            "6f958477e0a19464",
            "4ea0821fab7d0114",
            "3f861abfcdd2536d",
            "9c9901585af6c2ef",
            "6cc5d7a148d25759",
            "d3f7125f4677169f",
            "8e2062b34896fd65",
            "19664c3447f74987",
            "d0ad720cd24311ea",
            "df11c19cf170a730",
            "b97fc0d2a76e0397"
        ],
        "x": 14,
        "y": 1999,
        "w": 1412,
        "h": 342
    },
    {
        "id": "df3ce4009716f839",
        "type": "group",
        "z": "ebda326947bc6818",
        "name": "Simulated Variables CSV",
        "style": {
            "fill": "#bfbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "dd36011fa4dc3b54",
            "f7956f9fa44c274b",
            "a27a552aae5c88fc",
            "e553d64247cffc0e",
            "4d93a74ce9d726da",
            "b2adcec7b330ec9a",
            "dfdb1718ee24fe51",
            "9ff6d765bb15e5d0",
            "5afb7e8bd488e319",
            "fa9493880758bb76",
            "1cdc5cc336841f4a",
            "19f8fd4457c5c15f",
            "26ec017fe1c0fec7",
            "e526a8156691884a",
            "aa4dd14a1dbc796f",
            "61a07e1a04dd4492"
        ],
        "x": 14,
        "y": 499,
        "w": 1352,
        "h": 222
    },
    {
        "id": "60f3694641c8f010",
        "type": "group",
        "z": "ebda326947bc6818",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "58bfc28a7eceefd8",
            "2c43601bdcc0cfd8",
            "49c45bec135ce9cf",
            "83cc1a4545934b3b",
            "b6b54d3fb41c6486",
            "b574a5433c996b71",
            "2bbe6737b539b027",
            "a5ceb8cf518b6d1b",
            "95db6bd2e1c964b9",
            "2530a6fb0b9d54ca",
            "a84ed8893729bd22",
            "b8c9751fbb8e1aac",
            "90aa4a66f4d06fc6",
            "9fcbac8ec472a77b",
            "178361fdb3e91e5e",
            "b55ca32e275c8d1d",
            "17f4903ad2269408",
            "018368705b49e7a0",
            "f6f1908345b7f71f",
            "95ee0433322c8bc4",
            "72c9bdead8dec436",
            "159c0d9efdd89813",
            "ecb91f32b02b1237",
            "a5de3d1557696d58",
            "f7e5f128417fd4a6",
            "dacd842fac6b6f99",
            "5bfa586b29bb2be6"
        ],
        "x": 14,
        "y": 739,
        "w": 1412,
        "h": 282
    },
    {
        "id": "2f236afafc3d8b87",
        "type": "group",
        "z": "ebda326947bc6818",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "6b5cacc3c14efc59",
            "a3e651ceddef3dff",
            "85d4101ec8513bc8",
            "10de3f1650e41b45",
            "b12bd9c961ac6aeb",
            "04cb71bab6c22a8c",
            "7197400ce1753a14",
            "47087a6fedab78ff",
            "e5c94805f51ae727",
            "c98276be7e6fa805",
            "cda70024c0276320",
            "0fc96e946b7b4e69",
            "b94425487885201c",
            "2c4cb8c0fb519aa5",
            "6f087dcc9be24f19",
            "c380d959b9a9f057",
            "7fce441b728b8445",
            "3dee6423c30219d4",
            "e65952f52ff96f8e",
            "ebbb9845458a3e51",
            "b14fd17d43e40c64",
            "641e442305206ebf",
            "6a8bbba6747d3bb8",
            "80d256b18f567a3c",
            "8cd541dc347b999b",
            "986b65f0f044e77a",
            "5af97678fe289791",
            "13485d3baff5f506",
            "ef5f757d9fa68c25",
            "20108575cf78667f",
            "6152c94099fa90a0",
            "1ee1452b4369cd65",
            "86ed065a0214192a",
            "7e6f08335df3f6ee",
            "7674964b13efce34",
            "2d1f100b466c4dab",
            "a7146f3fe5ae5228",
            "ab59d61afc122006",
            "d80d49a4cff88dd2"
        ],
        "x": 14,
        "y": 1039,
        "w": 1412,
        "h": 442
    },
    {
        "id": "a91c21fbbe8af0b9",
        "type": "group",
        "z": "ebda326947bc6818",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "5b666501410b5638",
            "207691fb64031175",
            "713d2fe2871d477c",
            "ce0f30cf9fb3cee5",
            "8f28ce2a07e94b48",
            "1ea0100d938a5f6a",
            "d8afdc66f8bb0ec3",
            "982d477789230455",
            "ebfc7f96ec3a7973",
            "f8d182b018e9b472",
            "cebff1c52f58fe16",
            "2ecaa60d879e6bd6",
            "20f761ca8985e07b",
            "c1b44d538ef41094",
            "e18e225a8808b86d",
            "d2dc837c73d02afd",
            "442088b38509ad17",
            "2c2afbb0b97bf4a0",
            "5fb967338d5ceb34",
            "4e7613c4f8e6b148",
            "47dafdf6b6393f2e",
            "8bba323f029e49e0",
            "bc5d603e5505ab82",
            "d15bb0679c64b273",
            "3024cfd8393b56d4",
            "0debe8ac4a8d76d7",
            "f2da02f9e7443d70",
            "0e7284551ee71f04",
            "63a76b2674eed451",
            "b7ab7f4a8f60e6dd",
            "20f5006d204896fd",
            "032209a9f7a88d50",
            "e91ae59bdabac3f5",
            "e5707526f0c699e2",
            "8bed47465cb1114c",
            "d1f784a38db53d5d",
            "d77a779f60e9cbfb",
            "4b8541171faf059c",
            "610adb1d73eebf29",
            "8eb7a8537fe78a04",
            "e487a967917dab05",
            "8e5afcb7373ccabf",
            "fbaa4ad033c57d8a",
            "032882264e2b96eb",
            "14302e75381e5afb",
            "e89ea4e164b1a3e2",
            "0b01aeba867ea6cf",
            "50c7430b8c5f3161",
            "dd39ac8d1e1c425a",
            "9d32cfe8347b1ad4",
            "3d342d722aa88472",
            "ed970e1e27fd049c",
            "85da4a1b5da735f9",
            "9d75d9139bd9d116",
            "292a0485f1c8c0a7",
            "54da83afb713c52c",
            "264d974e626fdabd",
            "97eb981b2443f6be",
            "11151c293901f484",
            "d1aaac9b875389a1",
            "ca5b24a7ef2d36f9",
            "2e70893973c5a099"
        ],
        "x": 14,
        "y": 1499,
        "w": 1412,
        "h": 642
    },
    {
        "id": "01ac86076f120bf0",
        "type": "group",
        "z": "ebda326947bc6818",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "1ce345f4fd2f87e1",
            "6b8f1aaeeda18022",
            "1855f5aa816fbeb5",
            "029e756e44f4b51e",
            "f2bff5b5b6864979",
            "7b453482ead5d60d",
            "891fed66fc7bbb57",
            "2192e7d8b3358bea",
            "1a5647dbf7d07c7c",
            "36158ae875ecf410",
            "44f11d98e2705ab3",
            "a0eb089517bbef07",
            "79ac825055afebe0",
            "22e4b6edb477c214",
            "ef9f1629315aec20",
            "03245ddbad0e8113",
            "5d39e56d9790e446",
            "fbf2534d18a67a91",
            "2c9c39f25b591f22",
            "65e997551c4b06e7",
            "1b3a8fce629098b8",
            "3d586aee279cbd01",
            "2c4fd167c46eed08",
            "9f38a1031a365a70",
            "15729c54b894a01e",
            "aedcb595b18634c9",
            "4c5aa03b4a095fc1",
            "f631ae9fed2ec09d",
            "2e93e904d6ba725d",
            "48cef9a1ad07a309",
            "c0f1618f9ad79d53",
            "370216b407ab3fb7",
            "196142ceb23a3f8d",
            "01205dbe4f720818",
            "e48c44a5bd42684e",
            "60d5216c6806e7e6",
            "87f7fc33b67e282c",
            "4f1dc2c851d71f4d",
            "1c3badd6d5ec320f"
        ],
        "x": 14,
        "y": 2919,
        "w": 1412,
        "h": 442
    },
    {
        "id": "8d299373ac87948f",
        "type": "group",
        "z": "ebda326947bc6818",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "77eb70928e46581c",
            "5af23ccb80e1f2f5",
            "2f24794ef79d0e9d",
            "bf7ad20f9eb736bf",
            "be652842948f0434",
            "4b8ed5a503263199",
            "007d5844edf6302b",
            "2a7d28368bb38c2b",
            "3a777ce3a082c45c",
            "f2d98101d9596357",
            "2eebaac79bcb8572",
            "45737c66836a67ae",
            "47b56309201abf4e",
            "4e05b163d11ea11a",
            "0bd393897342750f",
            "f3fc0fb6ba6fd131",
            "ef3f7a1acbb92e1e",
            "01e0ea4d659e3872",
            "ccd09a96a43f681a",
            "a2aac884f91d758f",
            "99116135cdb1b3ce",
            "59143dafd6bee6fc",
            "cfbf4669102697ea",
            "1b1ad18bf3cac6f5",
            "01044ba0eb1b0043",
            "9177577919d3a38e",
            "3355e1d1cd07d6cb",
            "bf5b3c40d46c1cca",
            "cbfe9693fba03d6a",
            "b1ba4b76125f6b39",
            "f977bd06e48a7c42",
            "25feff8f30bd908b",
            "2d88723866438819",
            "07162728ad50ee8c",
            "fba55364cf948785",
            "90c078daa71fe5e2",
            "e1a0028d2d63ef9a",
            "6220d6cf959195a8",
            "425a0d5f3fc5cd60"
        ],
        "x": 14,
        "y": 3379,
        "w": 1412,
        "h": 442
    },
    {
        "id": "a5a0e7c50f3df2dd",
        "type": "group",
        "z": "7b73d224df5f2e4d",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "463dd51d4d8fe13a",
            "b8684517d0b981b2",
            "6cf2cd7547743f4c",
            "2fba7bc889110ca3",
            "4d802db143c81375",
            "9721ec80210e46f2",
            "a20959fa0ec0fdc5",
            "ad52ad70fddf2814",
            "e2876ad92e0ef524",
            "4deacba0b6f9eff4",
            "7da93c12d7852aff",
            "3a89edb13ded7b9e",
            "dc3acfd9ba7e9d3d",
            "3f576add08440ca6",
            "a7740c512c7c28d4",
            "188b4040d46cdcdd",
            "7cc40497f218adeb",
            "6f106dc767376779",
            "19b736b6daa04c73",
            "10e0eb3199643d30",
            "54142f6fa73475a2",
            "56d1d745544c2c73",
            "8586b22d9bbe56d5",
            "117052606aa839a2",
            "d3dd5001fa26c8e2",
            "cab0dc5c269bbf75",
            "4091f1311680bd8e",
            "5b23c8a4fd91994a",
            "755580cf89bba0a5",
            "d287ac460c53b997",
            "aeb2ecbb4c27b5b5",
            "cf83209b1cd004bd",
            "5b50615370780fc2",
            "9afd76d2da522fb7",
            "e882a025f69d5dfc",
            "76665436e80f660b"
        ],
        "x": 14,
        "y": 3459,
        "w": 1412,
        "h": 402
    },
    {
        "id": "c3940d0d6b482a58",
        "type": "group",
        "z": "7b73d224df5f2e4d",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "ceb7b17352043477",
            "2192b531de315785",
            "12716155b0183056",
            "63f781de81e15a7e",
            "22ac8bf73e2a90e1",
            "24c1a3b187018142",
            "6f8dc661b3182d72",
            "72ad7de1cbe9e0d1",
            "e7e8b3450ac9fc54",
            "8a763f11580d712e",
            "99b7bd986139285d",
            "1261b7429dca9dfb",
            "53710f39e82f4d8b",
            "2c97d93a38e2d69e",
            "621119f40e0d01f5",
            "d87adef339466d60",
            "01225c8fbb84e74e",
            "7bc70eb68ef7828e",
            "331ca881d62f04a1",
            "aff6c8aaaa93d36c",
            "a6168a6aa88f2b35",
            "e1c9248ee6dd3848",
            "ed169362d4302d6a",
            "e6547cc88c998d92",
            "a9ae08ce0b8cd324",
            "506f575c28fa62d7",
            "d4778f113e14401c",
            "148ed2bf2626d8f0",
            "9c9c8fed18cb94d0",
            "c24371dd67bc8a26",
            "b388c45724dcc6fd",
            "4260fabbea875842",
            "c33931d82b4e85f7",
            "802995e2ef6b0860",
            "dcfae368f87f88de",
            "76d8e43e09aa19ff",
            "01adb10c163f02b0",
            "af3d17f293141d1d",
            "25962d5a494a2414"
        ],
        "x": 14,
        "y": 3879,
        "w": 1412,
        "h": 442
    },
    {
        "id": "792c2c50ec50f0a6",
        "type": "group",
        "z": "7b73d224df5f2e4d",
        "name": "Simulated Variables CSV",
        "style": {
            "fill": "#bfbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ec009d3d4030c595",
            "732b9f2a5c832624",
            "acefd88860fdd00a",
            "d83698c0a69de998",
            "1da4a0cc17f3a08d",
            "bda1a21e26655fb2",
            "6fa4972ddd1a49bc",
            "08b9e8e7b1fcf92c",
            "6c59bd55884cb1d3",
            "a36a8da8b85e29dd",
            "93721fab73573932",
            "b94923fe3bd273bb",
            "0526597db8d22cbe",
            "285fa4015038722b",
            "cf333a983375ba13",
            "88a50b6c30c32869"
        ],
        "x": 14,
        "y": 499,
        "w": 1352,
        "h": 222
    },
    {
        "id": "52edacf3944ab1df",
        "type": "group",
        "z": "7b73d224df5f2e4d",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2b479b0436c6e231",
            "95f7969e4099653b",
            "57fd8665f98df0bf",
            "9d03a6c6fbf71acd",
            "c7893e260b428481",
            "42199402d0011216",
            "c8518e21bb811b3f",
            "b3d6d9ce5e3df403",
            "6b490dd55d4f5d68",
            "8557ef759f86a5fd",
            "211c86dd0ff8f60e",
            "e06d2c27bea68d50",
            "d56b9ca8d207cb85",
            "8e463983de670872",
            "81d6aaa175b17fd8",
            "1b48463d85933a40",
            "811dd63e366638b6",
            "816dd3f059a7ae03",
            "721fb7b073ad5d7a",
            "49d82d26b80a2390",
            "b62fd8c0a4a7aef2",
            "400bd421819c957e",
            "6372e2c345d7ce61",
            "ad6996c02be250e4",
            "5b674f694d2c6add",
            "56cca2486d450c74",
            "d1e9784e100d436a"
        ],
        "x": 14,
        "y": 739,
        "w": 1412,
        "h": 282
    },
    {
        "id": "621fad59e9713ae2",
        "type": "group",
        "z": "7b73d224df5f2e4d",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "cfb99d21dfc343e2",
            "5586a4e14552c69f",
            "d420eedf561ff1d9",
            "42ee611d213f9819",
            "0ce57b032700a01d",
            "1e9bc77f723b4015",
            "fab628dc7cdfa3cc",
            "c966c54966380c22",
            "719f1b91db18436b",
            "bfd3eccad229b81d",
            "c36a004139b93fce",
            "a75318bd13e6d501",
            "e37435cdc58ddca5",
            "b205d81604121c19",
            "b9419733de1cc52e",
            "9af2ea3db7965822",
            "cb7093366a2d8236",
            "b8b28086588b8a96",
            "7fc733230c7bfbba",
            "325129e5db684218",
            "f39599f240371a46",
            "31858d2f0a60dfa6",
            "c47b35752c5b1794",
            "b6c6f8a494e671e4",
            "af7f3810d904190e",
            "a1c36e472ac8a8e5",
            "0380a759329f5c3b",
            "063bd9c987acdd4d",
            "ecda65a7a342d402",
            "69b0f24066e065a3",
            "7584b83820d18bf5",
            "b453dbd6ef44f7d3",
            "7db802f167f9bc1d",
            "02ee71555c66f337",
            "aa09114a22294a01",
            "d959410e9c366315",
            "c5eb01a51b655262",
            "c4efcd9abdd729fc",
            "151d63e9c5694cf7"
        ],
        "x": 14,
        "y": 1039,
        "w": 1412,
        "h": 442
    },
    {
        "id": "8925210e5a418e25",
        "type": "group",
        "z": "7b73d224df5f2e4d",
        "name": "AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "ada04d1ea31428ea",
            "e2cd3cc0a1da7541",
            "7044e823a7c4b23b",
            "af84169f0a4c86e3",
            "11ad2c87d053d1d6",
            "724aa0b34ed9b4a3",
            "3418b173d194a8e0",
            "e611592f2228f109",
            "f619aa37db6d608d",
            "d647d57d06335a76",
            "37b1e7d1c35bc670",
            "3ced5de7bde381da",
            "05a65e96b0154b70",
            "d10de44ae7f61160",
            "2f75369c317b274d",
            "1430d1001567b8c0",
            "bc3cb4c30c09a514",
            "312a5743abddae4b",
            "aa87128a0fcdf652",
            "aec4d67a1841f6b7",
            "6ebfbe520477d954",
            "545349d18d58232d",
            "a17e1334b9341480",
            "7190f374c57d2efb",
            "42e69c1f830e9e57",
            "08f58dfb634136ba",
            "0a17d221cd5b7b3e",
            "8a1001450b83bd8f",
            "557825576dcbd02d",
            "221a571d0491b457",
            "374e7dec5ee76ea4",
            "2fad0c099044d4e5",
            "a15552db8dca5bf2",
            "22e30016bb7e0b30",
            "a3430b5ad0031cbf",
            "5acf3055048d920b",
            "a8e29db3f87540c1",
            "e1dc122a32c3b566",
            "69915dccecaf6552",
            "8cd015390a93dbb3",
            "82afa6b859934d1c",
            "3deb984836c56742"
        ],
        "x": 14,
        "y": 1499,
        "w": 1432,
        "h": 482
    },
    {
        "id": "3b375da071b90b24",
        "type": "group",
        "z": "7b73d224df5f2e4d",
        "name": "Auxiliary Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "460c368512c99687",
            "f0c4724e6a0e9baf",
            "3674e7ab9d4d9c7b",
            "755b4da5cf6e779c",
            "efd72912d7ac3900",
            "18d14e93311eeac1",
            "c09c865bbe820127",
            "3a8a323f4f49d974",
            "c0ce7ad3302d1ef7",
            "9099242fbda313ab",
            "aab6a75f14c71063",
            "7a87d5a58556d494",
            "292acddd2ec9b4b2",
            "40457bab16ea365c",
            "aa9b93e52ede4897",
            "b998a365e958b79a",
            "53dd59a04fc307d1",
            "c4b9a88a7bbad1fd",
            "21a8d44a165e27c9",
            "79c17147c73651f9",
            "b719327bfbfccb50",
            "4825359d41d6613b",
            "ac4b1c72d56be1d4",
            "fd17be03841f649d",
            "dc9c9f7e64d32335",
            "ce43bfca6f901862",
            "af1f36680d1cbef5",
            "0a64d6dcd512461f",
            "bd43610c11e84938",
            "43dec80ca96c9196",
            "99590eb66fa488c8",
            "6d6d9731c9a5c776",
            "0c41dd8b93178692",
            "2ed311d8d0810e4c",
            "cd24e394353c8647",
            "a2bb9368e6e8426f",
            "3f3b7aaf7324241b",
            "70060ffa5d8cc854",
            "88237b28f04ef0b4"
        ],
        "x": 14,
        "y": 2999,
        "w": 1412,
        "h": 442
    },
    {
        "id": "a04795b1385525dc",
        "type": "group",
        "z": "7b73d224df5f2e4d",
        "name": "Physical Feedback",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "ecdb80ec13293918",
            "400111305fce0e3b",
            "48774a1e191b6667",
            "3c9d115976eceeb2",
            "af45d44de35afa53",
            "69d0aacda99194fd",
            "6b1df8d12fb96210",
            "faf65144198de0e1",
            "ce9e50a402d80cd6",
            "7dda81d176daa492",
            "85eed12e6e7ca7ea",
            "f99818881e192e06",
            "0da2425498498146",
            "5b52d65a83b30be0",
            "7aabf35c997f5cc0",
            "3a26b0db4d53aa9e",
            "574f7529a60198a4",
            "64850ebe036e0f4d",
            "87d8d3783e2d4a43",
            "b969ed28348e2634",
            "348de52272c0b17f",
            "49e6f06da4250690",
            "1812286b051a8817",
            "cd1cac6c48e9a947",
            "9b50008e95af68ee",
            "21740d107f0219bd",
            "2356408752457b58"
        ],
        "x": 14,
        "y": 2699,
        "w": 1412,
        "h": 282
    },
    {
        "id": "e0e122314c65721d",
        "type": "group",
        "z": "7b73d224df5f2e4d",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "991d0629ba42c453",
            "4eba9bc5de4004aa",
            "288210f8f624c84e",
            "3879b5233c9f29da",
            "9a6f7d031cf9e6d3",
            "a9c55683bc2e5c7d",
            "c3609e2c87a3ec41",
            "4ecb8f83b960a0b9",
            "345d49aa70acc84f",
            "4e2755f80f2e2829",
            "392aae6f19e29145",
            "94753ed96f33ef02",
            "e55d8c02fe9494d8",
            "3dc91460fcb3b42a",
            "b6b66dfd28e05ce0",
            "2ba837844c6c9b88",
            "dce76edfdb9c2531",
            "ef8115d108ac05e5",
            "05791cb3df956456",
            "a765e0e33993cf1d",
            "62b76e328b12cbe7",
            "8dc7f0aaa9ebc75c",
            "e1c3f45bde86546a",
            "28ca659f2bc5e79e",
            "14d0062516f0d05c",
            "4ff65f96a32f6139",
            "639bced21161e9d8",
            "ac5ad313d1453609",
            "5c9c52e7bbf13330",
            "d12084cc3b7a06c0",
            "c55bea12fc353d3f",
            "2074bc5f6de0c1b2",
            "efa955b5a43b85df",
            "e4f353027337cc1d",
            "06809c120ceac85c",
            "0a18d0fdb381dc0b",
            "aa4602ae8f38405f",
            "961e62028ad2adef",
            "1592f17e332cbc8c",
            "b835b841dfbc774e",
            "e0237f52a89c12b3",
            "72534a229949dd72",
            "99d60235856239ac",
            "dcba8f9c251a1359",
            "065b7e4a7bb11935",
            "780eb9a38af6aa30",
            "219dc549b36fd6c4",
            "0b551f352fa39834",
            "77d2033ed3091b6e",
            "523de74adee394ae",
            "42af02ce5c1bc75b",
            "bdb196c57db2622e",
            "c2f7b852d4ab9a44",
            "8aa882977587c92e",
            "f403fd44ae37f9e3",
            "63d33e97d231d485",
            "d5c78597f0995a23",
            "64801261aa6fb862",
            "51e49b422b29eeb3",
            "c7bb0bc291bb32bd",
            "cd61e8f6a3a4e15b",
            "e288783915b367bd",
            "f049a0ccafad92b5",
            "5cf7ccedbc6f9ad7",
            "7ad1a952cd3a2fbb"
        ],
        "x": 14,
        "y": 1999,
        "w": 1412,
        "h": 682
    },
    {
        "id": "a455b0c9b3778b3c",
        "type": "group",
        "z": "1b6d40929ba9c133",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "56ca6e40eedb2cd2",
            "74c68a4d744bf23e",
            "ed99af88b792a34f",
            "9566cdacafa968e3",
            "7e0c05f755520ccd",
            "9650f90ffac12ee7",
            "a7472e6e509a0aec",
            "88768035e9eef49f",
            "17b0671934e02460",
            "e572792d0664ae1c",
            "c82ea26006d8f0e9",
            "107540e4eb99fc87",
            "e010330d1db706fe",
            "dcac75e2c9173598",
            "ffbda985f2d489fd",
            "2e6f3e7dc3761d2f",
            "905057839db27f76",
            "3f8081a527881231",
            "b24c61025fd00445",
            "e5d6fd500bfd9f6e",
            "7e4a5f202da9aef4",
            "8464a6be09067d6e",
            "1e505119ce4c477f",
            "c62fe33d089d2ede",
            "79486ac25f75502f",
            "17762390fb52de70",
            "070f71ef146fab3a",
            "8bc62934ae7acaee",
            "3fe02d505e9e1b69",
            "849b7ea3b37f81ed",
            "2a3881d526dbbb57",
            "083be1e98f9d4a82",
            "2b777b646169032d",
            "a3f1f439c5a72c87",
            "c5069618feb1926d",
            "07fc59a5395d9ef9"
        ],
        "x": 14,
        "y": 2759,
        "w": 1412,
        "h": 402
    },
    {
        "id": "4fe177aaccd14c75",
        "type": "group",
        "z": "1b6d40929ba9c133",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "7cba147a5c8485a5",
            "54d58c194249c709",
            "cc76033a1ee09394",
            "cd419bc0d8967780",
            "69102803ce19844c",
            "e8663f86a53d9ee7",
            "d2968258b6895edd",
            "2a753a62b2f8926c",
            "1565371ddc3a299e",
            "7caadddfad5b6332",
            "b857c91286466731",
            "e33c33fb3344d1d4",
            "9c522913a7597a29",
            "51a3ca2e68939ef6",
            "1fee653202d4d62a",
            "d33859673d77be8e",
            "cb728bde69a3a21e",
            "35b90ef7711b248f",
            "98b23756b573ed49",
            "5c7e322df69577a9",
            "f3646ff39b3aa4df",
            "ffed24d5774ad84c",
            "5b86239577416589",
            "ded0647eede2d203",
            "e0e57c519b829718",
            "473f5c0614cae4ee",
            "66046e3e35aafbeb",
            "626290c510c833b7",
            "e660ebc41f46653c",
            "cc30a03347c95ac5",
            "f4c137fc9906a7bd",
            "078d8ed8f1d78a55",
            "cdfc9fdaa08b31c0",
            "e22ac14ee7ad8466",
            "094c4b899b1e97e3",
            "c62e9ed0935307c8",
            "fff05f087a96b227",
            "5799e94efcfbc8b8",
            "396459186999e1b5"
        ],
        "x": 14,
        "y": 3179,
        "w": 1412,
        "h": 442
    },
    {
        "id": "27dfb51ddc72833b",
        "type": "group",
        "z": "1b6d40929ba9c133",
        "name": "Simulated Variables CSV",
        "style": {
            "fill": "#bfbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f7010b289c44f07e",
            "376cf393c5a4403c",
            "2e5d3792df9ed88b",
            "d0da3516e8a36f32",
            "cb4f9605037cd8fd",
            "7244741cdb16dc0c",
            "0fcb07b296bd495b",
            "f0806f56fdda54e8",
            "d458830ae4f0b57e",
            "140ca761e6e36da5",
            "7722f6f90bdd546f",
            "0b7519ae5b90c085",
            "6e4245396fd68ce7",
            "49dd1aec080b17c3",
            "e4e08e34228b93d6",
            "8a1baf5bbdcc1d79"
        ],
        "x": 14,
        "y": 499,
        "w": 1352,
        "h": 222
    },
    {
        "id": "6015fdf8f6e01d3a",
        "type": "group",
        "z": "1b6d40929ba9c133",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "57ea72ad39ae9e07",
            "858f29f721765fee",
            "121e068d068b3fab",
            "257f7c359e996b5c",
            "acd5ee4bb724ba61",
            "b8e172b04233398f",
            "ac63ea8059d645c8",
            "bdefce6e938b742d",
            "017eef925e04f2e9",
            "7165c651ac767b20",
            "dd67c82cb1c5c2bf",
            "6fcceac9d2407985",
            "a712f31223d2c6b2",
            "3717432d96eeb0cf",
            "ecaeee754a267ac0",
            "1e7c7789684c9280",
            "c767c4d04bfdfc2d",
            "7806b94828cc5e1a",
            "dec3b783ba1b101e",
            "29dc56dfb48c52a6",
            "d639b48907f0b5cb",
            "191efbbd72294a96",
            "12a397f209fdb181",
            "b3667201ae0a1a6c",
            "a08746d5354b7ca6",
            "200fb32a051eb9d5",
            "024515cf20d49d8b",
            "b7353da5eaa49139",
            "90a20c37592b2e09",
            "ddd91baeef1f9130"
        ],
        "x": 14,
        "y": 739,
        "w": 1412,
        "h": 322
    },
    {
        "id": "f995869f74c77ee2",
        "type": "group",
        "z": "1b6d40929ba9c133",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "1e8c3f05b9cd4bf6",
            "4c96ef4e28e8151d",
            "9d39da103bffb1c1",
            "857050cd056fbb09",
            "3ba145de0731cfaf",
            "1412134f03f2b19c",
            "b42f413ace68f8bf",
            "8a4ca190cc789b8d",
            "69199139de488903",
            "d92cc09db8f2bde8",
            "f5513bbccb292469",
            "8669b3de3e9b8de2",
            "e3be709a2b793607",
            "57fe3aa854b28b4f",
            "6276c77a899d9d84",
            "c5246b8d644fd672",
            "33b31f968e1b9bcd",
            "499e030b0977244c",
            "e31c3e8b54da932f",
            "69e5b01f7ae15e56",
            "c9bef5e546202af7",
            "11068d0d2244468e",
            "921dcc74fb6029d2",
            "c93ebf034a559165",
            "8e328b656ad13cf0",
            "7ec7a7c63bf4fc71",
            "01a0c2e61f83b09e",
            "8d4da16c125a8c4c",
            "8071ed5906b6e386",
            "e93d76941225f74e",
            "d864c8cd7c31cd03",
            "877734f3d20fcb2c",
            "a719824b1fd77c2d",
            "9ec6f4da53dd11d6",
            "21c7f9c279e4129a",
            "98b4358b6df5ca8f",
            "0890022e76a1be21",
            "b7830f3fec1c5933",
            "4d53c16128c1beda"
        ],
        "x": 14,
        "y": 1079,
        "w": 1412,
        "h": 442
    },
    {
        "id": "05991a84d51b3c8d",
        "type": "group",
        "z": "1b6d40929ba9c133",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "3058faadb689e0c5",
            "06ea992832a56b21",
            "49602133618a1442",
            "cb4c9d0799d4d18f",
            "192597c4fe6d1531",
            "26d6b6f9ebe2c061",
            "45acf8653aed1d6d",
            "344d653afca7fc14",
            "6bdb4805e92abfd0",
            "309a845b41de56ca",
            "0470363f68d49dac",
            "17948befdd774dbc",
            "54dea002d3043eb7",
            "ca068c04ca37ae21",
            "cabe24a36daf52e4",
            "6d09200409f474fb",
            "06e4f75c687342b5",
            "37bd00075b3045b6",
            "47987cc3f5508d54",
            "d3fb1386853986f5",
            "ea02a993da4cdf14",
            "72c93d5008bb9ac5",
            "b187b558fd58ecab",
            "bdf43bc3843ec6b4",
            "a93d913e6df9300d",
            "2cd4da396cce5165",
            "bbcbcb422ee129e5",
            "6a8596e2f2a6275a",
            "4bc090f8b85f0871",
            "79d8a61eafea90ee",
            "85726d0d240ed296",
            "68a70b985101c97b",
            "e48d394a6fe3b8cb",
            "61598607f16de832",
            "63ac0bef3e6341f2",
            "5a6e7ca2dde45fa6",
            "03783101540211e4",
            "9c5151438a29c3f1",
            "20677fc943a8c194"
        ],
        "x": 14,
        "y": 1539,
        "w": 1412,
        "h": 402
    },
    {
        "id": "6cd7c06e7b0bc3aa",
        "type": "group",
        "z": "078507e39b438a2b",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "e212c046525ae934",
            "ef755c034c2b00cf",
            "60ef929a2b996885",
            "f28a3871fe703389",
            "7ee155a763ea3309",
            "9b5d4ea4289e61e2",
            "d2fe7f5d1cf65652",
            "a88ae441125ee885",
            "9c50640d4dbbf376",
            "af5e09cdcc9406fe",
            "435619c525d7a58e",
            "e017d4c803b921a6",
            "2fc160f9608c57d3",
            "1457d385d6ac9070",
            "66744a695480aab4",
            "8c36e8ed0dd10e23",
            "646ee7f74323251b",
            "884884afb535c6fd",
            "1365eafd9e5968c2",
            "54c566721f0f4ae0",
            "983d1c9357bd915e",
            "afe6c5b5b11fc9bb",
            "fdc5d43b87f3d947",
            "507daaae64a6593f",
            "2d347f0def77d6d4",
            "e97d4fe62dd1a490",
            "2df9ee1fcda1f78a",
            "6d28ce1bdfcf4456",
            "4cec8ae2703693db",
            "802a8759e0bc6cc2",
            "e28a237bab4b7eb7",
            "619cded0bd226d3d",
            "659c731e9d032e73",
            "c96cb51491ff4611",
            "9deff8f593069c30",
            "ddfbf309b36463a6"
        ],
        "x": 14,
        "y": 3119,
        "w": 1412,
        "h": 402
    },
    {
        "id": "9ea105a6051778e5",
        "type": "group",
        "z": "078507e39b438a2b",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "ba877de8c31302ec",
            "32f1fce36398c5eb",
            "fa6b9bfb24cdb04c",
            "73d0eb42c08d8895",
            "0f89be0554604cf7",
            "24d8a63e3fd3ba20",
            "0f9263104e043501",
            "c5982121c6c33497",
            "5d4e2a5c2ac6ac68",
            "188875d22fb6dc16",
            "23d77b598da64267",
            "31ce6f395c06ad03",
            "841b22ba7533305c",
            "4bc1514ca762093f",
            "8487eedf4194a4a6",
            "668c58d0f38624a9",
            "690e72a9fe330560",
            "4fe3fdf663cdffb7",
            "0108826f1b8e0ab4",
            "895e7d1a507bfd7f",
            "0bae17e013441b7c",
            "2c3bfe64eaf0f28f",
            "1f00f9e05e878dd7",
            "9789dfd96c4ba381",
            "86b0001a12662cf8",
            "ea2cfed0643d3d5b",
            "e3769b1692b78ce4",
            "8e5bf578ebc90e45",
            "4fa80f1e638b1fd5",
            "dd90f8681081ee95",
            "f56b40ef06410759",
            "c37eb4b1940d1ee9",
            "0ae76b0bd6e7c51c",
            "ac3e69458ed8a512",
            "e0b8b8bec11c672e",
            "fadf2efae0cb0b9c",
            "27d5cc726769aa14",
            "74b785d2e68b35b2",
            "5347d402a1ec422c"
        ],
        "x": 14,
        "y": 3539,
        "w": 1412,
        "h": 442
    },
    {
        "id": "a35af8c682590cf0",
        "type": "group",
        "z": "078507e39b438a2b",
        "name": "Simulated Variables CSV",
        "style": {
            "fill": "#bfbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d58a87728e7021c6",
            "954ee0813f396dfd",
            "2b02c1a162eabe22",
            "82f9d0560761a7ad",
            "b463e9831cad69c7",
            "d25a8bbed7b36216",
            "bc73aa916b56d965",
            "5e01c196b0276b5a",
            "6afaa97b351a8684",
            "4b47466dd6e41382",
            "b35df6e9488dca69",
            "c3eeebcda04506c0",
            "fbaef9736eb11e31",
            "42fb6b216eaca27c",
            "94a39343d44b6295",
            "ee657e3b8be23a86"
        ],
        "x": 14,
        "y": 499,
        "w": 1352,
        "h": 222
    },
    {
        "id": "af3e92e7a7813388",
        "type": "group",
        "z": "078507e39b438a2b",
        "name": "Physical Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "2b5ae1463651a498",
            "a7a7bf7d4c6f51d5",
            "d13b860be5721d35",
            "2d1cce4df4c6a5bc",
            "020ac694ad21ce89",
            "3434ca0e592c5379",
            "b60addc89bfa9260",
            "82fc129d41cd47bd",
            "0a512bdc8756d9d5",
            "7f2b8a644b7abdf9",
            "193a849b57d1a0d0",
            "80039c9c234f44e8",
            "9501b06e0fe64955",
            "ae295cf8a60476fb",
            "ccbe6801a66d84ab",
            "49c8bcf575757d15",
            "ca3c5ce2bf7e419c",
            "985854dec9268228",
            "d176689c81c11ab9",
            "d4b20ac071cb5de5",
            "bcd1a3fa988787dc",
            "2c7ba96cca478041",
            "05b9df39ed1464ea",
            "258a9b65c4de354b",
            "77bb18b1c6ea6b03",
            "7edd5351691f6297",
            "23cd9c479def8fdd"
        ],
        "x": 14,
        "y": 739,
        "w": 1412,
        "h": 282
    },
    {
        "id": "882a0f33cb898513",
        "type": "group",
        "z": "078507e39b438a2b",
        "name": "Auxiliary Actuators",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "82c58c104387b995",
            "291fd116a3355399",
            "7d63680ee843fa89",
            "870d60ea2c947d60",
            "6554a1c0ce989034",
            "1b91aea4a857aa35",
            "d5f1685c0c2849b1",
            "c3ed54d9da4babe5",
            "30bf6b6447a9fde7",
            "30d3f631cdccb747",
            "e767473573de6f4f",
            "14297ddc4b670802",
            "c18e12dd52415a06",
            "cddb707f3f3fe8e2",
            "c0f7229fde6b2b29",
            "1fb035d9642f6d36",
            "2f70e96737d5a4dc",
            "0cd9a97caffd9ef8",
            "7cd7d6813658a7fe",
            "06832c7c05713a7e",
            "2b13d0545b6bb8d9",
            "0d92bb63557a58b6",
            "1aabae46e6a56016",
            "8635af5115df708a",
            "7b800a4a79ddbd9b",
            "7609243a7cbacc5f",
            "19a2c8bb087b17ff",
            "8a158660cbbf13e2",
            "f393a00ca9d8933f",
            "baf1134278576234",
            "2e3bdec7d17c7910",
            "421f23625fbf704f",
            "1d50c7138e56ec40",
            "567093f4c3eaa418",
            "3ae7a9abc5594d97",
            "413557bf56198452",
            "5f16b0a4be04a6e5",
            "7fe6358b8963800b",
            "797d084aa540214e"
        ],
        "x": 14,
        "y": 1039,
        "w": 1412,
        "h": 442
    },
    {
        "id": "69551ac3e8559c24",
        "type": "group",
        "z": "078507e39b438a2b",
        "name": "AS-i",
        "style": {
            "stroke": "#000000",
            "fill": "#dbcbe7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "505e2d7b044c29aa",
            "25017e948f78c768",
            "98760a3ee340afe0",
            "5fec5afbc77ad782",
            "6f9219779db8c1c7",
            "152a61709f466f03",
            "f5275603d59b2295",
            "d5020c8bf202a4c1",
            "ed0ccd8c7c8ccc27",
            "c45a0c7ecc6ec7fb",
            "667dea0866703463",
            "780668255ce0d484",
            "dc9849f0a8dba67d",
            "b410b0e54153785d",
            "11e5a201337e0226",
            "2a0d9b654f6d6388",
            "f09acf089fbacc07",
            "be80dd2c504f4cce",
            "78d6833a275ee268",
            "ba244507dfc28259",
            "260b75d51e622457",
            "1a0f3132a902662b",
            "78b603d45ef76a23",
            "4d3e1547829bb8b6",
            "11169ee6f187d288",
            "92f1f859d1c1d15f",
            "6a66b86a735b60f7",
            "6699f2cf06f9c27a",
            "b8f09249bc28f717",
            "e0456be3e8f15696",
            "742282e98fd8e333",
            "9e4dc311254a14cc",
            "f7cf919049763fbc",
            "5d0f9c2a90110266",
            "0d9ece59801328ab",
            "d2e61529c2407ae8",
            "2e762b69f3c39e40",
            "1e9f74444757b820",
            "b4591a1217d1ad59",
            "4e9f34ab0441b0e7",
            "acc491ab7819c8b2",
            "909251c06d3388c8"
        ],
        "x": 14,
        "y": 1499,
        "w": 1432,
        "h": 482
    },
    {
        "id": "10bae33fa87eb35f",
        "type": "group",
        "z": "078507e39b438a2b",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "903baf352ea37a47",
            "d8dffe264fc88ec4",
            "361c5f32c8a4d064",
            "b97aa57b0c352235",
            "d1d3c670c593a960",
            "acb78bc918bc5eb0",
            "225395816f56459d",
            "cdefba8f58d16249",
            "17fe459428206b85",
            "78a8473a08d503cd",
            "0403e062fbeeb25b",
            "847537a9c66a3730",
            "7ca219f40263474f",
            "a745e04ef69be6b7",
            "64dfca40a3452d07",
            "d9e9d6dfc75b25de",
            "3ba2476ddd8d1284",
            "b7a2b467d89ae64c",
            "f2a24d89a177db58",
            "f4793b59841bb606",
            "daa3d80615cc71a7",
            "2796ab53769453bd",
            "878e333ed970cf8d",
            "097596312550f51b",
            "2dae996282bc4f3d",
            "cb9769f2672a5e2b",
            "03de65686ad8e891",
            "d3c415a64f7b7825",
            "b810539d30293938",
            "f847056871b3bc84",
            "e2112b9d0ece05cc",
            "6b3a53317b416895",
            "80b78a3f79f4d923"
        ],
        "x": 14,
        "y": 1999,
        "w": 1412,
        "h": 342
    },
    {
        "id": "88c6737a75ad1ca4",
        "type": "group",
        "z": "7b3114de0a2b4bca",
        "name": "Physical Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "6310fc4ada0edc78",
            "5e6474903f0e5dc6",
            "f882af9558875d5b",
            "0210d941cba89f62",
            "0bcc2b2eda4c4ee3",
            "7926a062acb76398",
            "fd211b8bb3922e2f",
            "577fa138b950d339",
            "88dfeb20772aa469",
            "b395d4b8434ceca3",
            "7090d0d3582ed6a8",
            "73aa1f7adcfc7491",
            "ed093559a9f8e5f7",
            "8aa44d5091f6d96e",
            "00f5e4d47b0123da",
            "a25038e9351e79e2",
            "61fadec435109f82",
            "d4bab82ba8f8fd3d",
            "1d33f84471256bd9",
            "719eb7994b1a7f8a",
            "2f0ca36941b0ce4a",
            "42b97446c8cd2529",
            "325f995496c63703",
            "c86fa5470553d55a",
            "976f5eece0660387",
            "a5392ce81934865a",
            "62a48f8f46c5ad32",
            "35124cd04716de12",
            "17891dd58b09683b",
            "55a0155b67834275",
            "c25b658906bc0354",
            "660380bbd0c48175",
            "74f147c28ad69985",
            "9bfc0e707e314850",
            "35e138954c988f67",
            "f5f032742992f494"
        ],
        "x": 14,
        "y": 2839,
        "w": 1432,
        "h": 402
    },
    {
        "id": "01ea2b66702aeffe",
        "type": "group",
        "z": "7b3114de0a2b4bca",
        "name": "Auxiliary Sensors",
        "style": {
            "stroke": "#000000",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "f5af8d966ff234f9",
            "b9baef20e60642f0",
            "bd9f65c49b8d60d9",
            "60e4a55a7f5bc48c",
            "33f298c5145e240b",
            "6eda1cc93de6a48d",
            "0c740454b7ea2950",
            "0e8beaeba4a65d6b",
            "585ccab86aeb7688",
            "696ef333d11969d4",
            "4b01d66dbf22c558",
            "7bb947ba9ca3a680",
            "17b091e390438d62",
            "0502dfe3e8054cd3",
            "6e5e3623b7604299",
            "8ea7b4df6fc8c170",
            "03d1021e41157c8d",
            "d4a495cc7504ac46",
            "cc54f8ce86c1973d",
            "1956d86fe29a5cf8",
            "4eea895681dfe097",
            "5922ef756dd08851",
            "091dcff88a997357",
            "9aaa751602e57d3b",
            "fd0f5cbaf82769b4",
            "287ec4f1de756948",
            "4fc707086bc1dbec",
            "c5e9d4641046d5f3",
            "d79a9cb15c1f8aaf",
            "eed194f4c07357eb",
            "d4431b4af5dba04b",
            "29b2d1bccdc4df53",
            "5458be58a366af92",
            "3fcf26a10b5fb3e8",
            "66fc101b49c5a1d5",
            "ced5194c1a34c299",
            "bc37fdb1bda2c480",
            "b3f1e54c79af55bf",
            "75edc8f65c816362"
        ],
        "x": 14,
        "y": 3259,
        "w": 1432,
        "h": 442
    },
    {
        "id": "573c572cb94392b6",
        "type": "group",
        "z": "7b3114de0a2b4bca",
        "name": "Simulated Variables CSV",
        "style": {
            "fill": "#bfbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9e3bdfadc5a0b610",
            "e7d7f31b5311c824",
            "c20c4181d2e45d60",
            "ef96020ce0aa155a",
            "5a06b8fd2a48adc9",
            "a9717d156d4d346f",
            "92ad01cdaaa4cc0c",
            "c392d34283a94352",
            "cabc4fa179a56f56",
            "72db42c5bbddd449",
            "feb0a6b5e9f4866c",
            "547bb12696815483",
            "91dca4b9fb093199",
            "9c94cba00828f35e",
            "784b815b4b6255a8",
            "3f6fc11428837052"
        ],
        "x": 14,
        "y": 499,
        "w": 1352,
        "h": 222
    },
    {
        "id": "aaff29da7b613f4d",
        "type": "group",
        "z": "7b3114de0a2b4bca",
        "name": "Control",
        "style": {
            "stroke": "#000000",
            "fill": "#bfc7d7",
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "6ffe807b9fd4d0f0",
            "657923e6e1a8ea4a",
            "77994ae7c29f2d47",
            "91a7a019e3a9b11b",
            "304fc9333f71a8c5",
            "1f531e69637317c7",
            "6af1471a24c3c4a8",
            "ed17886167681946",
            "52fc6dd71c4d4119",
            "5f8ac6d672157ee7",
            "d6198ec9bb59446e",
            "d7bbc0a3097907fc",
            "c9ae9a82e3cd51f4",
            "ebb0b1a2bc33feae",
            "c668a711fbcb0ddc",
            "167c606686cc8a2e",
            "8e699b9b77df826d",
            "d678df31b56a0aef",
            "01dd3a6220d78e45",
            "dc74b1b2135ce927",
            "8ddd24848bfbb0ed",
            "04e75439d2657711",
            "52692ba7b25a50a8",
            "3988c4fcd1606a9e",
            "1bc343ec4cef8b92",
            "71fe0a817067ae22",
            "f9500320c6784926",
            "ef5257841c2ffd99",
            "0c8a517525e2f4a7",
            "2076a741a501b9ea",
            "b2a87f25daf0e932",
            "46d1366a45862707",
            "30f66bbc7b65bc5d",
            "37d8a601817264a5",
            "4c7003f13edf17a2",
            "1759f21f53deb35f",
            "0209304f7705946c",
            "9f394dfe0be55052",
            "5cce90e4f3c9cbe2"
        ],
        "x": 14,
        "y": 1579,
        "w": 1412,
        "h": 402
    },
    {
        "id": "0bf576cdebe73fee",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#0033ff",
                "baseFont": "Arial,Arial,Helvetica,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#0033ff",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0033ff",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#4d70ff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0033ff",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "Arial,Arial,Helvetica,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "UNESP FMS with AAS",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 41,
                "sy": 48,
                "gx": 4,
                "gy": 4,
                "cx": 5,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "eb41eddfedcef970",
        "type": "ui_tab",
        "name": "RFID",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7ad008f28c9fe2e2",
        "type": "ui_tab",
        "name": "Robot",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4e3f6c2463da9541",
        "type": "ui_tab",
        "name": "Controls",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f4ca2ea28d1e8a29",
        "type": "ui_tab",
        "name": "Distribution",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "88a9b112bbaa4122",
        "type": "ui_tab",
        "name": "Testing",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c7ed686a1616c373",
        "type": "ui_tab",
        "name": "AS-i",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "960263914b67d3d1",
        "type": "ui_tab",
        "name": "Handling 2",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "734cc4787e70d37b",
        "type": "ui_tab",
        "name": "Processing",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "07c50e5e1ffc5c08",
        "type": "ui_tab",
        "name": "Handling 1",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8bda1a4877779335",
        "type": "ui_tab",
        "name": "Sorting",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5b0242e632593bf8",
        "type": "ui_group",
        "name": "Distribution [80]",
        "tab": "4e3f6c2463da9541",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a2328ac43b0b7d73",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53880/UA/nodeset",
        "secpol": "None",
        "secmode": "None",
        "none": false,
        "login": true,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "b64d433cadaeae8e",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "f4ca2ea28d1e8a29",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "75089c38d5f02de2",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "f4ca2ea28d1e8a29",
        "order": 6,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "eae32c4d72ac62d1",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "f4ca2ea28d1e8a29",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "1b1b3e354c3eeeea",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "f4ca2ea28d1e8a29",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "64266140633eec38",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "f4ca2ea28d1e8a29",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cb6df86b970ae6e4",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "f4ca2ea28d1e8a29",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "811ae08a82fd3d4b",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "88a9b112bbaa4122",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2763f7e2b1dcca61",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "88a9b112bbaa4122",
        "order": 6,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3d45019236be0ca4",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "88a9b112bbaa4122",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "bb730702e2269d0a",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "88a9b112bbaa4122",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "196b60488cb0844d",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "88a9b112bbaa4122",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "11e57f84425ee887",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "88a9b112bbaa4122",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "06cbce1d0e6ae6d4",
        "type": "ui_group",
        "name": "Testing [70]",
        "tab": "4e3f6c2463da9541",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "5c50a0ea78f2fb4c",
        "type": "ui_group",
        "name": "Testing",
        "tab": "c7ed686a1616c373",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "9b7a49e0e2851638",
        "type": "ui_group",
        "name": "Handling 2",
        "tab": "c7ed686a1616c373",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "db272c300ec944f8",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "960263914b67d3d1",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3d9563c6cd652e4f",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "960263914b67d3d1",
        "order": 6,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "093f0592ce4cfbbb",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "960263914b67d3d1",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "27d977d5eaf06e45",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "960263914b67d3d1",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a28a4b09d5a9d3a6",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "960263914b67d3d1",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "8f466fe0b9fec698",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "960263914b67d3d1",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "6bd3cf378d2206aa",
        "type": "ui_group",
        "name": "Handling 2 [90]",
        "tab": "4e3f6c2463da9541",
        "order": 6,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3c70b94f18f1a698",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "734cc4787e70d37b",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e8a6fefccb35026d",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "734cc4787e70d37b",
        "order": 6,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ee83eee4122bde42",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "734cc4787e70d37b",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d170d96e59fe39c5",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "734cc4787e70d37b",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "df787b52462d7d92",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "734cc4787e70d37b",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b087d1582a680f66",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "734cc4787e70d37b",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e9e085c0926fa963",
        "type": "ui_group",
        "name": "Processing [100]",
        "tab": "4e3f6c2463da9541",
        "order": 7,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "21df5bf5097f3870",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "07c50e5e1ffc5c08",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "141f88dd8bf52042",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "07c50e5e1ffc5c08",
        "order": 6,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a073c741153ad2d5",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "07c50e5e1ffc5c08",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "5b8f60aa9581f953",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "07c50e5e1ffc5c08",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "96b8b1e9fe2c60a4",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "07c50e5e1ffc5c08",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3d581b12f9402324",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "07c50e5e1ffc5c08",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "6c3c40dd5980b3ae",
        "type": "ui_group",
        "name": "Handling 1",
        "tab": "c7ed686a1616c373",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ce8d5f76b44b4afd",
        "type": "ui_group",
        "name": "Handling 1 [50]",
        "tab": "4e3f6c2463da9541",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "36c317d51f012b4c",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "8bda1a4877779335",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e4a38badd9222c29",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "8bda1a4877779335",
        "order": 6,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3c8c487a31add2ae",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "8bda1a4877779335",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2ec6e07dd7556b6d",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "8bda1a4877779335",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "86be4093d2ac3a53",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "8bda1a4877779335",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "85e1f08e371b3f8d",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "8bda1a4877779335",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c6625dae8176f85c",
        "type": "ui_group",
        "name": "Sorting [60]",
        "tab": "4e3f6c2463da9541",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a17a94d4b5f86a49",
        "type": "ui_tab",
        "name": "Master",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cfce8c6f81e41d32",
        "type": "ui_group",
        "name": "Sensors",
        "tab": "a17a94d4b5f86a49",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "0f6cdc8b98f9df89",
        "type": "ui_group",
        "name": "Actuators",
        "tab": "a17a94d4b5f86a49",
        "order": 1,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "358b17fad41c86b2",
        "type": "ui_group",
        "name": "FeedBack",
        "tab": "a17a94d4b5f86a49",
        "order": 2,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "5bd9eabcd91ade49",
        "type": "ui_group",
        "name": "Test AS-i",
        "tab": "a17a94d4b5f86a49",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2466c383a4bfc327",
        "type": "ui_group",
        "name": "Proc AS-i",
        "tab": "a17a94d4b5f86a49",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "236bfa586e0c0569",
        "type": "ui_group",
        "name": "Visi AS-i",
        "tab": "a17a94d4b5f86a49",
        "order": 6,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "35b3e6f6832f394f",
        "type": "ui_group",
        "name": "Robo AS-i",
        "tab": "a17a94d4b5f86a49",
        "order": 7,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "bb2bed45f470cf69",
        "type": "ui_group",
        "name": "Stor AS-i",
        "tab": "a17a94d4b5f86a49",
        "order": 8,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "1038ff625298fec6",
        "type": "ui_group",
        "name": "Sort AS-i",
        "tab": "a17a94d4b5f86a49",
        "order": 9,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4de211dc0a9652ab",
        "type": "mqtt-broker",
        "name": "S7 Host",
        "broker": "200.145.26.202",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "a287d70eab823998",
        "type": "s7 endpoint",
        "d": true,
        "transport": "iso-on-tcp",
        "address": "200.145.26.35",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "50",
        "timeout": "1500",
        "name": "S7 Master",
        "vartable": [
            {
                "addr": "I20.0",
                "name": "O_20_On"
            },
            {
                "addr": "I20.1",
                "name": "O_20_Off"
            },
            {
                "addr": "I20.6",
                "name": "O_20_Controler_On"
            },
            {
                "addr": "I22.0",
                "name": "F_22_Led_On"
            },
            {
                "addr": "I22.1",
                "name": "F_22_Led_Off"
            },
            {
                "addr": "I22.7",
                "name": "F_22_Conveyor"
            },
            {
                "addr": "I24.0",
                "name": "O_24_Cart_Stat"
            },
            {
                "addr": "I24.1",
                "name": "O_24_Cart_Next"
            },
            {
                "addr": "I24.2",
                "name": "O_24_Optic"
            },
            {
                "addr": "I24.3",
                "name": "O_24_Count"
            },
            {
                "addr": "I24.4",
                "name": "O_24_Pist_Bck"
            },
            {
                "addr": "I24.5",
                "name": "F_24_Release_FB"
            },
            {
                "addr": "I25.0",
                "name": "O_25_Cart_Stat"
            },
            {
                "addr": "I25.1",
                "name": "O_25_Cart_Next"
            },
            {
                "addr": "I25.2",
                "name": "O_25_Optic"
            },
            {
                "addr": "I25.3",
                "name": "O_25_Count"
            },
            {
                "addr": "I25.4",
                "name": "O_25_Pist_Bck"
            },
            {
                "addr": "I25.5",
                "name": "F_25_Release_FB"
            },
            {
                "addr": "I26.0",
                "name": "O_26_Cart_Stat"
            },
            {
                "addr": "I26.1",
                "name": "O_26_Cart_Next"
            },
            {
                "addr": "I26.2",
                "name": "O_26_Optic"
            },
            {
                "addr": "I26.3",
                "name": "O_26_Count"
            },
            {
                "addr": "I26.4",
                "name": "O_26_Pist_Bck"
            },
            {
                "addr": "I26.5",
                "name": "F_26_Release_FB"
            },
            {
                "addr": "I27.0",
                "name": "O_27_Cart_Stat"
            },
            {
                "addr": "I27.1",
                "name": "O_27_Cart_Next"
            },
            {
                "addr": "I27.2",
                "name": "O_27_Optic"
            },
            {
                "addr": "I27.3",
                "name": "O_27_Count"
            },
            {
                "addr": "I27.4",
                "name": "O_27_Pist_Bck"
            },
            {
                "addr": "I27.5",
                "name": "F_27_Release_FB"
            },
            {
                "addr": "I28.0",
                "name": "O_28_Cart_Stat"
            },
            {
                "addr": "I28.1",
                "name": "O_28_Cart_Next"
            },
            {
                "addr": "I28.2",
                "name": "O_28_Optic"
            },
            {
                "addr": "I28.3",
                "name": "O_28_Count"
            },
            {
                "addr": "I28.4",
                "name": "O_28_Pist_Bck"
            },
            {
                "addr": "I28.5",
                "name": "F_28_Release_FB"
            },
            {
                "addr": "I29.0",
                "name": "O_29_Cart_Stat"
            },
            {
                "addr": "I29.1",
                "name": "O_29_Cart_Next"
            },
            {
                "addr": "I29.2",
                "name": "O_29_Optic"
            },
            {
                "addr": "I29.3",
                "name": "O_29_Count"
            },
            {
                "addr": "I29.4",
                "name": "O_29_Pist_Bck"
            },
            {
                "addr": "I29.5",
                "name": "F_29_Release_FB"
            },
            {
                "addr": "I31.0",
                "name": "O_31_Start"
            },
            {
                "addr": "I31.1",
                "name": "O_31_Stop"
            },
            {
                "addr": "I31.2",
                "name": "O_31_Reset"
            },
            {
                "addr": "I31.6",
                "name": "O_31_Part_in_Claw"
            },
            {
                "addr": "I31.7",
                "name": "O_31_Orientation"
            },
            {
                "addr": "I32.0",
                "name": "O_32_Sp_Cyl_Bck"
            },
            {
                "addr": "I32.1",
                "name": "O_32_Sp_Cyl_Fwd"
            },
            {
                "addr": "I32.2",
                "name": "O_32_Co_Cyl_Bck"
            },
            {
                "addr": "I32.3",
                "name": "O_32_Co_Cyl_Fwd"
            },
            {
                "addr": "I32.4",
                "name": "O_32_Sp_PickUp"
            },
            {
                "addr": "I32.5",
                "name": "O_32_Co_PickUp"
            },
            {
                "addr": "I32.6",
                "name": "O_32_CoMag_Empty"
            },
            {
                "addr": "I34.0",
                "name": "A_34_Request"
            },
            {
                "addr": "I34.1",
                "name": "A_34_No_Cart"
            },
            {
                "addr": "I34.2",
                "name": "A_34_Cart_Full"
            },
            {
                "addr": "I50.0",
                "name": "O_50_Part_Reserve"
            },
            {
                "addr": "I50.1",
                "name": "O_50_Claw_Cart"
            },
            {
                "addr": "I50.2",
                "name": "O_50_Claw_Del"
            },
            {
                "addr": "I50.3",
                "name": "O_50_Claw_Reserve"
            },
            {
                "addr": "I50.4",
                "name": "O_50_Claw_Low"
            },
            {
                "addr": "I50.5",
                "name": "O_50_Claw_High"
            },
            {
                "addr": "I50.6",
                "name": "O_50_Part_in_Claw"
            },
            {
                "addr": "I51.0",
                "name": "O_51_Start"
            },
            {
                "addr": "I51.1",
                "name": "O_51_Stop"
            },
            {
                "addr": "I51.2",
                "name": "O_51_Key_Pos"
            },
            {
                "addr": "I51.3",
                "name": "O_51_Reset"
            },
            {
                "addr": "I51.4",
                "name": "O_51_Panel_I4"
            },
            {
                "addr": "I51.5",
                "name": "O_51_Panel_I5"
            },
            {
                "addr": "I51.6",
                "name": "O_51_Panel_I6"
            },
            {
                "addr": "I51.7",
                "name": "O_51_Panel_I7"
            },
            {
                "addr": "I52.0",
                "name": "F_52_Claw_2_Del"
            },
            {
                "addr": "I52.1",
                "name": "F_52_Claw_2_Cart"
            },
            {
                "addr": "I52.2",
                "name": "F_52_Claw_Down"
            },
            {
                "addr": "I52.3",
                "name": "F_52_Close_Claw"
            },
            {
                "addr": "I53.0",
                "name": "F_53_Led_Start"
            },
            {
                "addr": "I53.1",
                "name": "F_53_Led_Reset"
            },
            {
                "addr": "I53.2",
                "name": "F_53_Led_Extra1"
            },
            {
                "addr": "I53.3",
                "name": "F_53_Led_Extra2"
            },
            {
                "addr": "I53.4",
                "name": "F_53_Panel_O4"
            },
            {
                "addr": "I53.5",
                "name": "F_53_Panel_O5"
            },
            {
                "addr": "I53.6",
                "name": "F_53_Panel_O6"
            },
            {
                "addr": "I53.7",
                "name": "F_53_Panel_O7"
            },
            {
                "addr": "I54.0",
                "name": "A_54_Request"
            },
            {
                "addr": "I54.1",
                "name": "A_54_No_Cart"
            },
            {
                "addr": "I54.2",
                "name": "A_54_Cart_Full"
            },
            {
                "addr": "I55.0",
                "name": "C_55_Initialization"
            },
            {
                "addr": "I55.1",
                "name": "C_55_PD_Proc"
            },
            {
                "addr": "I55.2",
                "name": "C_55_PD_Cart"
            },
            {
                "addr": "I60.0",
                "name": "O_60_SPart"
            },
            {
                "addr": "I60.1",
                "name": "O_60_SInd"
            },
            {
                "addr": "I60.2",
                "name": "O_60_SPhoto"
            },
            {
                "addr": "I60.3",
                "name": "O_60_Part_Pass"
            },
            {
                "addr": "I60.4",
                "name": "O_60_SL1_Bck"
            },
            {
                "addr": "I60.5",
                "name": "O_60_SL1_Fwd"
            },
            {
                "addr": "I60.6",
                "name": "O_60_SL2_Bck"
            },
            {
                "addr": "I60.7",
                "name": "O_60_SL2_Fwd"
            },
            {
                "addr": "I61.0",
                "name": "O_61_Start"
            },
            {
                "addr": "I61.1",
                "name": "O_61_Stop"
            },
            {
                "addr": "I61.2",
                "name": "O_61_Key_Pos"
            },
            {
                "addr": "I61.3",
                "name": "O_61_Reset"
            },
            {
                "addr": "I61.4",
                "name": "O_61_Panel_I4"
            },
            {
                "addr": "I61.5",
                "name": "O_61_Panel_I5"
            },
            {
                "addr": "I61.6",
                "name": "O_61_Panel_I6"
            },
            {
                "addr": "I61.7",
                "name": "O_61_Panel_I7"
            },
            {
                "addr": "I62.0",
                "name": "F_62_Conveyor"
            },
            {
                "addr": "I62.1",
                "name": "F_62_P1"
            },
            {
                "addr": "I62.2",
                "name": "F_62_P2"
            },
            {
                "addr": "I62.3",
                "name": "F_62_Identify"
            },
            {
                "addr": "I63.0",
                "name": "F_63_Led_Start"
            },
            {
                "addr": "I63.1",
                "name": "F_63_Led_Reset"
            },
            {
                "addr": "I63.2",
                "name": "F_63_Led_Extra1"
            },
            {
                "addr": "I63.3",
                "name": "F_63_Led_Extra2"
            },
            {
                "addr": "I63.4",
                "name": "F_63_Panel_O4"
            },
            {
                "addr": "I63.5",
                "name": "F_63_Panel_O5"
            },
            {
                "addr": "I63.6",
                "name": "F_63_Panel_O6"
            },
            {
                "addr": "I63.7",
                "name": "F_63_Panel_O7"
            },
            {
                "addr": "I65.0",
                "name": "C_65_Initialization"
            },
            {
                "addr": "I65.1",
                "name": "C_65_ID_1"
            },
            {
                "addr": "I65.2",
                "name": "C_65_ID_2"
            },
            {
                "addr": "I70.0",
                "name": "O_70_SInductive"
            },
            {
                "addr": "I70.1",
                "name": "O_70_SPart"
            },
            {
                "addr": "I70.2",
                "name": "O_70_SStation"
            },
            {
                "addr": "I70.3",
                "name": "O_70_SPart_Height"
            },
            {
                "addr": "I70.4",
                "name": "O_70_Elev_High"
            },
            {
                "addr": "I70.5",
                "name": "O_70_Elev_Low"
            },
            {
                "addr": "I70.6",
                "name": "O_70_Pist_Back"
            },
            {
                "addr": "I71.0",
                "name": "O_71_Start"
            },
            {
                "addr": "I71.1",
                "name": "O_71_Stop"
            },
            {
                "addr": "I71.2",
                "name": "O_71_Key_Pos"
            },
            {
                "addr": "I71.3",
                "name": "O_71_Reset"
            },
            {
                "addr": "I71.4",
                "name": "O_71_Panel_I4"
            },
            {
                "addr": "I71.5",
                "name": "O_71_Panel_I5"
            },
            {
                "addr": "I71.6",
                "name": "O_71_Panel_I6"
            },
            {
                "addr": "I71.7",
                "name": "O_71_Panel_I7"
            },
            {
                "addr": "I72.0",
                "name": "F_72_Elev_Down"
            },
            {
                "addr": "I72.1",
                "name": "F_72_Elev_Up"
            },
            {
                "addr": "I72.2",
                "name": "F_72_Eject_Part"
            },
            {
                "addr": "I72.3",
                "name": "F_72_Air_On"
            },
            {
                "addr": "I73.0",
                "name": "F_73_Led_Start"
            },
            {
                "addr": "I73.1",
                "name": "F_73_Led_Reset"
            },
            {
                "addr": "I73.2",
                "name": "F_73_Led_Extra1"
            },
            {
                "addr": "I73.3",
                "name": "F_73_Led_Extra2"
            },
            {
                "addr": "I73.4",
                "name": "F_73_Panel_O4"
            },
            {
                "addr": "I73.5",
                "name": "F_73_Panel_O5"
            },
            {
                "addr": "I73.6",
                "name": "F_73_Panel_O6"
            },
            {
                "addr": "I73.7",
                "name": "F_73_Panel_O7"
            },
            {
                "addr": "I74.0",
                "name": "A_74_Request"
            },
            {
                "addr": "I74.1",
                "name": "A_74_No_Cart"
            },
            {
                "addr": "I74.2",
                "name": "A_74_Cart_Full"
            },
            {
                "addr": "I75.0",
                "name": "C_75_Initialization"
            },
            {
                "addr": "I75.1",
                "name": "C_75_ID_Delivery1"
            },
            {
                "addr": "I75.2",
                "name": "C_75_ID_Delivery2"
            },
            {
                "addr": "I75.3",
                "name": "C_75_Part_Del"
            },
            {
                "addr": "I75.4",
                "name": "C_75_RQ_Part_Del"
            },
            {
                "addr": "I75.5",
                "name": "C_75_RQ_Wrong"
            },
            {
                "addr": "I75.6",
                "name": "C_75_Identified80"
            },
            {
                "addr": "I75.7",
                "name": "C_75_Requested80"
            },
            {
                "addr": "I80.0",
                "name": "O_80_Mag_Full"
            },
            {
                "addr": "I80.1",
                "name": "O_80_Pist_Back"
            },
            {
                "addr": "I80.2",
                "name": "O_80_Pist_Fwd"
            },
            {
                "addr": "I80.3",
                "name": "O_80_Part_Stuck"
            },
            {
                "addr": "I80.4",
                "name": "O_80_Arm_Mag"
            },
            {
                "addr": "I80.5",
                "name": "O_80_Arm_Del"
            },
            {
                "addr": "I80.6",
                "name": "O_80_Mag_Empty"
            },
            {
                "addr": "I81.0",
                "name": "O_81_Start"
            },
            {
                "addr": "I81.1",
                "name": "O_81_Stop"
            },
            {
                "addr": "I81.2",
                "name": "O_81_Key_Pos"
            },
            {
                "addr": "I81.3",
                "name": "O_81_Reset"
            },
            {
                "addr": "I81.4",
                "name": "O_81_Panel_I4"
            },
            {
                "addr": "I81.5",
                "name": "O_81_Panel_I5"
            },
            {
                "addr": "I81.6",
                "name": "O_81_Panel_I6"
            },
            {
                "addr": "I81.7",
                "name": "O_81_Panel_I7"
            },
            {
                "addr": "I82.0",
                "name": "F_82_Pist_Adv"
            },
            {
                "addr": "I82.1",
                "name": "F_82_Suction_On"
            },
            {
                "addr": "I82.2",
                "name": "F_82_Suction_Off"
            },
            {
                "addr": "I82.3",
                "name": "F_82_Arm_2_Del"
            },
            {
                "addr": "I82.4",
                "name": "F_82_Arm_2_Mag"
            },
            {
                "addr": "I83.0",
                "name": "F_83_Led_Start"
            },
            {
                "addr": "I83.1",
                "name": "F_83_Led_Reset"
            },
            {
                "addr": "I83.2",
                "name": "F_83_Led_Extra1"
            },
            {
                "addr": "I83.3",
                "name": "F_83_Led_Extra2"
            },
            {
                "addr": "I83.4",
                "name": "F_83_Panel_O4"
            },
            {
                "addr": "I83.5",
                "name": "F_83_Panel_O5"
            },
            {
                "addr": "I83.6",
                "name": "F_83_Panel_O6"
            },
            {
                "addr": "I83.7",
                "name": "F_83_Panel_O7"
            },
            {
                "addr": "I85.0",
                "name": "C_85_Initialization"
            },
            {
                "addr": "I90.0",
                "name": "O_90_Part_Reserve"
            },
            {
                "addr": "I90.1",
                "name": "O_90_Claw_Del"
            },
            {
                "addr": "I90.2",
                "name": "O_90_Claw_Cart"
            },
            {
                "addr": "I90.3",
                "name": "O_90_Claw_Reserve"
            },
            {
                "addr": "I90.4",
                "name": "O_90_Claw_Low"
            },
            {
                "addr": "I90.5",
                "name": "O_90_Claw_High"
            },
            {
                "addr": "I90.6",
                "name": "O_90_Part_in_Claw"
            },
            {
                "addr": "I91.0",
                "name": "O_91_Start"
            },
            {
                "addr": "I91.1",
                "name": "O_91_Stop"
            },
            {
                "addr": "I91.2",
                "name": "O_91_Key_Pos"
            },
            {
                "addr": "I91.3",
                "name": "O_91_Reset"
            },
            {
                "addr": "I91.4",
                "name": "O_91_Panel_I4"
            },
            {
                "addr": "I91.5",
                "name": "O_91_Panel_I5"
            },
            {
                "addr": "I91.6",
                "name": "O_91_Panel_I6"
            },
            {
                "addr": "I91.7",
                "name": "O_91_Panel_I7"
            },
            {
                "addr": "I92.0",
                "name": "F_92_Claw_2_Cart"
            },
            {
                "addr": "I92.1",
                "name": "F_92_Claw_2_Del"
            },
            {
                "addr": "I92.2",
                "name": "F_92_Claw_Down"
            },
            {
                "addr": "I92.3",
                "name": "F_92_Close_Claw"
            },
            {
                "addr": "I93.0",
                "name": "F_93_Led_Start"
            },
            {
                "addr": "I93.1",
                "name": "F_93_Led_Reset"
            },
            {
                "addr": "I93.2",
                "name": "F_93_Led_Extra1"
            },
            {
                "addr": "I93.3",
                "name": "F_93_Led_Extra2"
            },
            {
                "addr": "I93.4",
                "name": "F_93_Panel_O4"
            },
            {
                "addr": "I93.5",
                "name": "F_93_Panel_O5"
            },
            {
                "addr": "I93.6",
                "name": "F_93_Panel_O6"
            },
            {
                "addr": "I93.7",
                "name": "F_93_Panel_O7"
            },
            {
                "addr": "I94.0",
                "name": "A_94_Request"
            },
            {
                "addr": "I94.1",
                "name": "A_94_No_Cart"
            },
            {
                "addr": "I94.2",
                "name": "A_94_Cart_Full"
            },
            {
                "addr": "I95.0",
                "name": "C_95_Initialization"
            },
            {
                "addr": "I100.0",
                "name": "O_100_PInit_Pos"
            },
            {
                "addr": "I100.1",
                "name": "O_100_PDrill_Pos"
            },
            {
                "addr": "I100.2",
                "name": "O_100_PTest_Pos"
            },
            {
                "addr": "I100.3",
                "name": "O_100_SDrill_High"
            },
            {
                "addr": "I100.4",
                "name": "O_100_SDrill_Low"
            },
            {
                "addr": "I100.5",
                "name": "O_100_RT_Sensor"
            },
            {
                "addr": "I100.6",
                "name": "O_100_PTest_Ok"
            },
            {
                "addr": "I101.0",
                "name": "O_101_Start"
            },
            {
                "addr": "I101.1",
                "name": "O_101_Stop"
            },
            {
                "addr": "I101.2",
                "name": "O_101_Key_Pos"
            },
            {
                "addr": "I101.3",
                "name": "O_101_Reset"
            },
            {
                "addr": "I101.4",
                "name": "O_101_Panel_I4"
            },
            {
                "addr": "I101.5",
                "name": "O_101_Panel_I5"
            },
            {
                "addr": "I101.6",
                "name": "O_101_Panel_I6"
            },
            {
                "addr": "I101.7",
                "name": "O_101_Panel_I7"
            },
            {
                "addr": "I102.0",
                "name": "F_102_Drill_On"
            },
            {
                "addr": "I102.1",
                "name": "F_102_RT_On"
            },
            {
                "addr": "I102.2",
                "name": "F_102_Drill_Down"
            },
            {
                "addr": "I102.3",
                "name": "F_102_Drill_Up"
            },
            {
                "addr": "I102.4",
                "name": "F_102_Drill_Pin"
            },
            {
                "addr": "I102.5",
                "name": "F_102_Test_Pin"
            },
            {
                "addr": "I103.0",
                "name": "F_103_Led_Start"
            },
            {
                "addr": "I103.1",
                "name": "F_103_Led_Reset"
            },
            {
                "addr": "I103.2",
                "name": "F_103_Led_Extra1"
            },
            {
                "addr": "I103.3",
                "name": "F_103_Led_Extra2"
            },
            {
                "addr": "I103.4",
                "name": "F_103_Panel_O4"
            },
            {
                "addr": "I103.5",
                "name": "F_103_Panel_O5"
            },
            {
                "addr": "I103.6",
                "name": "F_103_Panel_O6"
            },
            {
                "addr": "I103.7",
                "name": "F_103_Panel_O7"
            },
            {
                "addr": "I105.0",
                "name": "C_105_Initialization"
            },
            {
                "addr": "I105.1",
                "name": "C_105_Part_ready"
            },
            {
                "addr": "Q20.0",
                "name": "I_20_Led_On"
            },
            {
                "addr": "Q20.1",
                "name": "I_20_Led_Off"
            },
            {
                "addr": "Q20.7",
                "name": "I_20_Conveyor"
            },
            {
                "addr": "Q24.0",
                "name": "I_24_Cart_Test"
            },
            {
                "addr": "Q24.1",
                "name": "C_24_Request"
            },
            {
                "addr": "Q24.2",
                "name": "C_24_CartDel"
            },
            {
                "addr": "Q25.0",
                "name": "I_25_Cart_Proc"
            },
            {
                "addr": "Q25.1",
                "name": "C_25_Request"
            },
            {
                "addr": "Q25.2",
                "name": "C_25_CartDel"
            },
            {
                "addr": "Q26.0",
                "name": "I_26_Cart_Visi"
            },
            {
                "addr": "Q26.1",
                "name": "C_26_Request"
            },
            {
                "addr": "Q26.2",
                "name": "C_26_CartDel"
            },
            {
                "addr": "Q27.0",
                "name": "I_27_Cart_Robo"
            },
            {
                "addr": "Q27.1",
                "name": "C_27_Request"
            },
            {
                "addr": "Q27.2",
                "name": "C_27_CartDel"
            },
            {
                "addr": "Q28.0",
                "name": "I_28_Cart_Stor"
            },
            {
                "addr": "Q28.1",
                "name": "C_28_Request"
            },
            {
                "addr": "Q28.2",
                "name": "C_28_CartDel"
            },
            {
                "addr": "Q29.0",
                "name": "I_29_Cart_Sort"
            },
            {
                "addr": "Q29.1",
                "name": "C_29_Request"
            },
            {
                "addr": "Q29.2",
                "name": "C_29_CartDel"
            },
            {
                "addr": "Q30.0",
                "name": "I_30_Led_Start"
            },
            {
                "addr": "Q30.1",
                "name": "I_30_Led_Reset"
            },
            {
                "addr": "Q30.2",
                "name": "I_30_Led_Extra1"
            },
            {
                "addr": "Q30.3",
                "name": "I_30_Led_Extra2"
            },
            {
                "addr": "Q30.4",
                "name": "I_30_Spring_Cyl"
            },
            {
                "addr": "Q30.5",
                "name": "I_30_Cover_Cyl"
            },
            {
                "addr": "Q33.0",
                "name": "F_33_Led_Start"
            },
            {
                "addr": "Q33.1",
                "name": "F_33_Led_Reset"
            },
            {
                "addr": "Q33.2",
                "name": "F_33_Led_Extra1"
            },
            {
                "addr": "Q33.3",
                "name": "F_33_Led_Extra2"
            },
            {
                "addr": "Q33.4",
                "name": "F_33_Spring_Cyl"
            },
            {
                "addr": "Q33.5",
                "name": "F_33_Cover_Cyl"
            },
            {
                "addr": "Q34.0",
                "name": "A_34_Cart_Stat"
            },
            {
                "addr": "Q34.1",
                "name": "A_34_Cart_Next"
            },
            {
                "addr": "Q34.2",
                "name": "A_34_Optic"
            },
            {
                "addr": "Q34.3",
                "name": "A_34_Count"
            },
            {
                "addr": "Q34.4",
                "name": "A_34_Pist_Bck"
            },
            {
                "addr": "Q34.5",
                "name": "A_34_Release_FB"
            },
            {
                "addr": "Q50.0",
                "name": "I_50_Claw_2_Del"
            },
            {
                "addr": "Q50.1",
                "name": "I_50_Claw_2_Cart"
            },
            {
                "addr": "Q50.2",
                "name": "I_50_Claw_Down"
            },
            {
                "addr": "Q50.3",
                "name": "I_50_Close_Claw"
            },
            {
                "addr": "Q51.0",
                "name": "I_51_Led_Start"
            },
            {
                "addr": "Q51.1",
                "name": "I_51_Led_Reset"
            },
            {
                "addr": "Q51.2",
                "name": "I_51_Led_Extra1"
            },
            {
                "addr": "Q51.3",
                "name": "I_51_Led_Extra2"
            },
            {
                "addr": "Q51.4",
                "name": "I_51_Panel_O4"
            },
            {
                "addr": "Q51.5",
                "name": "I_51_Panel_O5"
            },
            {
                "addr": "Q51.6",
                "name": "I_51_Panel_O6"
            },
            {
                "addr": "Q51.7",
                "name": "I_51_Panel_O7"
            },
            {
                "addr": "Q52.0",
                "name": "C_52_Profibus"
            },
            {
                "addr": "Q54.0",
                "name": "A_54_Cart_Stat"
            },
            {
                "addr": "Q54.1",
                "name": "A_54_Cart_Next"
            },
            {
                "addr": "Q54.2",
                "name": "A_54_Optic"
            },
            {
                "addr": "Q54.3",
                "name": "A_54_Count"
            },
            {
                "addr": "Q54.4",
                "name": "A_54_Pist_Bck"
            },
            {
                "addr": "Q54.5",
                "name": "A_54_Release_FB"
            },
            {
                "addr": "Q55.0",
                "name": "C_55_Start"
            },
            {
                "addr": "Q55.1",
                "name": "C_55_Cart2Del"
            },
            {
                "addr": "Q55.2",
                "name": "C_55_Del2Cart"
            },
            {
                "addr": "Q60.0",
                "name": "I_60_Conveyor"
            },
            {
                "addr": "Q60.1",
                "name": "I_60_P1"
            },
            {
                "addr": "Q60.2",
                "name": "I_60_P2"
            },
            {
                "addr": "Q60.3",
                "name": "I_60_Identify"
            },
            {
                "addr": "Q61.0",
                "name": "I_61_Led_Start"
            },
            {
                "addr": "Q61.1",
                "name": "I_61_Led_Reset"
            },
            {
                "addr": "Q61.2",
                "name": "I_61_Led_Extra1"
            },
            {
                "addr": "Q61.3",
                "name": "I_61_Led_Extra2"
            },
            {
                "addr": "Q61.4",
                "name": "I_61_Panel_O4"
            },
            {
                "addr": "Q61.5",
                "name": "I_61_Panel_O5"
            },
            {
                "addr": "Q61.6",
                "name": "I_61_Panel_O6"
            },
            {
                "addr": "Q61.7",
                "name": "I_61_Panel_O7"
            },
            {
                "addr": "Q62.0",
                "name": "C_62_Profibus"
            },
            {
                "addr": "Q65.0",
                "name": "C_65_RBS_Output"
            },
            {
                "addr": "Q65.1",
                "name": "C_65_RSB_Output"
            },
            {
                "addr": "Q65.2",
                "name": "C_65_BRS_Output"
            },
            {
                "addr": "Q65.3",
                "name": "C_65_BSR_Output"
            },
            {
                "addr": "Q65.4",
                "name": "C_65_SRB_Output"
            },
            {
                "addr": "Q65.5",
                "name": "C_65_SBR_Output"
            },
            {
                "addr": "Q70.0",
                "name": "I_70_Elev_Down"
            },
            {
                "addr": "Q70.1",
                "name": "I_70_Elev_Up"
            },
            {
                "addr": "Q70.2",
                "name": "I_70_Eject_Part"
            },
            {
                "addr": "Q70.3",
                "name": "I_70_Air_On"
            },
            {
                "addr": "Q71.0",
                "name": "I_71_Led_Start"
            },
            {
                "addr": "Q71.1",
                "name": "I_71_Led_Reset"
            },
            {
                "addr": "Q71.2",
                "name": "I_71_Led_Extra1"
            },
            {
                "addr": "Q71.3",
                "name": "I_71_Led_Extra2"
            },
            {
                "addr": "Q71.4",
                "name": "I_71_Panel_O4"
            },
            {
                "addr": "Q71.5",
                "name": "I_71_Panel_O5"
            },
            {
                "addr": "Q71.6",
                "name": "I_71_Panel_O6"
            },
            {
                "addr": "Q71.7",
                "name": "I_71_Panel_O7"
            },
            {
                "addr": "Q72.0",
                "name": "C_72_Profibus"
            },
            {
                "addr": "Q74.0",
                "name": "A_74_Cart_Stat"
            },
            {
                "addr": "Q74.1",
                "name": "A_74_Cart_Next"
            },
            {
                "addr": "Q74.2",
                "name": "A_74_Optic"
            },
            {
                "addr": "Q74.3",
                "name": "A_74_Count"
            },
            {
                "addr": "Q74.4",
                "name": "A_74_Pist_Bck"
            },
            {
                "addr": "Q74.5",
                "name": "A_74_Release_FB"
            },
            {
                "addr": "Q75.0",
                "name": "C_75_RQ_Delivery1"
            },
            {
                "addr": "Q75.1",
                "name": "C_75_RQ_Delivery2"
            },
            {
                "addr": "Q75.2",
                "name": "C_75_Identified"
            },
            {
                "addr": "Q75.3",
                "name": "C_75_Requested"
            },
            {
                "addr": "Q80.0",
                "name": "I_80_Pist_Adv"
            },
            {
                "addr": "Q80.1",
                "name": "I_80_Suction_On"
            },
            {
                "addr": "Q80.2",
                "name": "I_80_Suction_Off"
            },
            {
                "addr": "Q80.3",
                "name": "I_80_Arm_2_Del"
            },
            {
                "addr": "Q80.4",
                "name": "I_80_Arm_2_Mag"
            },
            {
                "addr": "Q81.0",
                "name": "I_81_Led_Start"
            },
            {
                "addr": "Q81.1",
                "name": "I_81_Led_Reset"
            },
            {
                "addr": "Q81.2",
                "name": "I_81_Led_Extra1"
            },
            {
                "addr": "Q81.3",
                "name": "I_81_Led_Extra2"
            },
            {
                "addr": "Q81.4",
                "name": "I_81_Panel_O4"
            },
            {
                "addr": "Q81.5",
                "name": "I_81_Panel_O5"
            },
            {
                "addr": "Q81.6",
                "name": "I_81_Panel_O6"
            },
            {
                "addr": "Q81.7",
                "name": "I_81_Panel_O7"
            },
            {
                "addr": "Q82.0",
                "name": "C_82_Profibus"
            },
            {
                "addr": "QB83",
                "name": "C_83_RQ_Parts"
            },
            {
                "addr": "Q85.0",
                "name": "C_85_Start"
            },
            {
                "addr": "Q85.1",
                "name": "C_85_Single"
            },
            {
                "addr": "Q85.2",
                "name": "C_85_Continuous"
            },
            {
                "addr": "Q85.3",
                "name": "C_85_Counted"
            },
            {
                "addr": "Q90.0",
                "name": "I_90_Claw_2_Cart"
            },
            {
                "addr": "Q90.1",
                "name": "I_90_Claw_2_Del"
            },
            {
                "addr": "Q90.2",
                "name": "I_90_Claw_Down"
            },
            {
                "addr": "Q90.3",
                "name": "I_90_Close_Claw"
            },
            {
                "addr": "Q91.0",
                "name": "I_91_Led_Start"
            },
            {
                "addr": "Q91.1",
                "name": "I_91_Led_Reset"
            },
            {
                "addr": "Q91.2",
                "name": "I_91_Led_Extra1"
            },
            {
                "addr": "Q91.3",
                "name": "I_91_Led_Extra2"
            },
            {
                "addr": "Q91.4",
                "name": "I_91_Panel_O4"
            },
            {
                "addr": "Q91.5",
                "name": "I_91_Panel_O5"
            },
            {
                "addr": "Q91.6",
                "name": "I_91_Panel_O6"
            },
            {
                "addr": "Q91.7",
                "name": "I_91_Panel_O7"
            },
            {
                "addr": "Q92.0",
                "name": "C_92_Profibus"
            },
            {
                "addr": "Q94.0",
                "name": "A_94_Cart_Stat"
            },
            {
                "addr": "Q94.1",
                "name": "A_94_Cart_Next"
            },
            {
                "addr": "Q94.2",
                "name": "A_94_Optic"
            },
            {
                "addr": "Q94.3",
                "name": "A_94_Count"
            },
            {
                "addr": "Q94.4",
                "name": "A_94_Pist_Bck"
            },
            {
                "addr": "Q94.5",
                "name": "A_94_Release_FB"
            },
            {
                "addr": "Q95.0",
                "name": "C_95_Start"
            },
            {
                "addr": "Q95.1",
                "name": "C_95_Cart2Del"
            },
            {
                "addr": "Q95.2",
                "name": "C_95_Del2Cart"
            },
            {
                "addr": "Q100.0",
                "name": "I_100_Drill_On"
            },
            {
                "addr": "Q100.1",
                "name": "I_100_RT_On"
            },
            {
                "addr": "Q100.2",
                "name": "I_100_Drill_Down"
            },
            {
                "addr": "Q100.3",
                "name": "I_100_Drill_Up"
            },
            {
                "addr": "Q100.4",
                "name": "I_100_Drill_Pin"
            },
            {
                "addr": "Q100.5",
                "name": "I_100_Test_Pin"
            },
            {
                "addr": "Q101.0",
                "name": "I_101_Led_Start"
            },
            {
                "addr": "Q101.1",
                "name": "I_101_Led_Reset"
            },
            {
                "addr": "Q101.2",
                "name": "I_101_Led_Extra1"
            },
            {
                "addr": "Q101.3",
                "name": "I_101_Led_Extra2"
            },
            {
                "addr": "Q101.4",
                "name": "I_101_Panel_O4"
            },
            {
                "addr": "Q101.5",
                "name": "I_101_Panel_O5"
            },
            {
                "addr": "Q101.6",
                "name": "I_101_Panel_O6"
            },
            {
                "addr": "Q101.7",
                "name": "I_101_Panel_O7"
            },
            {
                "addr": "Q102.0",
                "name": "C_102_Profibus"
            },
            {
                "addr": "Q105.0",
                "name": "C_105_Start"
            },
            {
                "addr": "Q105.1",
                "name": "C_105_Test"
            },
            {
                "addr": "Q105.2",
                "name": "C_105_TestDrill"
            },
            {
                "addr": "Q105.3",
                "name": "C_105_Rotation"
            }
        ]
    },
    {
        "id": "0661da50664f0ff0",
        "type": "ui_group",
        "name": "Physical Sensors",
        "tab": "7ad008f28c9fe2e2",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "f2cc73e1bb66ea8e",
        "type": "ui_group",
        "name": "Auxiliary Sensors",
        "tab": "7ad008f28c9fe2e2",
        "order": 6,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ed1581f0ab58c113",
        "type": "ui_group",
        "name": "Physical Actuators",
        "tab": "7ad008f28c9fe2e2",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "edcd73cbe1d2c82f",
        "type": "ui_group",
        "name": "Physical Feedback",
        "tab": "7ad008f28c9fe2e2",
        "order": 2,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "59affd9d8d344ed5",
        "type": "ui_group",
        "name": "Auxiliary Actuators",
        "tab": "7ad008f28c9fe2e2",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a18af1cd9d1776ce",
        "type": "ui_group",
        "name": "Auxiliary Feedback",
        "tab": "7ad008f28c9fe2e2",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "77f4ade265432843",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "eb41eddfedcef970",
        "order": 7,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "039b10cab3ee7797",
        "type": "ui_group",
        "name": "Robot [30]",
        "tab": "4e3f6c2463da9541",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "627ffa4b27386e09",
        "type": "ui_group",
        "name": "Robot",
        "tab": "c7ed686a1616c373",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "632b700d764ef18c",
        "type": "ui_group",
        "d": true,
        "name": "Configuration",
        "tab": "eb41eddfedcef970",
        "order": 8,
        "disp": true,
        "width": "10",
        "collapse": true,
        "className": ""
    },
    {
        "id": "db650f95e5d0ea5d",
        "type": "ui_group",
        "name": "Check Tag ID",
        "tab": "eb41eddfedcef970",
        "order": 5,
        "disp": true,
        "width": "5",
        "collapse": true,
        "className": ""
    },
    {
        "id": "670bea26ab1f0b31",
        "type": "ui_group",
        "name": "Change Tag ID",
        "tab": "eb41eddfedcef970",
        "order": 6,
        "disp": true,
        "width": "5",
        "collapse": true,
        "className": ""
    },
    {
        "id": "9eca6ac627a3fef6",
        "type": "ui_group",
        "name": "Antenna 1",
        "tab": "eb41eddfedcef970",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2b930a78f65c7d76",
        "type": "ui_group",
        "d": true,
        "name": "Tag Report",
        "tab": "eb41eddfedcef970",
        "order": 9,
        "disp": true,
        "width": "10",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4af82163fe139a80",
        "type": "ui_group",
        "name": "Antenna 2",
        "tab": "eb41eddfedcef970",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "03da9ce77e4e4049",
        "type": "ui_group",
        "name": "Antenna 3",
        "tab": "eb41eddfedcef970",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c80eba6f1f35960e",
        "type": "ui_group",
        "name": "Antenna 4",
        "tab": "eb41eddfedcef970",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7566d0597760c4c9",
        "type": "comment",
        "z": "f6d07cedc827abbb",
        "name": "Node-Red: V6.12",
        "info": "V6.12 - 05/08/2025\nIncluído tradutor para criar tabela das variáveis de simulação\nAcertado variáveis de configuração do RFID\n\nV6.11 - 23/07/2025\nIncluído as abas para RFID (tanto de configuração como de roteamento)\nAlterado o endereço dos servidores OPC para que todos tenham o endereço 53880 devido à necessidade da rede interna da UNESP\nPequenas correções nos fluxos de erros de links\n\nV6.10 - 07/07/2025\nIncluído usuário e senha para todos os servidores OPC UA \nAdicionado estação Robot para os arquivos Variables.csv e users.json\n\nV6.9 - 26/06/2025\nImplementado servidor MQTT direto na versão com AAS\nTrazido o flow do RFID para a versão do AAS para implementação e ajustes futuros\nObs.: A partir deste ponto a versão sem o AAS (V5.12) não será mais atualizada.\n\nV5.12 - 2025-06-17\nImplementado servidor MQTT para distribuição das variáveis do CLP, permitindo uma única conexão ao CLP.\nCorrigido parcialmente (somente variáveis do Master [20]) problema de acionamento via MQTT sem usar as saídas nas abas.\nSerá necessário a criação de um Node-RED exclusivo para o servidor MQTT que deverá funcionar separado do restante da aplicação.\n\nV6.8.2 - 2025-06-17\nCorrigido problema de acionamento via MQTT.\nSerá necessário a criação de um Node-RED exclusivo para o servidor MQTT que deverá funcionar separado do restante da aplicação.\n\nV6.8.1\nCorrigido os caminhos dos arquivos nodeset.xml e Variables.csv para que trabalhem em sistemas Linux e nas TVBox\n\nV6.8\nImplementado servidor MQTT para distribuição das variáveis do CLP, permitindo uma única conexão ao CLP.\nCorrigido as abas para iniciarem o Subscribe somente após o servidor de leitura estar ativo.\n\nV5.11.1 - 2025-06-11\nInício da otimização da aba do RFID para integração com a nova metodologia de rastreamento.\n\nV5.11 - 2025-06-10\nIncluído atuadores e feedbacks da estação da Remota do Robot [30]\n\nV5.10 - 2025-06-05\nIncluído estação Robot [30] e acertado os namespaces (ns) das demais estações após a criação.\n\nV6.7.1 - 2025-05-07\nCorrigido os caminhos dos arquivos nodeset.xml e Variables.csv para que trabalhem em sistemas Linux e nas TVBox\n\nV5.9 - 2025-05-05\nCriação de conexão única para a leitura de variáveis no CLP e funções para cada variável nos blocos individuais.\n\nV6.7 - 2025-05-02\nCriação de conexão única para a leitura de variáveis no CLP e funções para cada variável nos blocos individuais.\n\nV5.8 - 29/04/2025\nAtualização da versão anterior para as novas variáveis conforme a V6.6, inlcuindo principalmente a mudança do endereço PROFIBUS da Esteira para [20]\n\nV6.6 - 25/04/2025\nInclusão da estação Sorting [60] e Master [20]\nSerivodr 53892 - [20] Master\nSerivodr 53896 - [60] Sorting\n\nV6.5 - 24/04/2025\nInclusão da estação Handling 1 [50]\nSerivodr 53895 - [50] Handling 1\n\nV6.4 - 27/03/2025\nInclusão da estação Processing [100]\nSerivodr 53890 - [100] Processing\n\nV6.3 - 25/03/2025\nDivisão dos servidores para trabalhar com unidades de forma individual, resolvendo o problema de 10 subscrições por cliente.\nSerivodr 53887 - [70] Testing\nServidor 53888 - [80] Distribution\nServidor 53889 - [90] Handling 2\n\nv6.2.2 - 12/02/2025\nPequenos acertos para versão 1.2 do AAS\n\nV6.2.1 - 04/02/2025\nIncluído leitura e criação do arquivo de conversão e da subscrição das variáveis a partir do Status das conexões dos clientes.\nO novo modo solucionou o problema de leitura da 1ª leitura pois força uma escrita quando existe a inscrição.\n\nV6.2 - 03/02/2025\nAtualização do arquivo s7endpoint_CLP Mestre para conter todas as variáveis da estação Testing [70]\nCriação da Aba Testing [70] e seus respectivos sinais\n\nV6.1.1 - 31/01/2025\nCriada programação para garantir a 1ª leitura das variáveis, com trigger e delay de 10 segundos.\nTestes de leitura e escrita. Ok.\n\nV6.1 - 30/01/2025\nResolvido problema de leitura e escrita do AAS com tradução Variável para NameSpace e Identifier\nRefeita a programação para a estação Distribution [80] \n\nV6.0.1 - 4/12/2024\nInseridas as novas variáveis de controle no AAS\nAcertado o nome das classes para \"Sensors\" e \"Actuators\"\nProblema na criação da variável tipo Byte C_83_RQ_Parts\n\nV5.7.8 - 28/11/2024\nCriadas Variáveis de controle da estação Testing [70]\n\nV5.7.2 - 26/11/2024\nInvertidas das posições I90.1 e I90.2 devido à alteração física\nCriada variável (QB83) para número de peças requisitadas\n\nV5.7.1 - 14/11/2024\nAtualização da estação Distributing [80] para os novos modos de produção e acertado o nome das variáveis\nIncluído a possibilidade de entrega \"contada\" de peças.\n\nV6.0 - 24/09/2024 - AAS\n\tImplementação da 1ª versão do AAS, somente para a unidade Distribution [80]\n\tP.S.: A versão 5.7 permanecerá rodando e sendo desenvolvida visto que o AAS ainda precisa ser terminado para poder ser implantado por completo.\n\nV5.7 - 19/09/2024\nCorrigido acionamento da variável I_20_Led_On\nRetirado os acionamentos individuias das estação via \"Controls and Information\"\nAdicionado o Botão via \"Controls and Information\" para a produção de uma peça.\n\nV5.6 - 08/08/2024\nInclusão das variáveis de controle da estação Sorting [60]\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação Sorting [60] \n\nV5.5 - 05/08/2024\nAtualização dos nomes das variáveis de On/Off para Start/Stop e do sinal 80_O_Mag_Empty.\nAtualização das descrições de todas as variáveispara inglês\nAdequação dos nomes das variáveis para o AAS (com letras iniciando)\nAcertado o NameSpace das estações para que as variáveis do RFID fiquem junto com as demais do Conveyor [30] (ns=12) e corrigido as demais estações.\n\nV5.4 - 31/07/2024\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação Distribution [80] - Start e Modo (Automatico ou Manual).\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação Handling 1 [90] - Start e Modo (Cart2Del e Del2Cart).\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação Processing [100] - Modo (Rotate, Test e Test+Drill).\nAtualizado arquivos config.csv e s7endpoint_CLP Mestre.csv\n\n\nV5.3 - 30/07/2024\nImplementação dos controles via Dasboard na aba \"Controls and Information\" para a estação [70] Testing.\nAtualizado arquivos config.csv e s7endpoint_CLP Mestre.csv",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "ad6e89b6281c070b",
        "type": "comment",
        "z": "f6d07cedc827abbb",
        "name": "AAS: V2.2",
        "info": "V2.2 - 12/08/2025\nAcertado ordem das variáveis para ficarem compatíveis com o MatLab (Actuators, AS-I, Control, Feedback e Sensors)\nAcertado ordem das variáveis simuladas para ficarem compatíveis com o MatLab (Actuators, Control e Sensors)\nAcertado os valores iniciais das variáveis dentro do AAS \n\nV2.1.1 - 26/06/2025\nCorrigido nome do SMC \"AS-i\" para \"ASi\" para evitar erro de nomenclatura\nTornado todos os SMC em \"VARIABLE\" ao invés de \"PARAMETER\" para verificar erro do servidor OPC UA\n\nV2.1 - 28/04/2025\nIncluído as variáveis de simulação (SimulatedData) para todas as estações.\n\nV2.0 - 14/03/2025\nDividido os Assets por estação devido à limitação do Node-RED de 100 subscriptions.\nCada estação agora terá a sua própria versão do arquivo, todos partindo da V2.0 em conjunto.\n\nV1.2 - 12/02/2025\nIncluído submodelos para o FMS (Documentation)\nIncluído submodelos para o Distribution (Identification, TechincalData, Documentation e SimulationData)\n\nV1.1 - 03/02/2025\nIncluído as variávies de Operational Data para a estação Testing [70]\n\nV1.0 - 30/01/2025\nIncluído as variáveis de Operational Data para a estação Distribution [80]",
        "x": 80,
        "y": 80,
        "wires": []
    },
    {
        "id": "20a562fae46a7f16",
        "type": "comment",
        "z": "f6d07cedc827abbb",
        "name": "S7: V3.0.9",
        "info": "10/06/2025 - V3.0.9\nProgramação dos Sensores e Atuadores para a Remota do Braço Robótico [30] em FB3\n\n25/04/2025 - V3.0.8\nProgramação das estação Master [20] para que os sesnores do AS-i estivessem corretamente dentro da estação (e não separados) devido ao AAS.\nCorreção de TAGs diversas de variáveis\n\n15/04/2025 - V3.0.7\nProgramação básica da estação Handling 2 [90] para versão AAS Ok. Programados OB1, FB1, FB3, FB4 e FB5.\n\n31/03/2025 - V3.0.6\nResolvido problema de conexão estação [100] Processing. \nFoi necessário apagar e recolocar o Hardware, reconfigurando a rede PROFIBUS e os compartilhamentos.\n\n26/03/2025 - V3.0.5\nAcertado valores das variáveis das estações Handling 2 [90] e Processing [100] para o AAS.\n\n03/02/2025 - V3.0.4\nIncluídos OB82 e OB121 na estação Distribution [80]\nInserido o sinal de C_75_Initialization e corrigido as Tags para a estação Testing [70]\nAdequação dos novos endereços do Profibus nas estações Testing [70] e Distribution [80]\n\n04/12/2024 - V3.0.3\nProgramação estação Testing [70] : FB5 (Requested)\nIntegração da função Requested com as programações da estação Distributing [80], tanto no FB4 (Single) como no FB6 (Counted). \nFoi necessário substituir a programação de FB6 [80] devido à necessidade de não se ter peça no braço na última movimentação. Agora FB6 [80] está similar a FB4 [80]\n\n28/11/2024 - V3.0.2\nProgramada estação Testing [70]: OB1 (Main), FB1 (Initialization), FB4 (Identified). Ainda faltando FB5 (Requested)\n\n26/11/2024 - V3.0.1\nConcluída Programação da estação distributing [80]: OB1 (Main), FB1 (Initialization), FB4 (Single), FB5 (Continuous) e FB6 (Counted Mode) com controle via Node-RED e OPC UA\n\n13/11/2024 - V3.0\nInício da reprogramação das estações, para funcionamento junto ao FMS e Softwares de supervisão\nProgramada estação distributing [80]: OB1 (Main), FB1 (Initialization), FB4 (Single) e FB5 (Continuous). Ainda faltando FB6 (Counted Mode)\n\n01/10/2024 - V2.7\nAdicionado Remota Robot no CLP Mestre com o endereço Profibus 3. Variáries serão I30.0 a I32.7 e Q30.0 a Q30.7\nAdicionado OB121 e OB82 para resolver problema de inicialização.\nImplementação de posição de Manutenção (Key-Pos I125.2 = 0) e posição de produção (Key_Pos I125.2 = 1) para todas as estações.\n\n20/08/2024 - V2.6\nProgramação da estação Sorting [60] com os seis modos de produção\nAcerto da programação do Bloco FB11 (Produção de uma peça início ao fim) e dos blocos dos CLP´s que estavam em conflito\n\n02/08/2024 - V2.5\nAlteração e padronização da nomenclatura das variávies do OPC para atender as necessidades do AAS\n\n31/07/2024 - V2.4\nProgramação dos modos Test+Drill e Rotation Only [100] e retina de RESET\nAlteração da programação das unidades [70], [80], [90] e [100] para integração com a versão 5.4 do Node-RED na qual a programação dos modos é feito através do dashboard.\n\n23/07/2024 - V2.3\nProgramação do modo Test Only [100] e rotina de RESET.\n\n17/07/2024 - V2.2\nImplementação do tratamento de múltiplos carrinhos pela estação Master [20] para a chamada no Conveyor.\nInício programação unidade Processing [100] com 2 modos - Test e Test+Drill\n\n16/07/2024 - V2.1\nAjuste na programação do FB10 [20] Master para impedir solicitações multiplas enquanto o sistema ainda está em processo.\nAjuste na programação do [90] Handling 2 para usar a entrada Stop para alterar entre os modos de movimentação de peças, liberando a entrada Reset para zerar a memória.\nImplementação de RESET nas unidades [70], [80] e [90] no FB1 fazendo com que a entrada de Reset (I124.3) zere todas as memórias.\nImplementação de RESET na unidade [20] no FB1 fazendo com que a entrada de Off (I124.1) zere todas as memórias.\n\n04/04/2024 - V2.0\nProgramação por Function Blocks \n\nEm todas as estações (exceto Master)\nFB1 - Inicialização\nFB2 - OPC UA Sensores\nFB3 - OPC UA Atuadores\n\nNo Master:\nFB1 - Inicialização\nFB2 - OPC-UA Master\nFB3 - OPC-UA Conveyour\nFB4 - OPC-UA Handling 1\nFB5 - OPC-UA Sorting\nFB6 - OPC-UA Testing\nFB7 - OPC-UA Distribution\nFB8 - OPC-UA handling 2\nFB9 - OPC-UA Processing\nFB10 - Conveyor Control\n\nProgamações Adicionias:\n[70] TESTING\nFB4 - Identified Delivery\nFB5 - Requested Delivery\n\n[80] DISTRIBUTION\nFB4 - Manual Delivery (Single)\nFB5 - Automatic Delivery (Continuous)\n\n[90] HANDLING 2\nFB4 - Cart 2 Delivery\nFB5 - Delivery 2 Cart",
        "x": 80,
        "y": 120,
        "wires": []
    },
    {
        "id": "a47f4c826bb0bbdf",
        "type": "comment",
        "z": "f6d07cedc827abbb",
        "name": "S7 Endpoint Variables: V6.12",
        "info": "V6.12 - 13/08/2025\nCorrigidas variáveis da estação Robot [30]\n\nV5.12 - 18/06/2025\nCorrigida o nome das TAGs das variáveis dos AS-i\n\nv5.11 - 10/06/2025\nIncluído as variáveis dos atuadores e feedback da Remota do Robot [30], pareando com a V6.6.2 do S7endpoint\n\nV5.10 - 05/06/2025\nIncluído as variáveis dos sensores do Remota do Robot [30], pareando com a V6.6.1 do s7endpoint\n\nV5.8 - 29/04/2025\nAcertado as variáveis que foram atualizadas para o AAS para a versão sem o AAS, deixando assim somente a V6.6 para o s7endpoint\n\nV6.6 - 25/04/2025\nAcertado as variáveis da estação [60] e Master [20] Sorting para o AAS\n\nV6.5 - 24/04/2025\nAcertado as variáveis da estação [50] Handling1 para o AAS\n\nV6.4 - 27/03/2025\nAcertado as variáveis da estação [100] Processing para o AAS\n\nV6.3 - 25/03/2025\nAcertado as variáveis da estação [90] Handling 2, [80] Distribution e [70] Testing para o AAS\nCorrigido posição das variáveis I90.1 a I90.3 após mudança física\n\nV5.7.3 - 28/11/2024\nCriadas Variáveis de controle da estação Testing [70]\n\nV5.7.2 - 26/11/2024\nInvertidas das posições I90.1 e I90.2 devido à alteração física\nCriada variável (QB83) para número de peças requisitadas\n\nV5.7.1 - 14/11/2024\nAcertadas as variáveis de controle para a estação Distribution [80]\n\nV5.7 - 14/08/2024\nInclusão das variáveis de simulação da estação Master [20]\nCriação das variáveis de controle para o Master [20] - Produção início ao fim.\n\nV5.6 - 08/08/2024\nInclusão das variáveis de controle da estação Sorting [60]\n\nV5.5 - 05/08/2024\nAtualização dos nomes das variáveis de On/Off para Start/Stop e do sinal O_80_Mag_Empty.\nAtualização das descrições de todas as variáveispara inglês\nImplementação das variáveis de simulação para as estações Conveyor [30], Handling 1 [50] e Sorting [60]\nAdequação dos nomes das variáveis para o AAS (com letras iniciando)\nAcertado o NameSpace para que as variáveis do RFID fiquem junto com as demais do Conveyor [30] (ns=12) e corrigido as demais estações.\n\nV5.4 - 31/07/2024\nImplementação de variáveis de controle para a estação Handling 2 [90] para o sentido de movimento do braço além de botão de Start\nImplementação de variáveis de controle para a estação Processing [100] para o modo de produção\nImplementação das variáveis de simulação para a estação Handling 2 [90] e Processing [100]\n\n\nV5.3 - 30/07/2024\nImplementação de variáveis de controle para a estação Testing [70] para o modo de funcionamento (Identified e Requested)\nImplementação de variáveis de controle para a estação Distribution [80] para o modo de funcionamento (Manual e Automatic) além de botão de Start\nImplementação das variáveis de simulação para a estação Testing [70] e Distribution [80]\n\n17/07/2024\nCorreção de problemas na estação Handling [90] que estava criando os sinais dos sensores (outputs) pois estavam duplicados com os Inputs.",
        "x": 140,
        "y": 160,
        "wires": []
    },
    {
        "id": "728f5cb6e9a7ba00",
        "type": "comment",
        "z": "f6d07cedc827abbb",
        "name": "Variables CVS Path",
        "info": "Linux / TV BOX:\n/root/ProjetoGemeo/AAS/Master/Variables.csv\n/root/ProjetoGemeo/AAS/Robot/Variables.csv\n/root/ProjetoGemeo/AAS/Handling1/Variables.csv\n/root/ProjetoGemeo/AAS/Sorting/Variables.csv\n/root/ProjetoGemeo/AAS/Testing/Variables.csv\n/root/ProjetoGemeo/AAS/Distribution/Variables.csv\n/root/ProjetoGemeo/AAS/Handling2/Variables.csv\n/root/ProjetoGemeo/AAS/Processing/Variables.csv\n\nWindows\nC:\\ProjetoGemeo\\AAS\\Master\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Robot\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Handling1\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Sorting\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Testing\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Distribution\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Handling2\\Variables.csv\nC:\\ProjetoGemeo\\AAS\\Processing\\Variables.csv",
        "x": 430,
        "y": 80,
        "wires": []
    },
    {
        "id": "beac185d234ab8ba",
        "type": "comment",
        "z": "f6d07cedc827abbb",
        "name": "nodeset.xml Path",
        "info": "Linux / TV BOX:\n/root/ProjetoGemeo/AAS/Master\n/root/ProjetoGemeo/AAS/Robot\n/root/ProjetoGemeo/AAS/Storage\n/root/ProjetoGemeo/AAS/Handling1\n/root/ProjetoGemeo/AAS/Sorting\n/root/ProjetoGemeo/AAS/Testing\n/root/ProjetoGemeo/AAS/Distribution\n/root/ProjetoGemeo/AAS/Handling2\n/root/ProjetoGemeo/AAS/Processing\n\nWindows\nC:\\ProjetoGemeo\\AAS\\Master\nC:\\ProjetoGemeo\\AAS\\Robot\nC:\\ProjetoGemeo\\AAS\\Storage\nC:\\ProjetoGemeo\\AAS\\Handling1\nC:\\ProjetoGemeo\\AAS\\Sorting\nC:\\ProjetoGemeo\\AAS\\Testing\nC:\\ProjetoGemeo\\AAS\\Distribution\nC:\\ProjetoGemeo\\AAS\\Handling2\nC:\\ProjetoGemeo\\AAS\\Processing",
        "x": 420,
        "y": 40,
        "wires": []
    },
    {
        "id": "5d68c70081a33eed",
        "type": "comment",
        "z": "f6d07cedc827abbb",
        "name": "users Path",
        "info": "Linux / TV BOX:\n/root/ProjetoGemeo/AAS/Master/users.json\n/root/ProjetoGemeo/AAS/Robot/users.json\n/root/ProjetoGemeo/AAS/Handling1/users.json\n/root/ProjetoGemeo/AAS/Sorting/users.json\n/root/ProjetoGemeo/AAS/Testing/users.json\n/root/ProjetoGemeo/AAS/Distribution/users.json\n/root/ProjetoGemeo/AAS/Handling2/users.json\n/root/ProjetoGemeo/AAS/Processing/users.json\n\nWindows\nC:\\ProjetoGemeo\\AAS\\Master\\users.json\nC:\\ProjetoGemeo\\AAS\\Robot\\users.json\nC:\\ProjetoGemeo\\AAS\\Handling1\\users.json\nC:\\ProjetoGemeo\\AAS\\Sorting\\users.json\nC:\\ProjetoGemeo\\AAS\\Testing\\users.json\nC:\\ProjetoGemeo\\AAS\\Distribution\\users.json\nC:\\ProjetoGemeo\\AAS\\Handling2\\users.json\nC:\\ProjetoGemeo\\AAS\\Processing\\users.json",
        "x": 400,
        "y": 160,
        "wires": []
    },
    {
        "id": "bd29b31ca5bc8db3",
        "type": "comment",
        "z": "f6d07cedc827abbb",
        "name": "Simulated Variables CVS Path",
        "info": "Linux / TV BOX:\n/root/ProjetoGemeo/AAS/Master/SimulatedVariables.csv\n/root/ProjetoGemeo/AAS/Robot/SimulatedVariables.csv\n/root/ProjetoGemeo/AAS/Handling1/SimulatedVariables.csv\n/root/ProjetoGemeo/AAS/Sorting/SimulatedVariables.csv\n/root/ProjetoGemeo/AAS/Testing/SimulatedVariables.csv\n/root/ProjetoGemeo/AAS/Distribution/SimulatedVariables.csv\n/root/ProjetoGemeo/AAS/Handling2/SimulatedVariables.csv\n/root/ProjetoGemeo/AAS/Processing/SimulatedVariables.csv\n\nWindows\nC:\\ProjetoGemeo\\AAS\\Master\\SimulatedVariables.csv\nC:\\ProjetoGemeo\\AAS\\Robot\\SimulatedVariables.csv\nC:\\ProjetoGemeo\\AAS\\Handling1\\SimulatedVariables.csv\nC:\\ProjetoGemeo\\AAS\\Sorting\\SimulatedVariables.csv\nC:\\ProjetoGemeo\\AAS\\Testing\\SimulatedVariables.csv\nC:\\ProjetoGemeo\\AAS\\Distribution\\SimulatedVariables.csv\nC:\\ProjetoGemeo\\AAS\\Handling2\\SimulatedVariables.csv\nC:\\ProjetoGemeo\\AAS\\Processing\\SimulatedVariables.csv",
        "x": 460,
        "y": 120,
        "wires": []
    },
    {
        "id": "5cb200f24b2668ea",
        "type": "s7 in",
        "z": "789bbace3c2df385",
        "g": "bfbf4c9db2b8522c",
        "endpoint": "a287d70eab823998",
        "mode": "all-split",
        "variable": "F_22_Led_On",
        "diff": true,
        "name": "S7 Connection",
        "x": 360,
        "y": 60,
        "wires": [
            [
                "fd336c36302abeb5"
            ]
        ]
    },
    {
        "id": "6afbc19bdfd5bed9",
        "type": "mqtt out",
        "z": "789bbace3c2df385",
        "g": "bfbf4c9db2b8522c",
        "name": "S7Variables",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4de211dc0a9652ab",
        "x": 710,
        "y": 60,
        "wires": []
    },
    {
        "id": "fd336c36302abeb5",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "bfbf4c9db2b8522c",
        "name": "Changes MSG",
        "func": "let Value\nlet TAG\n\nValue = msg.payload\nTAG = msg.topic\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 60,
        "wires": [
            [
                "6afbc19bdfd5bed9",
                "3505e7fc203ac832"
            ]
        ]
    },
    {
        "id": "3505e7fc203ac832",
        "type": "debug",
        "z": "789bbace3c2df385",
        "g": "bfbf4c9db2b8522c",
        "name": "S7 Variables",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 120,
        "wires": []
    },
    {
        "id": "0765722ba5e4222c",
        "type": "link in",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "Master [20]",
        "links": [
            "09da1394c125df30"
        ],
        "x": 75,
        "y": 500,
        "wires": [
            [
                "2a9997e5c21af802",
                "dfec9371bbda4180",
                "fce8efdba69b1b23",
                "36c67df168c1a0b9",
                "17674006d3372bf6",
                "1cec931aeca20682",
                "7378b98e5a545e2e",
                "096f2bfad5ce9fae",
                "f8c64a1231c96993",
                "8db4b5da622baa81",
                "e16e8ea5699c1995",
                "ea0e0967c108d7cc",
                "6ca27e4dd8d8f706",
                "ae1433f21040f73e",
                "bfbc02bc601557f8"
            ]
        ]
    },
    {
        "id": "2a9997e5c21af802",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "I_20_Led_On",
        "func": "if (msg.topic === \"I_20_Led_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_20_Led_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 220,
        "wires": [
            [
                "c82d826e9a2fa036"
            ]
        ]
    },
    {
        "id": "c82d826e9a2fa036",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "I_20_Led_On",
        "name": "I_20_Led_On",
        "x": 420,
        "y": 220,
        "wires": []
    },
    {
        "id": "53d1b907097a048a",
        "type": "mqtt in",
        "z": "789bbace3c2df385",
        "g": "f9312b90064424f9",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "4de211dc0a9652ab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 950,
        "y": 60,
        "wires": [
            [
                "c789da41b2f32677"
            ]
        ]
    },
    {
        "id": "c789da41b2f32677",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "f9312b90064424f9",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 60,
        "wires": [
            [
                "09da1394c125df30"
            ]
        ]
    },
    {
        "id": "09da1394c125df30",
        "type": "link out",
        "z": "789bbace3c2df385",
        "g": "f9312b90064424f9",
        "name": "S7 Variables",
        "mode": "link",
        "links": [
            "0765722ba5e4222c",
            "01a42345b4428662",
            "9dcb81f1f3849c2b",
            "689a4db64c1ccf82",
            "e7ae67d676d3c9a6",
            "ab51064132e50338",
            "0e5a4c5ab1c943de",
            "89d5b71aac4a4ee5"
        ],
        "x": 1275,
        "y": 60,
        "wires": []
    },
    {
        "id": "dfec9371bbda4180",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "I_20_Led_Off",
        "func": "if (msg.topic === \"I_20_Led_Off\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_20_Led_Off\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 260,
        "wires": [
            [
                "ccc5785c1b8b943b"
            ]
        ]
    },
    {
        "id": "ccc5785c1b8b943b",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "I_20_Led_Off",
        "name": "I_20_Led_Off",
        "x": 420,
        "y": 260,
        "wires": []
    },
    {
        "id": "fce8efdba69b1b23",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "I_20_Conveyor",
        "func": "if (msg.topic === \"I_20_Conveyor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_20_Conveyor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 300,
        "wires": [
            [
                "22f34f697ebf2aef"
            ]
        ]
    },
    {
        "id": "22f34f697ebf2aef",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "I_20_Conveyor",
        "name": "I_20_Conveyor",
        "x": 420,
        "y": 300,
        "wires": []
    },
    {
        "id": "36c67df168c1a0b9",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "I_24_Cart_Test",
        "func": "if (msg.topic === \"I_24_Cart_Test\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_24_Cart_Test\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 340,
        "wires": [
            [
                "937c628b79f1a7b9"
            ]
        ]
    },
    {
        "id": "937c628b79f1a7b9",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "I_24_Cart_Test",
        "name": "I_24_Cart_Test",
        "x": 420,
        "y": 340,
        "wires": []
    },
    {
        "id": "1cec931aeca20682",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "I_25_Cart_Proc",
        "func": "if (msg.topic === \"I_25_Cart_Proc\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_25_Cart_Proc\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 420,
        "wires": [
            [
                "cfba58092a3e675a"
            ]
        ]
    },
    {
        "id": "cfba58092a3e675a",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "I_25_Cart_Proc",
        "name": "I_25_Cart_Proc",
        "x": 420,
        "y": 420,
        "wires": []
    },
    {
        "id": "17674006d3372bf6",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "C_24_Request",
        "func": "if (msg.topic === \"C_24_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_24_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 380,
        "wires": [
            [
                "cf5091844cb1cb02"
            ]
        ]
    },
    {
        "id": "cf5091844cb1cb02",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "C_24_Request",
        "name": "C_24_Request",
        "x": 420,
        "y": 380,
        "wires": []
    },
    {
        "id": "096f2bfad5ce9fae",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "I_26_Cart_Visi",
        "func": "if (msg.topic === \"I_26_Cart_Visi\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_26_Cart_Visi\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 500,
        "wires": [
            [
                "dfd6edc74adce56d"
            ]
        ]
    },
    {
        "id": "dfd6edc74adce56d",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "I_26_Cart_Visi",
        "name": "I_26_Cart_Visi",
        "x": 420,
        "y": 500,
        "wires": []
    },
    {
        "id": "8db4b5da622baa81",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "I_27_Cart_Robo",
        "func": "if (msg.topic === \"I_27_Cart_Robo\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_27_Cart_Robo\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 580,
        "wires": [
            [
                "7f0ea1510ca5975a"
            ]
        ]
    },
    {
        "id": "7f0ea1510ca5975a",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "I_27_Cart_Robo",
        "name": "I_27_Cart_Robo",
        "x": 420,
        "y": 580,
        "wires": []
    },
    {
        "id": "ea0e0967c108d7cc",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "I_28_Cart_Stor",
        "func": "if (msg.topic === \"I_28_Cart_Stor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_28_Cart_Stor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 660,
        "wires": [
            [
                "11cd1a9722fb15db"
            ]
        ]
    },
    {
        "id": "11cd1a9722fb15db",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "I_28_Cart_Stor",
        "name": "I_28_Cart_Stor",
        "x": 420,
        "y": 660,
        "wires": []
    },
    {
        "id": "ae1433f21040f73e",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "I_29_Cart_Sort",
        "func": "if (msg.topic === \"I_29_Cart_Sort\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_29_Cart_Sort\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 740,
        "wires": [
            [
                "e0b63946a8499461"
            ]
        ]
    },
    {
        "id": "e0b63946a8499461",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "I_29_Cart_Sort",
        "name": "I_29_Cart_Sort",
        "x": 420,
        "y": 740,
        "wires": []
    },
    {
        "id": "7378b98e5a545e2e",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "C_25_Request",
        "func": "if (msg.topic === \"C_25_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_25_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 460,
        "wires": [
            [
                "4e4d3f160225652b"
            ]
        ]
    },
    {
        "id": "4e4d3f160225652b",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "C_25_Request",
        "name": "C_25_Request",
        "x": 420,
        "y": 460,
        "wires": []
    },
    {
        "id": "f8c64a1231c96993",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "C_26_Request",
        "func": "if (msg.topic === \"C_26_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_26_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 540,
        "wires": [
            [
                "92df757f57b0e39c"
            ]
        ]
    },
    {
        "id": "92df757f57b0e39c",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "C_26_Request",
        "name": "C_26_Request",
        "x": 420,
        "y": 540,
        "wires": []
    },
    {
        "id": "e16e8ea5699c1995",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "C_27_Request",
        "func": "if (msg.topic === \"C_27_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_27_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 620,
        "wires": [
            [
                "63fdb257e65a2726"
            ]
        ]
    },
    {
        "id": "63fdb257e65a2726",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "C_27_Request",
        "name": "C_27_Request",
        "x": 420,
        "y": 620,
        "wires": []
    },
    {
        "id": "6ca27e4dd8d8f706",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "C_28_Request",
        "func": "if (msg.topic === \"C_28_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_28_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 700,
        "wires": [
            [
                "d5d196e5768bbc56"
            ]
        ]
    },
    {
        "id": "d5d196e5768bbc56",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "C_28_Request",
        "name": "C_28_Request",
        "x": 420,
        "y": 700,
        "wires": []
    },
    {
        "id": "bfbc02bc601557f8",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "name": "C_29_Request",
        "func": "if (msg.topic === \"C_29_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_29_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 780,
        "wires": [
            [
                "b1e1665447aa0967"
            ]
        ]
    },
    {
        "id": "b1e1665447aa0967",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ed38fd3cda23b5f7",
        "endpoint": "a287d70eab823998",
        "variable": "C_29_Request",
        "name": "C_29_Request",
        "x": 420,
        "y": 780,
        "wires": []
    },
    {
        "id": "7529b4682593f575",
        "type": "aedes broker",
        "z": "789bbace3c2df385",
        "g": "2a4c34d4f3b195c3",
        "name": "S7 Variables",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "persistence_bind": "memory",
        "dburl": "",
        "usetls": false,
        "x": 130,
        "y": 60,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "52a4d08ec2792eb6",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "endpoint": "a287d70eab823998",
        "variable": "I_30_Cover_Cyl",
        "name": "I_30_Cover_Cyl",
        "x": 960,
        "y": 420,
        "wires": []
    },
    {
        "id": "227140cfbdafb91f",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "endpoint": "a287d70eab823998",
        "variable": "I_30_Led_Start",
        "name": "I_30_Led_Start",
        "x": 960,
        "y": 220,
        "wires": []
    },
    {
        "id": "994e8ec6c9e9b65c",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "endpoint": "a287d70eab823998",
        "variable": "I_30_Led_Reset",
        "name": "I_30_Led_Reset",
        "x": 960,
        "y": 260,
        "wires": []
    },
    {
        "id": "af07cf61df5b2aa3",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "endpoint": "a287d70eab823998",
        "variable": "I_30_Led_Extra1",
        "name": "I_30_Led_Extra1",
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "321375de1bdec664",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "endpoint": "a287d70eab823998",
        "variable": "I_30_Led_Extra2",
        "name": "I_30_Led_Extra2",
        "x": 970,
        "y": 340,
        "wires": []
    },
    {
        "id": "7566704ffaae137d",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "endpoint": "a287d70eab823998",
        "variable": "I_30_Spring_Cyl",
        "name": "I_30_Spring_Cyl",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "b7e8581e81b71437",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "name": "I_30_Led_Start",
        "func": "if (msg.topic === \"I_30_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_30_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 220,
        "wires": [
            [
                "227140cfbdafb91f"
            ]
        ]
    },
    {
        "id": "90c1f91120c2978c",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "name": "I_30_Led_Reset",
        "func": "if (msg.topic === \"I_30_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_30_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 260,
        "wires": [
            [
                "994e8ec6c9e9b65c"
            ]
        ]
    },
    {
        "id": "7fe915e6d624a59f",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "name": "I_30_Led_Extra1",
        "func": "if (msg.topic === \"I_30_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_30_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 300,
        "wires": [
            [
                "af07cf61df5b2aa3"
            ]
        ]
    },
    {
        "id": "89734d2973aefc28",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "name": "I_30_Led_Extra2",
        "func": "if (msg.topic === \"I_30_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_30_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 340,
        "wires": [
            [
                "321375de1bdec664"
            ]
        ]
    },
    {
        "id": "0278a6e22e98bc66",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "name": "I_30_Spring_Cyl",
        "func": "if (msg.topic === \"I_30_Spring_Cyl\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_30_Spring_Cyl\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 380,
        "wires": [
            [
                "7566704ffaae137d"
            ]
        ]
    },
    {
        "id": "388666e06346cafe",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "name": "I_30_Cover_Cyl",
        "func": "if (msg.topic === \"I_30_Cover_Cyl\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_30_Cover_Cyl\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 420,
        "wires": [
            [
                "52a4d08ec2792eb6"
            ]
        ]
    },
    {
        "id": "01a42345b4428662",
        "type": "link in",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "name": "Robot [30]",
        "links": [
            "09da1394c125df30"
        ],
        "x": 595,
        "y": 360,
        "wires": [
            [
                "7fe915e6d624a59f",
                "90c1f91120c2978c",
                "b7e8581e81b71437",
                "89734d2973aefc28",
                "0278a6e22e98bc66",
                "388666e06346cafe",
                "12d8d71656ae0257",
                "78ba478363b2b1f0"
            ]
        ]
    },
    {
        "id": "dd5baee9ab2cbf0d",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "I_50_Claw_2_Del",
        "name": "I_50_Claw_2_Del",
        "x": 1550,
        "y": 220,
        "wires": []
    },
    {
        "id": "ccf283e8f079e023",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "I_50_Claw_2_Cart",
        "name": "I_50_Claw_2_Cart",
        "x": 1550,
        "y": 260,
        "wires": []
    },
    {
        "id": "5336561fc433c0c9",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "I_50_Claw_Down",
        "name": "I_50_Claw_Down",
        "x": 1550,
        "y": 300,
        "wires": []
    },
    {
        "id": "a72c530309865a25",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "I_50_Close_Claw",
        "name": "I_50_Close_Claw",
        "x": 1550,
        "y": 340,
        "wires": []
    },
    {
        "id": "513fb6a5ee3d55e1",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "I_51_Led_Start",
        "name": "I_51_Led_Start",
        "x": 1540,
        "y": 380,
        "wires": []
    },
    {
        "id": "db48c79597269e34",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "I_51_Led_Reset",
        "name": "I_51_Led_Reset",
        "x": 1540,
        "y": 420,
        "wires": []
    },
    {
        "id": "cb51af8c3f743502",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "I_51_Led_Extra1",
        "name": "I_51_Led_Extra1",
        "x": 1550,
        "y": 460,
        "wires": []
    },
    {
        "id": "86f53689822587d4",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "I_51_Led_Extra2",
        "name": "I_51_Led_Extra2",
        "x": 1550,
        "y": 500,
        "wires": []
    },
    {
        "id": "6575e1eee224a196",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "I_51_Panel_O4",
        "name": "I_51_Panel_O4",
        "x": 1540,
        "y": 540,
        "wires": []
    },
    {
        "id": "ccdae4b2351af933",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "I_51_Panel_O5",
        "name": "I_51_Panel_O5",
        "x": 1540,
        "y": 580,
        "wires": []
    },
    {
        "id": "d44fb8f3ea2c9659",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "I_51_Panel_O6",
        "name": "I_51_Panel_O6",
        "x": 1540,
        "y": 620,
        "wires": []
    },
    {
        "id": "41ccef75b8ed0b9b",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "I_51_Panel_O7",
        "name": "I_51_Panel_O7",
        "x": 1540,
        "y": 660,
        "wires": []
    },
    {
        "id": "cff5bfad6e8e6ffe",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "I_50_Claw_2_Del",
        "func": "if (msg.topic === \"I_50_Claw_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_50_Claw_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 220,
        "wires": [
            [
                "dd5baee9ab2cbf0d"
            ]
        ]
    },
    {
        "id": "e7391e304a747f0f",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "I_50_Claw_2_Cart",
        "func": "if (msg.topic === \"I_50_Claw_2_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_50_Claw_2_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 260,
        "wires": [
            [
                "ccf283e8f079e023"
            ]
        ]
    },
    {
        "id": "808650a484d4620b",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "I_50_Claw_Down",
        "func": "if (msg.topic === \"I_50_Claw_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_50_Claw_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 300,
        "wires": [
            [
                "5336561fc433c0c9"
            ]
        ]
    },
    {
        "id": "e26df4d364fdb46d",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "I_50_Close_Claw",
        "func": "if (msg.topic === \"I_50_Close_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_50_Close_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 340,
        "wires": [
            [
                "a72c530309865a25"
            ]
        ]
    },
    {
        "id": "0e4e79d470673e08",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "I_51_Led_Start",
        "func": "if (msg.topic === \"I_51_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 380,
        "wires": [
            [
                "513fb6a5ee3d55e1"
            ]
        ]
    },
    {
        "id": "2535774ee5ec9fc1",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "I_51_Led_Reset",
        "func": "if (msg.topic === \"I_51_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 420,
        "wires": [
            [
                "db48c79597269e34"
            ]
        ]
    },
    {
        "id": "e045ba27de27cdbc",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "I_51_Led_Extra1",
        "func": "if (msg.topic === \"I_51_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 460,
        "wires": [
            [
                "cb51af8c3f743502"
            ]
        ]
    },
    {
        "id": "417245fea02a22fa",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "I_51_Led_Extra2",
        "func": "if (msg.topic === \"I_51_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 500,
        "wires": [
            [
                "86f53689822587d4"
            ]
        ]
    },
    {
        "id": "72780160e3149c97",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "I_51_Panel_O4",
        "func": "if (msg.topic === \"I_51_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 540,
        "wires": [
            [
                "6575e1eee224a196"
            ]
        ]
    },
    {
        "id": "ed0ef13f0dfa2359",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "I_51_Panel_O5",
        "func": "if (msg.topic === \"I_51_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 580,
        "wires": [
            [
                "ccdae4b2351af933"
            ]
        ]
    },
    {
        "id": "02095ae4b5d8f9d7",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "I_51_Panel_O6",
        "func": "if (msg.topic === \"I_51_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 620,
        "wires": [
            [
                "d44fb8f3ea2c9659"
            ]
        ]
    },
    {
        "id": "055f0f83cd2949f8",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "I_51_Panel_O7",
        "func": "if (msg.topic === \"I_51_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_51_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 660,
        "wires": [
            [
                "41ccef75b8ed0b9b"
            ]
        ]
    },
    {
        "id": "9dcb81f1f3849c2b",
        "type": "link in",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "Handling [50]",
        "links": [
            "09da1394c125df30"
        ],
        "x": 1155,
        "y": 480,
        "wires": [
            [
                "cff5bfad6e8e6ffe",
                "e7391e304a747f0f",
                "808650a484d4620b",
                "e26df4d364fdb46d",
                "0e4e79d470673e08",
                "2535774ee5ec9fc1",
                "e045ba27de27cdbc",
                "417245fea02a22fa",
                "72780160e3149c97",
                "ed0ef13f0dfa2359",
                "02095ae4b5d8f9d7",
                "055f0f83cd2949f8",
                "e4b2bc61b95cedee",
                "88b0de12a078cbb4",
                "2c9e97d090c5d96e"
            ]
        ]
    },
    {
        "id": "33f1c5d84b751472",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "C_55_Cart2Del",
        "name": "C_55_Cart2Del",
        "x": 1540,
        "y": 740,
        "wires": []
    },
    {
        "id": "43fffc3f803952b4",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "C_55_Del2Cart",
        "name": "C_55_Del2Cart",
        "x": 1540,
        "y": 780,
        "wires": []
    },
    {
        "id": "e4b2bc61b95cedee",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "C_55_Cart2Del",
        "func": "if (msg.topic === \"C_55_Cart2Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_55_Cart2Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 740,
        "wires": [
            [
                "33f1c5d84b751472"
            ]
        ]
    },
    {
        "id": "88b0de12a078cbb4",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "C_55_Del2Cart",
        "func": "if (msg.topic === \"C_55_Del2Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_55_Del2Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 780,
        "wires": [
            [
                "43fffc3f803952b4"
            ]
        ]
    },
    {
        "id": "e973cafde5467bdd",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "I_60_Conveyor",
        "name": "I_60_Conveyor",
        "x": 2120,
        "y": 220,
        "wires": []
    },
    {
        "id": "e5acb8170eb64f92",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "I_60_P1",
        "name": "I_60_P1",
        "x": 2100,
        "y": 260,
        "wires": []
    },
    {
        "id": "e3094110547f2b42",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "I_60_P2",
        "name": "I_60_P2",
        "x": 2100,
        "y": 300,
        "wires": []
    },
    {
        "id": "fd2f6175bb45b18f",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "I_60_Identify",
        "name": "I_60_Identify",
        "x": 2110,
        "y": 340,
        "wires": []
    },
    {
        "id": "ca4436c0e169aa21",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "I_61_Led_Start",
        "name": "I_61_Led_Start",
        "x": 2120,
        "y": 380,
        "wires": []
    },
    {
        "id": "3fec4591327ad775",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "I_61_Led_Reset",
        "name": "I_61_Led_Reset",
        "x": 2120,
        "y": 420,
        "wires": []
    },
    {
        "id": "b322d1493e345da3",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "I_61_Led_Extra1",
        "name": "I_61_Led_Extra1",
        "x": 2130,
        "y": 460,
        "wires": []
    },
    {
        "id": "d8f61a4179988ace",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "I_61_Led_Extra2",
        "name": "I_61_Led_Extra2",
        "x": 2130,
        "y": 500,
        "wires": []
    },
    {
        "id": "162f4fe147f59bc4",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "I_61_Panel_O4",
        "name": "I_61_Panel_O4",
        "x": 2120,
        "y": 540,
        "wires": []
    },
    {
        "id": "2b2c3b529196d654",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "I_61_Panel_O5",
        "name": "I_61_Panel_O5",
        "x": 2120,
        "y": 580,
        "wires": []
    },
    {
        "id": "e7b2d2096fea3778",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "I_61_Panel_O6",
        "name": "I_61_Panel_O6",
        "x": 2120,
        "y": 620,
        "wires": []
    },
    {
        "id": "ba5ee1e5dadafcc5",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "I_61_Panel_O7",
        "name": "I_61_Panel_O7",
        "x": 2120,
        "y": 660,
        "wires": []
    },
    {
        "id": "d3f252f91ece2a24",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "I_60_Conveyor",
        "func": "if (msg.topic === \"I_60_Conveyor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_60_Conveyor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 220,
        "wires": [
            [
                "e973cafde5467bdd"
            ]
        ]
    },
    {
        "id": "4073a22b7c120ca1",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "I_60_P1",
        "func": "if (msg.topic === \"I_60_P1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_60_P1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 260,
        "wires": [
            [
                "e5acb8170eb64f92"
            ]
        ]
    },
    {
        "id": "2f7ea3f304faccdd",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "I_60_P2",
        "func": "if (msg.topic === \"I_60_P2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_60_P2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 300,
        "wires": [
            [
                "e3094110547f2b42"
            ]
        ]
    },
    {
        "id": "a982e806550f30a9",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "I_60_Identify",
        "func": "if (msg.topic === \"I_60_Identify\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_60_Identify\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 340,
        "wires": [
            [
                "fd2f6175bb45b18f"
            ]
        ]
    },
    {
        "id": "441a5bce9c13903e",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "I_61_Led_Start",
        "func": "if (msg.topic === \"I_61_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 380,
        "wires": [
            [
                "ca4436c0e169aa21"
            ]
        ]
    },
    {
        "id": "af012887bf6103dd",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "I_61_Led_Reset",
        "func": "if (msg.topic === \"I_61_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 420,
        "wires": [
            [
                "3fec4591327ad775"
            ]
        ]
    },
    {
        "id": "674e0452df8ce428",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "I_61_Led_Extra1",
        "func": "if (msg.topic === \"I_61_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 460,
        "wires": [
            [
                "b322d1493e345da3"
            ]
        ]
    },
    {
        "id": "3317970b018ebb5d",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "I_61_Led_Extra2",
        "func": "if (msg.topic === \"I_61_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 500,
        "wires": [
            [
                "d8f61a4179988ace"
            ]
        ]
    },
    {
        "id": "49121f7f5a7452b4",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "I_61_Panel_O4",
        "func": "if (msg.topic === \"I_61_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 540,
        "wires": [
            [
                "162f4fe147f59bc4"
            ]
        ]
    },
    {
        "id": "4def3acc508a15b6",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "I_61_Panel_O5",
        "func": "if (msg.topic === \"I_61_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 580,
        "wires": [
            [
                "2b2c3b529196d654"
            ]
        ]
    },
    {
        "id": "0f4907b8c462bfb0",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "I_61_Panel_O6",
        "func": "if (msg.topic === \"I_61_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 620,
        "wires": [
            [
                "e7b2d2096fea3778"
            ]
        ]
    },
    {
        "id": "1f49c813fdefc29b",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "I_61_Panel_O7",
        "func": "if (msg.topic === \"I_61_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_61_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 660,
        "wires": [
            [
                "ba5ee1e5dadafcc5"
            ]
        ]
    },
    {
        "id": "689a4db64c1ccf82",
        "type": "link in",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "Sorting [60]",
        "links": [
            "09da1394c125df30"
        ],
        "x": 1735,
        "y": 560,
        "wires": [
            [
                "d3f252f91ece2a24",
                "4073a22b7c120ca1",
                "2f7ea3f304faccdd",
                "a982e806550f30a9",
                "441a5bce9c13903e",
                "af012887bf6103dd",
                "674e0452df8ce428",
                "3317970b018ebb5d",
                "49121f7f5a7452b4",
                "4def3acc508a15b6",
                "0f4907b8c462bfb0",
                "1f49c813fdefc29b",
                "b8838d230cfa6bd5",
                "aa251d5957e8a2d8",
                "04ea64d3b04ea7e6",
                "9e0fb092e72eda30",
                "5515451dba9a02f0",
                "04e6613c01d1eaa5"
            ]
        ]
    },
    {
        "id": "b8838d230cfa6bd5",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "C_65_RBS_Output",
        "func": "if (msg.topic === \"C_65_RBS_Output\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_RBS_Output\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 700,
        "wires": [
            [
                "7e41338918e26262"
            ]
        ]
    },
    {
        "id": "aa251d5957e8a2d8",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "C_65_RSB_Output",
        "func": "if (msg.topic === \"C_65_RSB_Output\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_RSB_Output\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 740,
        "wires": [
            [
                "10cefde783123211"
            ]
        ]
    },
    {
        "id": "7e41338918e26262",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "C_65_RBS_Output",
        "name": "C_65_RBS_Output",
        "x": 2130,
        "y": 700,
        "wires": []
    },
    {
        "id": "10cefde783123211",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "C_65_RSB_Output",
        "name": "C_65_RSB_Output",
        "x": 2130,
        "y": 740,
        "wires": []
    },
    {
        "id": "e5a6740909b618d7",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "C_65_BRS_Output",
        "name": "C_65_BRS_Output",
        "x": 2130,
        "y": 780,
        "wires": []
    },
    {
        "id": "8e05bbefbe829371",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "C_65_BSR_Output",
        "name": "C_65_BSR_Output",
        "x": 2130,
        "y": 820,
        "wires": []
    },
    {
        "id": "013833bdd5f57db0",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "C_65_SRB_Output",
        "name": "C_65_SRB_Output",
        "x": 2130,
        "y": 860,
        "wires": []
    },
    {
        "id": "48132fd317420b9c",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "endpoint": "a287d70eab823998",
        "variable": "C_65_SBR_Output",
        "name": "C_65_SBR_Output",
        "x": 2130,
        "y": 900,
        "wires": []
    },
    {
        "id": "04ea64d3b04ea7e6",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "C_65_BRS_Output",
        "func": "if (msg.topic === \"C_65_BRS_Output\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_BRS_Output\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 780,
        "wires": [
            [
                "e5a6740909b618d7"
            ]
        ]
    },
    {
        "id": "9e0fb092e72eda30",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "C_65_BSR_Output",
        "func": "if (msg.topic === \"C_65_BSR_Output\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_BSR_Output\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 820,
        "wires": [
            [
                "8e05bbefbe829371"
            ]
        ]
    },
    {
        "id": "5515451dba9a02f0",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "C_65_SRB_Output",
        "func": "if (msg.topic === \"C_65_SRB_Output\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_SRB_Output\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 860,
        "wires": [
            [
                "013833bdd5f57db0"
            ]
        ]
    },
    {
        "id": "04e6613c01d1eaa5",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "dba5bc648668d048",
        "name": "C_65_SBR_Output",
        "func": "if (msg.topic === \"C_65_SBR_Output\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_SBR_Output\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 900,
        "wires": [
            [
                "48132fd317420b9c"
            ]
        ]
    },
    {
        "id": "ea3d5038889b36e9",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "I_70_Elev_Down",
        "name": "I_70_Elev_Down",
        "x": 2710,
        "y": 220,
        "wires": []
    },
    {
        "id": "242dcdd9d1c52a59",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "I_70_Elev_Up",
        "name": "I_70_Elev_Up",
        "x": 2700,
        "y": 260,
        "wires": []
    },
    {
        "id": "fc5f12ca7e44718b",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "I_70_Eject_Part",
        "name": "I_70_Eject_Part",
        "x": 2700,
        "y": 300,
        "wires": []
    },
    {
        "id": "d25b4439a8b397bb",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "I_70_Air_On",
        "name": "I_70_Air_On",
        "x": 2690,
        "y": 340,
        "wires": []
    },
    {
        "id": "af8a4d2ac4e4b5ea",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "I_71_Led_Start",
        "name": "I_71_Led_Start",
        "x": 2700,
        "y": 380,
        "wires": []
    },
    {
        "id": "b90ac946093d4bcd",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "I_71_Led_Reset",
        "name": "I_71_Led_Reset",
        "x": 2700,
        "y": 420,
        "wires": []
    },
    {
        "id": "b004fc9fa76615fa",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "I_71_Led_Extra1",
        "name": "I_71_Led_Extra1",
        "x": 2710,
        "y": 460,
        "wires": []
    },
    {
        "id": "6365dfa6ca424a3f",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "I_71_Led_Extra2",
        "name": "I_71_Led_Extra2",
        "x": 2710,
        "y": 500,
        "wires": []
    },
    {
        "id": "80b4c273f5efc80e",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "I_71_Panel_O4",
        "name": "I_71_Panel_O4",
        "x": 2700,
        "y": 540,
        "wires": []
    },
    {
        "id": "11736570b1376806",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "I_71_Panel_O5",
        "name": "I_71_Panel_O5",
        "x": 2700,
        "y": 580,
        "wires": []
    },
    {
        "id": "7b04942b7fa8076c",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "I_71_Panel_O6",
        "name": "I_71_Panel_O6",
        "x": 2700,
        "y": 620,
        "wires": []
    },
    {
        "id": "33c0f3b822bb3e6f",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "I_71_Panel_O7",
        "name": "I_71_Panel_O7",
        "x": 2700,
        "y": 660,
        "wires": []
    },
    {
        "id": "f28154125732171e",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_70_Elev_Down",
        "func": "if (msg.topic === \"I_70_Elev_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_70_Elev_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 220,
        "wires": [
            [
                "ea3d5038889b36e9"
            ]
        ]
    },
    {
        "id": "08fef73d42b7d8c4",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_70_Elev_Up",
        "func": "if (msg.topic === \"I_70_Elev_Up\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_70_Elev_Up\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 260,
        "wires": [
            [
                "242dcdd9d1c52a59"
            ]
        ]
    },
    {
        "id": "f0682f8de52c72f7",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_70_Eject_Part",
        "func": "if (msg.topic === \"I_70_Eject_Part\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_70_Eject_Part\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 300,
        "wires": [
            [
                "fc5f12ca7e44718b"
            ]
        ]
    },
    {
        "id": "3591cb8c121e6b21",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_70_Air_On",
        "func": "if (msg.topic === \"I_70_Air_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_70_Air_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 340,
        "wires": [
            [
                "d25b4439a8b397bb"
            ]
        ]
    },
    {
        "id": "3387c0efa4da56ce",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_71_Led_Start",
        "func": "if (msg.topic === \"I_71_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 380,
        "wires": [
            [
                "af8a4d2ac4e4b5ea"
            ]
        ]
    },
    {
        "id": "8c8a7568be776da6",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_71_Led_Reset",
        "func": "if (msg.topic === \"I_71_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 420,
        "wires": [
            [
                "b90ac946093d4bcd"
            ]
        ]
    },
    {
        "id": "38bb5b5ab962a896",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_71_Led_Extra1",
        "func": "if (msg.topic === \"I_71_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 460,
        "wires": [
            [
                "b004fc9fa76615fa"
            ]
        ]
    },
    {
        "id": "2939dc3e83eba9ac",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_71_Led_Extra2",
        "func": "if (msg.topic === \"I_71_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 500,
        "wires": [
            [
                "6365dfa6ca424a3f"
            ]
        ]
    },
    {
        "id": "ab6d903a02ef413f",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_71_Panel_O4",
        "func": "if (msg.topic === \"I_71_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 540,
        "wires": [
            [
                "80b4c273f5efc80e"
            ]
        ]
    },
    {
        "id": "bb6b41c5bc446fa9",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_71_Panel_O5",
        "func": "if (msg.topic === \"I_71_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 580,
        "wires": [
            [
                "11736570b1376806"
            ]
        ]
    },
    {
        "id": "f0a318247355ab97",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_71_Panel_O6",
        "func": "if (msg.topic === \"I_71_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 620,
        "wires": [
            [
                "7b04942b7fa8076c"
            ]
        ]
    },
    {
        "id": "7d25dc78f1800100",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_71_Panel_O7",
        "func": "if (msg.topic === \"I_71_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_71_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 660,
        "wires": [
            [
                "33c0f3b822bb3e6f"
            ]
        ]
    },
    {
        "id": "e7ae67d676d3c9a6",
        "type": "link in",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "Testing [70]",
        "links": [
            "09da1394c125df30"
        ],
        "x": 2315,
        "y": 520,
        "wires": [
            [
                "f28154125732171e",
                "08fef73d42b7d8c4",
                "f0682f8de52c72f7",
                "3591cb8c121e6b21",
                "3387c0efa4da56ce",
                "8c8a7568be776da6",
                "38bb5b5ab962a896",
                "2939dc3e83eba9ac",
                "ab6d903a02ef413f",
                "bb6b41c5bc446fa9",
                "f0a318247355ab97",
                "7d25dc78f1800100",
                "140f93bca2f0abf0",
                "a6ea7d41bc145d0c",
                "b978d9578ebdc941",
                "9948b9386b181a4e"
            ]
        ]
    },
    {
        "id": "140f93bca2f0abf0",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_75_RQ_Delivery1",
        "func": "if (msg.topic === \"I_75_RQ_Delivery1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_75_RQ_Delivery1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 700,
        "wires": [
            [
                "6409dab1c027eb15"
            ]
        ]
    },
    {
        "id": "a6ea7d41bc145d0c",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "I_75_RQ_Delivery2",
        "func": "if (msg.topic === \"I_75_RQ_Delivery2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_75_RQ_Delivery2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 740,
        "wires": [
            [
                "c09defc770d64a3d"
            ]
        ]
    },
    {
        "id": "b978d9578ebdc941",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "C_75_Identified",
        "func": "if (msg.topic === \"C_75_Identified\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_Identified\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 780,
        "wires": [
            [
                "3ce622ec356c0b04"
            ]
        ]
    },
    {
        "id": "9948b9386b181a4e",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "name": "C_75_Requested",
        "func": "if (msg.topic === \"C_75_Requested\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_Requested\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 820,
        "wires": [
            [
                "df0e1e8f284f902b"
            ]
        ]
    },
    {
        "id": "6409dab1c027eb15",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "",
        "name": "I_75_RQ_Delivery1",
        "x": 2710,
        "y": 700,
        "wires": []
    },
    {
        "id": "c09defc770d64a3d",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "",
        "name": "I_75_RQ_Delivery2",
        "x": 2710,
        "y": 740,
        "wires": []
    },
    {
        "id": "3ce622ec356c0b04",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "C_75_Identified",
        "name": "C_75_Identified",
        "x": 2700,
        "y": 780,
        "wires": []
    },
    {
        "id": "df0e1e8f284f902b",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0dda248161f8d090",
        "endpoint": "a287d70eab823998",
        "variable": "C_75_Requested",
        "name": "C_75_Requested",
        "x": 2710,
        "y": 820,
        "wires": []
    },
    {
        "id": "5cc8851569f60adb",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "I_80_Pist_Adv",
        "name": "I_80_Pist_Adv",
        "x": 3280,
        "y": 220,
        "wires": []
    },
    {
        "id": "3030c93199b84526",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "I_80_Suction_On",
        "name": "I_80_Suction_On",
        "x": 3290,
        "y": 260,
        "wires": []
    },
    {
        "id": "92177fa4196659e7",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "I_80_Suction_Off",
        "name": "I_80_Suction_Off",
        "x": 3290,
        "y": 300,
        "wires": []
    },
    {
        "id": "fd5607646f2a7f65",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "I_80_Arm_2_Del",
        "name": "I_80_Arm_2_Del",
        "x": 3290,
        "y": 340,
        "wires": []
    },
    {
        "id": "efe5411e1b6f2109",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "I_80_Arm_2_Mag",
        "name": "I_80_Arm_2_Mag",
        "x": 3290,
        "y": 380,
        "wires": []
    },
    {
        "id": "c404bcb0f2a4d872",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "I_81_Led_Start",
        "name": "I_81_Led_Start",
        "x": 3280,
        "y": 420,
        "wires": []
    },
    {
        "id": "4dfc39d53d683898",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "I_81_Led_Reset",
        "name": "I_81_Led_Reset",
        "x": 3280,
        "y": 460,
        "wires": []
    },
    {
        "id": "48b92cd77d3fca0b",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "I_81_Led_Extra1",
        "name": "I_81_Led_Extra1",
        "x": 3290,
        "y": 500,
        "wires": []
    },
    {
        "id": "e826b01e35489679",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "I_81_Led_Extra2",
        "name": "I_81_Led_Extra2",
        "x": 3290,
        "y": 540,
        "wires": []
    },
    {
        "id": "013d95d2122cd80a",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "I_81_Panel_O4",
        "name": "I_81_Panel_O4",
        "x": 3280,
        "y": 580,
        "wires": []
    },
    {
        "id": "1746268c1a6877d2",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "I_81_Panel_O5",
        "name": "I_81_Panel_O5",
        "x": 3280,
        "y": 620,
        "wires": []
    },
    {
        "id": "4246e7a3f28d8cdd",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "I_81_Panel_O6",
        "name": "I_81_Panel_O6",
        "x": 3280,
        "y": 660,
        "wires": []
    },
    {
        "id": "a1fde3b3342866a9",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "I_81_Panel_O7",
        "name": "I_81_Panel_O7",
        "x": 3280,
        "y": 700,
        "wires": []
    },
    {
        "id": "086ae5803784455b",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "C_85_Single",
        "name": "C_85_Single",
        "x": 3270,
        "y": 820,
        "wires": []
    },
    {
        "id": "cc0ab8505ed83516",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "C_85_Continuous",
        "name": "C_85_Continuous",
        "x": 3290,
        "y": 860,
        "wires": []
    },
    {
        "id": "e07293f09c523f1d",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "C_85_Counted",
        "name": "C_85_Counted",
        "x": 3280,
        "y": 900,
        "wires": []
    },
    {
        "id": "4e0948801169e25e",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "C_83_RQ_Parts",
        "name": "C_83_RQ_Parts",
        "x": 3280,
        "y": 740,
        "wires": []
    },
    {
        "id": "475a02eace807627",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "I_80_Pist_Adv",
        "func": "if (msg.topic === \"I_80_Pist_Adv\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_80_Pist_Adv\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 220,
        "wires": [
            [
                "5cc8851569f60adb"
            ]
        ]
    },
    {
        "id": "a9b24d7ae9111bb3",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "I_80_Suction_On",
        "func": "if (msg.topic === \"I_80_Suction_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_80_Suction_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 260,
        "wires": [
            [
                "3030c93199b84526"
            ]
        ]
    },
    {
        "id": "de9c6a2e34798dbd",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "I_80_Suction_Off",
        "func": "if (msg.topic === \"I_80_Suction_Off\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_80_Suction_Off\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 300,
        "wires": [
            [
                "92177fa4196659e7"
            ]
        ]
    },
    {
        "id": "989613d7dcbaa611",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "I_80_Arm_2_Del",
        "func": "if (msg.topic === \"I_80_Arm_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_80_Arm_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 340,
        "wires": [
            [
                "fd5607646f2a7f65"
            ]
        ]
    },
    {
        "id": "1cf7664efad4ae9a",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "I_80_Arm_2_Mag",
        "func": "if (msg.topic === \"I_80_Arm_2_Mag\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_80_Arm_2_Mag\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 380,
        "wires": [
            [
                "efe5411e1b6f2109"
            ]
        ]
    },
    {
        "id": "c3a6383670f70821",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "I_81_Led_Start",
        "func": "if (msg.topic === \"I_81_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 420,
        "wires": [
            [
                "c404bcb0f2a4d872"
            ]
        ]
    },
    {
        "id": "0aceaf2b6e14d39b",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "I_81_Led_Reset",
        "func": "if (msg.topic === \"I_81_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 460,
        "wires": [
            [
                "4dfc39d53d683898"
            ]
        ]
    },
    {
        "id": "c53c9085704ba640",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "I_81_Led_Extra1",
        "func": "if (msg.topic === \"I_81_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 500,
        "wires": [
            [
                "48b92cd77d3fca0b"
            ]
        ]
    },
    {
        "id": "0bd3f7853a9d5849",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "I_81_Led_Extra2",
        "func": "if (msg.topic === \"I_81_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 540,
        "wires": [
            [
                "e826b01e35489679"
            ]
        ]
    },
    {
        "id": "329a8c6fda6423ad",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "I_81_Panel_O4",
        "func": "if (msg.topic === \"I_81_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 580,
        "wires": [
            [
                "013d95d2122cd80a"
            ]
        ]
    },
    {
        "id": "b8a8fa61d0f9bf87",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "I_81_Panel_O5",
        "func": "if (msg.topic === \"I_81_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 620,
        "wires": [
            [
                "1746268c1a6877d2"
            ]
        ]
    },
    {
        "id": "ebb3741ed3859e43",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "I_81_Panel_O6",
        "func": "if (msg.topic === \"I_81_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 660,
        "wires": [
            [
                "4246e7a3f28d8cdd"
            ]
        ]
    },
    {
        "id": "ab51064132e50338",
        "type": "link in",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "Distribution [80]",
        "links": [
            "09da1394c125df30"
        ],
        "x": 2895,
        "y": 540,
        "wires": [
            [
                "475a02eace807627",
                "a9b24d7ae9111bb3",
                "de9c6a2e34798dbd",
                "989613d7dcbaa611",
                "1cf7664efad4ae9a",
                "c3a6383670f70821",
                "0aceaf2b6e14d39b",
                "c53c9085704ba640",
                "0bd3f7853a9d5849",
                "329a8c6fda6423ad",
                "b8a8fa61d0f9bf87",
                "ebb3741ed3859e43",
                "3f8dfa7bf6748bf5",
                "6b8494196670d461",
                "8fefb0da3337acb7",
                "667b5f4a3c70b5c0",
                "8e4167285a622df0",
                "4b58f042b3868f61"
            ]
        ]
    },
    {
        "id": "3f8dfa7bf6748bf5",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "I_81_Panel_O7",
        "func": "if (msg.topic === \"I_81_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_81_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 700,
        "wires": [
            [
                "a1fde3b3342866a9"
            ]
        ]
    },
    {
        "id": "6b8494196670d461",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "C_85_Single",
        "func": "if (msg.topic === \"C_85_Single\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_85_Single\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3050,
        "y": 820,
        "wires": [
            [
                "086ae5803784455b"
            ]
        ]
    },
    {
        "id": "8fefb0da3337acb7",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "C_85_Continuous",
        "func": "if (msg.topic === \"C_85_Continuous\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_85_Continuous\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 860,
        "wires": [
            [
                "cc0ab8505ed83516"
            ]
        ]
    },
    {
        "id": "667b5f4a3c70b5c0",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "C_85_Counted",
        "func": "if (msg.topic === \"C_85_Counted\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_85_Counted\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 900,
        "wires": [
            [
                "e07293f09c523f1d"
            ]
        ]
    },
    {
        "id": "8e4167285a622df0",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "C_83_RQ_Parts",
        "func": "if (msg.topic === \"C_83_RQ_Parts\") {\n    node.status({fill:\"green\",shape:\"dot\",text:msg.payload})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 740,
        "wires": [
            [
                "4e0948801169e25e"
            ]
        ]
    },
    {
        "id": "9b2c4fb52bbe8cf7",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "I_90_Claw_2_Cart",
        "name": "I_90_Claw_2_Cart",
        "x": 3870,
        "y": 220,
        "wires": []
    },
    {
        "id": "ba9e6c18633cb968",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "I_90_Claw_2_Del",
        "name": "I_90_Claw_2_Del",
        "x": 3870,
        "y": 260,
        "wires": []
    },
    {
        "id": "cd9d780600c5deef",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "I_90_Claw_Down",
        "name": "I_90_Claw_Down",
        "x": 3870,
        "y": 300,
        "wires": []
    },
    {
        "id": "2e9a7f6f9f048fd6",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "I_90_Close_Claw",
        "name": "I_90_Close_Claw",
        "x": 3870,
        "y": 340,
        "wires": []
    },
    {
        "id": "4192a126f8201605",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "I_91_Led_Start",
        "name": "I_91_Led_Start",
        "x": 3860,
        "y": 380,
        "wires": []
    },
    {
        "id": "30e5d538e7b9171e",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "I_91_Led_Reset",
        "name": "I_91_Led_Reset",
        "x": 3860,
        "y": 420,
        "wires": []
    },
    {
        "id": "24f4f42ea5cdc873",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "I_91_Led_Extra1",
        "name": "I_91_Led_Extra1",
        "x": 3870,
        "y": 460,
        "wires": []
    },
    {
        "id": "35c42c8048df655c",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "I_91_Led_Extra2",
        "name": "I_91_Led_Extra2",
        "x": 3870,
        "y": 500,
        "wires": []
    },
    {
        "id": "dcecb7dc5f21a3d9",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "I_91_Panel_O4",
        "name": "I_91_Panel_O4",
        "x": 3860,
        "y": 540,
        "wires": []
    },
    {
        "id": "e323edc1b7ddf005",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "I_91_Panel_O5",
        "name": "I_91_Panel_O5",
        "x": 3860,
        "y": 580,
        "wires": []
    },
    {
        "id": "fc3d6bfe80e305a4",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "I_91_Panel_O6",
        "name": "I_91_Panel_O6",
        "x": 3860,
        "y": 620,
        "wires": []
    },
    {
        "id": "d231d69867b2bc76",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "I_91_Panel_O7",
        "name": "I_91_Panel_O7",
        "x": 3860,
        "y": 660,
        "wires": []
    },
    {
        "id": "5d8c1dc343448608",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "C_95_Cart2Del",
        "name": "C_95_Cart2Del",
        "x": 3860,
        "y": 740,
        "wires": []
    },
    {
        "id": "7342bde5df911366",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "C_95_Del2Cart",
        "name": "C_95_Del2Cart",
        "x": 3860,
        "y": 780,
        "wires": []
    },
    {
        "id": "d26f17e4e7e7217d",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "I_90_Claw_2_Cart",
        "func": "if (msg.topic === \"I_90_Claw_2_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_90_Claw_2_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 220,
        "wires": [
            [
                "9b2c4fb52bbe8cf7"
            ]
        ]
    },
    {
        "id": "e52feaed8d472489",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "I_90_Claw_2_Del",
        "func": "if (msg.topic === \"I_90_Claw_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_90_Claw_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 260,
        "wires": [
            [
                "ba9e6c18633cb968"
            ]
        ]
    },
    {
        "id": "91b228a796bd1ce2",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "I_90_Claw_Down",
        "func": "if (msg.topic === \"I_90_Claw_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_90_Claw_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 300,
        "wires": [
            [
                "cd9d780600c5deef"
            ]
        ]
    },
    {
        "id": "74c73b1513d97947",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "I_90_Close_Claw",
        "func": "if (msg.topic === \"I_90_Close_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_90_Close_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 340,
        "wires": [
            [
                "2e9a7f6f9f048fd6"
            ]
        ]
    },
    {
        "id": "f913dadf937dd706",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "I_91_Led_Start",
        "func": "if (msg.topic === \"I_91_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 380,
        "wires": [
            [
                "4192a126f8201605"
            ]
        ]
    },
    {
        "id": "04210e91c4769c95",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "I_91_Led_Reset",
        "func": "if (msg.topic === \"I_91_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 420,
        "wires": [
            [
                "30e5d538e7b9171e"
            ]
        ]
    },
    {
        "id": "6ea75c2a92480e69",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "I_91_Led_Extra1",
        "func": "if (msg.topic === \"I_91_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 460,
        "wires": [
            [
                "24f4f42ea5cdc873"
            ]
        ]
    },
    {
        "id": "267b57dc636ceffd",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "I_91_Led_Extra2",
        "func": "if (msg.topic === \"I_91_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 500,
        "wires": [
            [
                "35c42c8048df655c"
            ]
        ]
    },
    {
        "id": "dc2124cb1348c6a3",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "I_91_Panel_O4",
        "func": "if (msg.topic === \"I_91_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 540,
        "wires": [
            [
                "dcecb7dc5f21a3d9"
            ]
        ]
    },
    {
        "id": "09c05efa444188a3",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "I_91_Panel_O5",
        "func": "if (msg.topic === \"I_91_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 580,
        "wires": [
            [
                "e323edc1b7ddf005"
            ]
        ]
    },
    {
        "id": "c4186b9e4dc6a220",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "I_91_Panel_O6",
        "func": "if (msg.topic === \"I_91_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 620,
        "wires": [
            [
                "fc3d6bfe80e305a4"
            ]
        ]
    },
    {
        "id": "56053f18039f22c7",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "I_91_Panel_O7",
        "func": "if (msg.topic === \"I_91_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_91_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 660,
        "wires": [
            [
                "d231d69867b2bc76"
            ]
        ]
    },
    {
        "id": "76baef6193f71f76",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "C_95_Cart2Del",
        "func": "if (msg.topic === \"C_95_Cart2Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_95_Cart2Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 740,
        "wires": [
            [
                "5d8c1dc343448608"
            ]
        ]
    },
    {
        "id": "a3e9be796dc60e9b",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "C_95_Del2Cart",
        "func": "if (msg.topic === \"C_95_Del2Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_95_Del2Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 780,
        "wires": [
            [
                "7342bde5df911366"
            ]
        ]
    },
    {
        "id": "0e5a4c5ab1c943de",
        "type": "link in",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "Handling [90]",
        "links": [
            "09da1394c125df30"
        ],
        "x": 3475,
        "y": 480,
        "wires": [
            [
                "d26f17e4e7e7217d",
                "e52feaed8d472489",
                "91b228a796bd1ce2",
                "74c73b1513d97947",
                "f913dadf937dd706",
                "04210e91c4769c95",
                "6ea75c2a92480e69",
                "267b57dc636ceffd",
                "dc2124cb1348c6a3",
                "09c05efa444188a3",
                "c4186b9e4dc6a220",
                "56053f18039f22c7",
                "76baef6193f71f76",
                "a3e9be796dc60e9b",
                "6c48fcb7a6fa5972"
            ]
        ]
    },
    {
        "id": "084934ecb2143f5b",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_100_Drill_On",
        "name": "I_100_Drill_On",
        "x": 4440,
        "y": 220,
        "wires": []
    },
    {
        "id": "aa9b860f0bbbf731",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_100_RT_On",
        "name": "I_100_RT_On",
        "x": 4440,
        "y": 260,
        "wires": []
    },
    {
        "id": "6b7e54704ec35a89",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_100_Drill_Down",
        "name": "I_100_Drill_Down",
        "x": 4450,
        "y": 300,
        "wires": []
    },
    {
        "id": "2edfbe63f86397e9",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_100_Drill_Up",
        "name": "I_100_Drill_Up",
        "x": 4440,
        "y": 340,
        "wires": []
    },
    {
        "id": "13a896cd7fa1a6bb",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_100_Drill_Pin",
        "name": "I_100_Drill_Pin",
        "x": 4440,
        "y": 380,
        "wires": []
    },
    {
        "id": "51c77a8bdbe39724",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_100_Test_Pin",
        "name": "I_100_Test_Pin",
        "x": 4440,
        "y": 420,
        "wires": []
    },
    {
        "id": "a38948a2c0794723",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_101_Led_Start",
        "name": "I_101_Led_Start",
        "x": 4450,
        "y": 460,
        "wires": []
    },
    {
        "id": "479f71e33b81f301",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_101_Led_Reset",
        "name": "I_101_Led_Reset",
        "x": 4450,
        "y": 500,
        "wires": []
    },
    {
        "id": "967ac2ac8fe70f67",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_101_Led_Extra1",
        "name": "I_101_Led_Extra1",
        "x": 4450,
        "y": 540,
        "wires": []
    },
    {
        "id": "569b696128090aa1",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_101_Led_Extra2",
        "name": "I_101_Led_Extra2",
        "x": 4450,
        "y": 580,
        "wires": []
    },
    {
        "id": "23789e5ee8348555",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_101_Panel_O4",
        "name": "I_101_Panel_O4",
        "x": 4450,
        "y": 620,
        "wires": []
    },
    {
        "id": "73f903a8ff588fb0",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_101_Panel_O5",
        "name": "I_101_Panel_O5",
        "x": 4450,
        "y": 660,
        "wires": []
    },
    {
        "id": "e7c5bd02d0beba49",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_101_Panel_O6",
        "name": "I_101_Panel_O6",
        "x": 4450,
        "y": 700,
        "wires": []
    },
    {
        "id": "21bb4255aab749df",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "I_101_Panel_O7",
        "name": "I_101_Panel_O7",
        "x": 4450,
        "y": 740,
        "wires": []
    },
    {
        "id": "52f47a450960d545",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "C_105_Test",
        "name": "C_105_Test",
        "x": 4430,
        "y": 820,
        "wires": []
    },
    {
        "id": "0c515d6604fe817e",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "C_105_TestDrill",
        "name": "C_105_TestDrill",
        "x": 4440,
        "y": 860,
        "wires": []
    },
    {
        "id": "0880bb4cb564af49",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "C_105_Rotation",
        "name": "C_105_Rotation",
        "x": 4440,
        "y": 900,
        "wires": []
    },
    {
        "id": "73a8d9a1df3571e5",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_100_Drill_On",
        "func": "if (msg.topic === \"I_100_Drill_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_100_Drill_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 220,
        "wires": [
            [
                "084934ecb2143f5b"
            ]
        ]
    },
    {
        "id": "7714f0f239480df5",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_100_RT_On",
        "func": "if (msg.topic === \"I_100_RT_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_100_RT_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 260,
        "wires": [
            [
                "aa9b860f0bbbf731"
            ]
        ]
    },
    {
        "id": "b864708222383090",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_100_Drill_Down",
        "func": "if (msg.topic === \"I_100_Drill_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_100_Drill_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 300,
        "wires": [
            [
                "6b7e54704ec35a89"
            ]
        ]
    },
    {
        "id": "2a662decc17ac841",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_100_Drill_Up",
        "func": "if (msg.topic === \"I_100_Drill_Up\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_100_Drill_Up\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 340,
        "wires": [
            [
                "2edfbe63f86397e9"
            ]
        ]
    },
    {
        "id": "a316bcc74a55d394",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_100_Drill_Pin",
        "func": "if (msg.topic === \"I_100_Drill_Pin\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_100_Drill_Pin\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 380,
        "wires": [
            [
                "13a896cd7fa1a6bb"
            ]
        ]
    },
    {
        "id": "eebbf832f37ee9b7",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_100_Test_Pin",
        "func": "if (msg.topic === \"I_100_Test_Pin\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_100_Test_Pin\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 420,
        "wires": [
            [
                "51c77a8bdbe39724"
            ]
        ]
    },
    {
        "id": "0dfc3326ce46d040",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_101_Led_Start",
        "func": "if (msg.topic === \"I_101_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 460,
        "wires": [
            [
                "a38948a2c0794723"
            ]
        ]
    },
    {
        "id": "0b4f69cab946a931",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_101_Led_Reset",
        "func": "if (msg.topic === \"I_101_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 500,
        "wires": [
            [
                "479f71e33b81f301"
            ]
        ]
    },
    {
        "id": "8766b73644a65c6b",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_101_Led_Extra1",
        "func": "if (msg.topic === \"I_101_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 540,
        "wires": [
            [
                "967ac2ac8fe70f67"
            ]
        ]
    },
    {
        "id": "47eab31882316c56",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_101_Led_Extra2",
        "func": "if (msg.topic === \"I_101_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 580,
        "wires": [
            [
                "569b696128090aa1"
            ]
        ]
    },
    {
        "id": "69b7a1910c8ae767",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_101_Panel_O4",
        "func": "if (msg.topic === \"I_101_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 620,
        "wires": [
            [
                "23789e5ee8348555"
            ]
        ]
    },
    {
        "id": "3f68c5d70779bd3d",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_101_Panel_O5",
        "func": "if (msg.topic === \"I_101_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 660,
        "wires": [
            [
                "73f903a8ff588fb0"
            ]
        ]
    },
    {
        "id": "89d5b71aac4a4ee5",
        "type": "link in",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "Processing [80]",
        "links": [
            "09da1394c125df30"
        ],
        "x": 4055,
        "y": 540,
        "wires": [
            [
                "73a8d9a1df3571e5",
                "7714f0f239480df5",
                "b864708222383090",
                "2a662decc17ac841",
                "a316bcc74a55d394",
                "eebbf832f37ee9b7",
                "0dfc3326ce46d040",
                "0b4f69cab946a931",
                "8766b73644a65c6b",
                "47eab31882316c56",
                "69b7a1910c8ae767",
                "3f68c5d70779bd3d",
                "4524477427082dce",
                "07a83db0c1954b1a",
                "61e624e31bfefb12",
                "c72a376176f9dcb9",
                "0aefc5c0d6a4c898",
                "802f2997252ff3ce"
            ]
        ]
    },
    {
        "id": "4524477427082dce",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_101_Panel_O6",
        "func": "if (msg.topic === \"I_101_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 700,
        "wires": [
            [
                "e7c5bd02d0beba49"
            ]
        ]
    },
    {
        "id": "07a83db0c1954b1a",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "I_101_Panel_O7",
        "func": "if (msg.topic === \"I_101_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"I_101_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 740,
        "wires": [
            [
                "21bb4255aab749df"
            ]
        ]
    },
    {
        "id": "61e624e31bfefb12",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "C_105_Test",
        "func": "if (msg.topic === \"C_105_Test\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_Test\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4210,
        "y": 820,
        "wires": [
            [
                "52f47a450960d545"
            ]
        ]
    },
    {
        "id": "c72a376176f9dcb9",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "C_105_TestDrill",
        "func": "if (msg.topic === \"C_105_TestDrill\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_TestDrill\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 860,
        "wires": [
            [
                "0c515d6604fe817e"
            ]
        ]
    },
    {
        "id": "0aefc5c0d6a4c898",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "C_105_Rotation",
        "func": "if (msg.topic === \"C_105_Rotation\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_Rotation\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 900,
        "wires": [
            [
                "0880bb4cb564af49"
            ]
        ]
    },
    {
        "id": "2c9e97d090c5d96e",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "name": "C_55_Start",
        "func": "if (msg.topic === \"C_55_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_55_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 700,
        "wires": [
            [
                "027e5e04ed94cd9a"
            ]
        ]
    },
    {
        "id": "027e5e04ed94cd9a",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "a4de022e04309496",
        "endpoint": "a287d70eab823998",
        "variable": "C_55_Start",
        "name": "C_55_Start",
        "x": 1530,
        "y": 700,
        "wires": []
    },
    {
        "id": "4b58f042b3868f61",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "name": "C_85_Start",
        "func": "if (msg.topic === \"C_85_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_85_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3050,
        "y": 780,
        "wires": [
            [
                "b5dd262e2006090a"
            ]
        ]
    },
    {
        "id": "b5dd262e2006090a",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "07defeba84499708",
        "endpoint": "a287d70eab823998",
        "variable": "C_85_Start",
        "name": "C_85_Start",
        "x": 3270,
        "y": 780,
        "wires": []
    },
    {
        "id": "6c48fcb7a6fa5972",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "name": "C_95_Start",
        "func": "if (msg.topic === \"C_95_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_95_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3630,
        "y": 700,
        "wires": [
            [
                "80c164a04bde3dea"
            ]
        ]
    },
    {
        "id": "80c164a04bde3dea",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "fb5eb2ba139ec7fc",
        "endpoint": "a287d70eab823998",
        "variable": "C_95_Start",
        "name": "C_95_Start",
        "x": 3850,
        "y": 700,
        "wires": []
    },
    {
        "id": "802f2997252ff3ce",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "name": "C_105_Start",
        "func": "if (msg.topic === \"C_105_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4210,
        "y": 780,
        "wires": [
            [
                "8e4460cf3f48cda1"
            ]
        ]
    },
    {
        "id": "8e4460cf3f48cda1",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "0a1fb4f625d8c32e",
        "endpoint": "a287d70eab823998",
        "variable": "C_105_Start",
        "name": "C_105_Start",
        "x": 4430,
        "y": 780,
        "wires": []
    },
    {
        "id": "12d8d71656ae0257",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "name": "C_30_Robot1",
        "func": "if (msg.topic === \"C_30_Robot1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_30_Robot1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 460,
        "wires": [
            [
                "461c331208c9c0c2"
            ]
        ]
    },
    {
        "id": "78ba478363b2b1f0",
        "type": "function",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "name": "C_30_Robot2",
        "func": "if (msg.topic === \"C_30_Robot2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_30_Robot2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 500,
        "wires": [
            [
                "a3f6e8c162b52c4a"
            ]
        ]
    },
    {
        "id": "461c331208c9c0c2",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "endpoint": "a287d70eab823998",
        "variable": "C_30_Robot1",
        "name": "C_30_Robot1",
        "x": 960,
        "y": 460,
        "wires": []
    },
    {
        "id": "a3f6e8c162b52c4a",
        "type": "s7 out",
        "z": "789bbace3c2df385",
        "g": "ab22b0258e7678c1",
        "endpoint": "a287d70eab823998",
        "variable": "C_30_Robot2",
        "name": "C_30_Robot2",
        "x": 960,
        "y": 500,
        "wires": []
    },
    {
        "id": "9e6f40e5b3b0ba66",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "7611643950b3cdee",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "4521cb6f939097a8",
        "type": "OpcUa-Server",
        "z": "c7cba4aaafa7d336",
        "g": "7611643950b3cdee",
        "port": "53880",
        "name": "Server : Master",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Master/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Master/",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "9e6f40e5b3b0ba66"
            ]
        ]
    },
    {
        "id": "e1be596920d8e4cb",
        "type": "comment",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "1e866a4b54290184",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "60fcf799dc0b1345"
            ]
        ]
    },
    {
        "id": "60fcf799dc0b1345",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Master_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "bc511ab6b56d785d"
            ]
        ]
    },
    {
        "id": "75b397ef8fbc4415",
        "type": "file",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Variables CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 440,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8bf3fc16091c4e51",
        "type": "comment",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "bc511ab6b56d785d",
        "type": "OpcUa-Client",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "95e06d3cca54a938"
            ],
            [
                "dcbfb6fa4a0599ed",
                "f25b5456f23b4e74"
            ]
        ]
    },
    {
        "id": "95e06d3cca54a938",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 300,
        "wires": [
            [
                "f1fdecdeeca2b7f2",
                "b24ec4189f63f3a4"
            ]
        ]
    },
    {
        "id": "f1fdecdeeca2b7f2",
        "type": "file",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Varaibles List",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1190,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "b24ec4189f63f3a4",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 340,
        "wires": []
    },
    {
        "id": "821249d1e58754b8",
        "type": "comment",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "c2bd3064d5b3f843",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 440,
        "wires": [
            [
                "8802c8a813d5a3d8"
            ]
        ]
    },
    {
        "id": "861fb09cb6cc2036",
        "type": "OpcUa-Client",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "endpoint": "a2328ac43b0b7d73",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "79836d7aec61c359"
            ],
            []
        ]
    },
    {
        "id": "79836d7aec61c359",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "4c5c21df37d2d438",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Write_Master",
        "links": [
            "04cb71bab6c22a8c",
            "8f28ce2a07e94b48",
            "20cc20402f9c71d9",
            "9ab06aad1bcea0b1",
            "d1f784a38db53d5d",
            "b6b54d3fb41c6486",
            "2a7d28368bb38c2b",
            "2192e7d8b3358bea",
            "c68aa3710bc77f83",
            "911ef4227e18eee0",
            "902277105c459939",
            "2f5c73b44932d1d7",
            "8cbbd5eec3416c03",
            "fc6f5d324c7dddd7",
            "60a33971d6a1e5a4",
            "604c8d2ae87eb956",
            "b49b3c3b68877bef"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "fde733d2aaa7b338"
            ]
        ]
    },
    {
        "id": "fde733d2aaa7b338",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "9414a5c74d8adb02"
            ]
        ]
    },
    {
        "id": "9414a5c74d8adb02",
        "type": "file in",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Variable CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 290,
        "y": 440,
        "wires": [
            [
                "c2bd3064d5b3f843"
            ]
        ]
    },
    {
        "id": "8802c8a813d5a3d8",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 440,
        "wires": [
            [
                "861fb09cb6cc2036"
            ]
        ]
    },
    {
        "id": "1caf2c7a1c282376",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "CSV Link",
        "links": [
            "dcbfb6fa4a0599ed"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "171157a12681ac53"
            ]
        ]
    },
    {
        "id": "171157a12681ac53",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "c6b3cdbe1add68ac"
            ]
        ]
    },
    {
        "id": "c6b3cdbe1add68ac",
        "type": "trigger",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "75b397ef8fbc4415"
            ]
        ]
    },
    {
        "id": "dcbfb6fa4a0599ed",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "1caf2c7a1c282376",
            "09d5cc2f0ddcd3c5"
        ],
        "x": 935,
        "y": 340,
        "wires": []
    },
    {
        "id": "09d5cc2f0ddcd3c5",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "CSV Link",
        "links": [
            "dcbfb6fa4a0599ed"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "ef555363ace34f35"
            ]
        ]
    },
    {
        "id": "ef555363ace34f35",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"I_20_Led_On\" : false,\n    \"I_20_Led_Off\" : false,\n    \"I_20_Conveyor\" : false,\n    \"I_24_Cart_Test\" : false,\n    \"I_25_Cart_Proc\" : false,\n    \"I_26_Cart_Visi\" : false,\n    \"I_27_Cart_Robo\" : false,\n    \"I_28_Cart_Stor\" : false,\n    \"I_29_Cart_Sort\" : false,\n    \"C_24_Request\" : false,\n    \"C_24_CartDel\" : false,\n    \"C_25_Request\" : false,\n    \"C_25_CartDel\" : false,\n    \"C_26_Request\" : false,\n    \"C_26_CartDel\" : false,\n    \"C_27_Request\" : false,\n    \"C_27_CartDel\" : false,\n    \"C_28_Request\" : false,\n    \"C_28_CartDel\" : false,\n    \"C_29_Request\" : false,\n    \"C_29_CartDel\" : false,\n    \"F_22_Led_On\" : false,\n    \"F_22_Led_Off\" : false,\n    \"F_22_Conveyor\" : false,\n    \"F_24_Release_FB\" : false,\n    \"F_25_Release_FB\" : false,\n    \"F_26_Release_FB\" : false,\n    \"F_27_Release_FB\" : false,\n    \"F_28_Release_FB\" : false,\n    \"F_29_Release_FB\" : false,\t\n    \"O_20_On\" : false,\n    \"O_20_Off\" : false,\n    \"O_20_Controler_On\" : false,\n    \"O_24_Cart_Stat\" : false,\n    \"O_24_Cart_Next\" : false,\n    \"O_24_Optic\" : false,\n    \"O_24_Count\" : false,\n    \"O_24_Pist_Bck\" : false,\n    \"O_25_Cart_Stat\" : false,\n    \"O_25_Cart_Next\" : false,\n    \"O_25_Optic\" : false,\n    \"O_25_Count\" : false,\n    \"O_25_Pist_Bck\" : false,\n    \"O_26_Cart_Stat\" : false,\n    \"O_26_Cart_Next\" : false,\n    \"O_26_Optic\" : false,\n    \"O_26_Count\" : false,\n    \"O_26_Pist_Bck\" : false,\n    \"O_27_Cart_Stat\" : false,\n    \"O_27_Cart_Next\" : false,\n    \"O_27_Optic\" : false,\n    \"O_27_Count\" : false,\n    \"O_27_Pist_Bck\" : false,\n    \"O_28_Cart_Stat\" : false,\n    \"O_28_Cart_Next\" : false,\n    \"O_28_Optic\" : false,\n    \"O_28_Count\" : false,\n    \"O_28_Pist_Bck\" : false,\n    \"O_29_Cart_Stat\" : false,\n    \"O_29_Cart_Next\" : false,\n    \"O_29_Optic\" : false,\n    \"O_29_Count\" : false,\n    \"O_29_Pist_Bck\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "768c06636b3a22e3"
            ]
        ]
    },
    {
        "id": "768c06636b3a22e3",
        "type": "trigger",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "1e866a4b54290184"
            ]
        ]
    },
    {
        "id": "60d38b46051db02f",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "item": "I_20_Led_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_20_Led_On",
        "x": 460,
        "y": 860,
        "wires": [
            [
                "911ef4227e18eee0"
            ]
        ]
    },
    {
        "id": "a1fe4ad577c9e25d",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "item": "I_20_Led_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "I_20_Led_Off",
        "x": 460,
        "y": 900,
        "wires": [
            [
                "911ef4227e18eee0"
            ]
        ]
    },
    {
        "id": "7cea204f0f10d929",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "item": "I_20_Conveyor",
        "datatype": "Boolean",
        "value": "",
        "name": "I_20_Conveyor",
        "x": 460,
        "y": 940,
        "wires": [
            [
                "911ef4227e18eee0"
            ]
        ]
    },
    {
        "id": "911ef4227e18eee0",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "20 Physical Actuators",
        "mode": "link",
        "links": [
            "4c5c21df37d2d438"
        ],
        "x": 625,
        "y": 900,
        "wires": []
    },
    {
        "id": "df0418046c11cebd",
        "type": "switch",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "20 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_20_Led_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_20_Led_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_20_Conveyor",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 900,
        "wires": [
            [
                "be8eb813ff11f05c"
            ],
            [
                "15f9a8b41bc2add0"
            ],
            [
                "87106d7d4327e22d"
            ]
        ]
    },
    {
        "id": "fb538f8416b72beb",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "I_20_Led_On",
        "label": "On LED",
        "tooltip": "",
        "group": "0f6cdc8b98f9df89",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 860,
        "wires": [
            [
                "60d38b46051db02f"
            ]
        ]
    },
    {
        "id": "32e87998a32bc914",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "I_20_Led_Off",
        "label": "Off LED",
        "tooltip": "",
        "group": "0f6cdc8b98f9df89",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 900,
        "wires": [
            [
                "a1fe4ad577c9e25d"
            ]
        ]
    },
    {
        "id": "9a97a1f060644b94",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "I_20_Conveyor",
        "label": "Conveyor",
        "tooltip": "",
        "group": "0f6cdc8b98f9df89",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 940,
        "wires": [
            [
                "7cea204f0f10d929"
            ]
        ]
    },
    {
        "id": "e189f618cf81dc4d",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 780,
        "wires": [
            [
                "bd1a33aba30ad7b8"
            ]
        ]
    },
    {
        "id": "96603dfa2e449947",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 780,
        "wires": [
            [
                "e189f618cf81dc4d"
            ]
        ]
    },
    {
        "id": "bd1a33aba30ad7b8",
        "type": "OpcUa-Client",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub A",
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "5c521db1e91360e2",
                "2a211358756f0c48"
            ],
            [
                "e3922c1a1b02fcca"
            ]
        ]
    },
    {
        "id": "839b6abb4c8fdcd8",
        "type": "file in",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 780,
        "wires": [
            [
                "96603dfa2e449947"
            ]
        ]
    },
    {
        "id": "5c521db1e91360e2",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "20 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 820,
        "wires": []
    },
    {
        "id": "e3922c1a1b02fcca",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n        \"I_20_Led_On\" : false,\n        \"I_20_Led_Off\" : false,\n        \"I_20_Conveyor\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 780,
        "wires": [
            [
                "c18b8f7d75664019"
            ]
        ]
    },
    {
        "id": "e73bf79d091a5de0",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 780,
        "wires": [
            [
                "839b6abb4c8fdcd8"
            ]
        ]
    },
    {
        "id": "c18b8f7d75664019",
        "type": "trigger",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 780,
        "wires": [
            [
                "ca65d705719aa383"
            ]
        ]
    },
    {
        "id": "ca65d705719aa383",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 780,
        "wires": [
            [
                "e73bf79d091a5de0"
            ]
        ]
    },
    {
        "id": "e668be1192b0bf3f",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "item": "O_24_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Cart_Stat",
        "x": 460,
        "y": 1120,
        "wires": [
            [
                "2f5c73b44932d1d7"
            ]
        ]
    },
    {
        "id": "82f96a38e10ac879",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "item": "O_24_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Cart_Next",
        "x": 450,
        "y": 1160,
        "wires": [
            [
                "2f5c73b44932d1d7"
            ]
        ]
    },
    {
        "id": "7a0ad6d968d1e080",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "item": "O_24_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Optic",
        "x": 470,
        "y": 1200,
        "wires": [
            [
                "2f5c73b44932d1d7"
            ]
        ]
    },
    {
        "id": "48480d2aeb16b112",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "item": "O_24_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Count",
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "2f5c73b44932d1d7"
            ]
        ]
    },
    {
        "id": "266d7f744d39a86f",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "item": "O_24_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_24_Pist_Bck",
        "x": 460,
        "y": 1280,
        "wires": [
            [
                "2f5c73b44932d1d7"
            ]
        ]
    },
    {
        "id": "bf228f767b435da2",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "item": "F_24_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_24_Release_FB",
        "x": 450,
        "y": 1320,
        "wires": [
            [
                "2f5c73b44932d1d7"
            ]
        ]
    },
    {
        "id": "2f5c73b44932d1d7",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "Test AS-i",
        "mode": "link",
        "links": [
            "4c5c21df37d2d438"
        ],
        "x": 625,
        "y": 1280,
        "wires": []
    },
    {
        "id": "5e948fae52e287fa",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1040,
        "wires": [
            [
                "1b10e59622ab7ae8"
            ]
        ]
    },
    {
        "id": "1b10e59622ab7ae8",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1040,
        "wires": [
            [
                "e3b19a9cb2a9343f"
            ]
        ]
    },
    {
        "id": "e3b19a9cb2a9343f",
        "type": "file in",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1040,
        "wires": [
            [
                "b4f24d706aae7319"
            ]
        ]
    },
    {
        "id": "b4f24d706aae7319",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1040,
        "wires": [
            [
                "75e832ed3782e9d5"
            ]
        ]
    },
    {
        "id": "75e832ed3782e9d5",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1040,
        "wires": [
            [
                "629ba8b2185214f4"
            ]
        ]
    },
    {
        "id": "629ba8b2185214f4",
        "type": "OpcUa-Client",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub Test AS-i",
        "x": 1150,
        "y": 1040,
        "wires": [
            [
                "604a46b885caea09",
                "a1ac9e55542de985"
            ],
            [
                "6b6e6658b0db0202"
            ]
        ]
    },
    {
        "id": "126d389975786aa1",
        "type": "switch",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "Test AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_24_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_24_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_24_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_24_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_24_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_24_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_24_Cart_Test",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_24_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_24_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 1280,
        "wires": [
            [
                "bc5e6407f75dc7b0"
            ],
            [
                "762ca61b2241353f"
            ],
            [
                "a1e3ebfa92777cf9"
            ],
            [
                "859a635163a43721"
            ],
            [
                "a2d55db84866ab31"
            ],
            [
                "c25d0cfca39f12d2"
            ],
            [
                "e90723a8f3872e32"
            ],
            [
                "1ff1adcd566d1674"
            ],
            [
                "dbce6b164c4dd473"
            ]
        ]
    },
    {
        "id": "bc5e6407f75dc7b0",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "order": 1,
        "group": "5bd9eabcd91ade49",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Cart_Stat",
        "x": 1060,
        "y": 1120,
        "wires": []
    },
    {
        "id": "762ca61b2241353f",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "order": 2,
        "group": "5bd9eabcd91ade49",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Cart_Next",
        "x": 1070,
        "y": 1160,
        "wires": []
    },
    {
        "id": "a1e3ebfa92777cf9",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "order": 3,
        "group": "5bd9eabcd91ade49",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Optic",
        "x": 1050,
        "y": 1200,
        "wires": []
    },
    {
        "id": "859a635163a43721",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "order": 4,
        "group": "5bd9eabcd91ade49",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Count",
        "x": 1050,
        "y": 1240,
        "wires": []
    },
    {
        "id": "a2d55db84866ab31",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "order": 5,
        "group": "5bd9eabcd91ade49",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_24_Pist_Bck",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "c25d0cfca39f12d2",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "order": 6,
        "group": "5bd9eabcd91ade49",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_24_Release_FB",
        "x": 1070,
        "y": 1320,
        "wires": []
    },
    {
        "id": "dbce6b164c4dd473",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "order": 9,
        "group": "5bd9eabcd91ade49",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_24_CartDel",
        "x": 1060,
        "y": 1440,
        "wires": []
    },
    {
        "id": "12e70ac22c120972",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "item": "C_24_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_24_CartDel",
        "x": 460,
        "y": 1440,
        "wires": [
            [
                "2f5c73b44932d1d7"
            ]
        ]
    },
    {
        "id": "604a46b885caea09",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "Test AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 1080,
        "wires": []
    },
    {
        "id": "6b6e6658b0db0202",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_24_Cart_Stat\" : false,\n    \"O_24_Cart_Next\" : false,\n    \"O_24_Optic\" : false,\n    \"O_24_Count\" : false,\n    \"O_24_Pist_Bck\" : false,\n    \"F_24_Release_FB\" : false,\n    \"I_24_Cart_Test\" : false,\n    \"C_24_Request\" : false,\n    \"C_24_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "50d46109f37c1a22"
            ]
        ]
    },
    {
        "id": "50d46109f37c1a22",
        "type": "trigger",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1040,
        "wires": [
            [
                "5e948fae52e287fa"
            ]
        ]
    },
    {
        "id": "34504ea2be5a4ef5",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "I_24_Cart_Test",
        "label": "Release cart",
        "tooltip": "",
        "group": "5bd9eabcd91ade49",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1360,
        "wires": [
            [
                "9f685a9d24ac1f27"
            ]
        ]
    },
    {
        "id": "9f685a9d24ac1f27",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "item": "I_24_Cart_Test",
        "datatype": "Boolean",
        "value": "",
        "name": "I_24_Cart_Test",
        "x": 460,
        "y": 1360,
        "wires": [
            [
                "2f5c73b44932d1d7"
            ]
        ]
    },
    {
        "id": "112143e1f6c8147e",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "C_24_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "5bd9eabcd91ade49",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1400,
        "wires": [
            [
                "8864c8149e024e16"
            ]
        ]
    },
    {
        "id": "8864c8149e024e16",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "item": "C_24_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_24_Request",
        "x": 460,
        "y": 1400,
        "wires": [
            [
                "2f5c73b44932d1d7"
            ]
        ]
    },
    {
        "id": "59664db4436d8d7f",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "item": "O_25_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Cart_Stat",
        "x": 480,
        "y": 1620,
        "wires": [
            [
                "8cbbd5eec3416c03"
            ]
        ]
    },
    {
        "id": "2e6f2542f74afe45",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "item": "O_25_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Cart_Next",
        "x": 470,
        "y": 1660,
        "wires": [
            [
                "8cbbd5eec3416c03"
            ]
        ]
    },
    {
        "id": "42d60879509840a1",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "item": "O_25_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Optic",
        "x": 490,
        "y": 1700,
        "wires": [
            [
                "8cbbd5eec3416c03"
            ]
        ]
    },
    {
        "id": "b25f2b9993ab29e4",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "item": "O_25_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Count",
        "x": 490,
        "y": 1740,
        "wires": [
            [
                "8cbbd5eec3416c03"
            ]
        ]
    },
    {
        "id": "2c2be224375b81da",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "item": "O_25_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_25_Pist_Bck",
        "x": 480,
        "y": 1780,
        "wires": [
            [
                "8cbbd5eec3416c03"
            ]
        ]
    },
    {
        "id": "a6303da2766202ac",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "item": "F_25_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_25_Release_FB",
        "x": 470,
        "y": 1820,
        "wires": [
            [
                "8cbbd5eec3416c03"
            ]
        ]
    },
    {
        "id": "8cbbd5eec3416c03",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "Proc AS-i",
        "mode": "link",
        "links": [
            "4c5c21df37d2d438"
        ],
        "x": 645,
        "y": 1780,
        "wires": []
    },
    {
        "id": "bfc73101056aed9f",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1540,
        "wires": [
            [
                "9cce6fb88fc22142"
            ]
        ]
    },
    {
        "id": "9cce6fb88fc22142",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1540,
        "wires": [
            [
                "08c67ed51e8b4554"
            ]
        ]
    },
    {
        "id": "08c67ed51e8b4554",
        "type": "file in",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1540,
        "wires": [
            [
                "967a5b58baa6e34d"
            ]
        ]
    },
    {
        "id": "967a5b58baa6e34d",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1540,
        "wires": [
            [
                "8d51548a85772f2f"
            ]
        ]
    },
    {
        "id": "8d51548a85772f2f",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1540,
        "wires": [
            [
                "30a29b2d03332ba2"
            ]
        ]
    },
    {
        "id": "30a29b2d03332ba2",
        "type": "OpcUa-Client",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub Proc AS-i",
        "x": 1150,
        "y": 1540,
        "wires": [
            [
                "349d0ea8faf41d28",
                "c2b8594538708401"
            ],
            [
                "906f92bc35035b43"
            ]
        ]
    },
    {
        "id": "638e73202bbbc7cf",
        "type": "switch",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "Proc AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_25_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_25_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_25_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_25_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_25_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_25_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_25_Cart_Proc",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_25_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_25_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 859.9999618530273,
        "y": 1780.9998321533203,
        "wires": [
            [
                "a67757a60d03eafa"
            ],
            [
                "4ce958a78e43d6bb"
            ],
            [
                "14d8f9ef15b3c0ab"
            ],
            [
                "7cbf6fa7b59f2d30"
            ],
            [
                "74fdb2c2c017cdc0"
            ],
            [
                "3a06423e1e6c4374"
            ],
            [
                "b05dbf73d79d818e"
            ],
            [
                "acc38bbccdeec0bc"
            ],
            [
                "a14a1de8750ea4fd"
            ]
        ]
    },
    {
        "id": "a67757a60d03eafa",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "order": 1,
        "group": "2466c383a4bfc327",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Cart_Stat",
        "x": 1059.9999618530273,
        "y": 1620.9998321533203,
        "wires": []
    },
    {
        "id": "4ce958a78e43d6bb",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "order": 2,
        "group": "2466c383a4bfc327",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Cart_Next",
        "x": 1069.9999618530273,
        "y": 1660.9998321533203,
        "wires": []
    },
    {
        "id": "14d8f9ef15b3c0ab",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "order": 3,
        "group": "2466c383a4bfc327",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Optic",
        "x": 1049.9999618530273,
        "y": 1700.9998321533203,
        "wires": []
    },
    {
        "id": "7cbf6fa7b59f2d30",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "order": 4,
        "group": "2466c383a4bfc327",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Count",
        "x": 1049.9999618530273,
        "y": 1740.9998321533203,
        "wires": []
    },
    {
        "id": "74fdb2c2c017cdc0",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "order": 5,
        "group": "2466c383a4bfc327",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_25_Pist_Bck",
        "x": 1059.9999618530273,
        "y": 1780.9998321533203,
        "wires": []
    },
    {
        "id": "3a06423e1e6c4374",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "order": 6,
        "group": "2466c383a4bfc327",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_25_Release_FB",
        "x": 1069.9999618530273,
        "y": 1820.9998321533203,
        "wires": []
    },
    {
        "id": "a14a1de8750ea4fd",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "order": 9,
        "group": "2466c383a4bfc327",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_25_CartDel",
        "x": 1059.9999618530273,
        "y": 1940.9998321533203,
        "wires": []
    },
    {
        "id": "7846dd068bf2fb64",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "item": "C_25_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_25_CartDel",
        "x": 480,
        "y": 1940,
        "wires": [
            [
                "8cbbd5eec3416c03"
            ]
        ]
    },
    {
        "id": "349d0ea8faf41d28",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "Proc AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 1580,
        "wires": []
    },
    {
        "id": "906f92bc35035b43",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_25_Cart_Stat\" : false,\n    \"O_25_Cart_Next\" : false,\n    \"O_25_Optic\" : false,\n    \"O_25_Count\" : false,\n    \"O_25_Pist_Bck\" : false,\n    \"F_25_Release_FB\" : false,\n    \"I_25_Cart_Proc\" : false,\n    \"C_25_Request\" : false,\n    \"C_25_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1540,
        "wires": [
            [
                "60d041f9d5c5e4f3"
            ]
        ]
    },
    {
        "id": "60d041f9d5c5e4f3",
        "type": "trigger",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1540,
        "wires": [
            [
                "bfc73101056aed9f"
            ]
        ]
    },
    {
        "id": "fecffc4f5679fadf",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "I_25_Cart_Proc",
        "label": "Release cart",
        "tooltip": "",
        "group": "2466c383a4bfc327",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1860,
        "wires": [
            [
                "5e54b40503cd058b"
            ]
        ]
    },
    {
        "id": "5e54b40503cd058b",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "item": "I_25_Cart_Proc",
        "datatype": "Boolean",
        "value": "",
        "name": "I_25_Cart_Proc",
        "x": 480,
        "y": 1860,
        "wires": [
            [
                "8cbbd5eec3416c03"
            ]
        ]
    },
    {
        "id": "34f016a636b8362f",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "C_25_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "2466c383a4bfc327",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1900,
        "wires": [
            [
                "aaaa6a56863c61f2"
            ]
        ]
    },
    {
        "id": "aaaa6a56863c61f2",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "item": "C_25_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_25_Request",
        "x": 480,
        "y": 1900,
        "wires": [
            [
                "8cbbd5eec3416c03"
            ]
        ]
    },
    {
        "id": "ddec7048ed30555c",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "item": "O_26_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Cart_Stat",
        "x": 480,
        "y": 2120,
        "wires": [
            [
                "fc6f5d324c7dddd7"
            ]
        ]
    },
    {
        "id": "98b165d1cbb726f0",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "item": "O_26_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Cart_Next",
        "x": 470,
        "y": 2160,
        "wires": [
            [
                "fc6f5d324c7dddd7"
            ]
        ]
    },
    {
        "id": "aba579596edb1277",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "item": "O_26_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Optic",
        "x": 490,
        "y": 2200,
        "wires": [
            [
                "fc6f5d324c7dddd7"
            ]
        ]
    },
    {
        "id": "396c57fdb5bf057c",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "item": "O_26_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Count",
        "x": 490,
        "y": 2240,
        "wires": [
            [
                "fc6f5d324c7dddd7"
            ]
        ]
    },
    {
        "id": "ec29c50447a9fd9c",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "item": "O_26_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_26_Pist_Bck",
        "x": 480,
        "y": 2280,
        "wires": [
            [
                "fc6f5d324c7dddd7"
            ]
        ]
    },
    {
        "id": "5d87fd39b39b17a9",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "item": "F_26_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_26_Release_FB",
        "x": 470,
        "y": 2320,
        "wires": [
            [
                "fc6f5d324c7dddd7"
            ]
        ]
    },
    {
        "id": "fc6f5d324c7dddd7",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "Visi AS-i",
        "mode": "link",
        "links": [
            "4c5c21df37d2d438"
        ],
        "x": 645,
        "y": 2280,
        "wires": []
    },
    {
        "id": "ae2b9c6d8a4df312",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2040,
        "wires": [
            [
                "09d57ca1954cdefd"
            ]
        ]
    },
    {
        "id": "09d57ca1954cdefd",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2040,
        "wires": [
            [
                "de6a686acfa1bf54"
            ]
        ]
    },
    {
        "id": "de6a686acfa1bf54",
        "type": "file in",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2040,
        "wires": [
            [
                "8c86b6378202d8ef"
            ]
        ]
    },
    {
        "id": "8c86b6378202d8ef",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2040,
        "wires": [
            [
                "48791a7bf1c095cf"
            ]
        ]
    },
    {
        "id": "48791a7bf1c095cf",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2040,
        "wires": [
            [
                "db7a13161df26211"
            ]
        ]
    },
    {
        "id": "db7a13161df26211",
        "type": "OpcUa-Client",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub Visi AS-i",
        "x": 1150,
        "y": 2040,
        "wires": [
            [
                "b3be22663e489c44",
                "3df94756375f606b"
            ],
            [
                "8be42feda7bbc701"
            ]
        ]
    },
    {
        "id": "cb2fc30973ae536b",
        "type": "switch",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "Visi AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_26_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_26_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_26_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_26_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_26_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_26_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_26_Cart_Visi",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_26_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_26_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 2280,
        "wires": [
            [
                "c6c405c67e345cfc"
            ],
            [
                "b51ce8170794e8a7"
            ],
            [
                "2e02992897e2bf9f"
            ],
            [
                "f2124666ad016c64"
            ],
            [
                "6f2b3543531e34a4"
            ],
            [
                "a4c2f28ef991cd76"
            ],
            [
                "2d8cb7bb21dda252"
            ],
            [
                "b9d1874457848bc3"
            ],
            [
                "dfbc7dbbca879bdf"
            ]
        ]
    },
    {
        "id": "c6c405c67e345cfc",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "order": 1,
        "group": "236bfa586e0c0569",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Cart_Stat",
        "x": 1060,
        "y": 2120,
        "wires": []
    },
    {
        "id": "b51ce8170794e8a7",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "order": 2,
        "group": "236bfa586e0c0569",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Cart_Next",
        "x": 1070,
        "y": 2160,
        "wires": []
    },
    {
        "id": "2e02992897e2bf9f",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "order": 3,
        "group": "236bfa586e0c0569",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Optic",
        "x": 1050,
        "y": 2200,
        "wires": []
    },
    {
        "id": "f2124666ad016c64",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "order": 4,
        "group": "236bfa586e0c0569",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Count",
        "x": 1050,
        "y": 2240,
        "wires": []
    },
    {
        "id": "6f2b3543531e34a4",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "order": 5,
        "group": "236bfa586e0c0569",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_26_Pist_Bck",
        "x": 1060,
        "y": 2280,
        "wires": []
    },
    {
        "id": "a4c2f28ef991cd76",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "order": 6,
        "group": "236bfa586e0c0569",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_26_Release_FB",
        "x": 1070,
        "y": 2320,
        "wires": []
    },
    {
        "id": "dfbc7dbbca879bdf",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "order": 9,
        "group": "236bfa586e0c0569",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_26_CartDel",
        "x": 1060,
        "y": 2440,
        "wires": []
    },
    {
        "id": "3304fe03d3be861b",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "item": "C_26_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_26_CartDel",
        "x": 480,
        "y": 2440,
        "wires": [
            [
                "fc6f5d324c7dddd7"
            ]
        ]
    },
    {
        "id": "b3be22663e489c44",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "Visi AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 2080,
        "wires": []
    },
    {
        "id": "8be42feda7bbc701",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_26_Cart_Stat\" : false,\n    \"O_26_Cart_Next\" : false,\n    \"O_26_Optic\" : false,\n    \"O_26_Count\" : false,\n    \"O_26_Pist_Bck\" : false,\n    \"F_26_Release_FB\" : false,\n    \"I_26_Cart_Visi\" : false,\n    \"C_26_Request\" : false,\n    \"C_26_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2040,
        "wires": [
            [
                "c02e3e8cc286fb4f"
            ]
        ]
    },
    {
        "id": "c02e3e8cc286fb4f",
        "type": "trigger",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2040,
        "wires": [
            [
                "ae2b9c6d8a4df312"
            ]
        ]
    },
    {
        "id": "c391846fa0abddf2",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "I_26_Cart_Visi",
        "label": "Release cart",
        "tooltip": "",
        "group": "236bfa586e0c0569",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2360,
        "wires": [
            [
                "899967db06e50b51"
            ]
        ]
    },
    {
        "id": "899967db06e50b51",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "item": "I_26_Cart_Visi",
        "datatype": "Boolean",
        "value": "",
        "name": "I_26_Cart_Visi",
        "x": 480,
        "y": 2360,
        "wires": [
            [
                "fc6f5d324c7dddd7"
            ]
        ]
    },
    {
        "id": "61f05e701a0bf22e",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "C_26_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "236bfa586e0c0569",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2400,
        "wires": [
            [
                "260281b655249067"
            ]
        ]
    },
    {
        "id": "260281b655249067",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "item": "C_26_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_26_Request",
        "x": 480,
        "y": 2400,
        "wires": [
            [
                "fc6f5d324c7dddd7"
            ]
        ]
    },
    {
        "id": "03f432acf002c473",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "item": "O_27_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Cart_Stat",
        "x": 480,
        "y": 2620,
        "wires": [
            [
                "60a33971d6a1e5a4"
            ]
        ]
    },
    {
        "id": "83ef7b60c579403d",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "item": "O_27_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Cart_Next",
        "x": 470,
        "y": 2660,
        "wires": [
            [
                "60a33971d6a1e5a4"
            ]
        ]
    },
    {
        "id": "c4da594cb20d1443",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "item": "O_27_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Optic",
        "x": 490,
        "y": 2700,
        "wires": [
            [
                "60a33971d6a1e5a4"
            ]
        ]
    },
    {
        "id": "2a76cfc9ab24516c",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "item": "O_27_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Count",
        "x": 490,
        "y": 2740,
        "wires": [
            [
                "60a33971d6a1e5a4"
            ]
        ]
    },
    {
        "id": "d8c70eb603c06ca7",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "item": "O_27_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_27_Pist_Bck",
        "x": 480,
        "y": 2780,
        "wires": [
            [
                "60a33971d6a1e5a4"
            ]
        ]
    },
    {
        "id": "b4cb09dc6ef55d9b",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "item": "F_27_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_27_Release_FB",
        "x": 470,
        "y": 2820,
        "wires": [
            [
                "60a33971d6a1e5a4"
            ]
        ]
    },
    {
        "id": "60a33971d6a1e5a4",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "Robo AS-i",
        "mode": "link",
        "links": [
            "4c5c21df37d2d438"
        ],
        "x": 645,
        "y": 2780,
        "wires": []
    },
    {
        "id": "b41fbb1dcd8fedf2",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2540,
        "wires": [
            [
                "b2ad782a8b469880"
            ]
        ]
    },
    {
        "id": "b2ad782a8b469880",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2540,
        "wires": [
            [
                "919d860f34cf9551"
            ]
        ]
    },
    {
        "id": "919d860f34cf9551",
        "type": "file in",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2540,
        "wires": [
            [
                "0907d5034a4f0bd0"
            ]
        ]
    },
    {
        "id": "0907d5034a4f0bd0",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2540,
        "wires": [
            [
                "6522a585a4df89fb"
            ]
        ]
    },
    {
        "id": "6522a585a4df89fb",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2540,
        "wires": [
            [
                "98f511dd5c0cfb9d"
            ]
        ]
    },
    {
        "id": "98f511dd5c0cfb9d",
        "type": "OpcUa-Client",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub Robo AS-i",
        "x": 1160,
        "y": 2540,
        "wires": [
            [
                "1ed339634553e295",
                "e5e242c00e6af390"
            ],
            [
                "2600e7d787ddf67e"
            ]
        ]
    },
    {
        "id": "8f5be4ea0057ef9c",
        "type": "switch",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "Robo AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_27_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_27_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_27_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_27_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_27_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_27_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_27_Cart_Robo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_27_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_27_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 2780,
        "wires": [
            [
                "07b415ea68498d69"
            ],
            [
                "d6f59366fe348b88"
            ],
            [
                "204ae3c72788fb69"
            ],
            [
                "f64ace6629aa15ac"
            ],
            [
                "1682d9ef47317bfb"
            ],
            [
                "8879a79d9831cc02"
            ],
            [
                "114a441bd5d1ee24"
            ],
            [
                "f180051222c46452"
            ],
            [
                "4a2fa06f1b3e4ab0"
            ]
        ]
    },
    {
        "id": "07b415ea68498d69",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "order": 1,
        "group": "35b3e6f6832f394f",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Cart_Stat",
        "x": 1060,
        "y": 2620,
        "wires": []
    },
    {
        "id": "d6f59366fe348b88",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "order": 2,
        "group": "35b3e6f6832f394f",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Cart_Next",
        "x": 1070,
        "y": 2660,
        "wires": []
    },
    {
        "id": "204ae3c72788fb69",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "order": 3,
        "group": "35b3e6f6832f394f",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Optic",
        "x": 1050,
        "y": 2700,
        "wires": []
    },
    {
        "id": "f64ace6629aa15ac",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "order": 4,
        "group": "35b3e6f6832f394f",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Count",
        "x": 1050,
        "y": 2740,
        "wires": []
    },
    {
        "id": "1682d9ef47317bfb",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "order": 5,
        "group": "35b3e6f6832f394f",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_27_Pist_Bck",
        "x": 1060,
        "y": 2780,
        "wires": []
    },
    {
        "id": "8879a79d9831cc02",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "order": 6,
        "group": "35b3e6f6832f394f",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_27_Release_FB",
        "x": 1070,
        "y": 2820,
        "wires": []
    },
    {
        "id": "4a2fa06f1b3e4ab0",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "order": 9,
        "group": "35b3e6f6832f394f",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_27_CartDel",
        "x": 1060,
        "y": 2940,
        "wires": []
    },
    {
        "id": "d0cf83b792f50beb",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "item": "C_27_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_27_CartDel",
        "x": 480,
        "y": 2940,
        "wires": [
            [
                "60a33971d6a1e5a4"
            ]
        ]
    },
    {
        "id": "1ed339634553e295",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "Robo AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 2580,
        "wires": []
    },
    {
        "id": "2600e7d787ddf67e",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_27_Cart_Stat\" : false,\n    \"O_27_Cart_Next\" : false,\n    \"O_27_Optic\" : false,\n    \"O_27_Count\" : false,\n    \"O_27_Pist_Bck\" : false,\n    \"F_27_Release_FB\" : false,\n    \"I_27_Cart_Robo\" : false,\n    \"C_27_Request\" : false,\n    \"C_27_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2540,
        "wires": [
            [
                "18849a722e925abd"
            ]
        ]
    },
    {
        "id": "18849a722e925abd",
        "type": "trigger",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2540,
        "wires": [
            [
                "b41fbb1dcd8fedf2"
            ]
        ]
    },
    {
        "id": "8cec1f9ee2af7664",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "I_27_Cart_Robo",
        "label": "Release cart",
        "tooltip": "",
        "group": "35b3e6f6832f394f",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2860,
        "wires": [
            [
                "6f0d730a268046ce"
            ]
        ]
    },
    {
        "id": "6f0d730a268046ce",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "item": "I_27_Cart_Robo",
        "datatype": "Boolean",
        "value": "",
        "name": "I_27_Cart_Robo",
        "x": 480,
        "y": 2860,
        "wires": [
            [
                "60a33971d6a1e5a4"
            ]
        ]
    },
    {
        "id": "625c315b08507c95",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "C_27_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "35b3e6f6832f394f",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 2900,
        "wires": [
            [
                "26997d0460b8049a"
            ]
        ]
    },
    {
        "id": "26997d0460b8049a",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "item": "C_27_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_27_Request",
        "x": 480,
        "y": 2900,
        "wires": [
            [
                "60a33971d6a1e5a4"
            ]
        ]
    },
    {
        "id": "85e8c153eb53140f",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "item": "O_28_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Cart_Stat",
        "x": 480,
        "y": 3120,
        "wires": [
            [
                "604c8d2ae87eb956"
            ]
        ]
    },
    {
        "id": "6a0ff09abf48e1d0",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "item": "O_28_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Cart_Next",
        "x": 470,
        "y": 3160,
        "wires": [
            [
                "604c8d2ae87eb956"
            ]
        ]
    },
    {
        "id": "110476b48e7f3b9d",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "item": "O_28_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Optic",
        "x": 490,
        "y": 3200,
        "wires": [
            [
                "604c8d2ae87eb956"
            ]
        ]
    },
    {
        "id": "d6925ad64fe647d2",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "item": "O_28_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Count",
        "x": 490,
        "y": 3240,
        "wires": [
            [
                "604c8d2ae87eb956"
            ]
        ]
    },
    {
        "id": "373bb3c60e5f59e3",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "item": "O_28_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_28_Pist_Bck",
        "x": 480,
        "y": 3280,
        "wires": [
            [
                "604c8d2ae87eb956"
            ]
        ]
    },
    {
        "id": "2c2cb0a3c60d2fec",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "item": "F_28_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_28_Release_FB",
        "x": 470,
        "y": 3320,
        "wires": [
            [
                "604c8d2ae87eb956"
            ]
        ]
    },
    {
        "id": "604c8d2ae87eb956",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "Robo AS-i",
        "mode": "link",
        "links": [
            "4c5c21df37d2d438"
        ],
        "x": 645,
        "y": 3280,
        "wires": []
    },
    {
        "id": "d0d8142d2b6d6240",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3040,
        "wires": [
            [
                "31983a2584182dee"
            ]
        ]
    },
    {
        "id": "31983a2584182dee",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3040,
        "wires": [
            [
                "1b7f686264aaa6a2"
            ]
        ]
    },
    {
        "id": "1b7f686264aaa6a2",
        "type": "file in",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3040,
        "wires": [
            [
                "ef2f9a4fdf548420"
            ]
        ]
    },
    {
        "id": "ef2f9a4fdf548420",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3040,
        "wires": [
            [
                "103755169c3e878f"
            ]
        ]
    },
    {
        "id": "103755169c3e878f",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3040,
        "wires": [
            [
                "d18b0da034a8e99b"
            ]
        ]
    },
    {
        "id": "d18b0da034a8e99b",
        "type": "OpcUa-Client",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub Stor AS-i",
        "x": 1150,
        "y": 3040,
        "wires": [
            [
                "7fed8ee1e437e29f",
                "8e7042e9033cbba5"
            ],
            [
                "989359ba9bf737eb"
            ]
        ]
    },
    {
        "id": "4233b286553d6a4e",
        "type": "switch",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "Stor AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_28_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_28_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_28_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_28_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_28_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_28_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_28_Cart_Stor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_28_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_28_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 3280,
        "wires": [
            [
                "99b4dc9824fb9ab2"
            ],
            [
                "f85094ccd16a93f4"
            ],
            [
                "430c2fe40216e585"
            ],
            [
                "f6834d2a4e0762ce"
            ],
            [
                "1cb47bf21f55f49d"
            ],
            [
                "245045fd2aee151f"
            ],
            [
                "462f66dd811af0c1"
            ],
            [
                "faa4a8bcbf564b1b"
            ],
            [
                "686079e2a8362f74"
            ]
        ]
    },
    {
        "id": "99b4dc9824fb9ab2",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "order": 1,
        "group": "bb2bed45f470cf69",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Cart_Stat",
        "x": 1060,
        "y": 3120,
        "wires": []
    },
    {
        "id": "f85094ccd16a93f4",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "order": 2,
        "group": "bb2bed45f470cf69",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Cart_Next",
        "x": 1070,
        "y": 3160,
        "wires": []
    },
    {
        "id": "430c2fe40216e585",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "order": 3,
        "group": "bb2bed45f470cf69",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Optic",
        "x": 1050,
        "y": 3200,
        "wires": []
    },
    {
        "id": "f6834d2a4e0762ce",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "order": 4,
        "group": "bb2bed45f470cf69",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Count",
        "x": 1050,
        "y": 3240,
        "wires": []
    },
    {
        "id": "1cb47bf21f55f49d",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "order": 5,
        "group": "bb2bed45f470cf69",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_28_Pist_Bck",
        "x": 1060,
        "y": 3280,
        "wires": []
    },
    {
        "id": "245045fd2aee151f",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "order": 6,
        "group": "bb2bed45f470cf69",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_28_Release_FB",
        "x": 1070,
        "y": 3320,
        "wires": []
    },
    {
        "id": "686079e2a8362f74",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "order": 9,
        "group": "bb2bed45f470cf69",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_28_CartDel",
        "x": 1060,
        "y": 3440,
        "wires": []
    },
    {
        "id": "a76a724f6c310794",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "item": "C_28_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_28_CartDel",
        "x": 480,
        "y": 3440,
        "wires": [
            [
                "604c8d2ae87eb956"
            ]
        ]
    },
    {
        "id": "7fed8ee1e437e29f",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "Stor AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 3080,
        "wires": []
    },
    {
        "id": "989359ba9bf737eb",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_28_Cart_Stat\" : false,\n    \"O_28_Cart_Next\" : false,\n    \"O_28_Optic\" : false,\n    \"O_28_Count\" : false,\n    \"O_28_Pist_Bck\" : false,\n    \"F_28_Release_FB\" : false,\n    \"I_28_Cart_Stor\" : false,\n    \"C_28_Request\" : false,\n    \"C_28_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3040,
        "wires": [
            [
                "69f88d24f6510913"
            ]
        ]
    },
    {
        "id": "69f88d24f6510913",
        "type": "trigger",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3040,
        "wires": [
            [
                "d0d8142d2b6d6240"
            ]
        ]
    },
    {
        "id": "d0c143f0991a630d",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "I_28_Cart_Stor",
        "label": "Release cart",
        "tooltip": "",
        "group": "bb2bed45f470cf69",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 3360,
        "wires": [
            [
                "1dfe949361c7ea0f"
            ]
        ]
    },
    {
        "id": "1dfe949361c7ea0f",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "item": "I_28_Cart_Stor",
        "datatype": "Boolean",
        "value": "",
        "name": "I_28_Cart_Stor",
        "x": 480,
        "y": 3360,
        "wires": [
            [
                "604c8d2ae87eb956"
            ]
        ]
    },
    {
        "id": "0ab26985bab00e6f",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "C_28_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "bb2bed45f470cf69",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 3400,
        "wires": [
            [
                "22fe3a05199382f6"
            ]
        ]
    },
    {
        "id": "22fe3a05199382f6",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "item": "C_28_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_28_Request",
        "x": 480,
        "y": 3400,
        "wires": [
            [
                "604c8d2ae87eb956"
            ]
        ]
    },
    {
        "id": "a74b0d36d2a1073d",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "item": "O_29_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Cart_Stat",
        "x": 480,
        "y": 3620,
        "wires": [
            [
                "b49b3c3b68877bef"
            ]
        ]
    },
    {
        "id": "76c44c7028aa1d13",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "item": "O_29_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Cart_Next",
        "x": 470,
        "y": 3660,
        "wires": [
            [
                "b49b3c3b68877bef"
            ]
        ]
    },
    {
        "id": "6ac6418dc769d84d",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "item": "O_29_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Optic",
        "x": 490,
        "y": 3700,
        "wires": [
            [
                "b49b3c3b68877bef"
            ]
        ]
    },
    {
        "id": "c530a7717fec6256",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "item": "O_29_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Count",
        "x": 490,
        "y": 3740,
        "wires": [
            [
                "b49b3c3b68877bef"
            ]
        ]
    },
    {
        "id": "96901028e5c04a41",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "item": "O_29_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_29_Pist_Bck",
        "x": 480,
        "y": 3780,
        "wires": [
            [
                "b49b3c3b68877bef"
            ]
        ]
    },
    {
        "id": "5546c45c65fd6ac3",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "item": "F_29_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "F_29_Release_FB",
        "x": 470,
        "y": 3820,
        "wires": [
            [
                "b49b3c3b68877bef"
            ]
        ]
    },
    {
        "id": "b49b3c3b68877bef",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "Robo AS-i",
        "mode": "link",
        "links": [
            "4c5c21df37d2d438"
        ],
        "x": 645,
        "y": 3780,
        "wires": []
    },
    {
        "id": "874ad73e71e6fae7",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3540,
        "wires": [
            [
                "88bd0bc79b36058d"
            ]
        ]
    },
    {
        "id": "88bd0bc79b36058d",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3540,
        "wires": [
            [
                "2f99734077cd19c4"
            ]
        ]
    },
    {
        "id": "2f99734077cd19c4",
        "type": "file in",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3540,
        "wires": [
            [
                "db289fca486386f9"
            ]
        ]
    },
    {
        "id": "db289fca486386f9",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3540,
        "wires": [
            [
                "204c461c2f9ed53a"
            ]
        ]
    },
    {
        "id": "204c461c2f9ed53a",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3540,
        "wires": [
            [
                "31bc101492eb4e17"
            ]
        ]
    },
    {
        "id": "31bc101492eb4e17",
        "type": "OpcUa-Client",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub Sort AS-i",
        "x": 1150,
        "y": 3540,
        "wires": [
            [
                "18b6eca6895fd4ad",
                "d15d12032702475e"
            ],
            [
                "a10a76f16988a20f"
            ]
        ]
    },
    {
        "id": "10c6eba8a4695a11",
        "type": "switch",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "Sort AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_29_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_29_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_29_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_29_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_29_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_29_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_29_Cart_Sort",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_29_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_29_CartDel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 3780,
        "wires": [
            [
                "bc6c7157d674f4a2"
            ],
            [
                "84b02069b0982da7"
            ],
            [
                "2f9aa231679c0a88"
            ],
            [
                "b15f393bd0b812dc"
            ],
            [
                "099c5c8561494938"
            ],
            [
                "c375381fefca1283"
            ],
            [
                "e06323f985254be0"
            ],
            [
                "7beab7c14cddddc3"
            ],
            [
                "e0536a05a720bde7"
            ]
        ]
    },
    {
        "id": "bc6c7157d674f4a2",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "order": 1,
        "group": "1038ff625298fec6",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Cart_Stat",
        "x": 1060,
        "y": 3620,
        "wires": []
    },
    {
        "id": "84b02069b0982da7",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "order": 2,
        "group": "1038ff625298fec6",
        "width": 0,
        "height": 0,
        "label": "Cart next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Cart_Next",
        "x": 1070,
        "y": 3660,
        "wires": []
    },
    {
        "id": "2f9aa231679c0a88",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "order": 3,
        "group": "1038ff625298fec6",
        "width": 0,
        "height": 0,
        "label": "Optic sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Optic",
        "x": 1050,
        "y": 3700,
        "wires": []
    },
    {
        "id": "b15f393bd0b812dc",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "order": 4,
        "group": "1038ff625298fec6",
        "width": 0,
        "height": 0,
        "label": "Count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Count",
        "x": 1050,
        "y": 3740,
        "wires": []
    },
    {
        "id": "099c5c8561494938",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "order": 5,
        "group": "1038ff625298fec6",
        "width": 0,
        "height": 0,
        "label": "Piston Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_29_Pist_Bck",
        "x": 1060,
        "y": 3780,
        "wires": []
    },
    {
        "id": "c375381fefca1283",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "order": 6,
        "group": "1038ff625298fec6",
        "width": 0,
        "height": 0,
        "label": "Pin feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_29_Release_FB",
        "x": 1070,
        "y": 3820,
        "wires": []
    },
    {
        "id": "e0536a05a720bde7",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "order": 9,
        "group": "1038ff625298fec6",
        "width": 0,
        "height": 0,
        "label": "Cart Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_29_CartDel",
        "x": 1060,
        "y": 3940,
        "wires": []
    },
    {
        "id": "7a6c1796e9396249",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "item": "C_29_CartDel",
        "datatype": "Boolean",
        "value": "",
        "name": "C_29_CartDel",
        "x": 480,
        "y": 3940,
        "wires": [
            [
                "b49b3c3b68877bef"
            ]
        ]
    },
    {
        "id": "18b6eca6895fd4ad",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "Sort AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 3580,
        "wires": []
    },
    {
        "id": "a10a76f16988a20f",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n    \"O_29_Cart_Stat\" : false,\n    \"O_29_Cart_Next\" : false,\n    \"O_29_Optic\" : false,\n    \"O_29_Count\" : false,\n    \"O_29_Pist_Bck\" : false,\n    \"F_29_Release_FB\" : false,\n    \"I_29_Cart_Sort\" : false,\n    \"C_29_Request\" : false,\n    \"C_29_CartDel\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3540,
        "wires": [
            [
                "f765bc3307036516"
            ]
        ]
    },
    {
        "id": "f765bc3307036516",
        "type": "trigger",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3540,
        "wires": [
            [
                "874ad73e71e6fae7"
            ]
        ]
    },
    {
        "id": "87f25cdfc42867f0",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "I_29_Cart_Sort",
        "label": "Release cart",
        "tooltip": "",
        "group": "1038ff625298fec6",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 3860,
        "wires": [
            [
                "692d1d13b05a510e"
            ]
        ]
    },
    {
        "id": "692d1d13b05a510e",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "item": "I_29_Cart_Sort",
        "datatype": "Boolean",
        "value": "",
        "name": "I_29_Cart_Sort",
        "x": 480,
        "y": 3860,
        "wires": [
            [
                "b49b3c3b68877bef"
            ]
        ]
    },
    {
        "id": "44fb1fa93f6162e6",
        "type": "ui_switch",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "C_29_Request",
        "label": "Request cart",
        "tooltip": "",
        "group": "1038ff625298fec6",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 3900,
        "wires": [
            [
                "d32ef2df3f93b031"
            ]
        ]
    },
    {
        "id": "d32ef2df3f93b031",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "item": "C_29_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_29_Request",
        "x": 480,
        "y": 3900,
        "wires": [
            [
                "b49b3c3b68877bef"
            ]
        ]
    },
    {
        "id": "7c750c3e8cde039b",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "b560905a2f6f812f",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "2e9fe836f0288a20",
            "2de161fa1c98b690",
            "a6a58cfb4cc3efac",
            "ef6a481ffc44c485",
            "df09806f61a4c33b",
            "c317c7b3f9785949",
            "919f996fc2952091",
            "f7317d988ff64823"
        ],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "a22ac95b62bf863b",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "b560905a2f6f812f",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "260e70b1ff8dbe8f",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "Sub In PA",
        "links": [
            "2a211358756f0c48"
        ],
        "x": 755,
        "y": 900,
        "wires": [
            [
                "df0418046c11cebd"
            ]
        ]
    },
    {
        "id": "2a211358756f0c48",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "Sub Out PA",
        "mode": "link",
        "links": [
            "260e70b1ff8dbe8f"
        ],
        "x": 1295,
        "y": 780,
        "wires": []
    },
    {
        "id": "a6a58cfb4cc3efac",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "S7 Test AS-i",
        "links": [
            "7c750c3e8cde039b"
        ],
        "x": 55,
        "y": 1280,
        "wires": [
            [
                "69ea8f3a7a6478f9",
                "8d366e8e2a5da35b",
                "82b8942c8d5e3023",
                "91d152fcd0ad3405",
                "06d346784bd4007c",
                "7ac22b68de309b99",
                "8804a35aa3960090"
            ]
        ]
    },
    {
        "id": "69ea8f3a7a6478f9",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "C_24_CartDel",
        "func": "if (msg.topic === \"C_24_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"C_24_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1440,
        "wires": [
            [
                "12e70ac22c120972"
            ]
        ]
    },
    {
        "id": "a5f0f0cbfab6fb19",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "Sub In Test AS-i",
        "links": [
            "a1ac9e55542de985"
        ],
        "x": 755,
        "y": 1280,
        "wires": [
            [
                "126d389975786aa1"
            ]
        ]
    },
    {
        "id": "a1ac9e55542de985",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "Sub Out Test AS-i",
        "mode": "link",
        "links": [
            "a5f0f0cbfab6fb19"
        ],
        "x": 1335,
        "y": 1040,
        "wires": []
    },
    {
        "id": "b50caea74e62c6aa",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "O_25_Cart_Stat",
        "func": "if (msg.topic === \"O_25_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_25_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1620,
        "wires": [
            [
                "59664db4436d8d7f"
            ]
        ]
    },
    {
        "id": "cd7da842deb7fd2c",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "O_25_Cart_Next",
        "func": "if (msg.topic === \"O_25_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_25_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1660,
        "wires": [
            [
                "2e6f2542f74afe45"
            ]
        ]
    },
    {
        "id": "1f27691773aead78",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "O_25_Optic",
        "func": "if (msg.topic === \"O_25_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_25_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1700,
        "wires": [
            [
                "42d60879509840a1"
            ]
        ]
    },
    {
        "id": "b9e26bd4023e2962",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "O_25_Count",
        "func": "if (msg.topic === \"O_25_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_25_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1740,
        "wires": [
            [
                "b25f2b9993ab29e4"
            ]
        ]
    },
    {
        "id": "3ccc3b93b951196b",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "O_25_Pist_Bck",
        "func": "if (msg.topic === \"O_25_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_25_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1780,
        "wires": [
            [
                "2c2be224375b81da"
            ]
        ]
    },
    {
        "id": "4b3661709c4079d8",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "F_25_Release_FB",
        "func": "if (msg.topic === \"F_25_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg}\n\nif (msg.topic === \"F_25_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1820,
        "wires": [
            [
                "a6303da2766202ac"
            ]
        ]
    },
    {
        "id": "1e3536a2b3a5b37f",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "C_25_CartDel",
        "func": "if (msg.topic === \"C_25_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg}\n\nif (msg.topic === \"C_25_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1940,
        "wires": [
            [
                "7846dd068bf2fb64"
            ]
        ]
    },
    {
        "id": "ef6a481ffc44c485",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "S7 Proc AS-i",
        "links": [
            "7c750c3e8cde039b"
        ],
        "x": 55,
        "y": 1780,
        "wires": [
            [
                "b50caea74e62c6aa",
                "cd7da842deb7fd2c",
                "1f27691773aead78",
                "b9e26bd4023e2962",
                "3ccc3b93b951196b",
                "4b3661709c4079d8",
                "1e3536a2b3a5b37f"
            ]
        ]
    },
    {
        "id": "888f3ad74e03f53c",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "O_26_Cart_Stat",
        "func": "if (msg.topic === \"O_26_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_26_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2120,
        "wires": [
            [
                "ddec7048ed30555c"
            ]
        ]
    },
    {
        "id": "84db40dcf71e194b",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "O_26_Cart_Next",
        "func": "if (msg.topic === \"O_26_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_26_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2160,
        "wires": [
            [
                "98b165d1cbb726f0"
            ]
        ]
    },
    {
        "id": "89bbb943d725dab1",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "O_26_Optic",
        "func": "if (msg.topic === \"O_26_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_26_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2200,
        "wires": [
            [
                "aba579596edb1277"
            ]
        ]
    },
    {
        "id": "19e58cc702e4369f",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "O_26_Count",
        "func": "if (msg.topic === \"O_26_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_26_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2240,
        "wires": [
            [
                "396c57fdb5bf057c"
            ]
        ]
    },
    {
        "id": "a49f9b613b701b5c",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "O_26_Pist_Bck",
        "func": "if (msg.topic === \"O_26_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_26_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2280,
        "wires": [
            [
                "ec29c50447a9fd9c"
            ]
        ]
    },
    {
        "id": "bac59fb66692fcb8",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "F_26_Release_FB",
        "func": "if (msg.topic === \"F_26_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_26_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2320,
        "wires": [
            [
                "5d87fd39b39b17a9"
            ]
        ]
    },
    {
        "id": "494bfa4e672417f2",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "C_26_CartDel",
        "func": "if (msg.topic === \"C_26_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg}\n\nif (msg.topic === \"C_26_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2440,
        "wires": [
            [
                "3304fe03d3be861b"
            ]
        ]
    },
    {
        "id": "df09806f61a4c33b",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "S7 Visi AS-i",
        "links": [
            "7c750c3e8cde039b"
        ],
        "x": 55,
        "y": 2280,
        "wires": [
            [
                "888f3ad74e03f53c",
                "84db40dcf71e194b",
                "89bbb943d725dab1",
                "19e58cc702e4369f",
                "a49f9b613b701b5c",
                "bac59fb66692fcb8",
                "494bfa4e672417f2"
            ]
        ]
    },
    {
        "id": "59e7b40f121d63c2",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "O_27_Cart_Stat",
        "func": "if (msg.topic === \"O_27_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_27_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2620,
        "wires": [
            [
                "03f432acf002c473"
            ]
        ]
    },
    {
        "id": "8c58be97902506ee",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "O_27_Cart_Next",
        "func": "if (msg.topic === \"O_27_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_27_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2660,
        "wires": [
            [
                "83ef7b60c579403d"
            ]
        ]
    },
    {
        "id": "6f9cb23d93999ff7",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "O_27_Optic",
        "func": "if (msg.topic === \"O_27_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_27_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2700,
        "wires": [
            [
                "c4da594cb20d1443"
            ]
        ]
    },
    {
        "id": "713012f2c03e894c",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "O_27_Count",
        "func": "if (msg.topic === \"O_27_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_27_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2740,
        "wires": [
            [
                "2a76cfc9ab24516c"
            ]
        ]
    },
    {
        "id": "13e438d1ae7ee679",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "O_27_Pist_Bck",
        "func": "if (msg.topic === \"O_27_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_27_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2780,
        "wires": [
            [
                "d8c70eb603c06ca7"
            ]
        ]
    },
    {
        "id": "a17c02ce6ca9edc6",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "F_27_Release_FB",
        "func": "if (msg.topic === \"F_27_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_27_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2820,
        "wires": [
            [
                "b4cb09dc6ef55d9b"
            ]
        ]
    },
    {
        "id": "57540185ec67eb39",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "C_27_CartDel",
        "func": "if (msg.topic === \"C_27_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"C_27_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2940,
        "wires": [
            [
                "d0cf83b792f50beb"
            ]
        ]
    },
    {
        "id": "c317c7b3f9785949",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "S7 Robo AS-i",
        "links": [
            "7c750c3e8cde039b"
        ],
        "x": 55,
        "y": 2780,
        "wires": [
            [
                "59e7b40f121d63c2",
                "8c58be97902506ee",
                "6f9cb23d93999ff7",
                "713012f2c03e894c",
                "13e438d1ae7ee679",
                "a17c02ce6ca9edc6",
                "57540185ec67eb39"
            ]
        ]
    },
    {
        "id": "53e3fed1e065a151",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "O_28_Cart_Stat",
        "func": "if (msg.topic === \"O_28_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3120,
        "wires": [
            [
                "85e8c153eb53140f"
            ]
        ]
    },
    {
        "id": "ab643c045e0f02da",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "O_28_Cart_Next",
        "func": "if (msg.topic === \"O_28_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3160,
        "wires": [
            [
                "6a0ff09abf48e1d0"
            ]
        ]
    },
    {
        "id": "250c7e72ed323f34",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "O_28_Optic",
        "func": "if (msg.topic === \"O_28_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3200,
        "wires": [
            [
                "110476b48e7f3b9d"
            ]
        ]
    },
    {
        "id": "97646bb50b06a2e9",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "O_28_Count",
        "func": "if (msg.topic === \"O_28_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3240,
        "wires": [
            [
                "d6925ad64fe647d2"
            ]
        ]
    },
    {
        "id": "a284510f6150140c",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "O_28_Pist_Bck",
        "func": "if (msg.topic === \"O_28_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_28_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3280,
        "wires": [
            [
                "373bb3c60e5f59e3"
            ]
        ]
    },
    {
        "id": "25315409f41284b0",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "F_28_Release_FB",
        "func": "if (msg.topic === \"F_28_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_28_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3320,
        "wires": [
            [
                "2c2cb0a3c60d2fec"
            ]
        ]
    },
    {
        "id": "0c0a76aed5d0b3d9",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "C_28_CartDel",
        "func": "if (msg.topic === \"C_28_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"C_28_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3440,
        "wires": [
            [
                "a76a724f6c310794"
            ]
        ]
    },
    {
        "id": "919f996fc2952091",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "S7 Stor AS-i",
        "links": [
            "7c750c3e8cde039b"
        ],
        "x": 55,
        "y": 3280,
        "wires": [
            [
                "53e3fed1e065a151",
                "ab643c045e0f02da",
                "250c7e72ed323f34",
                "97646bb50b06a2e9",
                "a284510f6150140c",
                "25315409f41284b0",
                "0c0a76aed5d0b3d9"
            ]
        ]
    },
    {
        "id": "2b4ab9fac061d69f",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "O_29_Cart_Stat",
        "func": "if (msg.topic === \"O_29_Cart_Stat\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Cart_Stat\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3620,
        "wires": [
            [
                "a74b0d36d2a1073d"
            ]
        ]
    },
    {
        "id": "a5a5a1b1071f261e",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "O_29_Cart_Next",
        "func": "if (msg.topic === \"O_29_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3660,
        "wires": [
            [
                "76c44c7028aa1d13"
            ]
        ]
    },
    {
        "id": "43a31129fae616c0",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "O_29_Optic",
        "func": "if (msg.topic === \"O_29_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3700,
        "wires": [
            [
                "6ac6418dc769d84d"
            ]
        ]
    },
    {
        "id": "09f0cbb0d7c93f0c",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "O_29_Count",
        "func": "if (msg.topic === \"O_29_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3740,
        "wires": [
            [
                "c530a7717fec6256"
            ]
        ]
    },
    {
        "id": "606f773f6519cbd2",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "O_29_Pist_Bck",
        "func": "if (msg.topic === \"O_29_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_29_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3780,
        "wires": [
            [
                "96901028e5c04a41"
            ]
        ]
    },
    {
        "id": "c1576a2ba88a386d",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "F_29_Release_FB",
        "func": "if (msg.topic === \"F_29_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_29_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3820,
        "wires": [
            [
                "5546c45c65fd6ac3"
            ]
        ]
    },
    {
        "id": "faa4d047527d022c",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "C_29_CartDel",
        "func": "if (msg.topic === \"C_29_CartDel\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"C_29_CartDel\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3940,
        "wires": [
            [
                "7a6c1796e9396249"
            ]
        ]
    },
    {
        "id": "f7317d988ff64823",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "S7 Sort AS-i",
        "links": [
            "7c750c3e8cde039b"
        ],
        "x": 55,
        "y": 3780,
        "wires": [
            [
                "2b4ab9fac061d69f",
                "a5a5a1b1071f261e",
                "43a31129fae616c0",
                "09f0cbb0d7c93f0c",
                "606f773f6519cbd2",
                "c1576a2ba88a386d",
                "faa4d047527d022c"
            ]
        ]
    },
    {
        "id": "bdd77a6c163030c5",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "Sub In Proc AS-i",
        "links": [
            "c2b8594538708401"
        ],
        "x": 754.9999618530273,
        "y": 1780.9998321533203,
        "wires": [
            [
                "638e73202bbbc7cf"
            ]
        ]
    },
    {
        "id": "c2b8594538708401",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "Sub Out Proc AS-i",
        "mode": "link",
        "links": [
            "bdd77a6c163030c5"
        ],
        "x": 1335,
        "y": 1540,
        "wires": []
    },
    {
        "id": "eb03d76f9a51b380",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "Sub In Visi AS-i",
        "links": [
            "3df94756375f606b"
        ],
        "x": 755,
        "y": 2280,
        "wires": [
            [
                "cb2fc30973ae536b"
            ]
        ]
    },
    {
        "id": "3df94756375f606b",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "Sub Out Visi AS-i",
        "mode": "link",
        "links": [
            "eb03d76f9a51b380"
        ],
        "x": 1335,
        "y": 2040,
        "wires": []
    },
    {
        "id": "d7fc8571693b9d7c",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "Sub In Robo AS-i",
        "links": [
            "e5e242c00e6af390"
        ],
        "x": 755,
        "y": 2780,
        "wires": [
            [
                "8f5be4ea0057ef9c"
            ]
        ]
    },
    {
        "id": "e5e242c00e6af390",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "Sub Out Robo AS-i",
        "mode": "link",
        "links": [
            "d7fc8571693b9d7c"
        ],
        "x": 1355,
        "y": 2540,
        "wires": []
    },
    {
        "id": "a17337d491c62ddc",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "Sub In Stor AS-i",
        "links": [
            "8e7042e9033cbba5"
        ],
        "x": 755,
        "y": 3280,
        "wires": [
            [
                "4233b286553d6a4e"
            ]
        ]
    },
    {
        "id": "8e7042e9033cbba5",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "Sub Out Stor AS-i",
        "mode": "link",
        "links": [
            "a17337d491c62ddc"
        ],
        "x": 1335,
        "y": 3040,
        "wires": []
    },
    {
        "id": "fead3009a83b2cce",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "Sub In Sort AS-i",
        "links": [
            "d15d12032702475e"
        ],
        "x": 755,
        "y": 3780,
        "wires": [
            [
                "10c6eba8a4695a11"
            ]
        ]
    },
    {
        "id": "d15d12032702475e",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "Sub Out Sort AS-i",
        "mode": "link",
        "links": [
            "fead3009a83b2cce"
        ],
        "x": 1335,
        "y": 3540,
        "wires": []
    },
    {
        "id": "8d366e8e2a5da35b",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "O_24_Cart_Stat",
        "func": "if (msg.topic === \"O_24_Cart_Stat\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_24_Cart_Stat\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "e668be1192b0bf3f"
            ]
        ]
    },
    {
        "id": "82b8942c8d5e3023",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "O_24_Cart_Next",
        "func": "if (msg.topic === \"O_24_Cart_Next\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_24_Cart_Next\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1160,
        "wires": [
            [
                "82f96a38e10ac879"
            ]
        ]
    },
    {
        "id": "91d152fcd0ad3405",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "O_24_Optic",
        "func": "if (msg.topic === \"O_24_Optic\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_24_Optic\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1200,
        "wires": [
            [
                "7a0ad6d968d1e080"
            ]
        ]
    },
    {
        "id": "06d346784bd4007c",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "O_24_Count",
        "func": "if (msg.topic === \"O_24_Count\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_24_Count\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1240,
        "wires": [
            [
                "48480d2aeb16b112"
            ]
        ]
    },
    {
        "id": "7ac22b68de309b99",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "O_24_Pist_Bck",
        "func": "if (msg.topic === \"O_24_Pist_Bck\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"O_24_Pist_Bck\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "266d7f744d39a86f"
            ]
        ]
    },
    {
        "id": "8804a35aa3960090",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "F_24_Release_FB",
        "func": "if (msg.topic === \"F_24_Release_FB\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"F_24_Release_FB\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1320,
        "wires": [
            [
                "bf228f767b435da2"
            ]
        ]
    },
    {
        "id": "f25b5456f23b4e74",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "33402bc357dd96aa"
            ]
        ]
    },
    {
        "id": "33402bc357dd96aa",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "93252b1968230560",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "491063f0d72282fd",
            "8aeb27b3ad28b21b",
            "d056968906d658b9",
            "1233eb03e49c7514",
            "a9f51aa830aaebb5",
            "188c0b5315480130",
            "1362cf0d3534dd01",
            "af6c5bc33da7ec39",
            "329e22de4694e918"
        ],
        "x": 1115,
        "y": 380,
        "wires": []
    },
    {
        "id": "8aeb27b3ad28b21b",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "Read A",
        "links": [
            "33402bc357dd96aa"
        ],
        "x": 55,
        "y": 780,
        "wires": [
            [
                "e3922c1a1b02fcca"
            ]
        ]
    },
    {
        "id": "1233eb03e49c7514",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "Read Test AS-i",
        "links": [
            "33402bc357dd96aa"
        ],
        "x": 55,
        "y": 1040,
        "wires": [
            [
                "6b6e6658b0db0202"
            ]
        ]
    },
    {
        "id": "a9f51aa830aaebb5",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "Read Proc AS-i",
        "links": [
            "33402bc357dd96aa"
        ],
        "x": 55,
        "y": 1540,
        "wires": [
            [
                "906f92bc35035b43"
            ]
        ]
    },
    {
        "id": "188c0b5315480130",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "Read Visi AS-i",
        "links": [
            "33402bc357dd96aa"
        ],
        "x": 55,
        "y": 2040,
        "wires": [
            [
                "8be42feda7bbc701"
            ]
        ]
    },
    {
        "id": "1362cf0d3534dd01",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "Read Robo AS-i",
        "links": [
            "33402bc357dd96aa"
        ],
        "x": 55,
        "y": 2540,
        "wires": [
            [
                "2600e7d787ddf67e"
            ]
        ]
    },
    {
        "id": "af6c5bc33da7ec39",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "Read Stor AS-i",
        "links": [
            "33402bc357dd96aa"
        ],
        "x": 55,
        "y": 3040,
        "wires": [
            [
                "989359ba9bf737eb"
            ]
        ]
    },
    {
        "id": "329e22de4694e918",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "Read Sort AS-i",
        "links": [
            "33402bc357dd96aa"
        ],
        "x": 55,
        "y": 3540,
        "wires": [
            [
                "a10a76f16988a20f"
            ]
        ]
    },
    {
        "id": "1e1d1586ad9d8546",
        "type": "mqtt in",
        "z": "c7cba4aaafa7d336",
        "g": "b560905a2f6f812f",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "4de211dc0a9652ab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "50a02c973e8ea5a6"
            ]
        ]
    },
    {
        "id": "50a02c973e8ea5a6",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "b560905a2f6f812f",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "7c750c3e8cde039b",
                "a22ac95b62bf863b"
            ]
        ]
    },
    {
        "id": "be8eb813ff11f05c",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "I_20_Led_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 860,
        "wires": [
            [
                "6c7bb8d1bbb01e06"
            ]
        ]
    },
    {
        "id": "15f9a8b41bc2add0",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "I_20_Led_Off",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\n\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\n\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 900,
        "wires": [
            [
                "6c7bb8d1bbb01e06"
            ]
        ]
    },
    {
        "id": "87106d7d4327e22d",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "I_20_Conveyor",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\n\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\n\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 940,
        "wires": [
            [
                "6c7bb8d1bbb01e06"
            ]
        ]
    },
    {
        "id": "e90723a8f3872e32",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "I_24_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1360,
        "wires": [
            [
                "b3c66ce9bc247ae8"
            ]
        ]
    },
    {
        "id": "1ff1adcd566d1674",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "C_24_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1400,
        "wires": [
            [
                "b3c66ce9bc247ae8"
            ]
        ]
    },
    {
        "id": "b05dbf73d79d818e",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "I_25_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1860,
        "wires": [
            [
                "65452c5b099fcec9"
            ]
        ]
    },
    {
        "id": "acc38bbccdeec0bc",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "C_25_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1900,
        "wires": [
            [
                "65452c5b099fcec9"
            ]
        ]
    },
    {
        "id": "2d8cb7bb21dda252",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "I_26_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2360,
        "wires": [
            [
                "3f21a90b9d4c4425"
            ]
        ]
    },
    {
        "id": "b9d1874457848bc3",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "C_26_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2400,
        "wires": [
            [
                "3f21a90b9d4c4425"
            ]
        ]
    },
    {
        "id": "114a441bd5d1ee24",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "I_27_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2860,
        "wires": [
            [
                "a521a3086ad6eefd"
            ]
        ]
    },
    {
        "id": "f180051222c46452",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "C_27_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2900,
        "wires": [
            [
                "a521a3086ad6eefd"
            ]
        ]
    },
    {
        "id": "462f66dd811af0c1",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "I_28_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3360,
        "wires": [
            [
                "56dcb45ae43428b6"
            ]
        ]
    },
    {
        "id": "faa4a8bcbf564b1b",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "C_28_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3400,
        "wires": [
            [
                "56dcb45ae43428b6"
            ]
        ]
    },
    {
        "id": "e06323f985254be0",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "I_29_Cart_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3860,
        "wires": [
            [
                "7fc80455e324b382"
            ]
        ]
    },
    {
        "id": "7beab7c14cddddc3",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "C_29_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3900,
        "wires": [
            [
                "7fc80455e324b382"
            ]
        ]
    },
    {
        "id": "defba664a618284a",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "b560905a2f6f812f",
        "name": "S7 Actuators",
        "links": [
            "7fc80455e324b382",
            "56dcb45ae43428b6",
            "a521a3086ad6eefd",
            "3f21a90b9d4c4425",
            "65452c5b099fcec9",
            "b3c66ce9bc247ae8",
            "6c7bb8d1bbb01e06"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "72cb437b37e0124b"
            ]
        ]
    },
    {
        "id": "72cb437b37e0124b",
        "type": "mqtt out",
        "z": "c7cba4aaafa7d336",
        "g": "b560905a2f6f812f",
        "name": "S7Variables",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4de211dc0a9652ab",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "7fc80455e324b382",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "29013442cbae9878",
        "name": "S7 Sort AS-i",
        "mode": "link",
        "links": [
            "defba664a618284a"
        ],
        "x": 1235,
        "y": 3780,
        "wires": []
    },
    {
        "id": "56dcb45ae43428b6",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "66483056bd426d80",
        "name": "S7 Stor AS-i",
        "mode": "link",
        "links": [
            "defba664a618284a"
        ],
        "x": 1235,
        "y": 3280,
        "wires": []
    },
    {
        "id": "a521a3086ad6eefd",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "53a45fdfbbbdfef5",
        "name": "S7 Robo AS-i",
        "mode": "link",
        "links": [
            "defba664a618284a"
        ],
        "x": 1235,
        "y": 2780,
        "wires": []
    },
    {
        "id": "3f21a90b9d4c4425",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "d3629dca6cd9937b",
        "name": "S7 Visi AS-i",
        "mode": "link",
        "links": [
            "defba664a618284a"
        ],
        "x": 1235,
        "y": 2280,
        "wires": []
    },
    {
        "id": "65452c5b099fcec9",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "40a6a4ea34da2cec",
        "name": "S7 Proc AS-i",
        "mode": "link",
        "links": [
            "defba664a618284a"
        ],
        "x": 1235,
        "y": 1780,
        "wires": []
    },
    {
        "id": "b3c66ce9bc247ae8",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "64af3f7680204396",
        "name": "S7 Test AS-i",
        "mode": "link",
        "links": [
            "defba664a618284a"
        ],
        "x": 1235,
        "y": 1280,
        "wires": []
    },
    {
        "id": "6c7bb8d1bbb01e06",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "800e85020857b6f8",
        "name": "S7 A",
        "mode": "link",
        "links": [
            "defba664a618284a"
        ],
        "x": 1235,
        "y": 900,
        "wires": []
    },
    {
        "id": "a5f6d9f2d8398e6b",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "item": "O_20_On",
        "datatype": "Boolean",
        "value": "",
        "name": "O_20_On",
        "x": 480,
        "y": 4380,
        "wires": [
            [
                "c68aa3710bc77f83"
            ]
        ]
    },
    {
        "id": "dd028c7ea9900769",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "item": "O_20_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "O_20_Off",
        "x": 480,
        "y": 4420,
        "wires": [
            [
                "c68aa3710bc77f83"
            ]
        ]
    },
    {
        "id": "bfd89bd82b03fb8f",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "item": "O_20_Controler_On",
        "datatype": "Boolean",
        "value": "",
        "name": "O_20_Controler_On",
        "x": 440,
        "y": 4460,
        "wires": [
            [
                "c68aa3710bc77f83"
            ]
        ]
    },
    {
        "id": "c68aa3710bc77f83",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "20 Physical Sensor",
        "mode": "link",
        "links": [
            "4c5c21df37d2d438"
        ],
        "x": 625,
        "y": 4420,
        "wires": []
    },
    {
        "id": "f0eb97f74d4a14ef",
        "type": "switch",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "20 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_20_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_20_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_20_Controler_On",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 4420,
        "wires": [
            [
                "9b69dbd32689c2a9"
            ],
            [
                "a9abc0520823345c"
            ],
            [
                "e90783e7b752fe39"
            ]
        ]
    },
    {
        "id": "9b69dbd32689c2a9",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "order": 0,
        "group": "cfce8c6f81e41d32",
        "width": 0,
        "height": 0,
        "label": "On Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_20_On",
        "x": 1040,
        "y": 4380,
        "wires": []
    },
    {
        "id": "a9abc0520823345c",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "order": 0,
        "group": "cfce8c6f81e41d32",
        "width": 0,
        "height": 0,
        "label": "Off Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_20_Off",
        "x": 1040,
        "y": 4420,
        "wires": []
    },
    {
        "id": "e90783e7b752fe39",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "order": 0,
        "group": "cfce8c6f81e41d32",
        "width": 0,
        "height": 0,
        "label": "Controler On",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_20_Controler_On",
        "x": 1080,
        "y": 4460,
        "wires": []
    },
    {
        "id": "18ca636c50789ba6",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_20_On\" : false,\n            \"O_20_Off\" : false,\n            \"O_20_Controler_On\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 4300,
        "wires": [
            [
                "6f5a0914bae50d6c"
            ]
        ]
    },
    {
        "id": "6b5c6c3da3e96ba7",
        "type": "OpcUa-Client",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub S",
        "x": 1130,
        "y": 4300,
        "wires": [
            [
                "4e1379379d096b4c",
                "4f88a61a33427fe6"
            ],
            [
                "18ca636c50789ba6"
            ]
        ]
    },
    {
        "id": "6f5a0914bae50d6c",
        "type": "trigger",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 4300,
        "wires": [
            [
                "01c27ec2ba14439f"
            ]
        ]
    },
    {
        "id": "9f734ab8f80d8ea5",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 4300,
        "wires": [
            [
                "6b5c6c3da3e96ba7"
            ]
        ]
    },
    {
        "id": "4e1379379d096b4c",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "20 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 4340,
        "wires": []
    },
    {
        "id": "01c27ec2ba14439f",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 4300,
        "wires": [
            [
                "904f8f499605b4c1"
            ]
        ]
    },
    {
        "id": "03d29f90c2b89da0",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 4300,
        "wires": [
            [
                "9f734ab8f80d8ea5"
            ]
        ]
    },
    {
        "id": "904f8f499605b4c1",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 4300,
        "wires": [
            [
                "2815713a16ecda20"
            ]
        ]
    },
    {
        "id": "2815713a16ecda20",
        "type": "file in",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 4300,
        "wires": [
            [
                "03d29f90c2b89da0"
            ]
        ]
    },
    {
        "id": "9c98f8d64a7b2cda",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "O_20_On",
        "func": "if (msg.topic === \"O_20_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_20_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 4380,
        "wires": [
            [
                "a5f6d9f2d8398e6b"
            ]
        ]
    },
    {
        "id": "2e9fe836f0288a20",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "S7 PS",
        "links": [
            "7c750c3e8cde039b"
        ],
        "x": 55,
        "y": 4420,
        "wires": [
            [
                "9c98f8d64a7b2cda",
                "d27bdf526efffcc4",
                "88a88917ef367e8a"
            ]
        ]
    },
    {
        "id": "d27bdf526efffcc4",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "O_20_Off",
        "func": "if (msg.topic === \"O_20_Off\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n}\n\nif (msg.topic === \"O_20_Off\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 4420,
        "wires": [
            [
                "dd028c7ea9900769"
            ]
        ]
    },
    {
        "id": "88a88917ef367e8a",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "O_20_Controler_On",
        "func": "if (msg.topic === \"O_20_Controler_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_20_Controler_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 4460,
        "wires": [
            [
                "bfd89bd82b03fb8f"
            ]
        ]
    },
    {
        "id": "8fe96253482ab8ad",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "Sub In PS",
        "links": [
            "4f88a61a33427fe6"
        ],
        "x": 755,
        "y": 4420,
        "wires": [
            [
                "f0eb97f74d4a14ef"
            ]
        ]
    },
    {
        "id": "4f88a61a33427fe6",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "Sub Out PS",
        "mode": "link",
        "links": [
            "8fe96253482ab8ad"
        ],
        "x": 1295,
        "y": 4300,
        "wires": []
    },
    {
        "id": "491063f0d72282fd",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "09c3bfc43109a2e7",
        "name": "Read S",
        "links": [
            "33402bc357dd96aa"
        ],
        "x": 55,
        "y": 4300,
        "wires": [
            [
                "18ca636c50789ba6"
            ]
        ]
    },
    {
        "id": "70a22d17272a97aa",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "item": "F_22_Led_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_22_Led_On",
        "x": 460,
        "y": 4120,
        "wires": [
            [
                "902277105c459939"
            ]
        ]
    },
    {
        "id": "43db5cda6c4ae1c9",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "item": "F_22_Led_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "F_22_Led_Off",
        "x": 460,
        "y": 4160,
        "wires": [
            [
                "902277105c459939"
            ]
        ]
    },
    {
        "id": "6149b238f070308b",
        "type": "OpcUa-Item",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "item": "F_22_Conveyor",
        "datatype": "Boolean",
        "value": "",
        "name": "F_22_Conveyor",
        "x": 460,
        "y": 4200,
        "wires": [
            [
                "902277105c459939"
            ]
        ]
    },
    {
        "id": "902277105c459939",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "50 Physical Feedback",
        "mode": "link",
        "links": [
            "4c5c21df37d2d438"
        ],
        "x": 625,
        "y": 4160,
        "wires": []
    },
    {
        "id": "698ad4ba2c4792b2",
        "type": "switch",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "20 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_22_Led_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_22_Led_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_22_Conveyor",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 4160,
        "wires": [
            [
                "fd723db4e12f9046"
            ],
            [
                "8f28a753f04a5446"
            ],
            [
                "b4e5dd801eeceacf"
            ]
        ]
    },
    {
        "id": "fd723db4e12f9046",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "order": 0,
        "group": "358b17fad41c86b2",
        "width": 0,
        "height": 0,
        "label": "On LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_22_Led_On",
        "x": 1060,
        "y": 4120,
        "wires": []
    },
    {
        "id": "8f28a753f04a5446",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "order": 0,
        "group": "358b17fad41c86b2",
        "width": 0,
        "height": 0,
        "label": "Off LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_22_Led_Off",
        "x": 1060,
        "y": 4160,
        "wires": []
    },
    {
        "id": "b4e5dd801eeceacf",
        "type": "ui_led",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "order": 0,
        "group": "358b17fad41c86b2",
        "width": 0,
        "height": 0,
        "label": "Conveyor On",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_22_Conveyor",
        "x": 1060,
        "y": 4200,
        "wires": []
    },
    {
        "id": "8de6fb424fa6bca8",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 4040,
        "wires": [
            [
                "c4a5ec6f4d79763b"
            ]
        ]
    },
    {
        "id": "3823545e98483698",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 4040,
        "wires": [
            [
                "8de6fb424fa6bca8"
            ]
        ]
    },
    {
        "id": "c4a5ec6f4d79763b",
        "type": "OpcUa-Client",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub F",
        "x": 1130,
        "y": 4040,
        "wires": [
            [
                "917ff329fceb2f1c",
                "1df7c43e7e4bedcc"
            ],
            [
                "f01884650a728dc5"
            ]
        ]
    },
    {
        "id": "85d5b19bac7c79a7",
        "type": "file in",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 4040,
        "wires": [
            [
                "3823545e98483698"
            ]
        ]
    },
    {
        "id": "917ff329fceb2f1c",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "20 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 4080,
        "wires": []
    },
    {
        "id": "f01884650a728dc5",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n        \"F_22_Led_On\" : false,\n        \"F_22_Led_Off\" : false,\n        \"F_22_Conveyor\" : false,\n}};\nelse return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 4040,
        "wires": [
            [
                "78c628d450915b2b"
            ]
        ]
    },
    {
        "id": "c90104bdfb954c5c",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 4040,
        "wires": [
            [
                "85d5b19bac7c79a7"
            ]
        ]
    },
    {
        "id": "78c628d450915b2b",
        "type": "trigger",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 4040,
        "wires": [
            [
                "63bb63ae4da021fa"
            ]
        ]
    },
    {
        "id": "63bb63ae4da021fa",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 4040,
        "wires": [
            [
                "c90104bdfb954c5c"
            ]
        ]
    },
    {
        "id": "57df8714169ef3e5",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "Sub In PF",
        "links": [
            "1df7c43e7e4bedcc"
        ],
        "x": 755,
        "y": 4160,
        "wires": [
            [
                "698ad4ba2c4792b2"
            ]
        ]
    },
    {
        "id": "1df7c43e7e4bedcc",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "Sub Out PF",
        "mode": "link",
        "links": [
            "57df8714169ef3e5"
        ],
        "x": 1295,
        "y": 4040,
        "wires": []
    },
    {
        "id": "2de161fa1c98b690",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "S7 F",
        "links": [
            "7c750c3e8cde039b"
        ],
        "x": 55,
        "y": 4160,
        "wires": [
            [
                "44135846d865f568",
                "d473262c1dbb5474",
                "4e245c030a9f88cb"
            ]
        ]
    },
    {
        "id": "44135846d865f568",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "F_22_Led_On",
        "func": "if (msg.topic === \"F_22_Led_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_22_Led_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4120,
        "wires": [
            [
                "70a22d17272a97aa"
            ]
        ]
    },
    {
        "id": "d473262c1dbb5474",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "F_22_Led_Off",
        "func": "if (msg.topic === \"F_22_Led_Off\" && msg.payload === true) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"True\" })\n    return msg\n    }\n\nif (msg.topic === \"F_22_Led_Off\" && msg.payload === false) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"False\" })\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4160,
        "wires": [
            [
                "43db5cda6c4ae1c9"
            ]
        ]
    },
    {
        "id": "4e245c030a9f88cb",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "F_22_Conveyor",
        "func": "if (msg.topic === \"F_22_Conveyor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_22_Conveyor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4200,
        "wires": [
            [
                "6149b238f070308b"
            ]
        ]
    },
    {
        "id": "d056968906d658b9",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "bb75e62daf9598b2",
        "name": "Read F",
        "links": [
            "33402bc357dd96aa"
        ],
        "x": 55,
        "y": 4040,
        "wires": [
            [
                "f01884650a728dc5"
            ]
        ]
    },
    {
        "id": "c9eb3fc1b97c1e4e",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"SA_20_Led_On\" : false,\n    \"SA_20_Led_Off\" : false,\n    \"SA_20_Conveyor\" : false,\n    \"SA_24_Cart_Test\" : false,\n    \"SA_25_Cart_Proc\" : false,\n    \"SA_26_Cart_Visi\" : false,\n    \"SA_27_Cart_Robo\" : false,\n    \"SA_28_Cart_Stor\" : false,\n    \"SA_29_Cart_Sort\" : false,\n    \"SC_24_Request\" : false,\n    \"SC_24_CartDel\" : false,\n    \"SC_25_Request\" : false,\n    \"SC_25_CartDel\" : false,\n    \"SC_26_Request\" : false,\n    \"SC_26_CartDel\" : false,\n    \"SC_27_Request\" : false,\n    \"SC_27_CartDel\" : false,\n    \"SC_28_Request\" : false,\n    \"SC_28_CartDel\" : false,\n    \"SC_29_Request\" : false,\n    \"SC_29_CartDel\" : false,\n    \"SS_20_On\" : false,\n    \"SS_20_Off\" : false,\n    \"SS_20_Controler_On\" : false,\n    \"SS_24_Cart_Stat\" : false,\n    \"SS_24_Cart_Next\" : false,\n    \"SS_24_Optic\" : false,\n    \"SS_24_Count\" : false,\n    \"SS_24_Pist_Bck\" : false,\n    \"SS_25_Cart_Stat\" : false,\n    \"SS_25_Cart_Next\" : false,\n    \"SS_25_Optic\" : false,\n    \"SS_25_Count\" : false,\n    \"SS_25_Pist_Bck\" : false,\n    \"SS_26_Cart_Stat\" : false,\n    \"SS_26_Cart_Next\" : false,\n    \"SS_26_Optic\" : false,\n    \"SS_26_Count\" : false,\n    \"SS_26_Pist_Bck\" : false,\n    \"SS_27_Cart_Stat\" : false,\n    \"SS_27_Cart_Next\" : false,\n    \"SS_27_Optic\" : false,\n    \"SS_27_Count\" : false,\n    \"SS_27_Pist_Bck\" : false,\n    \"SS_28_Cart_Stat\" : false,\n    \"SS_28_Cart_Next\" : false,\n    \"SS_28_Optic\" : false,\n    \"SS_28_Count\" : false,\n    \"SS_28_Pist_Bck\" : false,\n    \"SS_29_Cart_Stat\" : false,\n    \"SS_29_Cart_Next\" : false,\n    \"SS_29_Optic\" : false,\n    \"SS_29_Count\" : false,\n    \"SS_29_Pist_Bck\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 680,
        "wires": [
            [
                "c87e434fa8507abb"
            ]
        ]
    },
    {
        "id": "7d3ab858dc66cfd0",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "Simulated CSV Link",
        "links": [
            "4aedc1458cae8355"
        ],
        "x": 65,
        "y": 680,
        "wires": [
            [
                "c9eb3fc1b97c1e4e"
            ]
        ]
    },
    {
        "id": "c87e434fa8507abb",
        "type": "trigger",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 680,
        "wires": [
            [
                "ef5046050f14e0d4"
            ]
        ]
    },
    {
        "id": "ef5046050f14e0d4",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"SA_\")) variableClass = \"Simulated_Actuators\";\n        if (key.includes(\"SC_\")) variableClass = \"Simulated_Control\";\n        if (key.includes(\"SS_\")) variableClass = \"Simulated_Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 680,
        "wires": [
            [
                "7e57766fcf1e2105"
            ]
        ]
    },
    {
        "id": "7e57766fcf1e2105",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Master_Station/SimulationData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 680,
        "wires": [
            [
                "5ca6f6ffc03e591a"
            ]
        ]
    },
    {
        "id": "5ca6f6ffc03e591a",
        "type": "OpcUa-Client",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 680,
        "wires": [
            [
                "b00894032aec742a"
            ],
            [
                "4aedc1458cae8355"
            ]
        ]
    },
    {
        "id": "b00894032aec742a",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 640,
        "wires": [
            [
                "3c92096f65150684",
                "4ec848f241b19fb2"
            ]
        ]
    },
    {
        "id": "4aedc1458cae8355",
        "type": "link out",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "Simulated CSV Link",
        "mode": "link",
        "links": [
            "64fab0b6b2bf804c",
            "7d3ab858dc66cfd0"
        ],
        "x": 935,
        "y": 680,
        "wires": []
    },
    {
        "id": "3c92096f65150684",
        "type": "file",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "Simulated Varaibles List",
        "filename": "/root/ProjetoGemeo/AAS/Master/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1230,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "4ec848f241b19fb2",
        "type": "debug",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "5669a317bc530e04",
        "type": "comment",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 640,
        "wires": []
    },
    {
        "id": "599eebfbe15ad346",
        "type": "comment",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 540,
        "wires": []
    },
    {
        "id": "64fab0b6b2bf804c",
        "type": "link in",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "Simulated CSV Link",
        "links": [
            "4aedc1458cae8355"
        ],
        "x": 65,
        "y": 580,
        "wires": [
            [
                "58b789e733124a30"
            ]
        ]
    },
    {
        "id": "58b789e733124a30",
        "type": "function",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 580,
        "wires": [
            [
                "872c63020430eca9"
            ]
        ]
    },
    {
        "id": "872c63020430eca9",
        "type": "trigger",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 580,
        "wires": [
            [
                "9e1d3ff02e9c0c80"
            ]
        ]
    },
    {
        "id": "9e1d3ff02e9c0c80",
        "type": "file",
        "z": "c7cba4aaafa7d336",
        "g": "81f4dd717f34106f",
        "name": "Simulated CSV",
        "filename": "/root/ProjetoGemeo/AAS/Master/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 440,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "c805b1791097ee24",
        "type": "debug",
        "z": "aefdc2670756e2cc",
        "g": "6648d1b14f7b4c0c",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "b2414296d6934ef6",
        "type": "OpcUa-Server",
        "z": "aefdc2670756e2cc",
        "g": "6648d1b14f7b4c0c",
        "port": "53880",
        "name": "Server : Robot",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Robot/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Robot",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "c805b1791097ee24"
            ]
        ]
    },
    {
        "id": "a4a0694987af1fec",
        "type": "debug",
        "z": "aefdc2670756e2cc",
        "g": "b642bc0042165ff1",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "b9b9ab27d3fa9222",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "b642bc0042165ff1",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "3672d5df516b03e0",
            "962fca7a76d14982",
            "46bdd0b015e4cdc6",
            "9d043759fd48b908",
            "81a9822be9f8d644",
            "e088e3d807302316"
        ],
        "x": 825,
        "y": 60,
        "wires": []
    },
    {
        "id": "b756e6f2c185655e",
        "type": "mqtt in",
        "z": "aefdc2670756e2cc",
        "g": "b642bc0042165ff1",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "4de211dc0a9652ab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "7f8634f00fed6af1"
            ]
        ]
    },
    {
        "id": "7f8634f00fed6af1",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "b642bc0042165ff1",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "b9b9ab27d3fa9222",
                "a4a0694987af1fec"
            ]
        ]
    },
    {
        "id": "4ffda44bcb54b673",
        "type": "mqtt out",
        "z": "aefdc2670756e2cc",
        "name": "S7Variables",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4de211dc0a9652ab",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "3e2eb62c82c95c2e",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "b642bc0042165ff1",
        "name": "S7 Actuators",
        "links": [
            "438ee78fa3d875d2",
            "3c5276be7583bd64",
            "211e404cce5a25d6"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "4ffda44bcb54b673"
            ]
        ]
    },
    {
        "id": "672e01ee87110670",
        "type": "comment",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "38480de98d34502a",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (key.includes(\"R_\")) variableClass = \"RFID\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "c8d61e2d5475f017"
            ]
        ]
    },
    {
        "id": "c8d61e2d5475f017",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Robot_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "a9231162b76c9776"
            ]
        ]
    },
    {
        "id": "0b26627a5bd39024",
        "type": "file",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Robot/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "53287a21a289981a",
        "type": "comment",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "a9231162b76c9776",
        "type": "OpcUa-Client",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "fa2aed924f6e2669"
            ],
            [
                "4267339902bbc63c",
                "7820259435e08d02"
            ]
        ]
    },
    {
        "id": "fa2aed924f6e2669",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "2106f4a6e208753c",
                "8db3b48b94e9266e"
            ]
        ]
    },
    {
        "id": "2106f4a6e208753c",
        "type": "file",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Robot/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "8db3b48b94e9266e",
        "type": "debug",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "d246dd8eee0231ff",
        "type": "comment",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "0927510fa3df56ab",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "ddbb5db472ecb00a"
            ]
        ]
    },
    {
        "id": "e96bafcca16f7c14",
        "type": "OpcUa-Client",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "endpoint": "a2328ac43b0b7d73",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "b53bdda2de0f43b6"
            ],
            []
        ]
    },
    {
        "id": "b53bdda2de0f43b6",
        "type": "debug",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "b8e40abae024d9d9",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "4ef108b754c4c8a7"
            ]
        ]
    },
    {
        "id": "4ef108b754c4c8a7",
        "type": "file in",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Robot/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "0927510fa3df56ab"
            ]
        ]
    },
    {
        "id": "ddbb5db472ecb00a",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "e96bafcca16f7c14"
            ]
        ]
    },
    {
        "id": "d1203d5dd9794667",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "CSV Link",
        "links": [
            "4267339902bbc63c"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "2c35b0c1b48b04bd"
            ]
        ]
    },
    {
        "id": "2c35b0c1b48b04bd",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "84a9598ef8ab589c"
            ]
        ]
    },
    {
        "id": "84a9598ef8ab589c",
        "type": "trigger",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "0b26627a5bd39024"
            ]
        ]
    },
    {
        "id": "4267339902bbc63c",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "d1203d5dd9794667",
            "0d4acc439131b757"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "0d4acc439131b757",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "CSV Link",
        "links": [
            "4267339902bbc63c"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "dc2b691e431dbf0e"
            ]
        ]
    },
    {
        "id": "dc2b691e431dbf0e",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n\t\"I_30_Led_Start\" : false,\n\t\"I_30_Led_Reset\" : false,\n\t\"I_30_Led_Extra1\" : false,\n\t\"I_30_Led_Extra2\" : false,\n\t\"I_30_Spring_Cyl\" : false,\n\t\"I_30_Cover_Cyl\" : false,\n\t\"A_34_Request\" : false,\n\t\"A_34_No_Cart\" : false,\n\t\"A_34_Cart_Full\" : false,\n\t\"A_34_Cart_Stat\" : false,\n\t\"A_34_Cart_Next\" : false,\n\t\"A_34_Optic\" : false,\n\t\"A_34_Count\" : false,\n\t\"A_34_Pist_Bck\" : false,\n\t\"A_34_Release_FB\" : false,\n\t\"C_30_Robot1\" : false,\n\t\"C_30_Robot2\" : false,\n\t\"F_33_Led_Start\" : false,\n\t\"F_33_Led_Reset\" : false,\n\t\"F_33_Led_Extra1\" : false,\n\t\"F_33_Led_Extra2\" : false,\n\t\"F_33_Spring_Cyl\" : false,\n\t\"F_33_Cover_Cyl\" : false,\n\t\"O_31_Start\" : false,\n\t\"O_31_Stop\" : true,\n\t\"O_31_Reset\" : false,\n\t\"O_31_Part_in_Claw\" : false,\n\t\"O_31_Orientation\" : false,\n\t\"O_32_Sp_Cyl_Bck\" : true,\n\t\"O_32_Sp_Cyl_Fwd\" : false,\n\t\"O_32_Co_Cyl_Bck\" : false,\n\t\"O_32_Co_Cyl_Fwd\" : true,\n\t\"O_32_Sp_PickUp\" : false,\n\t\"O_32_Co_PickUp\" : false,\n\t\"O_32_CoMag_Empty\" : false,\n\t\"R_Ant1_TagReport\" : \"\",\n\t\"R_Ant1_R_TagID\" : \"\",\n\t\"R_Ant1_R_UserData\" : \"\",\n\t\"R_Ant1_W_TagID\" : \"\",\n\t\"R_Ant1_W_UserData\" : \"\",\n\t\"R_Ant2_TagReport\" : \"\",\n\t\"R_Ant2_R_TagID\" : \"\",\n\t\"R_Ant2_R_UserData\" : \"\",\n\t\"R_Ant2_W_TagID\" : \"\",\n\t\"R_Ant2_W_UserData\" : \"\",\n\t\"R_Ant3_TagReport\" : \"\",\n\t\"R_Ant3_R_TagID\" : \"\",\n\t\"R_Ant3_R_UserData\" : \"\",\n\t\"R_Ant3_W_TagID\" : \"\",\n\t\"R_Ant3_W_UserData\" : \"\",\n\t\"R_Ant4_TagReport\" : \"\",\n\t\"R_Ant4_R_TagID\" : \"\",\n\t\"R_Ant4_R_UserData\" : \"\",\n\t\"R_Ant4_W_TagID\" : \"\",\n\t\"R_Ant4_W_UserData\" : \"\",\n\t\"R_WrtieStatus\" : \"\",\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "c3227cb79c53ddb0"
            ]
        ]
    },
    {
        "id": "c3227cb79c53ddb0",
        "type": "trigger",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "38480de98d34502a"
            ]
        ]
    },
    {
        "id": "7820259435e08d02",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "3337773dd175de51"
            ]
        ]
    },
    {
        "id": "869b79db9fce6786",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Write_Robo",
        "links": [
            "8c78111309acc11e",
            "799b0da9b80a9434",
            "069910bb08aa1094",
            "cf73413344189e5d",
            "7de6c10476cddbcb",
            "2ca2da41218cda4d",
            "f94676193db1dd15"
        ],
        "x": 65,
        "y": 440,
        "wires": [
            [
                "b8e40abae024d9d9"
            ]
        ]
    },
    {
        "id": "3337773dd175de51",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "157f66a69d4ea344",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "a43a342c71ebf7a2",
            "3f6614f1f505c8df",
            "217ee029dcca907f",
            "42851707eb28a768",
            "71bebcc343a8c8a5",
            "22fc03578d38a4e9",
            "fe9e151c35a0ebe0",
            "480dafa3c8bcd426"
        ],
        "x": 1135,
        "y": 400,
        "wires": []
    },
    {
        "id": "1b48b9cdb32d5e4a",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "item": "I_30_Spring_Cyl",
        "datatype": "Boolean",
        "value": "",
        "name": "I_30_Spring_Cyl",
        "x": 470,
        "y": 860,
        "wires": [
            [
                "069910bb08aa1094"
            ]
        ]
    },
    {
        "id": "eec1aec8736d9482",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "item": "I_30_Cover_Cyl",
        "datatype": "Boolean",
        "value": "",
        "name": "I_30_Cover_Cyl",
        "x": 480,
        "y": 900,
        "wires": [
            [
                "069910bb08aa1094"
            ]
        ]
    },
    {
        "id": "069910bb08aa1094",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "30 Physical Actuators",
        "mode": "link",
        "links": [
            "869b79db9fce6786"
        ],
        "x": 645,
        "y": 880,
        "wires": []
    },
    {
        "id": "38b4f6ca1a90f975",
        "type": "switch",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "30 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_30_Spring_Cyl",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_30_Cover_Cyl",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 880,
        "wires": [
            [
                "61e204068e17eeed"
            ],
            [
                "07a8381c927446b9"
            ]
        ]
    },
    {
        "id": "83ab97cb5db7d82b",
        "type": "ui_switch",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "I_30_Spring_Cyl",
        "label": "Spring Cylinder",
        "tooltip": "",
        "group": "ed1581f0ab58c113",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 860,
        "wires": [
            [
                "1b48b9cdb32d5e4a"
            ]
        ]
    },
    {
        "id": "2fb506dd7a70c033",
        "type": "ui_switch",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "I_30_Cover_Cyl",
        "label": "Cover Cylinder",
        "tooltip": "",
        "group": "ed1581f0ab58c113",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 900,
        "wires": [
            [
                "eec1aec8736d9482"
            ]
        ]
    },
    {
        "id": "d87eebbe00d601b8",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 780,
        "wires": [
            [
                "d87d3adf4f3ff09f"
            ]
        ]
    },
    {
        "id": "257bc111308d3d8b",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 780,
        "wires": [
            [
                "d87eebbe00d601b8"
            ]
        ]
    },
    {
        "id": "d87d3adf4f3ff09f",
        "type": "OpcUa-Client",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PA",
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "47e85a3b67685565",
                "a87433d2b8ad7265"
            ],
            [
                "96c2defefc67de60"
            ]
        ]
    },
    {
        "id": "47e85a3b67685565",
        "type": "debug",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "30 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 820,
        "wires": []
    },
    {
        "id": "96c2defefc67de60",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n        \t\"I_30_Spring_Cyl\" : false,\n\t        \"I_30_Cover_Cyl\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 780,
        "wires": [
            [
                "09e4844601b8099e"
            ]
        ]
    },
    {
        "id": "d279be999dd8b589",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 780,
        "wires": [
            [
                "f196ecf99386c192"
            ]
        ]
    },
    {
        "id": "09e4844601b8099e",
        "type": "trigger",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 780,
        "wires": [
            [
                "118053d17461b7d2"
            ]
        ]
    },
    {
        "id": "118053d17461b7d2",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 780,
        "wires": [
            [
                "d279be999dd8b589"
            ]
        ]
    },
    {
        "id": "a87433d2b8ad7265",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "Sub Out 30 PA",
        "mode": "link",
        "links": [
            "62126fd1f0c9e467"
        ],
        "x": 1295,
        "y": 780,
        "wires": []
    },
    {
        "id": "62126fd1f0c9e467",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "Sub In 30 PA",
        "links": [
            "a87433d2b8ad7265"
        ],
        "x": 775,
        "y": 880,
        "wires": [
            [
                "38b4f6ca1a90f975"
            ]
        ]
    },
    {
        "id": "217ee029dcca907f",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "Read PA",
        "links": [
            "3337773dd175de51"
        ],
        "x": 55,
        "y": 780,
        "wires": [
            [
                "96c2defefc67de60"
            ]
        ]
    },
    {
        "id": "61e204068e17eeed",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "I_30_Spring_Cyl",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 860,
        "wires": [
            [
                "438ee78fa3d875d2"
            ]
        ]
    },
    {
        "id": "07a8381c927446b9",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "I_30_Cover_Cyl",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 900,
        "wires": [
            [
                "438ee78fa3d875d2"
            ]
        ]
    },
    {
        "id": "438ee78fa3d875d2",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "3e2eb62c82c95c2e"
        ],
        "x": 1225,
        "y": 880,
        "wires": []
    },
    {
        "id": "f196ecf99386c192",
        "type": "file in",
        "z": "aefdc2670756e2cc",
        "g": "a840280332c72426",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Robot/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 780,
        "wires": [
            [
                "257bc111308d3d8b"
            ]
        ]
    },
    {
        "id": "8a30d21730e0181d",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "item": "I_30_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_30_Led_Start",
        "x": 480,
        "y": 1080,
        "wires": [
            [
                "cf73413344189e5d"
            ]
        ]
    },
    {
        "id": "e914a6cfbcb51b26",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "item": "I_30_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_30_Led_Reset",
        "x": 480,
        "y": 1120,
        "wires": [
            [
                "cf73413344189e5d"
            ]
        ]
    },
    {
        "id": "cf73413344189e5d",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "30 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "869b79db9fce6786"
        ],
        "x": 645,
        "y": 1140,
        "wires": []
    },
    {
        "id": "504c0f9844bb81fe",
        "type": "switch",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "30 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_30_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_30_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_30_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_30_Led_Extra2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 1140,
        "wires": [
            [
                "fb674ab08a122ae3"
            ],
            [
                "61ac2d457645c962"
            ],
            [
                "306df2579dea5445"
            ],
            [
                "a65e8a71cc29bfeb"
            ]
        ]
    },
    {
        "id": "86437c3bf0ef23b0",
        "type": "ui_switch",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "I_30_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "59affd9d8d344ed5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1080,
        "wires": [
            [
                "8a30d21730e0181d"
            ]
        ]
    },
    {
        "id": "a85b16ea77dc9df0",
        "type": "ui_switch",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "I_30_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "59affd9d8d344ed5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "e914a6cfbcb51b26"
            ]
        ]
    },
    {
        "id": "9808bbf4dad94d50",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1000,
        "wires": [
            [
                "d633e27d3e289fa4"
            ]
        ]
    },
    {
        "id": "fa57552cc27bb282",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1000,
        "wires": [
            [
                "9808bbf4dad94d50"
            ]
        ]
    },
    {
        "id": "d633e27d3e289fa4",
        "type": "OpcUa-Client",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AA",
        "x": 1130,
        "y": 1000,
        "wires": [
            [
                "f89a1647619c30f2",
                "cef6974a47760ae8"
            ],
            [
                "5aebbe78159398d9"
            ]
        ]
    },
    {
        "id": "f89a1647619c30f2",
        "type": "debug",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "30 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1040,
        "wires": []
    },
    {
        "id": "5aebbe78159398d9",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n        \t\"I_30_Led_Start\" : false,\n\t        \"I_30_Led_Reset\" : false,\n\t        \"I_30_Led_Extra1\" : false,\n\t        \"I_30_Led_Extra2\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1000,
        "wires": [
            [
                "ed8b75dbe95dccbe"
            ]
        ]
    },
    {
        "id": "f1c09230242793a6",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1000,
        "wires": [
            [
                "d4d0efa1de346929"
            ]
        ]
    },
    {
        "id": "ed8b75dbe95dccbe",
        "type": "trigger",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1000,
        "wires": [
            [
                "6473d6f4b1e282cd"
            ]
        ]
    },
    {
        "id": "6473d6f4b1e282cd",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1000,
        "wires": [
            [
                "f1c09230242793a6"
            ]
        ]
    },
    {
        "id": "cef6974a47760ae8",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "Sub Out 30 AA",
        "mode": "link",
        "links": [
            "98bb078e54affc29"
        ],
        "x": 1295,
        "y": 1000,
        "wires": []
    },
    {
        "id": "98bb078e54affc29",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "Sub In 30 AA",
        "links": [
            "cef6974a47760ae8"
        ],
        "x": 775,
        "y": 1140,
        "wires": [
            [
                "504c0f9844bb81fe"
            ]
        ]
    },
    {
        "id": "42851707eb28a768",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "Read AA",
        "links": [
            "3337773dd175de51"
        ],
        "x": 55,
        "y": 1000,
        "wires": [
            [
                "5aebbe78159398d9"
            ]
        ]
    },
    {
        "id": "fb674ab08a122ae3",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "I_30_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1080,
        "wires": [
            [
                "3c5276be7583bd64"
            ]
        ]
    },
    {
        "id": "61ac2d457645c962",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "I_30_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1120,
        "wires": [
            [
                "3c5276be7583bd64"
            ]
        ]
    },
    {
        "id": "3c5276be7583bd64",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "3e2eb62c82c95c2e"
        ],
        "x": 1225,
        "y": 1140,
        "wires": []
    },
    {
        "id": "d4d0efa1de346929",
        "type": "file in",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Robot/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1000,
        "wires": [
            [
                "fa57552cc27bb282"
            ]
        ]
    },
    {
        "id": "61810174409a0641",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "item": "I_30_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_30_Led_Extra1",
        "x": 470,
        "y": 1160,
        "wires": [
            [
                "cf73413344189e5d"
            ]
        ]
    },
    {
        "id": "1778ad7cb257b57f",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "item": "I_30_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_30_Led_Extra2",
        "x": 470,
        "y": 1200,
        "wires": [
            [
                "cf73413344189e5d"
            ]
        ]
    },
    {
        "id": "dadfddc573b3c436",
        "type": "ui_switch",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "I_30_Led_Extra1",
        "label": "LED Extra1",
        "tooltip": "",
        "group": "59affd9d8d344ed5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1160,
        "wires": [
            [
                "61810174409a0641"
            ]
        ]
    },
    {
        "id": "71d55ffad1ad4875",
        "type": "ui_switch",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "I_30_Led_Extra2",
        "label": "LED Extra2",
        "tooltip": "",
        "group": "59affd9d8d344ed5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1200,
        "wires": [
            [
                "1778ad7cb257b57f"
            ]
        ]
    },
    {
        "id": "306df2579dea5445",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "I_30_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1160,
        "wires": [
            [
                "3c5276be7583bd64"
            ]
        ]
    },
    {
        "id": "a65e8a71cc29bfeb",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "074fc67dcc15cb32",
        "name": "I_30_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1200,
        "wires": [
            [
                "3c5276be7583bd64"
            ]
        ]
    },
    {
        "id": "13cc43c70bb7d3d0",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "item": "F_33_Spring_Cyl",
        "datatype": "Boolean",
        "value": "",
        "name": "F_33_Spring_Cyl",
        "x": 490,
        "y": 2120,
        "wires": [
            [
                "7de6c10476cddbcb"
            ]
        ]
    },
    {
        "id": "9c790dcad630c36a",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "item": "F_33_Cover_Cyl",
        "datatype": "Boolean",
        "value": "",
        "name": "F_33_Cover_Cyl",
        "x": 490,
        "y": 2160,
        "wires": [
            [
                "7de6c10476cddbcb"
            ]
        ]
    },
    {
        "id": "7de6c10476cddbcb",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "30 Physical Feedback",
        "mode": "link",
        "links": [
            "869b79db9fce6786"
        ],
        "x": 645,
        "y": 2140,
        "wires": []
    },
    {
        "id": "4ba4a4be928c5a99",
        "type": "switch",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "30 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_33_Spring_Cyl",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_33_Cover_Cyl",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 2140,
        "wires": [
            [
                "f9b4996ca17de304"
            ],
            [
                "0935e480d0a45d02"
            ]
        ]
    },
    {
        "id": "f9b4996ca17de304",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "order": 0,
        "group": "edcd73cbe1d2c82f",
        "width": 0,
        "height": 0,
        "label": "Spring Cylinder",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_33_Spring_Cyl",
        "x": 1070,
        "y": 2120,
        "wires": []
    },
    {
        "id": "0935e480d0a45d02",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "order": 0,
        "group": "edcd73cbe1d2c82f",
        "width": 0,
        "height": 0,
        "label": "Cover Cylinder",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_33_Cover_Cyl",
        "x": 1070,
        "y": 2160,
        "wires": []
    },
    {
        "id": "f360d774c8eb8451",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n        \t\"F_33_Spring_Cyl\" : false,\n\t        \"F_33_Cover_Cyl\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2040,
        "wires": [
            [
                "6c2a6d006ca6391d"
            ]
        ]
    },
    {
        "id": "c5850687da6e5958",
        "type": "OpcUa-Client",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PF",
        "x": 1130,
        "y": 2040,
        "wires": [
            [
                "1b9e90b5d8e7a1bd",
                "728be3ea934b2e41"
            ],
            [
                "f360d774c8eb8451"
            ]
        ]
    },
    {
        "id": "6c2a6d006ca6391d",
        "type": "trigger",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2040,
        "wires": [
            [
                "6b554bf2ef2ea109"
            ]
        ]
    },
    {
        "id": "fdd9d6a204cd98dd",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2040,
        "wires": [
            [
                "c5850687da6e5958"
            ]
        ]
    },
    {
        "id": "1b9e90b5d8e7a1bd",
        "type": "debug",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "30 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2080,
        "wires": []
    },
    {
        "id": "6b554bf2ef2ea109",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2040,
        "wires": [
            [
                "77ae5c8a858ea348"
            ]
        ]
    },
    {
        "id": "7a63fa8f1e6f339f",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2040,
        "wires": [
            [
                "fdd9d6a204cd98dd"
            ]
        ]
    },
    {
        "id": "77ae5c8a858ea348",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2040,
        "wires": [
            [
                "d9ea1d669a2546bd"
            ]
        ]
    },
    {
        "id": "d9ea1d669a2546bd",
        "type": "file in",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Robot/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2040,
        "wires": [
            [
                "7a63fa8f1e6f339f"
            ]
        ]
    },
    {
        "id": "1b79ddeb150fb8a9",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "Sub In 30 PF",
        "links": [
            "728be3ea934b2e41"
        ],
        "x": 775,
        "y": 2140,
        "wires": [
            [
                "4ba4a4be928c5a99"
            ]
        ]
    },
    {
        "id": "728be3ea934b2e41",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "Sub Out 30 PF",
        "mode": "link",
        "links": [
            "1b79ddeb150fb8a9"
        ],
        "x": 1295,
        "y": 2040,
        "wires": []
    },
    {
        "id": "46bdd0b015e4cdc6",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "S7 PF",
        "links": [
            "b9b9ab27d3fa9222"
        ],
        "x": 55,
        "y": 2140,
        "wires": [
            [
                "4458deedbab4cea7",
                "4b8a9fdbc2c8fac5"
            ]
        ]
    },
    {
        "id": "4458deedbab4cea7",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "F_33_Cover_Cyl",
        "func": "if (msg.topic === \"F_33_Cover_Cyl\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_33_Cover_Cyl\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2160,
        "wires": [
            [
                "9c790dcad630c36a"
            ]
        ]
    },
    {
        "id": "4b8a9fdbc2c8fac5",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "F_33_Spring_Cyl",
        "func": "if (msg.topic === \"F_33_Spring_Cyl\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_33_Spring_Cyl\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2120,
        "wires": [
            [
                "13cc43c70bb7d3d0"
            ]
        ]
    },
    {
        "id": "71bebcc343a8c8a5",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "903fcf7d655e3763",
        "name": "Read PF",
        "links": [
            "3337773dd175de51"
        ],
        "x": 55,
        "y": 2040,
        "wires": [
            [
                "f360d774c8eb8451"
            ]
        ]
    },
    {
        "id": "a95b38ca462532ca",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "item": "F_33_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_33_Led_Start",
        "x": 500,
        "y": 2340,
        "wires": [
            [
                "2ca2da41218cda4d"
            ]
        ]
    },
    {
        "id": "f89203e80f965336",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "item": "F_33_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_33_Led_Reset",
        "x": 490,
        "y": 2380,
        "wires": [
            [
                "2ca2da41218cda4d"
            ]
        ]
    },
    {
        "id": "2ca2da41218cda4d",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "30 Physical Feedback",
        "mode": "link",
        "links": [
            "869b79db9fce6786"
        ],
        "x": 645,
        "y": 2400,
        "wires": []
    },
    {
        "id": "29e084e6c83533a1",
        "type": "switch",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "30 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_33_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_33_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_33_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_33_Led_Extra2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 2400,
        "wires": [
            [
                "427a8db1bb0443d0"
            ],
            [
                "0a057bf2a9072626"
            ],
            [
                "b2285cde50e3fb2e"
            ],
            [
                "813d063216e74fdd"
            ]
        ]
    },
    {
        "id": "427a8db1bb0443d0",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "order": 0,
        "group": "a18af1cd9d1776ce",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_33_Led_Start",
        "x": 1060,
        "y": 2340,
        "wires": []
    },
    {
        "id": "0a057bf2a9072626",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "order": 0,
        "group": "a18af1cd9d1776ce",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_33_Led_Reset",
        "x": 1070,
        "y": 2380,
        "wires": []
    },
    {
        "id": "3935001f9f1d4493",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n        \t\"F_33_Led_Start\" : false,\n\t        \"F_33_Led_Reset\" : false,\n\t        \"F_33_Led_Extra1\" : false,\n\t        \"F_33_Led_Extra2\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2260,
        "wires": [
            [
                "b7c159781e511954"
            ]
        ]
    },
    {
        "id": "a848224ef0ee3e5d",
        "type": "OpcUa-Client",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AF",
        "x": 1130,
        "y": 2260,
        "wires": [
            [
                "477f009178115dc9",
                "3bcc6d89f5116a7b"
            ],
            [
                "3935001f9f1d4493"
            ]
        ]
    },
    {
        "id": "b7c159781e511954",
        "type": "trigger",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2260,
        "wires": [
            [
                "3af99f52092e9629"
            ]
        ]
    },
    {
        "id": "7657d334839505e4",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2260,
        "wires": [
            [
                "a848224ef0ee3e5d"
            ]
        ]
    },
    {
        "id": "477f009178115dc9",
        "type": "debug",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "30 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2300,
        "wires": []
    },
    {
        "id": "3af99f52092e9629",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2260,
        "wires": [
            [
                "0121f5dc5ea5c0ac"
            ]
        ]
    },
    {
        "id": "122352317dbf1f68",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2260,
        "wires": [
            [
                "7657d334839505e4"
            ]
        ]
    },
    {
        "id": "0121f5dc5ea5c0ac",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2260,
        "wires": [
            [
                "0d4c2a24e4085fef"
            ]
        ]
    },
    {
        "id": "0d4c2a24e4085fef",
        "type": "file in",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Robot/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2260,
        "wires": [
            [
                "122352317dbf1f68"
            ]
        ]
    },
    {
        "id": "5d7ca9fee32cc424",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "Sub In 30 AF",
        "links": [
            "3bcc6d89f5116a7b"
        ],
        "x": 775,
        "y": 2400,
        "wires": [
            [
                "29e084e6c83533a1"
            ]
        ]
    },
    {
        "id": "3bcc6d89f5116a7b",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "Sub Out 30 AF",
        "mode": "link",
        "links": [
            "5d7ca9fee32cc424"
        ],
        "x": 1295,
        "y": 2260,
        "wires": []
    },
    {
        "id": "9d043759fd48b908",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "S7 PF",
        "links": [
            "b9b9ab27d3fa9222"
        ],
        "x": 55,
        "y": 2400,
        "wires": [
            [
                "877d50d855de0aeb",
                "f5b379a6da21e56f",
                "306518714fa4fe1f",
                "87b7bfe17a35bf82"
            ]
        ]
    },
    {
        "id": "877d50d855de0aeb",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "F_33_Led_Reset",
        "func": "if (msg.topic === \"F_33_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_33_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2380,
        "wires": [
            [
                "f89203e80f965336"
            ]
        ]
    },
    {
        "id": "f5b379a6da21e56f",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "F_33_Led_Start",
        "func": "if (msg.topic === \"F_33_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_33_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2340,
        "wires": [
            [
                "a95b38ca462532ca"
            ]
        ]
    },
    {
        "id": "22fc03578d38a4e9",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "Read PF",
        "links": [
            "3337773dd175de51"
        ],
        "x": 55,
        "y": 2260,
        "wires": [
            [
                "3935001f9f1d4493"
            ]
        ]
    },
    {
        "id": "783057c345dab0c8",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "item": "F_33_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_33_Led_Extra1",
        "x": 490,
        "y": 2420,
        "wires": [
            [
                "2ca2da41218cda4d"
            ]
        ]
    },
    {
        "id": "2536ab603783d038",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "item": "F_33_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_33_Led_Extra2",
        "x": 490,
        "y": 2460,
        "wires": [
            [
                "2ca2da41218cda4d"
            ]
        ]
    },
    {
        "id": "87b7bfe17a35bf82",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "F_33_Led_Extra2",
        "func": "if (msg.topic === \"F_33_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_33_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2460,
        "wires": [
            [
                "2536ab603783d038"
            ]
        ]
    },
    {
        "id": "306518714fa4fe1f",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "name": "F_33_Led_Extra1",
        "func": "if (msg.topic === \"F_33_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_33_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2420,
        "wires": [
            [
                "783057c345dab0c8"
            ]
        ]
    },
    {
        "id": "b2285cde50e3fb2e",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "order": 0,
        "group": "a18af1cd9d1776ce",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_33_Led_Extra1",
        "x": 1070,
        "y": 2420,
        "wires": []
    },
    {
        "id": "813d063216e74fdd",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "6901addae79cfb3e",
        "order": 0,
        "group": "a18af1cd9d1776ce",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_33_Led_Extra2",
        "x": 1070,
        "y": 2460,
        "wires": []
    },
    {
        "id": "2cb45ad1539fb1a8",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "item": "O_31_Part_in_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "O_31_Part_in_Claw",
        "x": 480,
        "y": 2640,
        "wires": [
            [
                "8c78111309acc11e"
            ]
        ]
    },
    {
        "id": "08e0cabcc1e00c4b",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "item": "O_31_Orientation",
        "datatype": "Boolean",
        "value": "",
        "name": "O_31_Orientation",
        "x": 490,
        "y": 2680,
        "wires": [
            [
                "8c78111309acc11e"
            ]
        ]
    },
    {
        "id": "39eabb9d065107c3",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "item": "O_32_Sp_Cyl_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_32_Sp_Cyl_Bck",
        "x": 490,
        "y": 2720,
        "wires": [
            [
                "8c78111309acc11e"
            ]
        ]
    },
    {
        "id": "1aafa0d09548669e",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "item": "O_32_Sp_Cyl_Fwd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_32_Sp_Cyl_Fwd",
        "x": 490,
        "y": 2760,
        "wires": [
            [
                "8c78111309acc11e"
            ]
        ]
    },
    {
        "id": "21786f305d15cf44",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "item": "O_32_Co_Cyl_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_32_Co_Cyl_Bck",
        "x": 490,
        "y": 2800,
        "wires": [
            [
                "8c78111309acc11e"
            ]
        ]
    },
    {
        "id": "ab38db3c234cbce0",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "item": "O_32_Co_Cyl_Fwd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_32_Co_Cyl_Fwd",
        "x": 490,
        "y": 2840,
        "wires": [
            [
                "8c78111309acc11e"
            ]
        ]
    },
    {
        "id": "7badd2cf7c176795",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "item": "O_32_Sp_PickUp",
        "datatype": "Boolean",
        "value": "",
        "name": "O_32_Sp_PickUp",
        "x": 490,
        "y": 2880,
        "wires": [
            [
                "8c78111309acc11e"
            ]
        ]
    },
    {
        "id": "8c78111309acc11e",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "30 Physical Sensor",
        "mode": "link",
        "links": [
            "869b79db9fce6786"
        ],
        "x": 655,
        "y": 2800,
        "wires": []
    },
    {
        "id": "22395fe63acbfb47",
        "type": "switch",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "30 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_31_Part_in_Claw",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_31_Orientation",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_32_Sp_Cyl_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_32_Sp_Cyl_Fwd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_32_Co_Cyl_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_32_Co_Cyl_Fwd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_32_Sp_PickUp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_32_Co_PickUp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_32_CoMag_Empty",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 870,
        "y": 2800,
        "wires": [
            [
                "cfbcd7718e4f8a1d"
            ],
            [
                "db702609eef8134a"
            ],
            [
                "aeeeebc4efaff7bc"
            ],
            [
                "e6ad64bf9c32320b"
            ],
            [
                "75ca404d1059f0cd"
            ],
            [
                "99c6b16b064f897b"
            ],
            [
                "21179b0b2c0c92d2"
            ],
            [
                "6f0a28b93fd279c8"
            ],
            [
                "3a0e6c712c16f185"
            ]
        ]
    },
    {
        "id": "cfbcd7718e4f8a1d",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "order": 0,
        "group": "0661da50664f0ff0",
        "width": 0,
        "height": 0,
        "label": "Part in Robot Claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_31_Part_in_Claw",
        "x": 1080,
        "y": 2640,
        "wires": []
    },
    {
        "id": "db702609eef8134a",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "order": 0,
        "group": "0661da50664f0ff0",
        "width": 0,
        "height": 0,
        "label": "Orientation of Part",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_31_Orientation",
        "x": 1070,
        "y": 2680,
        "wires": []
    },
    {
        "id": "aeeeebc4efaff7bc",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "order": 0,
        "group": "0661da50664f0ff0",
        "width": 0,
        "height": 0,
        "label": "Spring Cylinder Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_32_Sp_Cyl_Bck",
        "x": 1070,
        "y": 2720,
        "wires": []
    },
    {
        "id": "e6ad64bf9c32320b",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "order": 0,
        "group": "0661da50664f0ff0",
        "width": 0,
        "height": 0,
        "label": "Spring Cylinder Forward",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_32_Sp_Cyl_Fwd",
        "x": 1070,
        "y": 2760,
        "wires": []
    },
    {
        "id": "75ca404d1059f0cd",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "order": 0,
        "group": "0661da50664f0ff0",
        "width": 0,
        "height": 0,
        "label": "Cover Cylinder Back",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_32_Sp_Cyl_Bck",
        "x": 1070,
        "y": 2800,
        "wires": []
    },
    {
        "id": "99c6b16b064f897b",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "order": 0,
        "group": "0661da50664f0ff0",
        "width": 0,
        "height": 0,
        "label": "Cover Cylinder Forward",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_32_Co_Cyl_Fwd",
        "x": 1070,
        "y": 2840,
        "wires": []
    },
    {
        "id": "21179b0b2c0c92d2",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "order": 0,
        "group": "0661da50664f0ff0",
        "width": 0,
        "height": 0,
        "label": "Spring in Pick up position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_32_Sp_PickUp",
        "x": 1070,
        "y": 2880,
        "wires": []
    },
    {
        "id": "dca48e5e8f06d5a9",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \t\"O_31_Part_in_Claw\" : false,\n\t            \"O_31_Orientation\" : false,\n\t            \"O_32_Sp_Cyl_Bck\" : false,\n\t            \"O_32_Sp_Cyl_Fwd\" : false,\n\t            \"O_32_Co_Cyl_Bck\" : false,\n\t            \"O_32_Co_Cyl_Fwd\" : false,\n\t            \"O_32_Sp_PickUp\" : false,\n\t            \"O_32_Co_PickUp\" : false,\n\t            \"O_32_CoMag_Empty\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2560,
        "wires": [
            [
                "76c27fca6efbb8c3"
            ]
        ]
    },
    {
        "id": "bddfa92f58bde416",
        "type": "OpcUa-Client",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PS",
        "x": 1130,
        "y": 2560,
        "wires": [
            [
                "08754457e53c8dad",
                "2cdf99f625bee94d"
            ],
            [
                "dca48e5e8f06d5a9"
            ]
        ]
    },
    {
        "id": "76c27fca6efbb8c3",
        "type": "trigger",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2560,
        "wires": [
            [
                "992fa65e0177ed10"
            ]
        ]
    },
    {
        "id": "ca6bc35066c2ae38",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2560,
        "wires": [
            [
                "bddfa92f58bde416"
            ]
        ]
    },
    {
        "id": "08754457e53c8dad",
        "type": "debug",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "30 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2600,
        "wires": []
    },
    {
        "id": "992fa65e0177ed10",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2560,
        "wires": [
            [
                "b79cdde4709ff37d"
            ]
        ]
    },
    {
        "id": "04cb868e854f1488",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2560,
        "wires": [
            [
                "ca6bc35066c2ae38"
            ]
        ]
    },
    {
        "id": "b79cdde4709ff37d",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2560,
        "wires": [
            [
                "8a0e335fa2889a26"
            ]
        ]
    },
    {
        "id": "8a0e335fa2889a26",
        "type": "file in",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Robot/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2560,
        "wires": [
            [
                "04cb868e854f1488"
            ]
        ]
    },
    {
        "id": "93685ed19bdd2f80",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "Sub In 30 PS",
        "links": [
            "2cdf99f625bee94d"
        ],
        "x": 775,
        "y": 2800,
        "wires": [
            [
                "22395fe63acbfb47"
            ]
        ]
    },
    {
        "id": "2cdf99f625bee94d",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "Sub Out 30 PS",
        "mode": "link",
        "links": [
            "93685ed19bdd2f80"
        ],
        "x": 1295,
        "y": 2560,
        "wires": []
    },
    {
        "id": "3672d5df516b03e0",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "S7 PS",
        "links": [
            "b9b9ab27d3fa9222"
        ],
        "x": 55,
        "y": 2800,
        "wires": [
            [
                "e5e1c59bb12b01ea",
                "aec66d94d7ec8d15",
                "ddf1e8b536f2fd87",
                "5e201d1c364e44f2",
                "6e1f80ff04d23a9a",
                "0fb14040475d73bd",
                "1b406eeb1690affb",
                "7905de6cc946599c",
                "c6e21991b030dd30"
            ]
        ]
    },
    {
        "id": "e5e1c59bb12b01ea",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "O_32_Sp_PickUp",
        "func": "if (msg.topic === \"O_32_Sp_PickUp\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_32_Sp_PickUp\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2880,
        "wires": [
            [
                "7badd2cf7c176795"
            ]
        ]
    },
    {
        "id": "aec66d94d7ec8d15",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "O_32_Co_Cyl_Fwd",
        "func": "if (msg.topic === \"O_32_Co_Cyl_Fwd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_32_Co_Cyl_Fwd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2840,
        "wires": [
            [
                "ab38db3c234cbce0"
            ]
        ]
    },
    {
        "id": "ddf1e8b536f2fd87",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "O_32_Co_Cyl_Bck",
        "func": "if (msg.topic === \"O_32_Co_Cyl_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_32_Co_Cyl_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2800,
        "wires": [
            [
                "21786f305d15cf44"
            ]
        ]
    },
    {
        "id": "5e201d1c364e44f2",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "O_32_Sp_Cyl_Fwd",
        "func": "if (msg.topic === \"O_32_Sp_Cyl_Fwd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_32_Sp_Cyl_Fwd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2760,
        "wires": [
            [
                "1aafa0d09548669e"
            ]
        ]
    },
    {
        "id": "6e1f80ff04d23a9a",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "O_32_Sp_Cyl_Bck",
        "func": "if (msg.topic === \"O_32_Sp_Cyl_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_32_Sp_Cyl_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2720,
        "wires": [
            [
                "39eabb9d065107c3"
            ]
        ]
    },
    {
        "id": "0fb14040475d73bd",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "O_31_Orientation",
        "func": "if (msg.topic === \"O_31_Orientation\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_31_Orientation\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2680,
        "wires": [
            [
                "08e0cabcc1e00c4b"
            ]
        ]
    },
    {
        "id": "1b406eeb1690affb",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "O_31_Part_in_Claw",
        "func": "if (msg.topic === \"O_31_Part_in_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_31_Part_in_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 2640,
        "wires": [
            [
                "2cb45ad1539fb1a8"
            ]
        ]
    },
    {
        "id": "a43a342c71ebf7a2",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "Read PS",
        "links": [
            "3337773dd175de51"
        ],
        "x": 55,
        "y": 2560,
        "wires": [
            [
                "dca48e5e8f06d5a9"
            ]
        ]
    },
    {
        "id": "7905de6cc946599c",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "O_32_Co_PickUp",
        "func": "if (msg.topic === \"O_32_Co_PickUp\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_32_Co_PickUp\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2920,
        "wires": [
            [
                "91334bd303317348"
            ]
        ]
    },
    {
        "id": "c6e21991b030dd30",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "name": "O_32_CoMag_Empty",
        "func": "if (msg.topic === \"O_32_CoMag_Empty\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_32_CoMag_Empty\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 2960,
        "wires": [
            [
                "a7a755a29947caa3"
            ]
        ]
    },
    {
        "id": "91334bd303317348",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "item": "O_32_Co_PickUp",
        "datatype": "Boolean",
        "value": "",
        "name": "O_32_Co_PickUp",
        "x": 490,
        "y": 2920,
        "wires": [
            [
                "8c78111309acc11e"
            ]
        ]
    },
    {
        "id": "a7a755a29947caa3",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "item": "O_32_CoMag_Empty",
        "datatype": "Boolean",
        "value": "",
        "name": "O_32_CoMag_Empty",
        "x": 480,
        "y": 2960,
        "wires": [
            [
                "8c78111309acc11e"
            ]
        ]
    },
    {
        "id": "6f0a28b93fd279c8",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "order": 0,
        "group": "0661da50664f0ff0",
        "width": 0,
        "height": 0,
        "label": "Cover in Pick-up position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_32_Co_PickUp",
        "x": 1070,
        "y": 2920,
        "wires": []
    },
    {
        "id": "3a0e6c712c16f185",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "495ea2525a5f4823",
        "order": 0,
        "group": "0661da50664f0ff0",
        "width": 0,
        "height": 0,
        "label": "Cover Magazine Empty",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_32_CoMag_Empty",
        "x": 1080,
        "y": 2960,
        "wires": []
    },
    {
        "id": "4fbe524a8db5d6fe",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "item": "O_31_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_31_Start",
        "x": 510,
        "y": 3140,
        "wires": [
            [
                "799b0da9b80a9434"
            ]
        ]
    },
    {
        "id": "3c32d4c8b5e5a24b",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "item": "O_31_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_31_Stop",
        "x": 510,
        "y": 3180,
        "wires": [
            [
                "799b0da9b80a9434"
            ]
        ]
    },
    {
        "id": "5b8ab877dfb62b41",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "item": "O_31_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_31_Reset",
        "x": 510,
        "y": 3220,
        "wires": [
            [
                "799b0da9b80a9434"
            ]
        ]
    },
    {
        "id": "799b0da9b80a9434",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "30 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "869b79db9fce6786"
        ],
        "x": 645,
        "y": 3180,
        "wires": []
    },
    {
        "id": "ddba0780b882803d",
        "type": "switch",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "30 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_31_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_31_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_31_Reset",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 3180,
        "wires": [
            [
                "fd6b5dcfef7995cc"
            ],
            [
                "b09c0e45311f70ff"
            ],
            [
                "a318692254f7a03c"
            ]
        ]
    },
    {
        "id": "fd6b5dcfef7995cc",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "order": 0,
        "group": "f2cc73e1bb66ea8e",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_31_Start",
        "x": 1050,
        "y": 3140,
        "wires": []
    },
    {
        "id": "b09c0e45311f70ff",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "order": 0,
        "group": "f2cc73e1bb66ea8e",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_31_Stop",
        "x": 1050,
        "y": 3180,
        "wires": []
    },
    {
        "id": "a318692254f7a03c",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "order": 0,
        "group": "f2cc73e1bb66ea8e",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_31_Reset",
        "x": 1050,
        "y": 3220,
        "wires": []
    },
    {
        "id": "225d5c8f785e4ab0",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \t\t\"O_31_Start\" : false,\n\t\t\t\t\t\"O_31_Stop\" : false,\n\t\t\t\t\t\"O_31_Reset\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3060,
        "wires": [
            [
                "59f228666f06703a"
            ]
        ]
    },
    {
        "id": "04b23ef942f0f0c9",
        "type": "OpcUa-Client",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PS",
        "x": 1130,
        "y": 3060,
        "wires": [
            [
                "492e6241c3a20dca",
                "659e7f79df2fc01c"
            ],
            [
                "225d5c8f785e4ab0"
            ]
        ]
    },
    {
        "id": "59f228666f06703a",
        "type": "trigger",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3060,
        "wires": [
            [
                "2b05752e966a6533"
            ]
        ]
    },
    {
        "id": "7fe8847deed22b9b",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3060,
        "wires": [
            [
                "04b23ef942f0f0c9"
            ]
        ]
    },
    {
        "id": "492e6241c3a20dca",
        "type": "debug",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "30 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3100,
        "wires": []
    },
    {
        "id": "2b05752e966a6533",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3060,
        "wires": [
            [
                "8f3932a1af0484e1"
            ]
        ]
    },
    {
        "id": "c13e394f56c239e8",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3060,
        "wires": [
            [
                "7fe8847deed22b9b"
            ]
        ]
    },
    {
        "id": "8f3932a1af0484e1",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3060,
        "wires": [
            [
                "8bc718c03385704e"
            ]
        ]
    },
    {
        "id": "8bc718c03385704e",
        "type": "file in",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Robot/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3060,
        "wires": [
            [
                "c13e394f56c239e8"
            ]
        ]
    },
    {
        "id": "de7b48fbbee2958b",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "Sub In 30 AS",
        "links": [
            "659e7f79df2fc01c"
        ],
        "x": 775,
        "y": 3180,
        "wires": [
            [
                "ddba0780b882803d"
            ]
        ]
    },
    {
        "id": "659e7f79df2fc01c",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "Sub Out 30 AS",
        "mode": "link",
        "links": [
            "de7b48fbbee2958b"
        ],
        "x": 1295,
        "y": 3060,
        "wires": []
    },
    {
        "id": "962fca7a76d14982",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "S7 PS",
        "links": [
            "b9b9ab27d3fa9222"
        ],
        "x": 55,
        "y": 3180,
        "wires": [
            [
                "1b6831c4373caee5",
                "fabaec2babf62edf",
                "c9f0585587f5c612"
            ]
        ]
    },
    {
        "id": "1b6831c4373caee5",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "O_31_Reset",
        "func": "if (msg.topic === \"O_31_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_31_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3220,
        "wires": [
            [
                "5b8ab877dfb62b41"
            ]
        ]
    },
    {
        "id": "fabaec2babf62edf",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "O_31_Stop",
        "func": "if (msg.topic === \"O_31_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_31_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3180,
        "wires": [
            [
                "3c32d4c8b5e5a24b"
            ]
        ]
    },
    {
        "id": "c9f0585587f5c612",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "O_31_Start",
        "func": "if (msg.topic === \"O_31_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_31_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3140,
        "wires": [
            [
                "4fbe524a8db5d6fe"
            ]
        ]
    },
    {
        "id": "3f6614f1f505c8df",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "42f2673a8d87d519",
        "name": "Read AS",
        "links": [
            "3337773dd175de51"
        ],
        "x": 55,
        "y": 3060,
        "wires": [
            [
                "225d5c8f785e4ab0"
            ]
        ]
    },
    {
        "id": "acfbc94377590fed",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n\t\"SA_30_Led_Start\" : false,\n\t\"SA_30_Led_Reset\" : false,\n\t\"SA_30_Led_Extra1\" : false,\n\t\"SA_30_Led_Extra2\" : false,\n\t\"SA_30_Spring_Cyl\" : false,\n\t\"SA_30_Cover_Cyl\" : false,\n\t\"SC_30_Robot1\" : false,\n\t\"SC_30_Robot2\" : false,\n\t\"SS_31_Start\" : false,\n\t\"SS_31_Stop\" : true,\n\t\"SS_31_Reset\" : false,\n\t\"SS_31_Part_in_Claw\" : false,\n\t\"SS_31_Orientation\" : false,\n\t\"SS_32_Sp_Cyl_Bck\" : true,\n\t\"SS_32_Sp_Cyl_Fwd\" : false,\n\t\"SS_32_Co_Cyl_Bck\" : false,\n\t\"SS_32_Co_Cyl_Fwd\" : true,\n\t\"SS_32_Sp_PickUp\" : false,\n\t\"SS_32_Co_PickUp\" : false,\n\t\"SS_32_CoMag_Empty\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 680,
        "wires": [
            [
                "c7dcdf5dd4e170d2"
            ]
        ]
    },
    {
        "id": "6997546508cdc53f",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "Simulated CSV Link",
        "links": [
            "b574ddad275f3060"
        ],
        "x": 65,
        "y": 680,
        "wires": [
            [
                "acfbc94377590fed"
            ]
        ]
    },
    {
        "id": "c7dcdf5dd4e170d2",
        "type": "trigger",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 680,
        "wires": [
            [
                "0751d73846a030e0"
            ]
        ]
    },
    {
        "id": "0751d73846a030e0",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"SA_\")) variableClass = \"Simulated_Actuators\";\n        if (key.includes(\"SC_\")) variableClass = \"Simulated_Control\";\n        if (key.includes(\"SS_\")) variableClass = \"Simulated_Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 680,
        "wires": [
            [
                "3c46c11588da4ec1"
            ]
        ]
    },
    {
        "id": "3c46c11588da4ec1",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Robot_Station/SimulationData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 680,
        "wires": [
            [
                "2f239b1de513f0e1"
            ]
        ]
    },
    {
        "id": "2f239b1de513f0e1",
        "type": "OpcUa-Client",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 680,
        "wires": [
            [
                "d98f45953a7a76f3"
            ],
            [
                "b574ddad275f3060"
            ]
        ]
    },
    {
        "id": "d98f45953a7a76f3",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 640,
        "wires": [
            [
                "eb6fa7476a0e73bc",
                "90a70082d3fd1697"
            ]
        ]
    },
    {
        "id": "b574ddad275f3060",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "Simulated CSV Link",
        "mode": "link",
        "links": [
            "a26e0a6c8a011691",
            "6997546508cdc53f"
        ],
        "x": 935,
        "y": 680,
        "wires": []
    },
    {
        "id": "eb6fa7476a0e73bc",
        "type": "file",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "Simulated Varaibles List",
        "filename": "/root/ProjetoGemeo/AAS/Robot/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1230,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "90a70082d3fd1697",
        "type": "debug",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "d4474f681d3b44f7",
        "type": "comment",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 640,
        "wires": []
    },
    {
        "id": "4e5d5f6ae625daad",
        "type": "comment",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 540,
        "wires": []
    },
    {
        "id": "a26e0a6c8a011691",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "Simulated CSV Link",
        "links": [
            "b574ddad275f3060"
        ],
        "x": 65,
        "y": 580,
        "wires": [
            [
                "955a855d84c4ee19"
            ]
        ]
    },
    {
        "id": "955a855d84c4ee19",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 580,
        "wires": [
            [
                "f5f326e6b81cb007"
            ]
        ]
    },
    {
        "id": "f5f326e6b81cb007",
        "type": "trigger",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 580,
        "wires": [
            [
                "24d159d0c4ec22d5"
            ]
        ]
    },
    {
        "id": "24d159d0c4ec22d5",
        "type": "file",
        "z": "aefdc2670756e2cc",
        "g": "3981b0a5446d5bcb",
        "name": "Simulated CSV",
        "filename": "/root/ProjetoGemeo/AAS/Robot/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 440,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "3403f7bbbf06f2f0",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "item": "A_34_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "A_34_Cart_Stat",
        "x": 480,
        "y": 1380,
        "wires": [
            [
                "3ddee7d7f2773dc1"
            ]
        ]
    },
    {
        "id": "413c65016304e887",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "item": "A_34_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "A_34_Cart_Next",
        "x": 470,
        "y": 1420,
        "wires": [
            [
                "3ddee7d7f2773dc1"
            ]
        ]
    },
    {
        "id": "ebc077d5bb00d618",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "item": "A_34_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "A_34_Optic",
        "x": 490,
        "y": 1460,
        "wires": [
            [
                "3ddee7d7f2773dc1"
            ]
        ]
    },
    {
        "id": "c98ba62338238153",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "item": "A_34_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "A_34_Count",
        "x": 490,
        "y": 1500,
        "wires": [
            [
                "3ddee7d7f2773dc1"
            ]
        ]
    },
    {
        "id": "dee7be7b8f56d228",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "item": "A_34_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "A_34_Pist_Bck",
        "x": 480,
        "y": 1540,
        "wires": [
            [
                "3ddee7d7f2773dc1"
            ]
        ]
    },
    {
        "id": "ba4af659a05b9ba4",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "item": "A_34_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "A_34_Release_FB",
        "x": 470,
        "y": 1580,
        "wires": [
            [
                "3ddee7d7f2773dc1"
            ]
        ]
    },
    {
        "id": "58efb168ee0b0689",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "item": "A_34_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "A_34_Request",
        "x": 480,
        "y": 1620,
        "wires": [
            [
                "3ddee7d7f2773dc1"
            ]
        ]
    },
    {
        "id": "3ddee7d7f2773dc1",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "30 AS-i",
        "mode": "link",
        "links": [
            "472cf2deedd2118f"
        ],
        "x": 645,
        "y": 1540,
        "wires": []
    },
    {
        "id": "028fff959919154f",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1300,
        "wires": [
            [
                "2b065d5f9bf3c5c2"
            ]
        ]
    },
    {
        "id": "2b065d5f9bf3c5c2",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1300,
        "wires": [
            [
                "0f58f22e36d8f9bc"
            ]
        ]
    },
    {
        "id": "8271871d66ccc793",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1300,
        "wires": [
            [
                "92a360c6a436799d"
            ]
        ]
    },
    {
        "id": "92a360c6a436799d",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1300,
        "wires": [
            [
                "06ddc69b6dada613"
            ]
        ]
    },
    {
        "id": "06ddc69b6dada613",
        "type": "OpcUa-Client",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AS-i",
        "x": 1140,
        "y": 1300,
        "wires": [
            [
                "1cad4973816708c6",
                "9451ed2a86fc38d1"
            ],
            [
                "373ad2e34f61e686"
            ]
        ]
    },
    {
        "id": "e247ac5119e0cd3a",
        "type": "switch",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "30 AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A_34_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_34_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_34_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_34_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_34_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_34_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_34_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_34_No_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_34_Cart_Full",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 1540,
        "wires": [
            [
                "c1bedb25469a19c7"
            ],
            [
                "85a1f8d56bf89b24"
            ],
            [
                "d1b7ac76f3b137cb"
            ],
            [
                "4c888777c26d26df"
            ],
            [
                "d024d6e8c3f39742"
            ],
            [
                "2b762d28d4285e25"
            ],
            [
                "3ac3af994aba63e6"
            ],
            [
                "b2c01a1ea0c228f1"
            ],
            [
                "4a26aeea07c0f227"
            ]
        ]
    },
    {
        "id": "c1bedb25469a19c7",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "order": 0,
        "group": "627ffa4b27386e09",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_34_Cart_Stat",
        "x": 1060,
        "y": 1380,
        "wires": []
    },
    {
        "id": "85a1f8d56bf89b24",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "order": 0,
        "group": "627ffa4b27386e09",
        "width": 0,
        "height": 0,
        "label": "Cart near next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_34_Cart_Next",
        "x": 1070,
        "y": 1420,
        "wires": []
    },
    {
        "id": "d1b7ac76f3b137cb",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "order": 0,
        "group": "627ffa4b27386e09",
        "width": 0,
        "height": 0,
        "label": "Optic sensor on station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_34_Optic",
        "x": 1050,
        "y": 1460,
        "wires": []
    },
    {
        "id": "4c888777c26d26df",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "order": 0,
        "group": "627ffa4b27386e09",
        "width": 0,
        "height": 0,
        "label": "Cart count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_34_Count",
        "x": 1050,
        "y": 1500,
        "wires": []
    },
    {
        "id": "d024d6e8c3f39742",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "order": 0,
        "group": "627ffa4b27386e09",
        "width": 0,
        "height": 0,
        "label": "Piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_34_Pist_Bck",
        "x": 1060,
        "y": 1540,
        "wires": []
    },
    {
        "id": "2b762d28d4285e25",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "order": 0,
        "group": "627ffa4b27386e09",
        "width": 0,
        "height": 0,
        "label": "Pin release feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_34_Release_FB",
        "x": 1070,
        "y": 1580,
        "wires": []
    },
    {
        "id": "3ac3af994aba63e6",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "order": 0,
        "group": "627ffa4b27386e09",
        "width": 0,
        "height": 0,
        "label": "Request cart",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_34_Request",
        "x": 1060,
        "y": 1620,
        "wires": []
    },
    {
        "id": "fe1cbb2488b728fa",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "item": "A_34_No_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "A_34_No_Cart",
        "x": 480,
        "y": 1660,
        "wires": [
            [
                "3ddee7d7f2773dc1"
            ]
        ]
    },
    {
        "id": "b2c01a1ea0c228f1",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "order": 0,
        "group": "627ffa4b27386e09",
        "width": 0,
        "height": 0,
        "label": "No Cart at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_34_No_Cart",
        "x": 1060,
        "y": 1660,
        "wires": []
    },
    {
        "id": "4a26aeea07c0f227",
        "type": "ui_led",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "order": 0,
        "group": "627ffa4b27386e09",
        "width": 0,
        "height": 0,
        "label": "Cart Full at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_34_Cart_Full",
        "x": 1060,
        "y": 1700,
        "wires": []
    },
    {
        "id": "46a76cd6081f52fc",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "item": "A_34_Cart_Full",
        "datatype": "Boolean",
        "value": "",
        "name": "A_34_Cart_Full",
        "x": 480,
        "y": 1700,
        "wires": [
            [
                "3ddee7d7f2773dc1"
            ]
        ]
    },
    {
        "id": "1cad4973816708c6",
        "type": "debug",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "30 AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1340,
        "wires": []
    },
    {
        "id": "373ad2e34f61e686",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"A_34_Request\" : false,\n            \"A_34_No_Cart\" : false,\n            \"A_34_Cart_Full\" : false,\n            \"A_34_Cart_Stat\" : false,\n            \"A_34_Cart_Next\" : false,\n            \"A_34_Optic\" : false,\n            \"A_34_Count\" : false,\n            \"A_34_Pist_Bck\" : false,\n            \"A_34_Release_FB\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1300,
        "wires": [
            [
                "4f55d4ef694f5101"
            ]
        ]
    },
    {
        "id": "4f55d4ef694f5101",
        "type": "trigger",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1300,
        "wires": [
            [
                "028fff959919154f"
            ]
        ]
    },
    {
        "id": "8cf8304cce8a0d9c",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "Sub In 30 AS-i",
        "links": [
            "9451ed2a86fc38d1"
        ],
        "x": 755,
        "y": 1540,
        "wires": [
            [
                "e247ac5119e0cd3a"
            ]
        ]
    },
    {
        "id": "9451ed2a86fc38d1",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "Sub Out 30 AS-i",
        "mode": "link",
        "links": [
            "8cf8304cce8a0d9c"
        ],
        "x": 1295,
        "y": 1300,
        "wires": []
    },
    {
        "id": "eefa8de7bdad0ea4",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "A_34_Cart_Full",
        "func": "if (msg.topic === \"A_34_Cart_Full\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_34_Cart_Full\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1700,
        "wires": [
            [
                "46a76cd6081f52fc"
            ]
        ]
    },
    {
        "id": "e088e3d807302316",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "S7 AS-i",
        "links": [
            "b9b9ab27d3fa9222"
        ],
        "x": 55,
        "y": 1540,
        "wires": [
            [
                "eefa8de7bdad0ea4",
                "8cdb94372801fbc9",
                "a74b3d68d8856396",
                "0d22da323f421515",
                "692ce3083da3cd5c",
                "cfb25b735a0254e7",
                "932d0f8356de37fb",
                "abf8349930a04f3a",
                "c059d2b10994b4e4"
            ]
        ]
    },
    {
        "id": "8cdb94372801fbc9",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "A_34_No_Cart",
        "func": "if (msg.topic === \"A_34_No_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_34_No_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1660,
        "wires": [
            [
                "fe1cbb2488b728fa"
            ]
        ]
    },
    {
        "id": "a74b3d68d8856396",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "A_34_Request",
        "func": "if (msg.topic === \"A_34_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_34_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1620,
        "wires": [
            [
                "58efb168ee0b0689"
            ]
        ]
    },
    {
        "id": "0d22da323f421515",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "A_34_Release_FB",
        "func": "if (msg.topic === \"A_34_Release_FB\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_34_Release_FB\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1580,
        "wires": [
            [
                "ba4af659a05b9ba4"
            ]
        ]
    },
    {
        "id": "692ce3083da3cd5c",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "A_34_Pist_Bck",
        "func": "if (msg.topic === \"A_34_Pist_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_34_Pist_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1540,
        "wires": [
            [
                "dee7be7b8f56d228"
            ]
        ]
    },
    {
        "id": "cfb25b735a0254e7",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "A_34_Count",
        "func": "if (msg.topic === \"A_34_Count\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_34_Count\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1500,
        "wires": [
            [
                "c98ba62338238153"
            ]
        ]
    },
    {
        "id": "932d0f8356de37fb",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "A_34_Optic",
        "func": "if (msg.topic === \"A_34_Optic\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_34_Optic\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1460,
        "wires": [
            [
                "ebc077d5bb00d618"
            ]
        ]
    },
    {
        "id": "abf8349930a04f3a",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "A_34_Cart_Next",
        "func": "if (msg.topic === \"A_34_Cart_Next\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_34_Cart_Next\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1420,
        "wires": [
            [
                "413c65016304e887"
            ]
        ]
    },
    {
        "id": "c059d2b10994b4e4",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "A_34_Cart_Stat",
        "func": "if (msg.topic === \"A_34_Cart_Stat\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_34_Cart_Stat\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1380,
        "wires": [
            [
                "3403f7bbbf06f2f0"
            ]
        ]
    },
    {
        "id": "480dafa3c8bcd426",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "Read S",
        "links": [
            "3337773dd175de51"
        ],
        "x": 55,
        "y": 1300,
        "wires": [
            [
                "373ad2e34f61e686"
            ]
        ]
    },
    {
        "id": "0f58f22e36d8f9bc",
        "type": "file in",
        "z": "aefdc2670756e2cc",
        "g": "c75cbb06b774e3f1",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Robot/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1300,
        "wires": [
            [
                "8271871d66ccc793"
            ]
        ]
    },
    {
        "id": "d84c8566e0d0f82a",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "item": "C_30_Robot1",
        "datatype": "Boolean",
        "value": "",
        "name": "C_30_Robot1",
        "x": 620,
        "y": 1880,
        "wires": [
            [
                "f94676193db1dd15"
            ]
        ]
    },
    {
        "id": "573b9b4659fe4ffa",
        "type": "OpcUa-Item",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "item": "C_30_Robot2",
        "datatype": "Boolean",
        "value": "",
        "name": "C_30_Robot2",
        "x": 620,
        "y": 1920,
        "wires": [
            [
                "f94676193db1dd15"
            ]
        ]
    },
    {
        "id": "f94676193db1dd15",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "50 Control",
        "mode": "link",
        "links": [
            "869b79db9fce6786"
        ],
        "x": 775,
        "y": 1900,
        "wires": []
    },
    {
        "id": "756d93447b263a4f",
        "type": "switch",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "30 C",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_30_Robot1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_30_Robot2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 1900,
        "wires": [
            [
                "e2eb9ff581590b29"
            ],
            [
                "cbcc62a7f4150513"
            ]
        ]
    },
    {
        "id": "c38956a89d44a321",
        "type": "ui_dropdown",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "039b10cab3ee7797",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "No Movement",
                "value": "No_Move",
                "type": "str"
            },
            {
                "label": "Routine 1",
                "value": "C_30_Robot1",
                "type": "str"
            },
            {
                "label": "Routine 2",
                "value": "C_30_Robot2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 1900,
        "wires": [
            [
                "9abbdc0ff2ce861c",
                "feb1b593aa0494d9"
            ]
        ]
    },
    {
        "id": "9abbdc0ff2ce861c",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "C_30_Robot1",
        "func": "if (msg.payload === \"C_30_Robot1\") \nreturn { payload: true, topic: \"C_30_Robot1\"};\nelse return { payload: false, topic: \"C_30_Robot1\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1880,
        "wires": [
            [
                "d84c8566e0d0f82a"
            ]
        ]
    },
    {
        "id": "feb1b593aa0494d9",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "C_30_Robot2",
        "func": "if (msg.payload === \"C_30_Robot2\") \nreturn { payload: true, topic: \"C_30_Robot2\"};\nelse return { payload: false, topic: \"C_30_Robot2\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1920,
        "wires": [
            [
                "573b9b4659fe4ffa"
            ]
        ]
    },
    {
        "id": "ae8b7b609432570a",
        "type": "inject",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "No_Move",
        "payloadType": "str",
        "x": 190,
        "y": 1940,
        "wires": [
            [
                "c38956a89d44a321"
            ]
        ]
    },
    {
        "id": "7285cfd13fa4871d",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1800,
        "wires": [
            [
                "67e87aa0d216ba50"
            ]
        ]
    },
    {
        "id": "ca591f16f88d9483",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1800,
        "wires": [
            [
                "7285cfd13fa4871d"
            ]
        ]
    },
    {
        "id": "67e87aa0d216ba50",
        "type": "OpcUa-Client",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub C",
        "x": 1130,
        "y": 1800,
        "wires": [
            [
                "b60ab1bd602676ea",
                "3d108f219928489e"
            ],
            [
                "ebde0f484efa6ca2"
            ]
        ]
    },
    {
        "id": "b60ab1bd602676ea",
        "type": "debug",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "30 C",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1840,
        "wires": []
    },
    {
        "id": "ebde0f484efa6ca2",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n        \t\"C_30_Robot1\" : false,\n\t        \"C_30_Robot2\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1800,
        "wires": [
            [
                "5a1a5ccac536b9a5"
            ]
        ]
    },
    {
        "id": "805d3d58595950ad",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1800,
        "wires": [
            [
                "0c7fb8fb654d7365"
            ]
        ]
    },
    {
        "id": "5a1a5ccac536b9a5",
        "type": "trigger",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1800,
        "wires": [
            [
                "f792bf584ca12e9b"
            ]
        ]
    },
    {
        "id": "f792bf584ca12e9b",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1800,
        "wires": [
            [
                "805d3d58595950ad"
            ]
        ]
    },
    {
        "id": "086610c339e5add6",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "Sub In 30 C",
        "links": [
            "3d108f219928489e"
        ],
        "x": 895,
        "y": 1900,
        "wires": [
            [
                "756d93447b263a4f"
            ]
        ]
    },
    {
        "id": "3d108f219928489e",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "Sub Out 30 C",
        "mode": "link",
        "links": [
            "086610c339e5add6"
        ],
        "x": 1295,
        "y": 1800,
        "wires": []
    },
    {
        "id": "fe9e151c35a0ebe0",
        "type": "link in",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "Read C",
        "links": [
            "3337773dd175de51"
        ],
        "x": 55,
        "y": 1800,
        "wires": [
            [
                "ebde0f484efa6ca2"
            ]
        ]
    },
    {
        "id": "e2eb9ff581590b29",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "C_30_Robot1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1880,
        "wires": [
            [
                "211e404cce5a25d6"
            ]
        ]
    },
    {
        "id": "cbcc62a7f4150513",
        "type": "function",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "C_30_Robot2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1920,
        "wires": [
            [
                "211e404cce5a25d6"
            ]
        ]
    },
    {
        "id": "211e404cce5a25d6",
        "type": "link out",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "S7 C",
        "mode": "link",
        "links": [
            "3e2eb62c82c95c2e"
        ],
        "x": 1355,
        "y": 1900,
        "wires": []
    },
    {
        "id": "0c7fb8fb654d7365",
        "type": "file in",
        "z": "aefdc2670756e2cc",
        "g": "2f0b0ff43a59be24",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Robot/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1800,
        "wires": [
            [
                "ca591f16f88d9483"
            ]
        ]
    },
    {
        "id": "5b50f224557cc80a",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "g": "f196d0901e7c1361",
        "name": "Change Tag ID",
        "func": "msg.payload = \"tag.write_id(new_tag_id=\" + msg.payload.id + \")\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 520,
        "wires": [
            [
                "1c28df48d9380276"
            ]
        ]
    },
    {
        "id": "299be10abb5aedd7",
        "type": "tcp request",
        "z": "3ff8f0e7fc264904",
        "g": "c53d100d77413243",
        "name": "RFID Write",
        "server": "200.145.26.38",
        "port": "50007",
        "out": "sit",
        "ret": "string",
        "splitc": " ",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 510,
        "y": 340,
        "wires": [
            [
                "1165e430fb1ed2b1"
            ]
        ]
    },
    {
        "id": "1165e430fb1ed2b1",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "c53d100d77413243",
        "name": "Sucess/Error",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "tag_id=",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "user_data=",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 690,
        "y": 340,
        "wires": [
            [
                "164480ee59237fdf"
            ],
            [
                "f148d89c087eda3e"
            ],
            [
                "7b73b950093aaa5a"
            ]
        ]
    },
    {
        "id": "164480ee59237fdf",
        "type": "split",
        "z": "3ff8f0e7fc264904",
        "g": "c53d100d77413243",
        "name": "Sucess",
        "splt": "=",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 860,
        "y": 320,
        "wires": [
            [
                "db4c360fb9f767c9"
            ]
        ]
    },
    {
        "id": "7b73b950093aaa5a",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "g": "c53d100d77413243",
        "name": "Error",
        "func": "msg.payload = \"Nenhuma Tag no alcance da antena\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 400,
        "wires": [
            [
                "db4c360fb9f767c9",
                "bf8dc29265ebbb10"
            ]
        ]
    },
    {
        "id": "1c28df48d9380276",
        "type": "tcp request",
        "z": "3ff8f0e7fc264904",
        "g": "f196d0901e7c1361",
        "name": "RFID Write",
        "server": "200.145.26.38",
        "port": "50007",
        "out": "sit",
        "ret": "string",
        "splitc": " ",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 530,
        "y": 520,
        "wires": [
            [
                "5a2602cd1cc48931"
            ]
        ]
    },
    {
        "id": "5a2602cd1cc48931",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "f196d0901e7c1361",
        "name": "Sucess/Error",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 520,
        "wires": [
            [
                "bd1a556421398190"
            ],
            [
                "193ae8268b4d93b5"
            ]
        ]
    },
    {
        "id": "bd1a556421398190",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "g": "f196d0901e7c1361",
        "name": "Sucess",
        "func": "msg.payload = \"Tag ID changed\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 500,
        "wires": [
            [
                "103fc12450eb92fd"
            ]
        ]
    },
    {
        "id": "193ae8268b4d93b5",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "g": "f196d0901e7c1361",
        "name": "Error",
        "func": "msg.payload = \"Error\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "103fc12450eb92fd"
            ]
        ]
    },
    {
        "id": "e7d1ad22c96f3667",
        "type": "join",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "name": "Collects Messages for display",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "useparts": true,
        "accumulate": false,
        "timeout": "",
        "count": "10",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1260,
        "y": 140,
        "wires": [
            [
                "4faef94e5be76e06"
            ]
        ]
    },
    {
        "id": "d87e64762305f506",
        "type": "tcp in",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "name": "RFID Read",
        "server": "client",
        "host": "200.145.26.38",
        "port": "50008",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "f7f4c859274b5e11"
            ]
        ]
    },
    {
        "id": "e785ce5b735ec3d4",
        "type": "split",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "name": "String Treatment 1",
        "splt": "\\r",
        "spltType": "str",
        "arraySplt": "2",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 610,
        "y": 60,
        "wires": [
            [
                "a0b91a14bfca8c0d"
            ]
        ]
    },
    {
        "id": "50c0c084ece37844",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "name": "String Treatment 3",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 140,
        "wires": [
            [
                "47202d7fef6b54e4"
            ]
        ]
    },
    {
        "id": "47202d7fef6b54e4",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "name": "Initialization",
        "func": "msg.payload = \n    \"setup.operating_mode=autonomous\\r\\n\\\n    modem.protocol.isoc.physical.set(tari=tari_12_50, return_link_freq=LF160, data_1_length=d1_len_20, rt_modulation=rt_mod_pr, tr_encoding=tr_enc_fm0, interrogator_mode=dense)\\r\\n\\\n    antennas.1.conducted_power=240\\r\\n\\\n    antennas.2.conducted_power=180\\r\\n\\\n    antennas.3.conducted_power=240\\r\\n\\\n    antennas.4.conducted_power=240\\r\\n\\\n    tag.reporting.depart_fields=tag_id antenna time user_data\\r\\n\\\n    tag.reporting.arrive_fields=tag_id antenna time user_data\\r\\n\\\n    reader.events.register(\" + msg.payload + \", event.tag.arrive)\\r\\n\\\n    reader.events.register(\" + msg.payload + \", event.tag.depart)\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 140,
        "wires": [
            [
                "98fa441a2faa7e62",
                "3f21772a72fa9651"
            ]
        ]
    },
    {
        "id": "98fa441a2faa7e62",
        "type": "tcp request",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "name": "RFID Write",
        "server": "200.145.26.38",
        "port": "50007",
        "out": "sit",
        "ret": "string",
        "splitc": " ",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 990,
        "y": 140,
        "wires": [
            [
                "e7d1ad22c96f3667"
            ]
        ]
    },
    {
        "id": "4183fbc30b7fdf1f",
        "type": "link out",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "name": "RFID Read",
        "mode": "link",
        "links": [
            "ad3ca155558b191f",
            "2b197f6c07f4e9ca",
            "e0b97b7bdc562836",
            "09d20826e4056671",
            "de73bf1278fffe61",
            "5a32dcca2d186ae0"
        ],
        "x": 685,
        "y": 220,
        "wires": []
    },
    {
        "id": "a0b91a14bfca8c0d",
        "type": "split",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "name": "String Treatment 2",
        "splt": "event.connection id = ",
        "spltType": "str",
        "arraySplt": "2",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 610,
        "y": 100,
        "wires": [
            [
                "50c0c084ece37844"
            ]
        ]
    },
    {
        "id": "bb48b945303405ab",
        "type": "inject",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "name": "",
        "props": [
            {
                "p": "complete",
                "v": ".",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "x": 1010,
        "y": 80,
        "wires": [
            [
                "e7d1ad22c96f3667"
            ]
        ]
    },
    {
        "id": "ad3ca155558b191f",
        "type": "link in",
        "z": "3ff8f0e7fc264904",
        "g": "2277aaf5df48566c",
        "name": "RFID Read",
        "links": [
            "4183fbc30b7fdf1f"
        ],
        "x": 1175,
        "y": 380,
        "wires": [
            [
                "94df3e20533a36b2"
            ]
        ]
    },
    {
        "id": "94df3e20533a36b2",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "2277aaf5df48566c",
        "name": "Slipt by Antenna",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "antenna=1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1300,
        "y": 380,
        "wires": [
            [
                "8c27e4b37b93b5e8"
            ],
            [
                "9ef16d043e2c2cd5"
            ],
            [
                "aba6794c907c1e98"
            ],
            [
                "119c3836019e599b"
            ]
        ]
    },
    {
        "id": "cb20a8e8f9b3db29",
        "type": "link in",
        "z": "3ff8f0e7fc264904",
        "name": "link in 8",
        "links": [],
        "x": 245,
        "y": 1460,
        "wires": [
            [
                "fd485d6f2b203a2d"
            ]
        ]
    },
    {
        "id": "e7dd9b39273da9ba",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "name": "Escreve Antena 1",
        "property": "payload.variableName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "_W_TagID",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "_W_UserData",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 1440,
        "wires": [
            [
                "f76d76bcdb6f503e"
            ],
            [
                "6440a1394229ccc2"
            ]
        ]
    },
    {
        "id": "fd485d6f2b203a2d",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "name": "Escreve do Server OPCUA",
        "property": "payload.variableName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "_W_",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 240,
        "y": 1520,
        "wires": [
            [
                "50c19a35fad2c6ce"
            ]
        ]
    },
    {
        "id": "f76d76bcdb6f503e",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "name": "Escreve/Altera Tag ID",
        "func": "msg.payload = \"tag.write_id(new_tag_id=\" + msg.payload.variableValue + \", antenna=\" + msg.payload.antena + \")\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 1420,
        "wires": [
            [
                "14f4b46b3ddfc15f"
            ]
        ]
    },
    {
        "id": "6440a1394229ccc2",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "name": "Escreve/Altera User Data",
        "func": "msg.payload = \"tag.write_user_data(user_data=\" + msg.payload.variableValue + \", antenna=\"+ msg.payload.antena +\" )\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1640,
        "wires": [
            [
                "14f4b46b3ddfc15f"
            ]
        ]
    },
    {
        "id": "14f4b46b3ddfc15f",
        "type": "tcp request",
        "z": "3ff8f0e7fc264904",
        "name": "RFID Escrita",
        "server": "200.145.26.38",
        "port": "50007",
        "out": "sit",
        "ret": "string",
        "splitc": " ",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 1910,
        "y": 1540,
        "wires": [
            [
                "15062f3bb59a1d24"
            ]
        ]
    },
    {
        "id": "cac8c500f4b31639",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "name": "Separa os dados escritos por antena",
        "property": "payload.variableName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Antena1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Antena2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Antena3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Antena4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 770,
        "y": 1520,
        "wires": [
            [
                "12968e5453bcbdd3"
            ],
            [
                "7593feb469b24bdb"
            ],
            [
                "d64dcff01597e423"
            ],
            [
                "8522449ec6bafa3b"
            ]
        ]
    },
    {
        "id": "66e2636d8c6845d5",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "name": "Escreve Antena 2",
        "property": "payload.variableName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "_W_TagID",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "_W_UserData",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 1500,
        "wires": [
            [
                "f76d76bcdb6f503e"
            ],
            [
                "6440a1394229ccc2"
            ]
        ]
    },
    {
        "id": "a61a203e8498e2ef",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "name": "Escreve Antena 3",
        "property": "payload.variableName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "_W_TagID",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "_W_UserData",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 1560,
        "wires": [
            [
                "f76d76bcdb6f503e"
            ],
            [
                "6440a1394229ccc2"
            ]
        ]
    },
    {
        "id": "a4230beba0b6c174",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "name": "Escreve Antena 4",
        "property": "payload.variableName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "_W_TagID",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "_W_UserData",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 1620,
        "wires": [
            [
                "f76d76bcdb6f503e"
            ],
            [
                "6440a1394229ccc2"
            ]
        ]
    },
    {
        "id": "12968e5453bcbdd3",
        "type": "change",
        "z": "3ff8f0e7fc264904",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.antena",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1440,
        "wires": [
            [
                "e7dd9b39273da9ba"
            ]
        ]
    },
    {
        "id": "7593feb469b24bdb",
        "type": "change",
        "z": "3ff8f0e7fc264904",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.antena",
                "pt": "msg",
                "to": "2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1500,
        "wires": [
            [
                "66e2636d8c6845d5"
            ]
        ]
    },
    {
        "id": "d64dcff01597e423",
        "type": "change",
        "z": "3ff8f0e7fc264904",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.antena",
                "pt": "msg",
                "to": "3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1560,
        "wires": [
            [
                "a61a203e8498e2ef"
            ]
        ]
    },
    {
        "id": "8522449ec6bafa3b",
        "type": "change",
        "z": "3ff8f0e7fc264904",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.antena",
                "pt": "msg",
                "to": "4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1620,
        "wires": [
            [
                "a4230beba0b6c174"
            ]
        ]
    },
    {
        "id": "15062f3bb59a1d24",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2190,
        "y": 1540,
        "wires": [
            [
                "b12ad13d7ec45fb0"
            ],
            [
                "fe52939ea0c41b2f"
            ]
        ]
    },
    {
        "id": "b12ad13d7ec45fb0",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "name": "Escrita Servidor Sucesso",
        "func": "msg.payload = \"Escrita feita com sucesso pelo servidor\"\nmsg.topic = \"ns=12;s=StatusEscrita;datatype=String\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2430,
        "y": 1520,
        "wires": [
            [
                "fe4601ef58c1eef5"
            ]
        ]
    },
    {
        "id": "fe52939ea0c41b2f",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "name": "Escrita Servidor Erro",
        "func": "msg.payload = \"Problema ao fazer a escrita pelo servidor. Erro: \"+ msg.payload\nmsg.topic = \"ns=12;s=StatusEscrita;datatype=String\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1560,
        "wires": [
            [
                "fe4601ef58c1eef5"
            ]
        ]
    },
    {
        "id": "221466aff7ee9532",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "group": "77f4ade265432843",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Messages",
        "label": "Messages",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 590,
        "y": 180,
        "wires": []
    },
    {
        "id": "5a3d7807229e14e0",
        "type": "ui_button",
        "z": "3ff8f0e7fc264904",
        "g": "c53d100d77413243",
        "name": "Check Tag ID",
        "group": "db650f95e5d0ea5d",
        "order": 1,
        "width": "5",
        "height": 1,
        "passthru": false,
        "label": "Check Tag ID",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "b573dc9dbf3388a0"
            ]
        ]
    },
    {
        "id": "4b9364f6aa702894",
        "type": "ui_form",
        "z": "3ff8f0e7fc264904",
        "g": "f196d0901e7c1361",
        "name": "",
        "label": "Change Tag ID",
        "group": "670bea26ab1f0b31",
        "order": 3,
        "width": "5",
        "height": 1,
        "options": [
            {
                "label": "New TagID",
                "value": "id",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "Alterar",
        "cancel": "Cancelar",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 120,
        "y": 520,
        "wires": [
            [
                "5b50f224557cc80a"
            ]
        ]
    },
    {
        "id": "3f21772a72fa9651",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "group": "632b700d764ef18c",
        "order": 1,
        "width": "10",
        "height": "6",
        "name": "Initialization",
        "label": "Initialization Commands",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 990,
        "y": 200,
        "wires": []
    },
    {
        "id": "4faef94e5be76e06",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "group": "632b700d764ef18c",
        "order": 2,
        "width": "7",
        "height": "1",
        "name": "",
        "label": "Setup Confirmation",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1510,
        "y": 140,
        "wires": []
    },
    {
        "id": "db4c360fb9f767c9",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "c53d100d77413243",
        "group": "db650f95e5d0ea5d",
        "order": 2,
        "width": "5",
        "height": 1,
        "name": "Tag ID",
        "label": "Tag ID:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1010,
        "y": 320,
        "wires": []
    },
    {
        "id": "103fc12450eb92fd",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "f196d0901e7c1361",
        "group": "670bea26ab1f0b31",
        "order": 4,
        "width": "5",
        "height": 1,
        "name": "Tag ID",
        "label": "Tag ID Status",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1010,
        "y": 520,
        "wires": []
    },
    {
        "id": "fe4601ef58c1eef5",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "group": "77f4ade265432843",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2630,
        "y": 1540,
        "wires": []
    },
    {
        "id": "50c19a35fad2c6ce",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "name": "Filtra dados corretos",
        "property": "payload.variableValue",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 480,
        "y": 1520,
        "wires": [
            [
                "cac8c500f4b31639"
            ]
        ]
    },
    {
        "id": "f7f4c859274b5e11",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "name": "Separates Config/Messages",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "event.connection id = ",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "event.tag",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 140,
        "wires": [
            [
                "e785ce5b735ec3d4"
            ],
            [
                "221466aff7ee9532",
                "ba02f3865fa46f28"
            ]
        ]
    },
    {
        "id": "8c27e4b37b93b5e8",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "2277aaf5df48566c",
        "group": "2b930a78f65c7d76",
        "order": 1,
        "width": "10",
        "height": "1",
        "name": "Ant1 Report",
        "label": "Antenna 1",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1510,
        "y": 320,
        "wires": []
    },
    {
        "id": "9ef16d043e2c2cd5",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "2277aaf5df48566c",
        "group": "2b930a78f65c7d76",
        "order": 2,
        "width": "10",
        "height": "1",
        "name": "Ant2 Report",
        "label": "Antenna 2",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1510,
        "y": 360,
        "wires": []
    },
    {
        "id": "aba6794c907c1e98",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "2277aaf5df48566c",
        "group": "2b930a78f65c7d76",
        "order": 3,
        "width": "10",
        "height": "1",
        "name": "Ant3 Report",
        "label": "Antenna 3",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1510,
        "y": 400,
        "wires": []
    },
    {
        "id": "119c3836019e599b",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "2277aaf5df48566c",
        "group": "2b930a78f65c7d76",
        "order": 4,
        "width": "10",
        "height": "1",
        "name": "Ant4 Report",
        "label": "Antenna 4",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1510,
        "y": 440,
        "wires": []
    },
    {
        "id": "ba02f3865fa46f28",
        "type": "delay",
        "z": "3ff8f0e7fc264904",
        "g": "b00197371b411656",
        "name": "Delay 1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 580,
        "y": 220,
        "wires": [
            [
                "4183fbc30b7fdf1f"
            ]
        ]
    },
    {
        "id": "b573dc9dbf3388a0",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "g": "c53d100d77413243",
        "name": "Check Tag ID",
        "func": "msg.payload = \"tag.read_id(antenna=3)\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 340,
        "wires": [
            [
                "299be10abb5aedd7"
            ]
        ]
    },
    {
        "id": "e0b97b7bdc562836",
        "type": "link in",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Ant 1",
        "links": [
            "4183fbc30b7fdf1f"
        ],
        "x": 55,
        "y": 800,
        "wires": [
            [
                "62ecf97fd8b4e39c"
            ]
        ]
    },
    {
        "id": "62ecf97fd8b4e39c",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Antenna Selector",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "antenna=1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "antenna=4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 190,
        "y": 800,
        "wires": [
            [
                "fa937cab2b143063",
                "8fa4c809675e893e"
            ],
            [
                "d4892ae096e1cfc4",
                "8d17f7fa3e6a59e3"
            ],
            [
                "dc00564d54fa4022",
                "5dda72f1be5a2a2e"
            ],
            [
                "acaac739fd715019",
                "0a50a918afddb626"
            ]
        ]
    },
    {
        "id": "fa937cab2b143063",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Read tag.arrive",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "event.tag.arrive",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 660,
        "wires": [
            [
                "c6fc6458c1ceca79"
            ]
        ]
    },
    {
        "id": "c22b95ad1fa8a276",
        "type": "split",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 660,
        "wires": [
            [
                "e90b3bb7d8bee356"
            ]
        ]
    },
    {
        "id": "c6fc6458c1ceca79",
        "type": "split",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 570,
        "y": 660,
        "wires": [
            [
                "c22b95ad1fa8a276"
            ]
        ]
    },
    {
        "id": "e90b3bb7d8bee356",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "tag_id",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "user_data",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 660,
        "wires": [
            [
                "bc65cc48e6ec8824"
            ],
            [
                "7fe34908125c9fff"
            ]
        ]
    },
    {
        "id": "ac7b715d5d98d8dc",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "group": "9eca6ac627a3fef6",
        "order": 6,
        "width": "6",
        "height": 1,
        "name": "Tag ID Antena 1:",
        "label": "TagID A1:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1290,
        "y": 660,
        "wires": []
    },
    {
        "id": "0cbb48aaa7b21081",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "group": "9eca6ac627a3fef6",
        "order": 8,
        "width": "6",
        "height": 2,
        "name": "User Data Antena 1:",
        "label": "UserData A1:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1300,
        "y": 700,
        "wires": []
    },
    {
        "id": "bc65cc48e6ec8824",
        "type": "OpcUa-Item",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "item": "R_Ant1_R_TagID",
        "datatype": "String",
        "value": "",
        "name": "R_Ant1_R_TagID",
        "x": 1050,
        "y": 660,
        "wires": [
            [
                "ac7b715d5d98d8dc"
            ]
        ]
    },
    {
        "id": "7fe34908125c9fff",
        "type": "OpcUa-Item",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "item": "R_Ant1_R_UserData",
        "datatype": "String",
        "value": "",
        "name": "R_Ant1_R_UserData",
        "x": 1060,
        "y": 700,
        "wires": [
            [
                "0cbb48aaa7b21081"
            ]
        ]
    },
    {
        "id": "8fa4c809675e893e",
        "type": "delay",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "0.5s Delay",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 700,
        "wires": [
            [
                "b82b845ed26877b2"
            ]
        ]
    },
    {
        "id": "b82b845ed26877b2",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Red Tag.depart",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "event.tag.depart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 700,
        "wires": [
            [
                "f84dcb00da2c7be8"
            ]
        ]
    },
    {
        "id": "f84dcb00da2c7be8",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Antenna 1",
        "func": "if (msg.topic === \"\") {\n    msg.payload=msg.topic\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 700,
        "wires": [
            [
                "bc65cc48e6ec8824",
                "7fe34908125c9fff"
            ]
        ]
    },
    {
        "id": "d4892ae096e1cfc4",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Read tag.arrive",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "event.tag.arrive",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 740,
        "wires": [
            [
                "141d4ff1986718b9"
            ]
        ]
    },
    {
        "id": "8d17f7fa3e6a59e3",
        "type": "delay",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "0.5s Delay",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 780,
        "wires": [
            [
                "a9664d1246d03009"
            ]
        ]
    },
    {
        "id": "141d4ff1986718b9",
        "type": "split",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 570,
        "y": 740,
        "wires": [
            [
                "bb177087d64c1938"
            ]
        ]
    },
    {
        "id": "a9664d1246d03009",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Red Tag.depart",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "event.tag.depart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 780,
        "wires": [
            [
                "6c9f7a65f7b4a236"
            ]
        ]
    },
    {
        "id": "bb177087d64c1938",
        "type": "split",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 740,
        "wires": [
            [
                "377b74b6bc2f32b8"
            ]
        ]
    },
    {
        "id": "6c9f7a65f7b4a236",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Antenna 2",
        "func": "if (msg.topic === \"\") {\n    msg.payload=msg.topic\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 780,
        "wires": [
            [
                "bb90e0c5606cb609",
                "7db2ec459a6e5ed7"
            ]
        ]
    },
    {
        "id": "377b74b6bc2f32b8",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "tag_id",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "user_data",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 740,
        "wires": [
            [
                "bb90e0c5606cb609"
            ],
            [
                "7db2ec459a6e5ed7"
            ]
        ]
    },
    {
        "id": "bb90e0c5606cb609",
        "type": "OpcUa-Item",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "item": "R_Ant2_R_TagID",
        "datatype": "String",
        "value": "",
        "name": "R_Ant2_R_TagID",
        "x": 1050,
        "y": 740,
        "wires": [
            [
                "0ed4dd000396d668"
            ]
        ]
    },
    {
        "id": "7db2ec459a6e5ed7",
        "type": "OpcUa-Item",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "item": "R_Ant2_R_UserData",
        "datatype": "String",
        "value": "",
        "name": "R_Ant2_R_UserData",
        "x": 1060,
        "y": 780,
        "wires": [
            [
                "ed1eaeaeb6e5d62b"
            ]
        ]
    },
    {
        "id": "0ed4dd000396d668",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "group": "4af82163fe139a80",
        "order": 6,
        "width": "6",
        "height": 1,
        "name": "Tag ID Antena 2:",
        "label": "TagID A2:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1290,
        "y": 740,
        "wires": []
    },
    {
        "id": "ed1eaeaeb6e5d62b",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "group": "4af82163fe139a80",
        "order": 8,
        "width": "6",
        "height": 2,
        "name": "User Data Antena 2:",
        "label": "UserData A2:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1300,
        "y": 780,
        "wires": []
    },
    {
        "id": "dc00564d54fa4022",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Read tag.arrive",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "event.tag.arrive",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 820,
        "wires": [
            [
                "49b396ba9a15dd21"
            ]
        ]
    },
    {
        "id": "5dda72f1be5a2a2e",
        "type": "delay",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "0.5s Delay",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 860,
        "wires": [
            [
                "aa4e360929521482"
            ]
        ]
    },
    {
        "id": "49b396ba9a15dd21",
        "type": "split",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 570,
        "y": 820,
        "wires": [
            [
                "604612014368204e"
            ]
        ]
    },
    {
        "id": "aa4e360929521482",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Red Tag.depart",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "event.tag.depart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 860,
        "wires": [
            [
                "ea92e94379175915"
            ]
        ]
    },
    {
        "id": "604612014368204e",
        "type": "split",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 820,
        "wires": [
            [
                "057aba946e5eb286"
            ]
        ]
    },
    {
        "id": "ea92e94379175915",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Antenna 1",
        "func": "if (msg.topic === \"\") {\n    msg.payload=msg.topic\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 860,
        "wires": [
            [
                "edced847a984f603",
                "009a8cc9c56ebd3a"
            ]
        ]
    },
    {
        "id": "057aba946e5eb286",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "tag_id",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "user_data",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 820,
        "wires": [
            [
                "edced847a984f603"
            ],
            [
                "009a8cc9c56ebd3a"
            ]
        ]
    },
    {
        "id": "edced847a984f603",
        "type": "OpcUa-Item",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "item": "R_Ant3_R_TagID",
        "datatype": "String",
        "value": "",
        "name": "R_Ant3_R_TagID",
        "x": 1050,
        "y": 820,
        "wires": [
            [
                "f779e2d03e87234d"
            ]
        ]
    },
    {
        "id": "009a8cc9c56ebd3a",
        "type": "OpcUa-Item",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "item": "R_Ant3_R_UserData",
        "datatype": "String",
        "value": "",
        "name": "R_Ant3_R_UserData",
        "x": 1060,
        "y": 860,
        "wires": [
            [
                "629988721f8816df"
            ]
        ]
    },
    {
        "id": "f779e2d03e87234d",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "group": "03da9ce77e4e4049",
        "order": 6,
        "width": "6",
        "height": 1,
        "name": "Tag ID Antena 3:",
        "label": "TagID A3:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1290,
        "y": 820,
        "wires": []
    },
    {
        "id": "629988721f8816df",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "group": "03da9ce77e4e4049",
        "order": 8,
        "width": "6",
        "height": 2,
        "name": "User Data Antena 3:",
        "label": "UserData A3:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1300,
        "y": 860,
        "wires": []
    },
    {
        "id": "acaac739fd715019",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Read tag.arrive",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "event.tag.arrive",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 900,
        "wires": [
            [
                "ac034e867f4cee17"
            ]
        ]
    },
    {
        "id": "0a50a918afddb626",
        "type": "delay",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "0.5s Delay",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 940,
        "wires": [
            [
                "25e7e69dadd6d610"
            ]
        ]
    },
    {
        "id": "ac034e867f4cee17",
        "type": "split",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 570,
        "y": 900,
        "wires": [
            [
                "da0a8a8f03c71feb"
            ]
        ]
    },
    {
        "id": "25e7e69dadd6d610",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Red Tag.depart",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "event.tag.depart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 940,
        "wires": [
            [
                "96ca7e3808aa93ee"
            ]
        ]
    },
    {
        "id": "da0a8a8f03c71feb",
        "type": "split",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 900,
        "wires": [
            [
                "6eadbf0c30a19177"
            ]
        ]
    },
    {
        "id": "96ca7e3808aa93ee",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "Antenna 1",
        "func": "if (msg.topic === \"\") {\n    msg.payload=msg.topic\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 940,
        "wires": [
            [
                "dd8fdfbebea5fdbc",
                "6dac11e739352a03"
            ]
        ]
    },
    {
        "id": "6eadbf0c30a19177",
        "type": "switch",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "tag_id",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "user_data",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 900,
        "wires": [
            [
                "dd8fdfbebea5fdbc"
            ],
            [
                "6dac11e739352a03"
            ]
        ]
    },
    {
        "id": "dd8fdfbebea5fdbc",
        "type": "OpcUa-Item",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "item": "R_Ant4_R_TagID",
        "datatype": "String",
        "value": "",
        "name": "R_Ant4_R_TagID",
        "x": 1050,
        "y": 900,
        "wires": [
            [
                "8f2da2c991155a34"
            ]
        ]
    },
    {
        "id": "6dac11e739352a03",
        "type": "OpcUa-Item",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "item": "R_Ant4_R_UserData",
        "datatype": "String",
        "value": "",
        "name": "R_Ant1_R_UserData",
        "x": 1060,
        "y": 940,
        "wires": [
            [
                "a86b1135f5c0ac06"
            ]
        ]
    },
    {
        "id": "8f2da2c991155a34",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "group": "c80eba6f1f35960e",
        "order": 6,
        "width": "6",
        "height": 1,
        "name": "Tag ID Antena 4:",
        "label": "TagID A4:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1290,
        "y": 900,
        "wires": []
    },
    {
        "id": "a86b1135f5c0ac06",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "e0291f80669d386b",
        "group": "c80eba6f1f35960e",
        "order": 8,
        "width": "6",
        "height": 2,
        "name": "User Data Antena 4:",
        "label": "UserData A4:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1300,
        "y": 940,
        "wires": []
    },
    {
        "id": "51ffc784bad16867",
        "type": "ui_form",
        "z": "3ff8f0e7fc264904",
        "g": "f196d0901e7c1361",
        "name": "",
        "label": "Change User Data",
        "group": "670bea26ab1f0b31",
        "order": 3,
        "width": "5",
        "height": 1,
        "options": [
            {
                "label": "New User Data",
                "value": "user_data",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "user_data": ""
        },
        "payload": "",
        "submit": "Alterar",
        "cancel": "Cancelar",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "5c83394e099624a3"
            ]
        ]
    },
    {
        "id": "5c83394e099624a3",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "g": "f196d0901e7c1361",
        "name": "Change User Data",
        "func": "msg.payload = \"tag.write_user_data(user_data=\" + msg.payload.user_data + \") \\r\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 560,
        "wires": [
            [
                "1c28df48d9380276"
            ]
        ]
    },
    {
        "id": "e6371789be789ea6",
        "type": "ui_button",
        "z": "3ff8f0e7fc264904",
        "g": "c53d100d77413243",
        "name": "Check Tag ID",
        "group": "db650f95e5d0ea5d",
        "order": 1,
        "width": "5",
        "height": 1,
        "passthru": false,
        "label": "Check User Data",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 380,
        "wires": [
            [
                "a8ad2bcb08b0f956"
            ]
        ]
    },
    {
        "id": "a8ad2bcb08b0f956",
        "type": "function",
        "z": "3ff8f0e7fc264904",
        "g": "c53d100d77413243",
        "name": "Check User Data",
        "func": "msg.payload = \"tag.read_user_data()\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 380,
        "wires": [
            [
                "299be10abb5aedd7"
            ]
        ]
    },
    {
        "id": "f148d89c087eda3e",
        "type": "split",
        "z": "3ff8f0e7fc264904",
        "g": "c53d100d77413243",
        "name": "Sucess",
        "splt": "=",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 860,
        "y": 360,
        "wires": [
            [
                "bf8dc29265ebbb10"
            ]
        ]
    },
    {
        "id": "bf8dc29265ebbb10",
        "type": "ui_text",
        "z": "3ff8f0e7fc264904",
        "g": "c53d100d77413243",
        "group": "db650f95e5d0ea5d",
        "order": 2,
        "width": "5",
        "height": 1,
        "name": "User Data",
        "label": "User Data",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1020,
        "y": 380,
        "wires": []
    },
    {
        "id": "521d9e3d1592610c",
        "type": "csv",
        "z": "18b0dae29c8592d2",
        "g": "24fc674938ac64ce",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 510,
        "y": 360,
        "wires": [
            [
                "598eb8aa6cada444"
            ]
        ]
    },
    {
        "id": "acdb2944a3758514",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "24fc674938ac64ce",
        "name": "Select Row",
        "func": "// Recebe o número da linha desejada\nlet linhaDesejada = parseInt(msg.linha);  // 'linha' deve ser passada para este nó como o número da linha desejada\n\n// A tabela agora está em msg.payload como um array de objetos\nlet tabela = msg.payload;\n\n// Verifica se a tabela é um array e se a linha desejada existe\nif (Array.isArray(tabela) && linhaDesejada > 0 && linhaDesejada <= tabela.length) {\n    // Acessa a linha desejada (subtraímos 1 para ajustar ao índice do array)\n    let linha = tabela[linhaDesejada - 1];\n    msg.payload = linha;  // Retorna a linha encontrada\n} else {\n    msg.payload = { error: \"Linha não encontrada ou número de linha inválido\" };  // Retorna erro\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 360,
        "wires": [
            [
                "575ec6bc0d0440df",
                "947e6806e64edcc6",
                "4b09f5e135f20693"
            ]
        ]
    },
    {
        "id": "cdda28c1dec0e218",
        "type": "inject",
        "z": "18b0dae29c8592d2",
        "g": "24fc674938ac64ce",
        "name": "C",
        "props": [
            {
                "p": "linha",
                "v": "3",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 400,
        "wires": [
            [
                "f48b1d263f11ab10"
            ]
        ]
    },
    {
        "id": "f48b1d263f11ab10",
        "type": "file in",
        "z": "18b0dae29c8592d2",
        "g": "24fc674938ac64ce",
        "name": "Read Table 1",
        "filename": "C:\\Users\\admin\\Downloads\\Peças.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 360,
        "wires": [
            [
                "521d9e3d1592610c"
            ]
        ]
    },
    {
        "id": "190add8fcef503a8",
        "type": "inject",
        "z": "18b0dae29c8592d2",
        "g": "24fc674938ac64ce",
        "name": "A",
        "props": [
            {
                "p": "linha",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "f48b1d263f11ab10"
            ]
        ]
    },
    {
        "id": "22d818cf4d0107a3",
        "type": "inject",
        "z": "18b0dae29c8592d2",
        "g": "24fc674938ac64ce",
        "name": "B",
        "props": [
            {
                "p": "linha",
                "v": "2",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "f48b1d263f11ab10"
            ]
        ]
    },
    {
        "id": "598eb8aa6cada444",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "24fc674938ac64ce",
        "name": "Convert to Variables",
        "func": "// A tabela já foi convertida pelo nó CSV em um array de objetos\nlet tabela = msg.payload;\n\n// Itera sobre cada linha da tabela e converte as colunas \"true\" e \"false\" para valores booleanos reais\ntabela.forEach(linha => {\n    // Para cada linha, converte os valores das colunas para booleano\n    linha.Distribution = linha.Distribution === 'Sim';  // Converte string \"true\" para booleano true\n    linha.Processing = linha.Processing === 'Sim';      // Converte string \"true\" para booleano true\n    linha.Vision = linha.Vision === 'Sim';              // Converte string \"true\" para booleano true\n    linha.Robot = linha.Robot === 'Sim';                // Converte string \"true\" para booleano true\n    linha.Storage = linha.Storage === 'Sim';            // Converte string \"true\" para booleano true\n    linha.Sorting = linha.Sorting === 'Sim';            // Converte string \"true\" para booleano true\n});\n\n// Atualiza o msg.payload com a tabela convertida\nmsg.payload = tabela;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 360,
        "wires": [
            [
                "acdb2944a3758514"
            ]
        ]
    },
    {
        "id": "662fe75120762951",
        "type": "comment",
        "z": "18b0dae29c8592d2",
        "g": "24fc674938ac64ce",
        "name": "Start Process",
        "info": "",
        "x": 1130,
        "y": 280,
        "wires": []
    },
    {
        "id": "513239f92f9d501d",
        "type": "link in",
        "z": "18b0dae29c8592d2",
        "g": "24fc674938ac64ce",
        "name": "link in 47",
        "links": [],
        "x": 95,
        "y": 280,
        "wires": [
            [
                "5791c4ab479c79f9"
            ]
        ]
    },
    {
        "id": "f17c4c42bf323e41",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "d": true,
        "g": "24fc674938ac64ce",
        "name": "Server OPC Verification",
        "func": "if (msg.status == \"session active\") {\n    node.warn(\"Server connected!\")\n    return msg;\n} else {\n    node.warn(\"Server isn't connected\")\n    return null\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "5791c4ab479c79f9",
        "type": "rbe",
        "z": "18b0dae29c8592d2",
        "g": "24fc674938ac64ce",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "status",
        "topi": "topic",
        "x": 190,
        "y": 280,
        "wires": [
            [
                "f17c4c42bf323e41"
            ]
        ]
    },
    {
        "id": "575ec6bc0d0440df",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "24fc674938ac64ce",
        "name": "link out 15",
        "mode": "link",
        "links": [],
        "x": 815,
        "y": 300,
        "wires": []
    },
    {
        "id": "947e6806e64edcc6",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "24fc674938ac64ce",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 400,
        "wires": []
    },
    {
        "id": "f60169e0447c4522",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Construir Rota Ordenada",
        "func": "// --- CONSTRUIR ROTA (VERSÃO FINAL) ---\nlet entrada = msg.payload;\nlet colunasStr = msg.columns;\n\nif (!entrada || !colunasStr) {\n    node.error(\"Erro: msg.payload ou msg.columns não encontrados.\", msg);\n    return null;\n}\n\nlet ordemEstacoes = colunasStr.split(',').slice(1);\nlet rotaDoCart = [];\n\nfor (let i = 0; i < ordemEstacoes.length; i++) {\n    let nomeEstacao = ordemEstacoes[i].trim();\n    if (entrada.hasOwnProperty(nomeEstacao) && entrada[nomeEstacao] === true) {\n        rotaDoCart.push(nomeEstacao);\n    }\n}\n\n// MUDANÇA IMPORTANTE: Colocamos a rota diretamente no payload\nmsg.payload = {\n    \"route\": rotaDoCart\n};\n\nnode.log(`Rota passada diretamente na mensagem: ${JSON.stringify(rotaDoCart)}`);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 680,
        "wires": [
            [
                "7c1eb519b9cd7da5",
                "ee4957565a51c3e3"
            ]
        ]
    },
    {
        "id": "7c1eb519b9cd7da5",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "INICIAR ROTEAMENTO",
        "func": "// --- INICIAR ROTEAMENTO (VERSÃO FINAL) ---\n\n// MUDANÇA IMPORTANTE: Lemos a rota diretamente do payload\nlet route = msg.payload.route;\n\nif (!route || route.length === 0) {\n    node.error(\"ERRO: Rota não encontrada na mensagem ou está vazia.\", msg);\n    return null;\n}\n\nlet nextStation = route[0];\n\n// Ainda salvamos o índice no contexto para os próximos passos\nflow.set('currentStationIndex', 0);\n// E também a rota completa, para ser usada pela \"Determinar Próxima Estação\"\nflow.set('cartRoute', route);\n\n// Prepara a mensagem para o nó Switch\nmsg.payload = { \"nextStation\": nextStation };\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 680,
        "wires": [
            [
                "4aa188fb30a12564",
                "705ef0c989bd9bd1"
            ]
        ]
    },
    {
        "id": "4aa188fb30a12564",
        "type": "switch",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "",
        "property": "payload.nextStation",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Distribution",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Processing",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Vision",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Robot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Storage",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Sorting",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 910,
        "y": 680,
        "wires": [
            [
                "956b01032a9fe72b",
                "352d0d27c218c31f"
            ],
            [
                "1be052a0e437e19a",
                "b5ca070f945a7f73"
            ],
            [
                "bb3a5e20fbcff4ca",
                "a775292a08480839"
            ],
            [
                "7ece890aa7ea023c",
                "800268f4df14b764"
            ],
            [
                "85dc6ab18cb87b4e",
                "5ee3b0a4db72b4b7"
            ],
            [
                "1540f2d22c817cf9",
                "90f497842de1e250"
            ],
            [
                "7abe0fbbcb8f9036"
            ]
        ]
    },
    {
        "id": "956b01032a9fe72b",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 22",
        "mode": "link",
        "links": [
            "d070db2f7bb1aed8"
        ],
        "x": 1055,
        "y": 560,
        "wires": []
    },
    {
        "id": "1be052a0e437e19a",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 23",
        "mode": "link",
        "links": [
            "87a34ff96d342f32"
        ],
        "x": 1055,
        "y": 600,
        "wires": []
    },
    {
        "id": "bb3a5e20fbcff4ca",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 24",
        "mode": "link",
        "links": [
            "7f45df3c01693a01"
        ],
        "x": 1055,
        "y": 640,
        "wires": []
    },
    {
        "id": "7ece890aa7ea023c",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 25",
        "mode": "link",
        "links": [
            "7e3b3e37f20f7e8d"
        ],
        "x": 1055,
        "y": 680,
        "wires": []
    },
    {
        "id": "85dc6ab18cb87b4e",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 26",
        "mode": "link",
        "links": [
            "193c6585e06228b1"
        ],
        "x": 1055,
        "y": 720,
        "wires": []
    },
    {
        "id": "1540f2d22c817cf9",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 27",
        "mode": "link",
        "links": [
            "900e49d0bc75f135"
        ],
        "x": 1055,
        "y": 760,
        "wires": []
    },
    {
        "id": "fcb6441d2bf474d5",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Distribution",
        "func": "// --- VERSÃO DE DEPURAÇÃO (\"Sherlock Holmes\") para a Função da Estação ---\n\nlet currentStationName = \"Distribution\";\n\n//-----------------------------------------------------\n// Lógica para mensagem de COMANDO (do Switch)\n//-----------------------------------------------------\nif (msg.payload && msg.payload.nextStation === currentStationName) {\n    node.warn(`[${currentStationName}] COMANDO RECEBIDO: Roteador autorizou o cart. Armado e esperando CLP.`);\n    \n    flow.set('expected_clp_for_station', currentStationName); \n    flow.set(`msgFor_${currentStationName}`, msg);\n    \n    // Não envia a mensagem ainda, espera pelo CLP.\n    return null; // Usamos return null quando a função tem só 1 saída.\n}\n\n//-----------------------------------------------------\n// Lógica para mensagem de STATUS (do CLP)\n//-----------------------------------------------------\nif (typeof msg.topic === \"string\" && msg.topic.includes(\"_Cart_Stat\") && msg.payload === true) {\n    node.warn(`[${currentStationName}] SINAL DO CLP RECEBIDO: Tópico = ${msg.topic}`);\n\n    let expectedStation = flow.get('expected_clp_for_station');\n    node.warn(`[${currentStationName}] Verificando se o sinal era esperado. Estação esperada: '${expectedStation}'`);\n    \n    // Verifica se esta estação é a que está esperando o sinal do CLP\n    if (expectedStation === currentStationName) {\n        node.warn(`[${currentStationName}] SINAL ACEITO! Recuperando mensagem do cart para iniciar a operação.`);\n        \n        let msgToProcess = flow.get(`msgFor_${currentStationName}`);\n\n        if (msgToProcess) {\n            flow.set('expected_clp_for_station', null); \n            flow.set(`msgFor_${currentStationName}`, null);\n            \n            // Dispara a operação interna da estação (Saída 1)\n            node.warn(`[${currentStationName}] DISPARANDO OPERAÇÃO!`);\n            return [msgToProcess, null]; \n        } else {\n            node.error(`[${currentStationName}] ERRO LÓGICO: Sinal do CLP chegou, mas a mensagem do roteador não estava armazenada.`);\n            return null;\n        }\n    } else {\n        node.warn(`[${currentStationName}] SINAL REJEITADO! Sinal do CLP chegou fora de sequência ou é para outra estação.`);\n        // Se o sinal não era para esta estação, simplesmente o ignoramos.\n        return null; \n    }\n}\n\n// Para qualquer outra mensagem inesperada, não faz nada.\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 800,
        "wires": [
            [
                "431901c61929fbd1",
                "f84ea90e8e81db74"
            ],
            [
                "a567ad791b4c20c1"
            ]
        ]
    },
    {
        "id": "d070db2f7bb1aed8",
        "type": "link in",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link in 85",
        "links": [
            "956b01032a9fe72b"
        ],
        "x": 145,
        "y": 800,
        "wires": [
            [
                "fcb6441d2bf474d5"
            ]
        ]
    },
    {
        "id": "941826ae1b2783b4",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Sorting",
        "func": "// --- VERSÃO DE DEPURAÇÃO (\"Sherlock Holmes\") para a Função da Estação ---\n\nlet currentStationName = \"Sorting\";\n\n//-----------------------------------------------------\n// Lógica para mensagem de COMANDO (do Switch)\n//-----------------------------------------------------\nif (msg.payload && msg.payload.nextStation === currentStationName) {\n    node.warn(`[${currentStationName}] COMANDO RECEBIDO: Roteador autorizou o cart. Armado e esperando CLP.`);\n\n    flow.set('expected_clp_for_station', currentStationName);\n    flow.set(`msgFor_${currentStationName}`, msg);\n\n    // Não envia a mensagem ainda, espera pelo CLP.\n    return null; // Usamos return null quando a função tem só 1 saída.\n}\n\n//-----------------------------------------------------\n// Lógica para mensagem de STATUS (do CLP)\n//-----------------------------------------------------\nif (typeof msg.topic === \"string\" && msg.topic.includes(\"_Cart_Stat\") && msg.payload === true) {\n    node.warn(`[${currentStationName}] SINAL DO CLP RECEBIDO: Tópico = ${msg.topic}`);\n\n    let expectedStation = flow.get('expected_clp_for_station');\n    node.warn(`[${currentStationName}] Verificando se o sinal era esperado. Estação esperada: '${expectedStation}'`);\n\n    // Verifica se esta estação é a que está esperando o sinal do CLP\n    if (expectedStation === currentStationName) {\n        node.warn(`[${currentStationName}] SINAL ACEITO! Recuperando mensagem do cart para iniciar a operação.`);\n\n        let msgToProcess = flow.get(`msgFor_${currentStationName}`);\n\n        if (msgToProcess) {\n            flow.set('expected_clp_for_station', null);\n            flow.set(`msgFor_${currentStationName}`, null);\n\n            // Dispara a operação interna da estação (Saída 1)\n            node.warn(`[${currentStationName}] DISPARANDO OPERAÇÃO!`);\n            return [msgToProcess, null];\n        } else {\n            node.error(`[${currentStationName}] ERRO LÓGICO: Sinal do CLP chegou, mas a mensagem do roteador não estava armazenada.`);\n            return null;\n        }\n    } else {\n        node.warn(`[${currentStationName}] SINAL REJEITADO! Sinal do CLP chegou fora de sequência ou é para outra estação.`);\n        // Se o sinal não era para esta estação, simplesmente o ignoramos.\n        return null;\n    }\n}\n\n// Para qualquer outra mensagem inesperada, não faz nada.\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1200,
        "wires": [
            [
                "5b7cda3a5da84acd"
            ],
            [
                "90ab35cd5481d3fc"
            ]
        ]
    },
    {
        "id": "900e49d0bc75f135",
        "type": "link in",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link in 86",
        "links": [
            "1540f2d22c817cf9"
        ],
        "x": 145,
        "y": 1200,
        "wires": [
            [
                "941826ae1b2783b4"
            ]
        ]
    },
    {
        "id": "49a8286765e5ed86",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Processing",
        "func": "// --- VERSÃO DE DEPURAÇÃO (\"Sherlock Holmes\") para a Função da Estação ---\n\nlet currentStationName = \"Processing\";\n\n//-----------------------------------------------------\n// Lógica para mensagem de COMANDO (do Switch)\n//-----------------------------------------------------\nif (msg.payload && msg.payload.nextStation === currentStationName) {\n    node.warn(`[${currentStationName}] COMANDO RECEBIDO: Roteador autorizou o cart. Armado e esperando CLP.`);\n\n    flow.set('expected_clp_for_station', currentStationName);\n    flow.set(`msgFor_${currentStationName}`, msg);\n\n    // Não envia a mensagem ainda, espera pelo CLP.\n    return null; // Usamos return null quando a função tem só 1 saída.\n}\n\n//-----------------------------------------------------\n// Lógica para mensagem de STATUS (do CLP)\n//-----------------------------------------------------\nif (typeof msg.topic === \"string\" && msg.topic.includes(\"_Cart_Stat\") && msg.payload === true) {\n    node.warn(`[${currentStationName}] SINAL DO CLP RECEBIDO: Tópico = ${msg.topic}`);\n\n    let expectedStation = flow.get('expected_clp_for_station');\n    node.warn(`[${currentStationName}] Verificando se o sinal era esperado. Estação esperada: '${expectedStation}'`);\n\n    // Verifica se esta estação é a que está esperando o sinal do CLP\n    if (expectedStation === currentStationName) {\n        node.warn(`[${currentStationName}] SINAL ACEITO! Recuperando mensagem do cart para iniciar a operação.`);\n\n        let msgToProcess = flow.get(`msgFor_${currentStationName}`);\n\n        if (msgToProcess) {\n            flow.set('expected_clp_for_station', null);\n            flow.set(`msgFor_${currentStationName}`, null);\n\n            // Dispara a operação interna da estação (Saída 1)\n            node.warn(`[${currentStationName}] DISPARANDO OPERAÇÃO!`);\n            return [msgToProcess, null];\n        } else {\n            node.error(`[${currentStationName}] ERRO LÓGICO: Sinal do CLP chegou, mas a mensagem do roteador não estava armazenada.`);\n            return null;\n        }\n    } else {\n        node.warn(`[${currentStationName}] SINAL REJEITADO! Sinal do CLP chegou fora de sequência ou é para outra estação.`);\n        // Se o sinal não era para esta estação, simplesmente o ignoramos.\n        return null;\n    }\n}\n\n// Para qualquer outra mensagem inesperada, não faz nada.\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 880,
        "wires": [
            [
                "dcc4a2013b828362",
                "dbf24ea31af1dbd5"
            ],
            [
                "0934e59b6d7728d8"
            ]
        ]
    },
    {
        "id": "87a34ff96d342f32",
        "type": "link in",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link in 87",
        "links": [
            "1be052a0e437e19a"
        ],
        "x": 145,
        "y": 880,
        "wires": [
            [
                "49a8286765e5ed86"
            ]
        ]
    },
    {
        "id": "09e5622b0e94f5ef",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Vision",
        "func": "// --- VERSÃO DE DEPURAÇÃO (\"Sherlock Holmes\") para a Função da Estação ---\n\nlet currentStationName = \"Vision\";\n\n//-----------------------------------------------------\n// Lógica para mensagem de COMANDO (do Switch)\n//-----------------------------------------------------\nif (msg.payload && msg.payload.nextStation === currentStationName) {\n    node.warn(`[${currentStationName}] COMANDO RECEBIDO: Roteador autorizou o cart. Armado e esperando CLP.`);\n\n    flow.set('expected_clp_for_station', currentStationName);\n    flow.set(`msgFor_${currentStationName}`, msg);\n\n    // Não envia a mensagem ainda, espera pelo CLP.\n    return null; // Usamos return null quando a função tem só 1 saída.\n}\n\n//-----------------------------------------------------\n// Lógica para mensagem de STATUS (do CLP)\n//-----------------------------------------------------\nif (typeof msg.topic === \"string\" && msg.topic.includes(\"_Cart_Stat\") && msg.payload === true) {\n    node.warn(`[${currentStationName}] SINAL DO CLP RECEBIDO: Tópico = ${msg.topic}`);\n\n    let expectedStation = flow.get('expected_clp_for_station');\n    node.warn(`[${currentStationName}] Verificando se o sinal era esperado. Estação esperada: '${expectedStation}'`);\n\n    // Verifica se esta estação é a que está esperando o sinal do CLP\n    if (expectedStation === currentStationName) {\n        node.warn(`[${currentStationName}] SINAL ACEITO! Recuperando mensagem do cart para iniciar a operação.`);\n\n        let msgToProcess = flow.get(`msgFor_${currentStationName}`);\n\n        if (msgToProcess) {\n            flow.set('expected_clp_for_station', null);\n            flow.set(`msgFor_${currentStationName}`, null);\n\n            // Dispara a operação interna da estação (Saída 1)\n            node.warn(`[${currentStationName}] DISPARANDO OPERAÇÃO!`);\n            return [msgToProcess, null];\n        } else {\n            node.error(`[${currentStationName}] ERRO LÓGICO: Sinal do CLP chegou, mas a mensagem do roteador não estava armazenada.`);\n            return null;\n        }\n    } else {\n        node.warn(`[${currentStationName}] SINAL REJEITADO! Sinal do CLP chegou fora de sequência ou é para outra estação.`);\n        // Se o sinal não era para esta estação, simplesmente o ignoramos.\n        return null;\n    }\n}\n\n// Para qualquer outra mensagem inesperada, não faz nada.\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 960,
        "wires": [
            [
                "72b6fb4c5175ccb4"
            ],
            [
                "37542a97a5d95d62"
            ]
        ]
    },
    {
        "id": "7f45df3c01693a01",
        "type": "link in",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link in 88",
        "links": [
            "bb3a5e20fbcff4ca"
        ],
        "x": 145,
        "y": 960,
        "wires": [
            [
                "09e5622b0e94f5ef"
            ]
        ]
    },
    {
        "id": "319d3a334aa55531",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Robot",
        "func": "// --- VERSÃO DE DEPURAÇÃO (\"Sherlock Holmes\") para a Função da Estação ---\n\nlet currentStationName = \"Robot\";\n\n//-----------------------------------------------------\n// Lógica para mensagem de COMANDO (do Switch)\n//-----------------------------------------------------\nif (msg.payload && msg.payload.nextStation === currentStationName) {\n    node.warn(`[${currentStationName}] COMANDO RECEBIDO: Roteador autorizou o cart. Armado e esperando CLP.`);\n    \n    flow.set('expected_clp_for_station', currentStationName); \n    flow.set(`msgFor_${currentStationName}`, msg);\n    \n    // Não envia a mensagem ainda, espera pelo CLP.\n    return null; // Usamos return null quando a função tem só 1 saída.\n}\n\n//-----------------------------------------------------\n// Lógica para mensagem de STATUS (do CLP)\n//-----------------------------------------------------\nif (typeof msg.topic === \"string\" && msg.topic.includes(\"_Cart_Stat\") && msg.payload === true) {\n    node.warn(`[${currentStationName}] SINAL DO CLP RECEBIDO: Tópico = ${msg.topic}`);\n\n    let expectedStation = flow.get('expected_clp_for_station');\n    node.warn(`[${currentStationName}] Verificando se o sinal era esperado. Estação esperada: '${expectedStation}'`);\n    \n    // Verifica se esta estação é a que está esperando o sinal do CLP\n    if (expectedStation === currentStationName) {\n        node.warn(`[${currentStationName}] SINAL ACEITO! Recuperando mensagem do cart para iniciar a operação.`);\n        \n        let msgToProcess = flow.get(`msgFor_${currentStationName}`);\n\n        if (msgToProcess) {\n            flow.set('expected_clp_for_station', null); \n            flow.set(`msgFor_${currentStationName}`, null);\n            \n            // Dispara a operação interna da estação (Saída 1)\n            node.warn(`[${currentStationName}] DISPARANDO OPERAÇÃO!`);\n            return [msgToProcess, null]; \n        } else {\n            node.error(`[${currentStationName}] ERRO LÓGICO: Sinal do CLP chegou, mas a mensagem do roteador não estava armazenada.`);\n            return null;\n        }\n    } else {\n        node.warn(`[${currentStationName}] SINAL REJEITADO! Sinal do CLP chegou fora de sequência ou é para outra estação.`);\n        // Se o sinal não era para esta estação, simplesmente o ignoramos.\n        return null; \n    }\n}\n\n// Para qualquer outra mensagem inesperada, não faz nada.\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1040,
        "wires": [
            [
                "cfb15254c2d7e826"
            ],
            [
                "d1d2125332bc136f"
            ]
        ]
    },
    {
        "id": "7e3b3e37f20f7e8d",
        "type": "link in",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link in 89",
        "links": [
            "7ece890aa7ea023c"
        ],
        "x": 145,
        "y": 1040,
        "wires": [
            [
                "319d3a334aa55531"
            ]
        ]
    },
    {
        "id": "6cfc2910b83aa0d1",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Storage",
        "func": "// --- VERSÃO DE DEPURAÇÃO (\"Sherlock Holmes\") para a Função da Estação ---\n\nlet currentStationName = \"Storage\";\n\n//-----------------------------------------------------\n// Lógica para mensagem de COMANDO (do Switch)\n//-----------------------------------------------------\nif (msg.payload && msg.payload.nextStation === currentStationName) {\n    node.warn(`[${currentStationName}] COMANDO RECEBIDO: Roteador autorizou o cart. Armado e esperando CLP.`);\n\n    flow.set('expected_clp_for_station', currentStationName);\n    flow.set(`msgFor_${currentStationName}`, msg);\n\n    // Não envia a mensagem ainda, espera pelo CLP.\n    return null; // Usamos return null quando a função tem só 1 saída.\n}\n\n//-----------------------------------------------------\n// Lógica para mensagem de STATUS (do CLP)\n//-----------------------------------------------------\nif (typeof msg.topic === \"string\" && msg.topic.includes(\"_Cart_Stat\") && msg.payload === true) {\n    node.warn(`[${currentStationName}] SINAL DO CLP RECEBIDO: Tópico = ${msg.topic}`);\n\n    let expectedStation = flow.get('expected_clp_for_station');\n    node.warn(`[${currentStationName}] Verificando se o sinal era esperado. Estação esperada: '${expectedStation}'`);\n\n    // Verifica se esta estação é a que está esperando o sinal do CLP\n    if (expectedStation === currentStationName) {\n        node.warn(`[${currentStationName}] SINAL ACEITO! Recuperando mensagem do cart para iniciar a operação.`);\n\n        let msgToProcess = flow.get(`msgFor_${currentStationName}`);\n\n        if (msgToProcess) {\n            flow.set('expected_clp_for_station', null);\n            flow.set(`msgFor_${currentStationName}`, null);\n\n            // Dispara a operação interna da estação (Saída 1)\n            node.warn(`[${currentStationName}] DISPARANDO OPERAÇÃO!`);\n            return [msgToProcess, null];\n        } else {\n            node.error(`[${currentStationName}] ERRO LÓGICO: Sinal do CLP chegou, mas a mensagem do roteador não estava armazenada.`);\n            return null;\n        }\n    } else {\n        node.warn(`[${currentStationName}] SINAL REJEITADO! Sinal do CLP chegou fora de sequência ou é para outra estação.`);\n        // Se o sinal não era para esta estação, simplesmente o ignoramos.\n        return null;\n    }\n}\n\n// Para qualquer outra mensagem inesperada, não faz nada.\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1120,
        "wires": [
            [
                "5885316ae79e819f"
            ],
            [
                "52722b914cdd7930"
            ]
        ]
    },
    {
        "id": "193c6585e06228b1",
        "type": "link in",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link in 90",
        "links": [
            "85dc6ab18cb87b4e"
        ],
        "x": 145,
        "y": 1120,
        "wires": [
            [
                "6cfc2910b83aa0d1"
            ]
        ]
    },
    {
        "id": "7abe0fbbcb8f9036",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Fim do Processo",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 800,
        "wires": []
    },
    {
        "id": "a567ad791b4c20c1",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Debug Distribution",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 840,
        "wires": []
    },
    {
        "id": "0934e59b6d7728d8",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Debug Processing",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 920,
        "wires": []
    },
    {
        "id": "37542a97a5d95d62",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Debug Vision",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d1d2125332bc136f",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Debug Robot",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 1080,
        "wires": []
    },
    {
        "id": "52722b914cdd7930",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Debug Storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 1160,
        "wires": []
    },
    {
        "id": "90ab35cd5481d3fc",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Debug Sorting",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 1240,
        "wires": []
    },
    {
        "id": "aab5e4dd83ad3b6f",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Determinar próxima estação",
        "func": "if (flow.get('processIsActive') !== true) {\n    return null; \n}\n\nlet route = flow.get('cartRoute');\nlet currentStationIndex = flow.get('currentStationIndex');\n\nlet nextIndex = currentStationIndex + 1;\n\nif (route && nextIndex < route.length) {\n    let nextStation = route[nextIndex];\n\n    flow.set('currentStationIndex', nextIndex);\n    msg.payload = { \"nextStation\": nextStation };\n\n} else {\n\n    flow.set('processIsActive', false);\n\n    flow.set('cartRoute', null);\n    flow.set('currentStationIndex', -1);\n    msg.payload = { \"nextStation\": null };\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1000,
        "wires": [
            [
                "9695eba042e91d84",
                "0fa2fb900670f5c9"
            ]
        ]
    },
    {
        "id": "f88a84a5180b1d74",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 28",
        "mode": "link",
        "links": [
            "458aa3f8dad500dd",
            "5238cf5e90e24b9a"
        ],
        "x": 665,
        "y": 800,
        "wires": []
    },
    {
        "id": "42d671b203138297",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 29",
        "mode": "link",
        "links": [
            "458aa3f8dad500dd"
        ],
        "x": 665,
        "y": 880,
        "wires": []
    },
    {
        "id": "a0a64d32a21ebda0",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 30",
        "mode": "link",
        "links": [
            "458aa3f8dad500dd"
        ],
        "x": 665,
        "y": 960,
        "wires": []
    },
    {
        "id": "b704bc570bc2a08e",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 31",
        "mode": "link",
        "links": [
            "458aa3f8dad500dd"
        ],
        "x": 665,
        "y": 1040,
        "wires": []
    },
    {
        "id": "65b267a924b90f25",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 32",
        "mode": "link",
        "links": [
            "458aa3f8dad500dd"
        ],
        "x": 665,
        "y": 1120,
        "wires": []
    },
    {
        "id": "1e2de62036bf53e6",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 33",
        "mode": "link",
        "links": [
            "458aa3f8dad500dd"
        ],
        "x": 665,
        "y": 1200,
        "wires": []
    },
    {
        "id": "458aa3f8dad500dd",
        "type": "link in",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link in 91",
        "links": [
            "42d671b203138297",
            "a0a64d32a21ebda0",
            "b704bc570bc2a08e",
            "65b267a924b90f25",
            "1e2de62036bf53e6",
            "f88a84a5180b1d74"
        ],
        "x": 875,
        "y": 1000,
        "wires": [
            [
                "aab5e4dd83ad3b6f"
            ]
        ]
    },
    {
        "id": "9695eba042e91d84",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 34",
        "mode": "link",
        "links": [
            "79d17745ef305464"
        ],
        "x": 1215,
        "y": 1000,
        "wires": []
    },
    {
        "id": "79d17745ef305464",
        "type": "link in",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link in 92",
        "links": [
            "9695eba042e91d84"
        ],
        "x": 795,
        "y": 640,
        "wires": [
            [
                "4aa188fb30a12564"
            ]
        ]
    },
    {
        "id": "ee4957565a51c3e3",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 620,
        "wires": []
    },
    {
        "id": "0fa2fb900670f5c9",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1080,
        "wires": []
    },
    {
        "id": "14333665b57ebde1",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "name": "INICIAR ROTEAMENTO",
        "func": "// --- Versão Final e Limpa ---\n\n// Pega a rota do contexto do fluxo.\nlet route = flow.get('cartRoute');\n\n// Se a rota não existir ou estiver vazia, para o fluxo.\nif (!route || route.length === 0) {\n    return null;\n}\n\n// Pega a primeira estação da lista.\nlet nextStation = route[0];\n\n// Define o índice da estação atual no contexto.\nflow.set('currentStationIndex', 0);\n\n// Cria o payload de saída para o nó Switch.\nmsg.payload = { \"nextStation\": nextStation };\n\n// Retorna a mensagem para o próximo nó.\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "8749cc79b04841ef",
        "type": "inject",
        "z": "18b0dae29c8592d2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1480,
        "y": 1280,
        "wires": [
            [
                "ab23747dac2b2a84"
            ]
        ]
    },
    {
        "id": "ab23747dac2b2a84",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "name": "function 5",
        "func": "// Este código simula a primeira função, salvando uma rota de teste no contexto.\nlet rotaTeste = [\"EstacaoTeste1\", \"EstacaoTeste2\", \"EstacaoTeste3\"];\nflow.set('cartRoute', rotaTeste);\nnode.log(\"Rota de TESTE definida no contexto.\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 1280,
        "wires": [
            [
                "14333665b57ebde1"
            ]
        ]
    },
    {
        "id": "705ef0c989bd9bd1",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 780,
        "wires": []
    },
    {
        "id": "db0f6ad6c2fe5653",
        "type": "link in",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link in 93",
        "links": [
            "fa254fb7b511e788"
        ],
        "x": 395,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "4b09f5e135f20693",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Iniciar e Resetar",
        "func": "// Função \"INICIAR & RESETAR\"\n\nnode.log(\"PROCESSO INICIADO: Limpando contexto e LIGANDO o disjuntor.\");\n\n// Limpa as variáveis de contexto do fluxo.\nflow.set('cartRoute', null);\nflow.set('currentStationIndex', -1);\n\n// LIGA O INTERRUPTOR GERAL DO PROCESSO\nflow.set('processIsActive', true);\n\n// Não precisamos mais da saída de reset, já que não funcionou.\n// Se o seu nó ainda tem 2 saídas, pode voltar para 1.\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 680,
        "wires": [
            [
                "f60169e0447c4522"
            ],
            [
                "fa254fb7b511e788"
            ]
        ]
    },
    {
        "id": "fa254fb7b511e788",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "link out 35",
        "mode": "link",
        "links": [
            "db0f6ad6c2fe5653"
        ],
        "x": 325,
        "y": 720,
        "wires": []
    },
    {
        "id": "352d0d27c218c31f",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Saída para Distribution",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 520,
        "wires": []
    },
    {
        "id": "b5ca070f945a7f73",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Saída para Processing",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 560,
        "wires": []
    },
    {
        "id": "a775292a08480839",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Saída para Vision",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 600,
        "wires": []
    },
    {
        "id": "800268f4df14b764",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Saída para Robot",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 640,
        "wires": []
    },
    {
        "id": "5ee3b0a4db72b4b7",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Saída para Storage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 680,
        "wires": []
    },
    {
        "id": "90f497842de1e250",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "Saída para Sorting",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 720,
        "wires": []
    },
    {
        "id": "cac8feb16c432161",
        "type": "inject",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 520,
        "wires": [
            [
                "4b09f5e135f20693"
            ]
        ]
    },
    {
        "id": "e71caf117c1f9e69",
        "type": "inject",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "_Cart_Stat",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 840,
        "wires": [
            [
                "fcb6441d2bf474d5"
            ]
        ]
    },
    {
        "id": "333df76b3b259182",
        "type": "inject",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "_Cart_Stat",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 920,
        "wires": [
            [
                "49a8286765e5ed86"
            ]
        ]
    },
    {
        "id": "17ab5217b5de7cab",
        "type": "inject",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "_Cart_Stat",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 1000,
        "wires": [
            [
                "09e5622b0e94f5ef"
            ]
        ]
    },
    {
        "id": "4883306ef3d1b5e2",
        "type": "inject",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "_Cart_Stat",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 1080,
        "wires": [
            [
                "319d3a334aa55531"
            ]
        ]
    },
    {
        "id": "b0f07c4070871348",
        "type": "inject",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "_Cart_Stat",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 1160,
        "wires": [
            [
                "6cfc2910b83aa0d1"
            ]
        ]
    },
    {
        "id": "9aa35d454e7ef409",
        "type": "inject",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "_Cart_Stat",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 1240,
        "wires": [
            [
                "941826ae1b2783b4"
            ]
        ]
    },
    {
        "id": "dcc4a2013b828362",
        "type": "OpcUa-Item",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "item": "ns=7;s=C_25_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_25_Request",
        "x": 520,
        "y": 880,
        "wires": [
            [
                "42d671b203138297",
                "dbf24ea31af1dbd5"
            ]
        ]
    },
    {
        "id": "72b6fb4c5175ccb4",
        "type": "OpcUa-Item",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "item": "ns=8;s=C_26_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_26_Request",
        "x": 520,
        "y": 960,
        "wires": [
            [
                "a0a64d32a21ebda0"
            ]
        ]
    },
    {
        "id": "cfb15254c2d7e826",
        "type": "OpcUa-Item",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "item": "ns=9;s=C_27_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_27_Request",
        "x": 520,
        "y": 1040,
        "wires": [
            [
                "b704bc570bc2a08e"
            ]
        ]
    },
    {
        "id": "5885316ae79e819f",
        "type": "OpcUa-Item",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "item": "ns=10;s=C_28_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_28_Request",
        "x": 520,
        "y": 1120,
        "wires": [
            [
                "65b267a924b90f25"
            ]
        ]
    },
    {
        "id": "5b7cda3a5da84acd",
        "type": "OpcUa-Item",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "item": "ns=11;s=C_29_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "C_29_Request",
        "x": 520,
        "y": 1200,
        "wires": [
            [
                "1e2de62036bf53e6"
            ]
        ]
    },
    {
        "id": "c7782c7b6fdb2549",
        "type": "link out",
        "z": "18b0dae29c8592d2",
        "g": "6529954173568b6c",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [],
        "x": 435,
        "y": 60,
        "wires": []
    },
    {
        "id": "0b2c1469437c9ab7",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "6529954173568b6c",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 100,
        "wires": []
    },
    {
        "id": "b53499d8f03cd37e",
        "type": "mqtt in",
        "z": "18b0dae29c8592d2",
        "g": "6529954173568b6c",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4de211dc0a9652ab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 60,
        "wires": [
            [
                "22223017bb406c1f"
            ]
        ]
    },
    {
        "id": "22223017bb406c1f",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "6529954173568b6c",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 60,
        "wires": [
            [
                "c7782c7b6fdb2549",
                "0b2c1469437c9ab7"
            ]
        ]
    },
    {
        "id": "5238cf5e90e24b9a",
        "type": "link in",
        "z": "18b0dae29c8592d2",
        "g": "6529954173568b6c",
        "name": "S7 Actuators",
        "links": [
            "f88a84a5180b1d74"
        ],
        "x": 165,
        "y": 100,
        "wires": [
            [
                "21607d0abf17c152"
            ]
        ]
    },
    {
        "id": "21607d0abf17c152",
        "type": "mqtt out",
        "z": "18b0dae29c8592d2",
        "g": "6529954173568b6c",
        "name": "S7Variables",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4de211dc0a9652ab",
        "x": 270,
        "y": 100,
        "wires": []
    },
    {
        "id": "3017537e2944f05c",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "name": "Leitura",
        "func": "if (msg.topic === \"O_50_Part_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Part_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "d0486d16f93ec740",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "name": "Escrita",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "431901c61929fbd1",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "C_24_Request",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = \"C_24_Request\"\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 800,
        "wires": [
            [
                "f88a84a5180b1d74",
                "f84ea90e8e81db74"
            ]
        ]
    },
    {
        "id": "f84ea90e8e81db74",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 760,
        "wires": []
    },
    {
        "id": "dbf24ea31af1dbd5",
        "type": "debug",
        "z": "18b0dae29c8592d2",
        "g": "395ec64593a73cca",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 840,
        "wires": []
    },
    {
        "id": "6b374a4a2c0d381b",
        "type": "function",
        "z": "18b0dae29c8592d2",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 200,
        "wires": [
            [
                "85878fc4e6594386"
            ]
        ]
    },
    {
        "id": "85878fc4e6594386",
        "type": "trigger",
        "z": "18b0dae29c8592d2",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 750,
        "y": 200,
        "wires": [
            [
                "9ae2a17a90322909"
            ]
        ]
    },
    {
        "id": "9ae2a17a90322909",
        "type": "file",
        "z": "18b0dae29c8592d2",
        "name": "Creates CSV Header",
        "filename": "C:\\ProjetoGemeo\\Routing.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 920,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "3d2c9e37010f6acf",
        "type": "debug",
        "z": "5461c9957ffd23af",
        "g": "1d9c647512f9a9e4",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "686c5d7932c88291",
        "type": "OpcUa-Server",
        "z": "5461c9957ffd23af",
        "g": "1d9c647512f9a9e4",
        "port": "53880",
        "name": "Server : Storage",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Storage/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Storage",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "3d2c9e37010f6acf"
            ]
        ]
    },
    {
        "id": "fa10632d6e9379e5",
        "type": "debug",
        "z": "5461c9957ffd23af",
        "g": "73b37925d92886ab",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "7c2efcd5f36682a2",
        "type": "link out",
        "z": "5461c9957ffd23af",
        "g": "73b37925d92886ab",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "d3db967a57ed9a1b",
        "type": "mqtt in",
        "z": "5461c9957ffd23af",
        "g": "73b37925d92886ab",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "4de211dc0a9652ab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "2776c12eca3c238e"
            ]
        ]
    },
    {
        "id": "2776c12eca3c238e",
        "type": "function",
        "z": "5461c9957ffd23af",
        "g": "73b37925d92886ab",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "7c2efcd5f36682a2",
                "fa10632d6e9379e5"
            ]
        ]
    },
    {
        "id": "bd36a4718ec2ddd4",
        "type": "mqtt out",
        "z": "5461c9957ffd23af",
        "g": "73b37925d92886ab",
        "name": "S7Variables",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4de211dc0a9652ab",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "a935e13d2510785a",
        "type": "link in",
        "z": "5461c9957ffd23af",
        "g": "73b37925d92886ab",
        "name": "S7 Actuators",
        "links": [],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "bd36a4718ec2ddd4"
            ]
        ]
    },
    {
        "id": "ca304fe48bfb89a9",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "item": "I_50_Claw_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "I_50_Claw_2_Del",
        "x": 470,
        "y": 860,
        "wires": [
            [
                "a8076e2c31b4fa0f"
            ]
        ]
    },
    {
        "id": "3f5ee780b5844d42",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "item": "I_50_Claw_2_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "I_50_Claw_2_Cart",
        "x": 470,
        "y": 900,
        "wires": [
            [
                "a8076e2c31b4fa0f"
            ]
        ]
    },
    {
        "id": "16460b003c5ec2e9",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "item": "I_50_Claw_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "I_50_Claw_Down",
        "x": 470,
        "y": 940,
        "wires": [
            [
                "a8076e2c31b4fa0f"
            ]
        ]
    },
    {
        "id": "d55696ae4eeee409",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "item": "I_50_Close_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "I_50_Close_Claw",
        "x": 470,
        "y": 980,
        "wires": [
            [
                "a8076e2c31b4fa0f"
            ]
        ]
    },
    {
        "id": "a8076e2c31b4fa0f",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "50 Physical Actuators",
        "mode": "link",
        "links": [
            "472cf2deedd2118f",
            "99f58596b5f2175f"
        ],
        "x": 645,
        "y": 920,
        "wires": []
    },
    {
        "id": "31632afa536d9f3a",
        "type": "switch",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "50 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_50_Claw_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_50_Claw_2_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_50_Claw_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_50_Close_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 920,
        "wires": [
            [
                "114837c1fe7fbf8f"
            ],
            [
                "47062eefee72f9b9"
            ],
            [
                "ad43972793b34012"
            ],
            [
                "541c92d07c8ad060"
            ]
        ]
    },
    {
        "id": "e39a05453aea3a7c",
        "type": "ui_switch",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "I_50_Claw_2_Del",
        "label": "Moves claw to delivery position",
        "tooltip": "",
        "group": "a073c741153ad2d5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 860,
        "wires": [
            [
                "ca304fe48bfb89a9"
            ]
        ]
    },
    {
        "id": "5c34738ac111843e",
        "type": "ui_switch",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "I_50_Claw_2_Cart",
        "label": "Moves claw to cart position",
        "tooltip": "",
        "group": "a073c741153ad2d5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 900,
        "wires": [
            [
                "3f5ee780b5844d42"
            ]
        ]
    },
    {
        "id": "4fd5220f730afa89",
        "type": "ui_switch",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "I_50_Claw_Down",
        "label": "Lowers claw",
        "tooltip": "",
        "group": "a073c741153ad2d5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 940,
        "wires": [
            [
                "16460b003c5ec2e9"
            ]
        ]
    },
    {
        "id": "c5e98497c63fe070",
        "type": "ui_switch",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "I_50_Close_Claw",
        "label": "Closes claw",
        "tooltip": "",
        "group": "a073c741153ad2d5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 980,
        "wires": [
            [
                "d55696ae4eeee409"
            ]
        ]
    },
    {
        "id": "aaa4ba392a2bbb24",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 780,
        "wires": [
            [
                "bf7cda9e1e49e21a"
            ]
        ]
    },
    {
        "id": "edab9e65ea6bfdbb",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 780,
        "wires": [
            [
                "aaa4ba392a2bbb24"
            ]
        ]
    },
    {
        "id": "bf7cda9e1e49e21a",
        "type": "OpcUa-Client",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PA",
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "86f0554e5eb708ec",
                "a02586e8e858d3ec"
            ],
            [
                "a98d7bdd76eac367"
            ]
        ]
    },
    {
        "id": "27bfd0070937131b",
        "type": "file in",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 780,
        "wires": [
            [
                "edab9e65ea6bfdbb"
            ]
        ]
    },
    {
        "id": "86f0554e5eb708ec",
        "type": "debug",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "50 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 820,
        "wires": []
    },
    {
        "id": "a98d7bdd76eac367",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_50_Claw_2_Del\" : false,\n            \"I_50_Claw_2_Cart\" : false,\n            \"I_50_Claw_Down\" : false,\n            \"I_50_Close_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 780,
        "wires": [
            [
                "bb0ffc6e87dbaa4f"
            ]
        ]
    },
    {
        "id": "36f94901bad4dd1a",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 780,
        "wires": [
            [
                "27bfd0070937131b"
            ]
        ]
    },
    {
        "id": "bb0ffc6e87dbaa4f",
        "type": "trigger",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 780,
        "wires": [
            [
                "b12318509733b6d8"
            ]
        ]
    },
    {
        "id": "b12318509733b6d8",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 780,
        "wires": [
            [
                "36f94901bad4dd1a"
            ]
        ]
    },
    {
        "id": "6bc8614d05bbb1c5",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "item": "I_51_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Led_Start",
        "x": 480,
        "y": 1160,
        "wires": [
            [
                "d0e9d6fbac8cae7f"
            ]
        ]
    },
    {
        "id": "412591ba733b684e",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "item": "I_51_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Led_Reset",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "d0e9d6fbac8cae7f"
            ]
        ]
    },
    {
        "id": "2cef8a0f1d4c43eb",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "item": "I_51_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Led_Extra1",
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "d0e9d6fbac8cae7f"
            ]
        ]
    },
    {
        "id": "0e7fd4baa7879d4a",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "item": "I_51_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Led_Extra2",
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "d0e9d6fbac8cae7f"
            ]
        ]
    },
    {
        "id": "5103b1b26c2b4c4c",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "item": "I_51_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Panel_O4",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "d0e9d6fbac8cae7f"
            ]
        ]
    },
    {
        "id": "d0e9d6fbac8cae7f",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "50 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "472cf2deedd2118f",
            "99f58596b5f2175f"
        ],
        "x": 645,
        "y": 1300,
        "wires": []
    },
    {
        "id": "d0b0cb85843aa140",
        "type": "switch",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "50 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_51_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_51_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1300,
        "wires": [
            [
                "6d0e6caceecd80db"
            ],
            [
                "d66cdc93e852c912"
            ],
            [
                "ea779c5f88fc812a"
            ],
            [
                "6ea689893dbfaa2d"
            ],
            [
                "4e770379f697582b"
            ],
            [
                "75b03dbc784f003a"
            ],
            [
                "e83428a4c8f19eed"
            ],
            [
                "9745350cb492c72f"
            ]
        ]
    },
    {
        "id": "305f379b27eb06c0",
        "type": "ui_switch",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "96b8b1e9fe2c60a4",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1160,
        "wires": [
            [
                "6bc8614d05bbb1c5"
            ]
        ]
    },
    {
        "id": "45eaac3a79fbcf45",
        "type": "ui_switch",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "96b8b1e9fe2c60a4",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "412591ba733b684e"
            ]
        ]
    },
    {
        "id": "c62aaed8697438f0",
        "type": "ui_switch",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "96b8b1e9fe2c60a4",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1240,
        "wires": [
            [
                "2cef8a0f1d4c43eb"
            ]
        ]
    },
    {
        "id": "b00754828c065388",
        "type": "ui_switch",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "96b8b1e9fe2c60a4",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1280,
        "wires": [
            [
                "0e7fd4baa7879d4a"
            ]
        ]
    },
    {
        "id": "1c9e79dfa9a759fd",
        "type": "ui_switch",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "96b8b1e9fe2c60a4",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "5103b1b26c2b4c4c"
            ]
        ]
    },
    {
        "id": "34f01ed7a7f0db6e",
        "type": "ui_switch",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "96b8b1e9fe2c60a4",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1360,
        "wires": [
            [
                "2fe6bcc2454d0b89"
            ]
        ]
    },
    {
        "id": "2fe6bcc2454d0b89",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "item": "I_51_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Panel_O5",
        "x": 480,
        "y": 1360,
        "wires": [
            [
                "d0e9d6fbac8cae7f"
            ]
        ]
    },
    {
        "id": "baad1da7e7c48995",
        "type": "ui_switch",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "96b8b1e9fe2c60a4",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1400,
        "wires": [
            [
                "9c48794e18310dd1"
            ]
        ]
    },
    {
        "id": "9c48794e18310dd1",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "item": "I_51_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Panel_O6",
        "x": 480,
        "y": 1400,
        "wires": [
            [
                "d0e9d6fbac8cae7f"
            ]
        ]
    },
    {
        "id": "13a8099146cdeb6f",
        "type": "ui_switch",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "96b8b1e9fe2c60a4",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1440,
        "wires": [
            [
                "0ffd688dd5b8489c"
            ]
        ]
    },
    {
        "id": "0ffd688dd5b8489c",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "item": "I_51_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_51_Panel_O7",
        "x": 480,
        "y": 1440,
        "wires": [
            [
                "d0e9d6fbac8cae7f"
            ]
        ]
    },
    {
        "id": "92cb68af7e8be953",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1080,
        "wires": [
            [
                "b6f57aec1bb95e68"
            ]
        ]
    },
    {
        "id": "10397c35f666f846",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1080,
        "wires": [
            [
                "92cb68af7e8be953"
            ]
        ]
    },
    {
        "id": "b6f57aec1bb95e68",
        "type": "OpcUa-Client",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AA",
        "x": 1130,
        "y": 1080,
        "wires": [
            [
                "5e5d02ab6050b9b2",
                "311237385d40f528"
            ],
            [
                "472ed03fbc158883"
            ]
        ]
    },
    {
        "id": "9cb1bf32ebddf80a",
        "type": "file in",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1080,
        "wires": [
            [
                "10397c35f666f846"
            ]
        ]
    },
    {
        "id": "5e5d02ab6050b9b2",
        "type": "debug",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "50 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1120,
        "wires": []
    },
    {
        "id": "472ed03fbc158883",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_51_Led_Start\" : false,\n            \"I_51_Led_Reset\" : false,\n            \"I_51_Led_Extra1\" : false,\n            \"I_51_Led_Extra2\" : false,\n            \"I_51_Panel_O4\" : false,\n            \"I_51_Panel_O5\" : false,\n            \"I_51_Panel_O6\" : false,\n            \"I_51_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "1a86e41054a609b4"
            ]
        ]
    },
    {
        "id": "345bf4cffe57476e",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1080,
        "wires": [
            [
                "9cb1bf32ebddf80a"
            ]
        ]
    },
    {
        "id": "1a86e41054a609b4",
        "type": "trigger",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1080,
        "wires": [
            [
                "77ea1f38943403ed"
            ]
        ]
    },
    {
        "id": "77ea1f38943403ed",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1080,
        "wires": [
            [
                "345bf4cffe57476e"
            ]
        ]
    },
    {
        "id": "068a9ad86d7f8773",
        "type": "comment",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "b627d1dc15df411f",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "762902940eadcc71"
            ]
        ]
    },
    {
        "id": "762902940eadcc71",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Handling1_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "aeaad594774b8332"
            ]
        ]
    },
    {
        "id": "52119c51785be6e6",
        "type": "file",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "47d9f1af4b952fe5",
        "type": "comment",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "aeaad594774b8332",
        "type": "OpcUa-Client",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "87318e375bae4377"
            ],
            [
                "58581bd0bc4f0692",
                "83764c753dc835fe"
            ]
        ]
    },
    {
        "id": "87318e375bae4377",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "5faf241ab0c7b739",
                "61c5fe2c1b65c299"
            ]
        ]
    },
    {
        "id": "5faf241ab0c7b739",
        "type": "file",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "61c5fe2c1b65c299",
        "type": "debug",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "5f09985152488b7c",
        "type": "comment",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "c96d0c3aef74855a",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "744302f10fcc8629"
            ]
        ]
    },
    {
        "id": "6ae9a42666e4abbd",
        "type": "OpcUa-Client",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "endpoint": "a2328ac43b0b7d73",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "b53ec761629a68cd"
            ],
            []
        ]
    },
    {
        "id": "b53ec761629a68cd",
        "type": "debug",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "472cf2deedd2118f",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Write_Hand1",
        "links": [
            "5f41b81dc4f6777f",
            "b9c97ca38e753dfd",
            "216541db84121ca1",
            "82bd991973aa164e",
            "35b8eb6c944181e7",
            "d0e9d6fbac8cae7f",
            "c22b05f0d8a0bd43",
            "a8076e2c31b4fa0f",
            "3ddee7d7f2773dc1"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "958abb5bdc4c5bd0"
            ]
        ]
    },
    {
        "id": "958abb5bdc4c5bd0",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "e7b234cfd48579fc"
            ]
        ]
    },
    {
        "id": "e7b234cfd48579fc",
        "type": "file in",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "c96d0c3aef74855a"
            ]
        ]
    },
    {
        "id": "744302f10fcc8629",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "6ae9a42666e4abbd"
            ]
        ]
    },
    {
        "id": "ea6216320346ecee",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "CSV Link",
        "links": [
            "58581bd0bc4f0692"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "205099398f8d6094"
            ]
        ]
    },
    {
        "id": "205099398f8d6094",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "4b48264b358bbcf1"
            ]
        ]
    },
    {
        "id": "4b48264b358bbcf1",
        "type": "trigger",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "52119c51785be6e6"
            ]
        ]
    },
    {
        "id": "58581bd0bc4f0692",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "ea6216320346ecee",
            "90946cb79b9ddb20"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "90946cb79b9ddb20",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "CSV Link",
        "links": [
            "58581bd0bc4f0692"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "d71bd855f646074d"
            ]
        ]
    },
    {
        "id": "d71bd855f646074d",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"I_50_Claw_2_Del\" : false,\n    \"I_50_Claw_2_Cart\" : false,\n    \"I_50_Claw_Down\" : false,\n    \"I_50_Close_Claw\" : false,\n    \"I_51_Led_Start\" : false,\n    \"I_51_Led_Reset\" : false,\n    \"I_51_Led_Extra1\" : false,\n    \"I_51_Led_Extra2\" : false,\n    \"I_51_Panel_O4\" : false,\n    \"I_51_Panel_O5\" : false,\n    \"I_51_Panel_O6\" : false,\n    \"I_51_Panel_O7\" : false,\n    \"A_54_Request\" : false,\n    \"A_54_No_Cart\" : false,\n    \"A_54_Cart_Full\" : false,\n    \"A_54_Cart_Stat\" : false,\n    \"A_54_Cart_Next\" : false,\n    \"A_54_Optic\" : false,\n    \"A_54_Count\" : false,\n    \"A_54_Pist_Bck\" : false,\n    \"A_54_Release_FB\" : false,\n    \"C_55_Initialization\" : false,\n    \"C_55_PD_Proc\" : false,\n    \"C_55_PD_Cart\" : false,\n    \"C_52_Profibus\" : false,\n    \"C_55_Start\" : false,\n    \"C_55_Cart2Del\" : true,\n    \"C_55_Del2Cart\" : false,\n    \"F_52_Claw_2_Del\" : false,\n    \"F_52_Claw_2_Cart\" : false,\n    \"F_52_Claw_Down\" : false,\n    \"F_52_Close_Claw\" : false,\n    \"F_53_Led_Start\" : false,\n    \"F_53_Led_Reset\" : false,\n    \"F_53_Led_Extra1\" : false,\n    \"F_53_Led_Extra2\" : false,\n    \"F_53_Panel_O4\" : false,\n    \"F_53_Panel_O5\" : false,\n    \"F_53_Panel_O6\" : false,\n    \"F_53_Panel_O7\" : false,\n    \"O_50_Part_Reserve\" : false,\n    \"O_50_Claw_Cart\" : true,\n    \"O_50_Claw_Del\" : false,\n    \"O_50_Claw_Reserve\" : false,\n    \"O_50_Claw_Low\" : false,\n    \"O_50_Claw_High\" : true,\n    \"O_50_Part_in_Claw\" : false,\n    \"O_51_Start\" : false,\n    \"O_51_Stop\" : true,\n    \"O_51_Key_Pos\" : false,\n    \"O_51_Reset\" : false,\n    \"O_51_Panel_I4\" : false,\n    \"O_51_Panel_I5\" : true,\n    \"O_51_Panel_I6\" : false,\n    \"O_51_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "0767f3fab4e7ad5f"
            ]
        ]
    },
    {
        "id": "0767f3fab4e7ad5f",
        "type": "trigger",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "b627d1dc15df411f"
            ]
        ]
    },
    {
        "id": "447b2717f50a71c2",
        "type": "debug",
        "z": "4de9747ea9a0b29e",
        "g": "50d54e5d988940a8",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "59383dbea254948e",
        "type": "OpcUa-Server",
        "z": "4de9747ea9a0b29e",
        "g": "50d54e5d988940a8",
        "port": "53880",
        "name": "Server : Handling 1",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Handling1/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Handling1",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "447b2717f50a71c2"
            ]
        ]
    },
    {
        "id": "63866b29bda15db7",
        "type": "debug",
        "z": "4de9747ea9a0b29e",
        "g": "08cbd30554c6888b",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "0231d3f3d6f8a0ea",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "08cbd30554c6888b",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "33245159805b2093",
            "9c9901585af6c2ef",
            "a4f0803a6a779255",
            "6206d1500cb97f36",
            "02f70a24095a2899",
            "a1fa4c11e4894d27"
        ],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "8dc16606cfb02fa4",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "F_53_Panel_O7",
        "func": "if (msg.topic === \"F_53_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3060,
        "wires": [
            [
                "9cc453fb86ad9ae3"
            ]
        ]
    },
    {
        "id": "a2a2fca9d13aa1f0",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "F_53_Panel_O6",
        "func": "if (msg.topic === \"F_53_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3020,
        "wires": [
            [
                "dad5ab508a5af671"
            ]
        ]
    },
    {
        "id": "7db2a9dc75394074",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "F_53_Panel_O5",
        "func": "if (msg.topic === \"F_53_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2980,
        "wires": [
            [
                "e6d72f810f7a9e7e"
            ]
        ]
    },
    {
        "id": "3dbd13353573afb1",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "F_53_Panel_O4",
        "func": "if (msg.topic === \"F_53_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2940,
        "wires": [
            [
                "ef983037686bf018"
            ]
        ]
    },
    {
        "id": "669b22bfd1bf4d9f",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "F_53_Led_Extra2",
        "func": "if (msg.topic === \"F_53_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2900,
        "wires": [
            [
                "dd944eaaa0944d64"
            ]
        ]
    },
    {
        "id": "97038a263b541da4",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "F_53_Led_Extra1",
        "func": "if (msg.topic === \"F_53_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2860,
        "wires": [
            [
                "9b4f58b91cc3d291"
            ]
        ]
    },
    {
        "id": "f553f5d9ec2f7387",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "F_53_Led_Reset",
        "func": "if (msg.topic === \"F_53_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2820,
        "wires": [
            [
                "a152351d96a2590f"
            ]
        ]
    },
    {
        "id": "90ba43dc71ecb8b8",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "F_53_Led_Start",
        "func": "if (msg.topic === \"F_53_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_53_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2780,
        "wires": [
            [
                "66e975f9062f01ed"
            ]
        ]
    },
    {
        "id": "311237385d40f528",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "Sub Out 50 AA",
        "mode": "link",
        "links": [
            "1284cf2f458953d6"
        ],
        "x": 1295,
        "y": 1080,
        "wires": []
    },
    {
        "id": "1284cf2f458953d6",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "Sub In 50 AA",
        "links": [
            "311237385d40f528"
        ],
        "x": 775,
        "y": 1300,
        "wires": [
            [
                "d0b0cb85843aa140"
            ]
        ]
    },
    {
        "id": "a02586e8e858d3ec",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "Sub Out 50 PA",
        "mode": "link",
        "links": [
            "9c402374e00888bf"
        ],
        "x": 1295,
        "y": 780,
        "wires": []
    },
    {
        "id": "9c402374e00888bf",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "Sub In 50 PA",
        "links": [
            "a02586e8e858d3ec"
        ],
        "x": 775,
        "y": 920,
        "wires": [
            [
                "31632afa536d9f3a"
            ]
        ]
    },
    {
        "id": "bbc408e6e3cad197",
        "type": "mqtt in",
        "z": "4de9747ea9a0b29e",
        "g": "08cbd30554c6888b",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "4de211dc0a9652ab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "9b77d627f6827872"
            ]
        ]
    },
    {
        "id": "9b77d627f6827872",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "08cbd30554c6888b",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "0231d3f3d6f8a0ea",
                "63866b29bda15db7"
            ]
        ]
    },
    {
        "id": "83764c753dc835fe",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "ecf0ae3a39c03fb4"
            ]
        ]
    },
    {
        "id": "ecf0ae3a39c03fb4",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "3b2b054108e23c24",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "fd2c370189086972",
            "bafb708c76f4b53b",
            "3cb84559e0306eb2",
            "dcc75defa869e6fc",
            "51deee3d66db4f96",
            "bdb4781f8dfe9965",
            "8e2062b34896fd65",
            "feefd42e7297784e"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "3cb84559e0306eb2",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "Read PA",
        "links": [
            "ecf0ae3a39c03fb4",
            "dae6252fe0c2ce9b"
        ],
        "x": 55,
        "y": 780,
        "wires": [
            [
                "a98d7bdd76eac367"
            ]
        ]
    },
    {
        "id": "dcc75defa869e6fc",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "Read S",
        "links": [
            "ecf0ae3a39c03fb4",
            "dae6252fe0c2ce9b"
        ],
        "x": 55,
        "y": 1080,
        "wires": [
            [
                "472ed03fbc158883"
            ]
        ]
    },
    {
        "id": "1eae7165989d3b92",
        "type": "mqtt out",
        "z": "4de9747ea9a0b29e",
        "g": "08cbd30554c6888b",
        "name": "S7Variables",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4de211dc0a9652ab",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "a648b8cfe2f24972",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "08cbd30554c6888b",
        "name": "S7 Actuators",
        "links": [
            "43d0451330402ee0",
            "1156ab0afd554408",
            "b97fc0d2a76e0397"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "1eae7165989d3b92"
            ]
        ]
    },
    {
        "id": "114837c1fe7fbf8f",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "I_50_Claw_2_Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 860,
        "wires": [
            [
                "43d0451330402ee0"
            ]
        ]
    },
    {
        "id": "47062eefee72f9b9",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "I_50_Claw_2_Cart",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 900,
        "wires": [
            [
                "43d0451330402ee0"
            ]
        ]
    },
    {
        "id": "ad43972793b34012",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "I_50_Claw_Down",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 940,
        "wires": [
            [
                "43d0451330402ee0"
            ]
        ]
    },
    {
        "id": "541c92d07c8ad060",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "I_50_Close_Claw",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 980,
        "wires": [
            [
                "43d0451330402ee0"
            ]
        ]
    },
    {
        "id": "43d0451330402ee0",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "3e44cdce01a6e9af",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "a648b8cfe2f24972"
        ],
        "x": 1235,
        "y": 920,
        "wires": []
    },
    {
        "id": "6d0e6caceecd80db",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1160,
        "wires": [
            [
                "1156ab0afd554408"
            ]
        ]
    },
    {
        "id": "d66cdc93e852c912",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1200,
        "wires": [
            [
                "1156ab0afd554408"
            ]
        ]
    },
    {
        "id": "ea779c5f88fc812a",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1240,
        "wires": [
            [
                "1156ab0afd554408"
            ]
        ]
    },
    {
        "id": "6ea689893dbfaa2d",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1280,
        "wires": [
            [
                "1156ab0afd554408"
            ]
        ]
    },
    {
        "id": "4e770379f697582b",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1320,
        "wires": [
            [
                "1156ab0afd554408"
            ]
        ]
    },
    {
        "id": "75b03dbc784f003a",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1360,
        "wires": [
            [
                "1156ab0afd554408"
            ]
        ]
    },
    {
        "id": "e83428a4c8f19eed",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1400,
        "wires": [
            [
                "1156ab0afd554408"
            ]
        ]
    },
    {
        "id": "9745350cb492c72f",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "be30a18b8c49b745",
        "name": "I_51_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1440,
        "wires": [
            [
                "1156ab0afd554408"
            ]
        ]
    },
    {
        "id": "1156ab0afd554408",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "a648b8cfe2f24972"
        ],
        "x": 1225,
        "y": 1940,
        "wires": []
    },
    {
        "id": "77f325e5145b3933",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "item": "O_50_Part_Reserve",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Part_Reserve",
        "x": 480,
        "y": 3240,
        "wires": [
            [
                "5f41b81dc4f6777f"
            ]
        ]
    },
    {
        "id": "6b63a759da3e32e4",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "item": "O_50_Claw_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_Cart",
        "x": 490,
        "y": 3280,
        "wires": [
            [
                "5f41b81dc4f6777f"
            ]
        ]
    },
    {
        "id": "ca188b3c7fa3aa13",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "item": "O_50_Claw_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_Del",
        "x": 500,
        "y": 3320,
        "wires": [
            [
                "5f41b81dc4f6777f"
            ]
        ]
    },
    {
        "id": "efb6d4771547da77",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "item": "O_50_Claw_Reserve",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_Reserve",
        "x": 480,
        "y": 3360,
        "wires": [
            [
                "5f41b81dc4f6777f"
            ]
        ]
    },
    {
        "id": "559ade062636a353",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "item": "O_50_Claw_Low",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_Low",
        "x": 490,
        "y": 3400,
        "wires": [
            [
                "5f41b81dc4f6777f"
            ]
        ]
    },
    {
        "id": "f90bd7f538849952",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "item": "O_50_Claw_High",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Claw_High",
        "x": 490,
        "y": 3440,
        "wires": [
            [
                "5f41b81dc4f6777f"
            ]
        ]
    },
    {
        "id": "ca9b1ca913b4fac8",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "item": "O_50_Part_in_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "O_50_Part_in_Claw",
        "x": 480,
        "y": 3480,
        "wires": [
            [
                "5f41b81dc4f6777f"
            ]
        ]
    },
    {
        "id": "5f41b81dc4f6777f",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "50 Physical Sensor",
        "mode": "link",
        "links": [
            "472cf2deedd2118f",
            "99f58596b5f2175f"
        ],
        "x": 665,
        "y": 3360,
        "wires": []
    },
    {
        "id": "b3dcf9f0711ee3cc",
        "type": "switch",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "50 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_50_Part_Reserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_Reserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_Low",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Claw_High",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_50_Part_in_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 3360,
        "wires": [
            [
                "70be91e539c1b053"
            ],
            [
                "922de0ed62f56faf"
            ],
            [
                "7fdce55b3813d581"
            ],
            [
                "4d7bf04f5b5a2e7c"
            ],
            [
                "cf1f36bbb24f755e"
            ],
            [
                "17b64601327dc4c1"
            ],
            [
                "1ddda4e763e9f1b6"
            ]
        ]
    },
    {
        "id": "70be91e539c1b053",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "order": 0,
        "group": "21df5bf5097f3870",
        "width": 0,
        "height": 0,
        "label": "Part in reserve position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Part_Reserve",
        "x": 1080,
        "y": 3240,
        "wires": []
    },
    {
        "id": "922de0ed62f56faf",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "order": 0,
        "group": "21df5bf5097f3870",
        "width": 0,
        "height": 0,
        "label": "Claw at cart position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_Cart",
        "x": 1070,
        "y": 3280,
        "wires": []
    },
    {
        "id": "7fdce55b3813d581",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "order": 0,
        "group": "21df5bf5097f3870",
        "width": 0,
        "height": 0,
        "label": "Claw at delivery position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_Del",
        "x": 1060,
        "y": 3320,
        "wires": []
    },
    {
        "id": "4d7bf04f5b5a2e7c",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "order": 0,
        "group": "21df5bf5097f3870",
        "width": 0,
        "height": 0,
        "label": "Claw at reserve position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_Reserve",
        "x": 1080,
        "y": 3360,
        "wires": []
    },
    {
        "id": "cf1f36bbb24f755e",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "order": 0,
        "group": "21df5bf5097f3870",
        "width": 0,
        "height": 0,
        "label": "Claw Low",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_Low",
        "x": 1070,
        "y": 3400,
        "wires": []
    },
    {
        "id": "17b64601327dc4c1",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "order": 0,
        "group": "21df5bf5097f3870",
        "width": 0,
        "height": 0,
        "label": "Claw high",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Claw_High",
        "x": 1070,
        "y": 3440,
        "wires": []
    },
    {
        "id": "1ddda4e763e9f1b6",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "order": 0,
        "group": "21df5bf5097f3870",
        "width": 0,
        "height": 0,
        "label": "Part in claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_50_Part_in_Claw",
        "x": 1080,
        "y": 3480,
        "wires": []
    },
    {
        "id": "24cb2444f617abdf",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_50_Part_Reserve\" : false,\n            \"O_50_Claw_Cart\" : false,\n            \"O_50_Claw_Del\" : false,\n            \"O_50_Claw_Reserve\" : false,\n            \"O_50_Claw_Low\" : false,\n            \"O_50_Claw_High\" : false,\n            \"O_50_Part_in_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3160,
        "wires": [
            [
                "97eca0a4ae518a31"
            ]
        ]
    },
    {
        "id": "323cbab5564b9bd5",
        "type": "OpcUa-Client",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PS",
        "x": 1130,
        "y": 3160,
        "wires": [
            [
                "e1282588a0187d70",
                "00b79567b90835b2"
            ],
            [
                "24cb2444f617abdf"
            ]
        ]
    },
    {
        "id": "97eca0a4ae518a31",
        "type": "trigger",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3160,
        "wires": [
            [
                "87cf0bdd45335eba"
            ]
        ]
    },
    {
        "id": "52b92bc7602153aa",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3160,
        "wires": [
            [
                "323cbab5564b9bd5"
            ]
        ]
    },
    {
        "id": "e1282588a0187d70",
        "type": "debug",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "50 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3200,
        "wires": []
    },
    {
        "id": "87cf0bdd45335eba",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3160,
        "wires": [
            [
                "9c39871caf8ef1d8"
            ]
        ]
    },
    {
        "id": "ffb8462c8b37f60b",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3160,
        "wires": [
            [
                "52b92bc7602153aa"
            ]
        ]
    },
    {
        "id": "9c39871caf8ef1d8",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3160,
        "wires": [
            [
                "1d079d61c6776449"
            ]
        ]
    },
    {
        "id": "1d079d61c6776449",
        "type": "file in",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3160,
        "wires": [
            [
                "ffb8462c8b37f60b"
            ]
        ]
    },
    {
        "id": "29837981bd3550e7",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "Sub In 50 PS",
        "links": [
            "00b79567b90835b2"
        ],
        "x": 775,
        "y": 3360,
        "wires": [
            [
                "b3dcf9f0711ee3cc"
            ]
        ]
    },
    {
        "id": "00b79567b90835b2",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "Sub Out 50 PS",
        "mode": "link",
        "links": [
            "29837981bd3550e7"
        ],
        "x": 1295,
        "y": 3160,
        "wires": []
    },
    {
        "id": "a1fa4c11e4894d27",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "S7 PS",
        "links": [
            "0231d3f3d6f8a0ea"
        ],
        "x": 55,
        "y": 3380,
        "wires": [
            [
                "bd892b844c03daef",
                "69f5dad37b47c647",
                "3acd2a1ac53b6bbd",
                "791ebfef69437bb5",
                "438ba8390afbdaea",
                "355d7d3b8d1ee3e3",
                "769a382fdb14a5e1"
            ]
        ]
    },
    {
        "id": "bd892b844c03daef",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "O_50_Part_in_Claw",
        "func": "if (msg.topic === \"O_50_Part_in_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Part_in_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 3480,
        "wires": [
            [
                "ca9b1ca913b4fac8"
            ]
        ]
    },
    {
        "id": "69f5dad37b47c647",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "O_50_Claw_High",
        "func": "if (msg.topic === \"O_50_Claw_High\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_High\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3440,
        "wires": [
            [
                "f90bd7f538849952"
            ]
        ]
    },
    {
        "id": "3acd2a1ac53b6bbd",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "O_50_Claw_Low",
        "func": "if (msg.topic === \"O_50_Claw_Low\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_Low\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3400,
        "wires": [
            [
                "559ade062636a353"
            ]
        ]
    },
    {
        "id": "791ebfef69437bb5",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "O_50_Claw_Reserve",
        "func": "if (msg.topic === \"O_50_Claw_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 3360,
        "wires": [
            [
                "efb6d4771547da77"
            ]
        ]
    },
    {
        "id": "438ba8390afbdaea",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "O_50_Claw_Del",
        "func": "if (msg.topic === \"O_50_Claw_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3320,
        "wires": [
            [
                "ca188b3c7fa3aa13"
            ]
        ]
    },
    {
        "id": "355d7d3b8d1ee3e3",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "O_50_Claw_Cart",
        "func": "if (msg.topic === \"O_50_Claw_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Claw_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3280,
        "wires": [
            [
                "6b63a759da3e32e4"
            ]
        ]
    },
    {
        "id": "769a382fdb14a5e1",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "O_50_Part_Reserve",
        "func": "if (msg.topic === \"O_50_Part_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_50_Part_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 3240,
        "wires": [
            [
                "77f325e5145b3933"
            ]
        ]
    },
    {
        "id": "fd2c370189086972",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "4c635431c7d6078b",
        "name": "Read PS",
        "links": [
            "ecf0ae3a39c03fb4",
            "dae6252fe0c2ce9b"
        ],
        "x": 55,
        "y": 3160,
        "wires": [
            [
                "24cb2444f617abdf"
            ]
        ]
    },
    {
        "id": "4e6136c2b4772410",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "item": "O_51_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Start",
        "x": 490,
        "y": 3660,
        "wires": [
            [
                "82bd991973aa164e"
            ]
        ]
    },
    {
        "id": "15672f683977c86b",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "item": "O_51_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Stop",
        "x": 490,
        "y": 3700,
        "wires": [
            [
                "82bd991973aa164e"
            ]
        ]
    },
    {
        "id": "9dacd2aeecaf4769",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "item": "O_51_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Key_Pos",
        "x": 480,
        "y": 3740,
        "wires": [
            [
                "82bd991973aa164e"
            ]
        ]
    },
    {
        "id": "285c74b5f811bbe5",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "item": "O_51_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Reset",
        "x": 490,
        "y": 3780,
        "wires": [
            [
                "82bd991973aa164e"
            ]
        ]
    },
    {
        "id": "07582675ad8d8b37",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "item": "O_51_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Panel_I4",
        "x": 480,
        "y": 3820,
        "wires": [
            [
                "82bd991973aa164e"
            ]
        ]
    },
    {
        "id": "4f4be8b1e77fae95",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "item": "O_51_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Panel_I5",
        "x": 480,
        "y": 3860,
        "wires": [
            [
                "82bd991973aa164e"
            ]
        ]
    },
    {
        "id": "3d1a95787a9ef6b1",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "item": "O_51_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Panel_I6",
        "x": 480,
        "y": 3900,
        "wires": [
            [
                "82bd991973aa164e"
            ]
        ]
    },
    {
        "id": "82bd991973aa164e",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "50 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "472cf2deedd2118f",
            "99f58596b5f2175f"
        ],
        "x": 645,
        "y": 3800,
        "wires": []
    },
    {
        "id": "9c6244c74ba00ec6",
        "type": "switch",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "50 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_51_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_51_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 3800,
        "wires": [
            [
                "d5f193ca720c5df3"
            ],
            [
                "6d8b1f7ad2629da5"
            ],
            [
                "cdee6ef06b1e959b"
            ],
            [
                "3771c84855004e66"
            ],
            [
                "868ed426287e3a87"
            ],
            [
                "18ec17bdc096e4ec"
            ],
            [
                "e0720580daa8fcea"
            ],
            [
                "1c452bc656fc0795"
            ]
        ]
    },
    {
        "id": "d5f193ca720c5df3",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "order": 0,
        "group": "141f88dd8bf52042",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Start",
        "x": 1050,
        "y": 3660,
        "wires": []
    },
    {
        "id": "6d8b1f7ad2629da5",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "order": 0,
        "group": "141f88dd8bf52042",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Stop",
        "x": 1050,
        "y": 3700,
        "wires": []
    },
    {
        "id": "cdee6ef06b1e959b",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "order": 0,
        "group": "141f88dd8bf52042",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Key_Pos",
        "x": 1060,
        "y": 3740,
        "wires": []
    },
    {
        "id": "3771c84855004e66",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "order": 0,
        "group": "141f88dd8bf52042",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Reset",
        "x": 1050,
        "y": 3780,
        "wires": []
    },
    {
        "id": "868ed426287e3a87",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "order": 0,
        "group": "141f88dd8bf52042",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Panel_I4",
        "x": 1060,
        "y": 3820,
        "wires": []
    },
    {
        "id": "18ec17bdc096e4ec",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "order": 0,
        "group": "141f88dd8bf52042",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Panel_I5",
        "x": 1060,
        "y": 3860,
        "wires": []
    },
    {
        "id": "e0720580daa8fcea",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "order": 0,
        "group": "141f88dd8bf52042",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Panel_I6",
        "x": 1060,
        "y": 3900,
        "wires": []
    },
    {
        "id": "1ba2abe2aad2115e",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "item": "O_51_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_51_Panel_I7",
        "x": 480,
        "y": 3940,
        "wires": [
            [
                "82bd991973aa164e"
            ]
        ]
    },
    {
        "id": "1c452bc656fc0795",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "order": 0,
        "group": "141f88dd8bf52042",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_51_Panel_I7",
        "x": 1060,
        "y": 3940,
        "wires": []
    },
    {
        "id": "9da9bf73a52018c9",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3580,
        "wires": [
            [
                "610fdedeb94aacb8"
            ]
        ]
    },
    {
        "id": "ce7b0b6d6301a1e7",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3580,
        "wires": [
            [
                "9da9bf73a52018c9"
            ]
        ]
    },
    {
        "id": "610fdedeb94aacb8",
        "type": "OpcUa-Client",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AS",
        "x": 1130,
        "y": 3580,
        "wires": [
            [
                "f95c4aa62b28c317",
                "7e322d06867a91e1"
            ],
            [
                "cba456535d11afc8"
            ]
        ]
    },
    {
        "id": "a01794779bcc1106",
        "type": "file in",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3580,
        "wires": [
            [
                "ce7b0b6d6301a1e7"
            ]
        ]
    },
    {
        "id": "f95c4aa62b28c317",
        "type": "debug",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "50 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3620,
        "wires": []
    },
    {
        "id": "cba456535d11afc8",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_51_Start\" : false,\n            \"O_51_Stop\" : false,\n            \"O_51_Key_Pos\" : false,\n            \"O_51_Reset\" : false,\n            \"O_51_Panel_I4\" : false,\n            \"O_51_Panel_I5\" : false,\n            \"O_51_Panel_I6\" : false,\n            \"O_51_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3580,
        "wires": [
            [
                "57a2e9133c5912e8"
            ]
        ]
    },
    {
        "id": "8d28e3e768b43eec",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3580,
        "wires": [
            [
                "a01794779bcc1106"
            ]
        ]
    },
    {
        "id": "57a2e9133c5912e8",
        "type": "trigger",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3580,
        "wires": [
            [
                "b3ded730b6dd4e1b"
            ]
        ]
    },
    {
        "id": "b3ded730b6dd4e1b",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3580,
        "wires": [
            [
                "8d28e3e768b43eec"
            ]
        ]
    },
    {
        "id": "7e322d06867a91e1",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "Sub Out 50 AS",
        "mode": "link",
        "links": [
            "bfa7be8bd572bc97"
        ],
        "x": 1295,
        "y": 3580,
        "wires": []
    },
    {
        "id": "bfa7be8bd572bc97",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "Sub In 50 AS",
        "links": [
            "7e322d06867a91e1"
        ],
        "x": 775,
        "y": 3800,
        "wires": [
            [
                "9c6244c74ba00ec6"
            ]
        ]
    },
    {
        "id": "02f70a24095a2899",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "S7 AS",
        "links": [
            "0231d3f3d6f8a0ea"
        ],
        "x": 55,
        "y": 3800,
        "wires": [
            [
                "c2f9690347c7b044",
                "ec72b84587247929",
                "da65e0ba2c6fcb82",
                "76d70b4c23369e54",
                "80f8eaa9b340d52e",
                "5fc29807b3a87315",
                "c35a73acbf8f989c",
                "2f5d52d6f0decffc"
            ]
        ]
    },
    {
        "id": "c2f9690347c7b044",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "O_51_Panel_I7",
        "func": "if (msg.topic === \"O_51_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3940,
        "wires": [
            [
                "1ba2abe2aad2115e"
            ]
        ]
    },
    {
        "id": "ec72b84587247929",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "O_51_Panel_I6",
        "func": "if (msg.topic === \"O_51_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3900,
        "wires": [
            [
                "3d1a95787a9ef6b1"
            ]
        ]
    },
    {
        "id": "da65e0ba2c6fcb82",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "O_51_Panel_I5",
        "func": "if (msg.topic === \"O_51_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3860,
        "wires": [
            [
                "4f4be8b1e77fae95"
            ]
        ]
    },
    {
        "id": "76d70b4c23369e54",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "O_51_Panel_I4",
        "func": "if (msg.topic === \"O_51_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3820,
        "wires": [
            [
                "07582675ad8d8b37"
            ]
        ]
    },
    {
        "id": "80f8eaa9b340d52e",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "O_51_Reset",
        "func": "if (msg.topic === \"O_51_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3780,
        "wires": [
            [
                "285c74b5f811bbe5"
            ]
        ]
    },
    {
        "id": "5fc29807b3a87315",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "O_51_Key_Pos",
        "func": "if (msg.topic === \"O_51_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3740,
        "wires": [
            [
                "9dacd2aeecaf4769"
            ]
        ]
    },
    {
        "id": "c35a73acbf8f989c",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "O_51_Stop",
        "func": "if (msg.topic === \"O_51_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3700,
        "wires": [
            [
                "15672f683977c86b"
            ]
        ]
    },
    {
        "id": "2f5d52d6f0decffc",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "O_51_Start",
        "func": "if (msg.topic === \"O_51_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_51_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3660,
        "wires": [
            [
                "4e6136c2b4772410"
            ]
        ]
    },
    {
        "id": "bafb708c76f4b53b",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "1af9d861c5f1c840",
        "name": "Read AS",
        "links": [
            "ecf0ae3a39c03fb4",
            "dae6252fe0c2ce9b"
        ],
        "x": 55,
        "y": 3580,
        "wires": [
            [
                "cba456535d11afc8"
            ]
        ]
    },
    {
        "id": "c031e14f7907a3dd",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"SA_50_Claw_2_Del\" : false,\n    \"SA_50_Claw_2_Cart\" : false,\n    \"SA_50_Claw_Down\" : false,\n    \"SA_50_Close_Claw\" : false,\n    \"SA_51_Led_Start\" : false,\n    \"SA_51_Led_Reset\" : false,\n    \"SA_51_Led_Extra1\" : false,\n    \"SA_51_Led_Extra2\" : false,\n    \"SA_51_Panel_O4\" : false,\n    \"SA_51_Panel_O5\" : false,\n    \"SA_51_Panel_O6\" : false,\n    \"SA_51_Panel_O7\" : false,\n    \"SC_55_Initialization\" : false,\n    \"SC_55_PD_Proc\" : false,\n    \"SC_55_PD_Cart\" : false,\n    \"SC_52_Profibus\" : true,\n    \"SC_55_Start\" : false,\n    \"SC_55_Cart2Del\" : true,\n    \"SC_55_Del2Cart\" : false,\n    \"SS_50_Part_Reserve\" : false,\n    \"SS_50_Claw_Cart\" : true,\n    \"SS_50_Claw_Del\" : false,\n    \"SS_50_Claw_Reserve\" : false,\n    \"SS_50_Claw_Low\" : false,\n    \"SS_50_Claw_High\" : true,\n    \"SS_50_Part_in_Claw\" : false,\n    \"SS_51_Start\" : false,\n    \"SS_51_Stop\" : true,\n    \"SS_51_Key_Pos\" : false,\n    \"SS_51_Reset\" : false,\n    \"SS_51_Panel_I4\" : false,\n    \"SS_51_Panel_I5\" : true,\n    \"SS_51_Panel_I6\" : false,\n    \"SS_51_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 680,
        "wires": [
            [
                "bf44f2ce5fae2962"
            ]
        ]
    },
    {
        "id": "09dad749e20adc34",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "Simulated CSV Link",
        "links": [
            "36aee55d1ea0fe1d"
        ],
        "x": 65,
        "y": 680,
        "wires": [
            [
                "c031e14f7907a3dd"
            ]
        ]
    },
    {
        "id": "bf44f2ce5fae2962",
        "type": "trigger",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 680,
        "wires": [
            [
                "0bdfb086f93384cf"
            ]
        ]
    },
    {
        "id": "0bdfb086f93384cf",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"SA_\")) variableClass = \"Simulated_Actuators\";\n        if (key.includes(\"SC_\")) variableClass = \"Simulated_Control\";\n        if (key.includes(\"SS_\")) variableClass = \"Simulated_Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 680,
        "wires": [
            [
                "0d351a80bcb82762"
            ]
        ]
    },
    {
        "id": "0d351a80bcb82762",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Handling1_Station/SimulationData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 680,
        "wires": [
            [
                "e06f2531fd9409ce"
            ]
        ]
    },
    {
        "id": "e06f2531fd9409ce",
        "type": "OpcUa-Client",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 680,
        "wires": [
            [
                "364090e472efdd30"
            ],
            [
                "36aee55d1ea0fe1d"
            ]
        ]
    },
    {
        "id": "364090e472efdd30",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 640,
        "wires": [
            [
                "96bb8470eb8c1097",
                "6fb13f6591e810f3"
            ]
        ]
    },
    {
        "id": "36aee55d1ea0fe1d",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "Simulated CSV Link",
        "mode": "link",
        "links": [
            "fd3a0a593603ba9f",
            "09dad749e20adc34"
        ],
        "x": 935,
        "y": 680,
        "wires": []
    },
    {
        "id": "96bb8470eb8c1097",
        "type": "file",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "Simulated Varaibles List",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1230,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "6fb13f6591e810f3",
        "type": "debug",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "607a303429c23b58",
        "type": "comment",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 640,
        "wires": []
    },
    {
        "id": "51f561794e2829d0",
        "type": "comment",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 540,
        "wires": []
    },
    {
        "id": "fd3a0a593603ba9f",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "Simulated CSV Link",
        "links": [
            "36aee55d1ea0fe1d"
        ],
        "x": 65,
        "y": 580,
        "wires": [
            [
                "e4d22e5721607494"
            ]
        ]
    },
    {
        "id": "e4d22e5721607494",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 580,
        "wires": [
            [
                "5e29a24b29db1432"
            ]
        ]
    },
    {
        "id": "5e29a24b29db1432",
        "type": "trigger",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 580,
        "wires": [
            [
                "d58be5320f2f091c"
            ]
        ]
    },
    {
        "id": "d58be5320f2f091c",
        "type": "file",
        "z": "4de9747ea9a0b29e",
        "g": "1b35f758ba3fbaa7",
        "name": "Simulated CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 440,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "99921e1dbc482676",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "item": "A_54_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Cart_Stat",
        "x": 480,
        "y": 1620,
        "wires": [
            [
                "35b8eb6c944181e7"
            ]
        ]
    },
    {
        "id": "407631ddc6992ae8",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "item": "A_54_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Cart_Next",
        "x": 470,
        "y": 1660,
        "wires": [
            [
                "35b8eb6c944181e7"
            ]
        ]
    },
    {
        "id": "d78cf9f25fca08c0",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "item": "A_54_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Optic",
        "x": 490,
        "y": 1700,
        "wires": [
            [
                "35b8eb6c944181e7"
            ]
        ]
    },
    {
        "id": "487b1a446ce2f42a",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "item": "A_54_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Count",
        "x": 490,
        "y": 1740,
        "wires": [
            [
                "35b8eb6c944181e7"
            ]
        ]
    },
    {
        "id": "5530216d15f02052",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "item": "A_54_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Pist_Bck",
        "x": 480,
        "y": 1780,
        "wires": [
            [
                "35b8eb6c944181e7"
            ]
        ]
    },
    {
        "id": "6616d76adc6e909f",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "item": "A_54_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Release_FB",
        "x": 470,
        "y": 1820,
        "wires": [
            [
                "35b8eb6c944181e7"
            ]
        ]
    },
    {
        "id": "f83c3517652f5637",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "item": "A_54_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Request",
        "x": 480,
        "y": 1860,
        "wires": [
            [
                "35b8eb6c944181e7"
            ]
        ]
    },
    {
        "id": "35b8eb6c944181e7",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "50 AS-i",
        "mode": "link",
        "links": [
            "472cf2deedd2118f",
            "99f58596b5f2175f"
        ],
        "x": 645,
        "y": 1780,
        "wires": []
    },
    {
        "id": "21e0d02491ab2d6f",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1540,
        "wires": [
            [
                "5761902a6ba968c4"
            ]
        ]
    },
    {
        "id": "5761902a6ba968c4",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1540,
        "wires": [
            [
                "0ea4884ecf024f2a"
            ]
        ]
    },
    {
        "id": "0ea4884ecf024f2a",
        "type": "file in",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1540,
        "wires": [
            [
                "9cadbea3b22a51ff"
            ]
        ]
    },
    {
        "id": "9cadbea3b22a51ff",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1540,
        "wires": [
            [
                "f90739316ffe5fa6"
            ]
        ]
    },
    {
        "id": "f90739316ffe5fa6",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1540,
        "wires": [
            [
                "a3b8245ddb3394c2"
            ]
        ]
    },
    {
        "id": "a3b8245ddb3394c2",
        "type": "OpcUa-Client",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AS-i",
        "x": 1140,
        "y": 1540,
        "wires": [
            [
                "454016c8590642f3",
                "895b453bc55934d2"
            ],
            [
                "a2d8012654b1826e"
            ]
        ]
    },
    {
        "id": "0a71ddd46140d18d",
        "type": "switch",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "50 AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A_54_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_No_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_54_Cart_Full",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 1780,
        "wires": [
            [
                "8266dfde6e631e52"
            ],
            [
                "af7534cb37bcd8b5"
            ],
            [
                "47feb8c1b63e86ca"
            ],
            [
                "af6669ca79b353a8"
            ],
            [
                "100cbe5c4b2ebbd8"
            ],
            [
                "10f542da63346659"
            ],
            [
                "775adea449b245b9"
            ],
            [
                "f75f68feaed55d82"
            ],
            [
                "35df38b9f6f4d517"
            ]
        ]
    },
    {
        "id": "8266dfde6e631e52",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "order": 0,
        "group": "6c3c40dd5980b3ae",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Cart_Stat",
        "x": 1060,
        "y": 1620,
        "wires": []
    },
    {
        "id": "af7534cb37bcd8b5",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "order": 0,
        "group": "6c3c40dd5980b3ae",
        "width": 0,
        "height": 0,
        "label": "Cart near next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Cart_Next",
        "x": 1070,
        "y": 1660,
        "wires": []
    },
    {
        "id": "47feb8c1b63e86ca",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "order": 0,
        "group": "6c3c40dd5980b3ae",
        "width": 0,
        "height": 0,
        "label": "Optic sensor on station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Optic",
        "x": 1050,
        "y": 1700,
        "wires": []
    },
    {
        "id": "af6669ca79b353a8",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "order": 0,
        "group": "6c3c40dd5980b3ae",
        "width": 0,
        "height": 0,
        "label": "Cart count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Count",
        "x": 1050,
        "y": 1740,
        "wires": []
    },
    {
        "id": "100cbe5c4b2ebbd8",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "order": 0,
        "group": "6c3c40dd5980b3ae",
        "width": 0,
        "height": 0,
        "label": "Piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Pist_Bck",
        "x": 1060,
        "y": 1780,
        "wires": []
    },
    {
        "id": "10f542da63346659",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "order": 0,
        "group": "6c3c40dd5980b3ae",
        "width": 0,
        "height": 0,
        "label": "Pin release feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Release_FB",
        "x": 1070,
        "y": 1820,
        "wires": []
    },
    {
        "id": "775adea449b245b9",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "order": 0,
        "group": "6c3c40dd5980b3ae",
        "width": 0,
        "height": 0,
        "label": "Request cart",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Request",
        "x": 1060,
        "y": 1860,
        "wires": []
    },
    {
        "id": "6638e0aafb16aa68",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "item": "A_54_No_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_No_Cart",
        "x": 480,
        "y": 1900,
        "wires": [
            [
                "35b8eb6c944181e7"
            ]
        ]
    },
    {
        "id": "f75f68feaed55d82",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "order": 0,
        "group": "6c3c40dd5980b3ae",
        "width": 0,
        "height": 0,
        "label": "No Cart at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_No_Cart",
        "x": 1060,
        "y": 1900,
        "wires": []
    },
    {
        "id": "35df38b9f6f4d517",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "order": 0,
        "group": "6c3c40dd5980b3ae",
        "width": 0,
        "height": 0,
        "label": "Cart Full at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_54_Cart_Full",
        "x": 1060,
        "y": 1940,
        "wires": []
    },
    {
        "id": "b4828dbbc99fd4cc",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "item": "A_54_Cart_Full",
        "datatype": "Boolean",
        "value": "",
        "name": "A_54_Cart_Full",
        "x": 480,
        "y": 1940,
        "wires": [
            [
                "35b8eb6c944181e7"
            ]
        ]
    },
    {
        "id": "454016c8590642f3",
        "type": "debug",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "50 AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1580,
        "wires": []
    },
    {
        "id": "a2d8012654b1826e",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"A_54_Request\" : false,\n            \"A_54_No_Cart\" : false,\n            \"A_54_Cart_Full\" : false,\n            \"A_54_Cart_Stat\" : false,\n            \"A_54_Cart_Next\" : false,\n            \"A_54_Optic\" : false,\n            \"A_54_Count\" : false,\n            \"A_54_Pist_Bck\" : false,\n            \"A_54_Release_FB\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1540,
        "wires": [
            [
                "5f1a1b7a74f2b2d3"
            ]
        ]
    },
    {
        "id": "5f1a1b7a74f2b2d3",
        "type": "trigger",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1540,
        "wires": [
            [
                "21e0d02491ab2d6f"
            ]
        ]
    },
    {
        "id": "defbc6f50de822bb",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "Sub In 50 AS-i",
        "links": [
            "895b453bc55934d2"
        ],
        "x": 755,
        "y": 1780,
        "wires": [
            [
                "0a71ddd46140d18d"
            ]
        ]
    },
    {
        "id": "895b453bc55934d2",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "Sub Out 50 AS-i",
        "mode": "link",
        "links": [
            "defbc6f50de822bb"
        ],
        "x": 1295,
        "y": 1540,
        "wires": []
    },
    {
        "id": "98581ab1fa2cb612",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "A_54_Cart_Full",
        "func": "if (msg.topic === \"A_54_Cart_Full\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Cart_Full\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1940,
        "wires": [
            [
                "b4828dbbc99fd4cc"
            ]
        ]
    },
    {
        "id": "33245159805b2093",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "S7 AS-i",
        "links": [
            "0231d3f3d6f8a0ea"
        ],
        "x": 55,
        "y": 1780,
        "wires": [
            [
                "98581ab1fa2cb612",
                "91b6ce48e423f67a",
                "130485ccf6bea9c4",
                "63e128df9dc0d942",
                "4869fade704126d7",
                "b9b7151d3bfdf502",
                "43c49ada4762c0ae",
                "1e60e0a215e5e91e",
                "1964d0e395dcc8c8"
            ]
        ]
    },
    {
        "id": "91b6ce48e423f67a",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "A_54_No_Cart",
        "func": "if (msg.topic === \"A_54_No_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_No_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1900,
        "wires": [
            [
                "6638e0aafb16aa68"
            ]
        ]
    },
    {
        "id": "130485ccf6bea9c4",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "A_54_Request",
        "func": "if (msg.topic === \"A_54_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1860,
        "wires": [
            [
                "f83c3517652f5637"
            ]
        ]
    },
    {
        "id": "63e128df9dc0d942",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "A_54_Release_FB",
        "func": "if (msg.topic === \"A_54_Release_FB\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Release_FB\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1820,
        "wires": [
            [
                "6616d76adc6e909f"
            ]
        ]
    },
    {
        "id": "4869fade704126d7",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "A_54_Pist_Bck",
        "func": "if (msg.topic === \"A_54_Pist_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Pist_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1780,
        "wires": [
            [
                "5530216d15f02052"
            ]
        ]
    },
    {
        "id": "b9b7151d3bfdf502",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "A_54_Count",
        "func": "if (msg.topic === \"A_54_Count\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Count\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1740,
        "wires": [
            [
                "487b1a446ce2f42a"
            ]
        ]
    },
    {
        "id": "43c49ada4762c0ae",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "A_54_Optic",
        "func": "if (msg.topic === \"A_54_Optic\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Optic\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1700,
        "wires": [
            [
                "d78cf9f25fca08c0"
            ]
        ]
    },
    {
        "id": "1e60e0a215e5e91e",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "A_54_Cart_Next",
        "func": "if (msg.topic === \"A_54_Cart_Next\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Cart_Next\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1660,
        "wires": [
            [
                "407631ddc6992ae8"
            ]
        ]
    },
    {
        "id": "1964d0e395dcc8c8",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "A_54_Cart_Stat",
        "func": "if (msg.topic === \"A_54_Cart_Stat\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_54_Cart_Stat\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1620,
        "wires": [
            [
                "99921e1dbc482676"
            ]
        ]
    },
    {
        "id": "feefd42e7297784e",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "55fa58c806cbfc46",
        "name": "Read S",
        "links": [
            "ecf0ae3a39c03fb4",
            "dae6252fe0c2ce9b"
        ],
        "x": 55,
        "y": 1540,
        "wires": [
            [
                "a2d8012654b1826e"
            ]
        ]
    },
    {
        "id": "2f7d95378d595619",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "item": "F_52_Claw_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "F_52_Claw_2_Del",
        "x": 470,
        "y": 2480,
        "wires": [
            [
                "c22b05f0d8a0bd43"
            ]
        ]
    },
    {
        "id": "682fcb0a480ae99a",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "item": "F_52_Claw_2_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "F_52_Claw_2_Cart",
        "x": 470,
        "y": 2520,
        "wires": [
            [
                "c22b05f0d8a0bd43"
            ]
        ]
    },
    {
        "id": "7913ae8be4585176",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "item": "F_52_Claw_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "F_52_Claw_Down",
        "x": 470,
        "y": 2560,
        "wires": [
            [
                "c22b05f0d8a0bd43"
            ]
        ]
    },
    {
        "id": "1c62a011a359405d",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "item": "F_52_Close_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "F_52_Close_Claw",
        "x": 470,
        "y": 2600,
        "wires": [
            [
                "c22b05f0d8a0bd43"
            ]
        ]
    },
    {
        "id": "c22b05f0d8a0bd43",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "50 Physical Feedback",
        "mode": "link",
        "links": [
            "472cf2deedd2118f",
            "99f58596b5f2175f"
        ],
        "x": 645,
        "y": 2540,
        "wires": []
    },
    {
        "id": "f25d7315f04e1058",
        "type": "switch",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "50 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_52_Claw_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_52_Claw_2_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_52_Claw_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_52_Close_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 2540,
        "wires": [
            [
                "c77a2d4e47fd6936"
            ],
            [
                "e56c1039ec271841"
            ],
            [
                "fbb48066e7adc237"
            ],
            [
                "8adf2671eeeda68e"
            ]
        ]
    },
    {
        "id": "c77a2d4e47fd6936",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "order": 0,
        "group": "5b8f60aa9581f953",
        "width": 0,
        "height": 0,
        "label": "Moves claw to delivery position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_52_Claw_2_Del",
        "x": 1070,
        "y": 2480,
        "wires": []
    },
    {
        "id": "e56c1039ec271841",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "order": 0,
        "group": "5b8f60aa9581f953",
        "width": 0,
        "height": 0,
        "label": "Moves claw to cart position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_52_Claw_2_Cart",
        "x": 1070,
        "y": 2520,
        "wires": []
    },
    {
        "id": "fbb48066e7adc237",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "order": 0,
        "group": "5b8f60aa9581f953",
        "width": 0,
        "height": 0,
        "label": "Lowers claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_52_Claw_Down",
        "x": 1070,
        "y": 2560,
        "wires": []
    },
    {
        "id": "8adf2671eeeda68e",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "order": 0,
        "group": "5b8f60aa9581f953",
        "width": 0,
        "height": 0,
        "label": "Closes claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_52_Close_Claw",
        "x": 1070,
        "y": 2600,
        "wires": []
    },
    {
        "id": "97634cc1930b0b16",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2400,
        "wires": [
            [
                "48da3dff4acb0b84"
            ]
        ]
    },
    {
        "id": "a70121a863260b3f",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2400,
        "wires": [
            [
                "97634cc1930b0b16"
            ]
        ]
    },
    {
        "id": "48da3dff4acb0b84",
        "type": "OpcUa-Client",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PF",
        "x": 1130,
        "y": 2400,
        "wires": [
            [
                "e6b8ffc771cec55b",
                "6c4e921dc481198f"
            ],
            [
                "75621c758db9ab6b"
            ]
        ]
    },
    {
        "id": "a470fa627a470cee",
        "type": "file in",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2400,
        "wires": [
            [
                "a70121a863260b3f"
            ]
        ]
    },
    {
        "id": "e6b8ffc771cec55b",
        "type": "debug",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "50 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2440,
        "wires": []
    },
    {
        "id": "75621c758db9ab6b",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_52_Claw_2_Del\" : false,\n            \"F_52_Claw_2_Cart\" : false,\n            \"F_52_Claw_Down\" : false,\n            \"F_52_Close_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2400,
        "wires": [
            [
                "670f99879e94da95"
            ]
        ]
    },
    {
        "id": "260805929e7181bb",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2400,
        "wires": [
            [
                "a470fa627a470cee"
            ]
        ]
    },
    {
        "id": "670f99879e94da95",
        "type": "trigger",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2400,
        "wires": [
            [
                "d696de8f9f4a10a2"
            ]
        ]
    },
    {
        "id": "d696de8f9f4a10a2",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2400,
        "wires": [
            [
                "260805929e7181bb"
            ]
        ]
    },
    {
        "id": "6c4e921dc481198f",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "Sub Out 50 PF",
        "mode": "link",
        "links": [
            "05dbfa053a373ca4"
        ],
        "x": 1295,
        "y": 2400,
        "wires": []
    },
    {
        "id": "05dbfa053a373ca4",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "Sub In 50 PF",
        "links": [
            "6c4e921dc481198f"
        ],
        "x": 775,
        "y": 2540,
        "wires": [
            [
                "f25d7315f04e1058"
            ]
        ]
    },
    {
        "id": "615dc6810557b32e",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "F_52_Claw_2_Del",
        "func": "if (msg.topic === \"F_52_Claw_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_52_Claw_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2480,
        "wires": [
            [
                "2f7d95378d595619"
            ]
        ]
    },
    {
        "id": "6206d1500cb97f36",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "S7 PF",
        "links": [
            "0231d3f3d6f8a0ea"
        ],
        "x": 55,
        "y": 2540,
        "wires": [
            [
                "615dc6810557b32e",
                "94e102b0bc875d9a",
                "95f5975c9aa5aa90",
                "5916edd05b33b72a"
            ]
        ]
    },
    {
        "id": "94e102b0bc875d9a",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "F_52_Close_Claw",
        "func": "if (msg.topic === \"F_52_Close_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_52_Close_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2600,
        "wires": [
            [
                "1c62a011a359405d"
            ]
        ]
    },
    {
        "id": "5916edd05b33b72a",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "F_52_Claw_2_Cart",
        "func": "if (msg.topic === \"F_52_Claw_2_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_52_Claw_2_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2520,
        "wires": [
            [
                "682fcb0a480ae99a"
            ]
        ]
    },
    {
        "id": "95f5975c9aa5aa90",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "F_52_Claw_Down",
        "func": "if (msg.topic === \"F_52_Claw_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_52_Claw_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2560,
        "wires": [
            [
                "7913ae8be4585176"
            ]
        ]
    },
    {
        "id": "51deee3d66db4f96",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "3f196e9a4ab9135e",
        "name": "Read PF",
        "links": [
            "ecf0ae3a39c03fb4",
            "dae6252fe0c2ce9b"
        ],
        "x": 55,
        "y": 2400,
        "wires": [
            [
                "75621c758db9ab6b"
            ]
        ]
    },
    {
        "id": "66e975f9062f01ed",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "item": "F_53_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Led_Start",
        "x": 480,
        "y": 2780,
        "wires": [
            [
                "b9c97ca38e753dfd"
            ]
        ]
    },
    {
        "id": "a152351d96a2590f",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "item": "F_53_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Led_Reset",
        "x": 470,
        "y": 2820,
        "wires": [
            [
                "b9c97ca38e753dfd"
            ]
        ]
    },
    {
        "id": "9b4f58b91cc3d291",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "item": "F_53_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Led_Extra1",
        "x": 470,
        "y": 2860,
        "wires": [
            [
                "b9c97ca38e753dfd"
            ]
        ]
    },
    {
        "id": "dd944eaaa0944d64",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "item": "F_53_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Led_Extra2",
        "x": 470,
        "y": 2900,
        "wires": [
            [
                "b9c97ca38e753dfd"
            ]
        ]
    },
    {
        "id": "ef983037686bf018",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "item": "F_53_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Panel_O4",
        "x": 480,
        "y": 2940,
        "wires": [
            [
                "b9c97ca38e753dfd"
            ]
        ]
    },
    {
        "id": "e6d72f810f7a9e7e",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "item": "F_53_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Panel_O5",
        "x": 480,
        "y": 2980,
        "wires": [
            [
                "b9c97ca38e753dfd"
            ]
        ]
    },
    {
        "id": "dad5ab508a5af671",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "item": "F_53_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Panel_O6",
        "x": 480,
        "y": 3020,
        "wires": [
            [
                "b9c97ca38e753dfd"
            ]
        ]
    },
    {
        "id": "b9c97ca38e753dfd",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "90 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "472cf2deedd2118f",
            "99f58596b5f2175f"
        ],
        "x": 645,
        "y": 2920,
        "wires": []
    },
    {
        "id": "fcbd0dd56029d084",
        "type": "switch",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "50 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_53_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_53_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2920,
        "wires": [
            [
                "ead1040466da773f"
            ],
            [
                "fd7c9c167e4208a6"
            ],
            [
                "ddd541bb3624f8eb"
            ],
            [
                "d70a2c4c8adfece8"
            ],
            [
                "112397bb9cef5a58"
            ],
            [
                "1f25b3328f9dd6db"
            ],
            [
                "fac145875fadbf86"
            ],
            [
                "52fa7cfa27fe8bd2"
            ]
        ]
    },
    {
        "id": "ead1040466da773f",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "order": 0,
        "group": "3d581b12f9402324",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Led_Start",
        "x": 1060,
        "y": 2780,
        "wires": []
    },
    {
        "id": "fd7c9c167e4208a6",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "order": 0,
        "group": "3d581b12f9402324",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Led_Reset",
        "x": 1070,
        "y": 2820,
        "wires": []
    },
    {
        "id": "ddd541bb3624f8eb",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "order": 0,
        "group": "3d581b12f9402324",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Led_Extra1",
        "x": 1070,
        "y": 2860,
        "wires": []
    },
    {
        "id": "d70a2c4c8adfece8",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "order": 0,
        "group": "3d581b12f9402324",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Led_Extra2",
        "x": 1070,
        "y": 2900,
        "wires": []
    },
    {
        "id": "112397bb9cef5a58",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "order": 0,
        "group": "3d581b12f9402324",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Panel_O4",
        "x": 1060,
        "y": 2940,
        "wires": []
    },
    {
        "id": "1f25b3328f9dd6db",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "order": 0,
        "group": "3d581b12f9402324",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Panel_O5",
        "x": 1060,
        "y": 2980,
        "wires": []
    },
    {
        "id": "fac145875fadbf86",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "order": 0,
        "group": "3d581b12f9402324",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Panel_O6",
        "x": 1060,
        "y": 3020,
        "wires": []
    },
    {
        "id": "9cc453fb86ad9ae3",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "item": "F_53_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_53_Panel_O7",
        "x": 480,
        "y": 3060,
        "wires": [
            [
                "b9c97ca38e753dfd"
            ]
        ]
    },
    {
        "id": "52fa7cfa27fe8bd2",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "order": 0,
        "group": "3d581b12f9402324",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_53_Panel_O7",
        "x": 1060,
        "y": 3060,
        "wires": []
    },
    {
        "id": "f6421271f4109aab",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2700,
        "wires": [
            [
                "d42f5f71d4503f0f"
            ]
        ]
    },
    {
        "id": "11d75f6d2f1571e2",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2700,
        "wires": [
            [
                "f6421271f4109aab"
            ]
        ]
    },
    {
        "id": "d42f5f71d4503f0f",
        "type": "OpcUa-Client",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AF",
        "x": 1130,
        "y": 2700,
        "wires": [
            [
                "014bf096f36f847b",
                "69e34e8b1e1e1996"
            ],
            [
                "390a3ebcd2fdbf3b"
            ]
        ]
    },
    {
        "id": "c102b8ec4c83ffb2",
        "type": "file in",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2700,
        "wires": [
            [
                "11d75f6d2f1571e2"
            ]
        ]
    },
    {
        "id": "014bf096f36f847b",
        "type": "debug",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "50 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2740,
        "wires": []
    },
    {
        "id": "390a3ebcd2fdbf3b",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_53_Led_Start\" : false,\n            \"F_53_Led_Reset\" : false,\n            \"F_53_Led_Extra1\" : false,\n            \"F_53_Led_Extra2\" : false,\n            \"F_53_Panel_O4\" : false,\n            \"F_53_Panel_O5\" : false,\n            \"F_53_Panel_O6\" : false,\n            \"F_53_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2700,
        "wires": [
            [
                "5e9ec54a0f0bd90a"
            ]
        ]
    },
    {
        "id": "ca5598b99abf5a5e",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2700,
        "wires": [
            [
                "c102b8ec4c83ffb2"
            ]
        ]
    },
    {
        "id": "5e9ec54a0f0bd90a",
        "type": "trigger",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2700,
        "wires": [
            [
                "886726f08558802e"
            ]
        ]
    },
    {
        "id": "886726f08558802e",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2700,
        "wires": [
            [
                "ca5598b99abf5a5e"
            ]
        ]
    },
    {
        "id": "69e34e8b1e1e1996",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "Sub Out 50 AF",
        "mode": "link",
        "links": [
            "4cfda07404d7c964"
        ],
        "x": 1295,
        "y": 2700,
        "wires": []
    },
    {
        "id": "4cfda07404d7c964",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "Sub In 50 AF",
        "links": [
            "69e34e8b1e1e1996"
        ],
        "x": 775,
        "y": 2920,
        "wires": [
            [
                "fcbd0dd56029d084"
            ]
        ]
    },
    {
        "id": "a4f0803a6a779255",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "S7 AF",
        "links": [
            "0231d3f3d6f8a0ea"
        ],
        "x": 55,
        "y": 2920,
        "wires": [
            [
                "8dc16606cfb02fa4",
                "a2a2fca9d13aa1f0",
                "7db2a9dc75394074",
                "3dbd13353573afb1",
                "669b22bfd1bf4d9f",
                "97038a263b541da4",
                "f553f5d9ec2f7387",
                "90ba43dc71ecb8b8"
            ]
        ]
    },
    {
        "id": "bdb4781f8dfe9965",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "98dc49bf5fe999eb",
        "name": "Read AF",
        "links": [
            "ecf0ae3a39c03fb4",
            "dae6252fe0c2ce9b"
        ],
        "x": 55,
        "y": 2700,
        "wires": [
            [
                "390a3ebcd2fdbf3b"
            ]
        ]
    },
    {
        "id": "3f3d55c5f59bc07c",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "item": "C_52_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_52_Profibus",
        "x": 620,
        "y": 2120,
        "wires": [
            [
                "216541db84121ca1"
            ]
        ]
    },
    {
        "id": "aec1cf9eb6786309",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "item": "C_55_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_55_Initialization",
        "x": 610,
        "y": 2160,
        "wires": [
            [
                "216541db84121ca1"
            ]
        ]
    },
    {
        "id": "5ce9ceaabd7eb629",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "item": "C_55_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "C_55_Start",
        "x": 630,
        "y": 2200,
        "wires": [
            [
                "216541db84121ca1"
            ]
        ]
    },
    {
        "id": "7c86545532203028",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "item": "C_55_Cart2Del",
        "datatype": "Boolean",
        "value": "",
        "name": "C_55_Cart2Del",
        "x": 620,
        "y": 2240,
        "wires": [
            [
                "216541db84121ca1"
            ]
        ]
    },
    {
        "id": "ee2eab7fddac5aa8",
        "type": "OpcUa-Item",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "item": "C_55_Del2Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "C_55_Del2Cart",
        "x": 620,
        "y": 2280,
        "wires": [
            [
                "216541db84121ca1"
            ]
        ]
    },
    {
        "id": "216541db84121ca1",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "50 Control",
        "mode": "link",
        "links": [
            "472cf2deedd2118f",
            "99f58596b5f2175f"
        ],
        "x": 795,
        "y": 2200,
        "wires": []
    },
    {
        "id": "9db2c83aac706bbe",
        "type": "switch",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "50 C",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_52_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_55_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_55_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_55_Cart2Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_55_Del2Cart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 990,
        "y": 2200,
        "wires": [
            [
                "392c5348cd2113ee"
            ],
            [
                "f20f39bae490e74e"
            ],
            [
                "19664c3447f74987"
            ],
            [
                "d0ad720cd24311ea"
            ],
            [
                "df11c19cf170a730"
            ]
        ]
    },
    {
        "id": "392c5348cd2113ee",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "order": 2,
        "group": "ce8d5f76b44b4afd",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_52_Profibus",
        "x": 1180,
        "y": 2120,
        "wires": []
    },
    {
        "id": "f20f39bae490e74e",
        "type": "ui_led",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "order": 1,
        "group": "ce8d5f76b44b4afd",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_55_Initialization",
        "x": 1190,
        "y": 2160,
        "wires": []
    },
    {
        "id": "2bfdf17546992b58",
        "type": "ui_dropdown",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "ce8d5f76b44b4afd",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Cart to Delivery Mode",
                "value": "C_55_Cart2Del",
                "type": "str"
            },
            {
                "label": "Delivery to Cart Mode",
                "value": "C_55_Del2Cart",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 2260,
        "wires": [
            [
                "5928de7111060c9d",
                "dd8e4d1b75b323c2"
            ]
        ]
    },
    {
        "id": "5928de7111060c9d",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "C_55_Cart2Del",
        "func": "if (msg.payload === \"C_55_Cart2Del\") \nreturn { payload: true, topic: \"C_55_Cart2Del\"};\nelse return { payload: false, topic: \"C_55_Cart2Del\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2240,
        "wires": [
            [
                "7c86545532203028"
            ]
        ]
    },
    {
        "id": "dd8e4d1b75b323c2",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "C_55_Del2Cart",
        "func": "if (msg.payload === \"C_55_Del2Cart\") \nreturn { payload: true, topic: \"C_55_Del2Cart\"};\nelse return { payload: false, topic: \"C_55_Del2Cart\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2280,
        "wires": [
            [
                "ee2eab7fddac5aa8"
            ]
        ]
    },
    {
        "id": "ebd2e4d52808cd88",
        "type": "inject",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_55_Cart2Del",
        "payloadType": "str",
        "x": 190,
        "y": 2300,
        "wires": [
            [
                "2bfdf17546992b58"
            ]
        ]
    },
    {
        "id": "c05f771c25c6ae60",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2040,
        "wires": [
            [
                "7e5e35fc88b1b330"
            ]
        ]
    },
    {
        "id": "3184f8c760940b07",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2040,
        "wires": [
            [
                "c05f771c25c6ae60"
            ]
        ]
    },
    {
        "id": "7e5e35fc88b1b330",
        "type": "OpcUa-Client",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub C",
        "x": 1130,
        "y": 2040,
        "wires": [
            [
                "325797df2f7dbad5",
                "3f861abfcdd2536d"
            ],
            [
                "39d22c34d1edd45f"
            ]
        ]
    },
    {
        "id": "dfceab44b7c520ee",
        "type": "file in",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling1/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2040,
        "wires": [
            [
                "3184f8c760940b07"
            ]
        ]
    },
    {
        "id": "325797df2f7dbad5",
        "type": "debug",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "50 C",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2080,
        "wires": []
    },
    {
        "id": "39d22c34d1edd45f",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_52_Profibus\" : false,\n            \"C_55_Initialization\" : false,\n            \"C_55_Start\" : false,\n            \"C_55_Cart2Del\" : false,\n            \"C_55_Del2Cart\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2040,
        "wires": [
            [
                "176a0c8244d714f4"
            ]
        ]
    },
    {
        "id": "c82a6f3501197877",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2040,
        "wires": [
            [
                "dfceab44b7c520ee"
            ]
        ]
    },
    {
        "id": "176a0c8244d714f4",
        "type": "trigger",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2040,
        "wires": [
            [
                "e2e10c94e71846c5"
            ]
        ]
    },
    {
        "id": "e2e10c94e71846c5",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2040,
        "wires": [
            [
                "c82a6f3501197877"
            ]
        ]
    },
    {
        "id": "6f958477e0a19464",
        "type": "ui_switch",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "C_55_Start",
        "label": "Start",
        "tooltip": "Start Production",
        "group": "ce8d5f76b44b4afd",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 2200,
        "wires": [
            [
                "5ce9ceaabd7eb629"
            ]
        ]
    },
    {
        "id": "4ea0821fab7d0114",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "Sub In 50 C",
        "links": [
            "3f861abfcdd2536d"
        ],
        "x": 895,
        "y": 2200,
        "wires": [
            [
                "9db2c83aac706bbe"
            ]
        ]
    },
    {
        "id": "3f861abfcdd2536d",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "Sub Out 50 C",
        "mode": "link",
        "links": [
            "4ea0821fab7d0114"
        ],
        "x": 1295,
        "y": 2040,
        "wires": []
    },
    {
        "id": "9c9901585af6c2ef",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "S7 C",
        "links": [
            "0231d3f3d6f8a0ea"
        ],
        "x": 55,
        "y": 2140,
        "wires": [
            [
                "6cc5d7a148d25759",
                "d3f7125f4677169f"
            ]
        ]
    },
    {
        "id": "6cc5d7a148d25759",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "C_52_Profibus",
        "func": "if (msg.topic === \"C_52_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_52_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2120,
        "wires": [
            [
                "3f3d55c5f59bc07c"
            ]
        ]
    },
    {
        "id": "d3f7125f4677169f",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "C_55_Initialization",
        "func": "if (msg.topic === \"C_55_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_55_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2160,
        "wires": [
            [
                "aec1cf9eb6786309"
            ]
        ]
    },
    {
        "id": "8e2062b34896fd65",
        "type": "link in",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "Read C",
        "links": [
            "ecf0ae3a39c03fb4",
            "dae6252fe0c2ce9b"
        ],
        "x": 55,
        "y": 2040,
        "wires": [
            [
                "39d22c34d1edd45f"
            ]
        ]
    },
    {
        "id": "19664c3447f74987",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "C_55_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 2200,
        "wires": [
            [
                "b97fc0d2a76e0397"
            ]
        ]
    },
    {
        "id": "d0ad720cd24311ea",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "C_55_Cart2Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 2240,
        "wires": [
            [
                "b97fc0d2a76e0397"
            ]
        ]
    },
    {
        "id": "df11c19cf170a730",
        "type": "function",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "C_55_Del2Cart",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 2280,
        "wires": [
            [
                "b97fc0d2a76e0397"
            ]
        ]
    },
    {
        "id": "b97fc0d2a76e0397",
        "type": "link out",
        "z": "4de9747ea9a0b29e",
        "g": "b6a79e8c037964d3",
        "name": "S7 C",
        "mode": "link",
        "links": [
            "a648b8cfe2f24972"
        ],
        "x": 1365,
        "y": 2200,
        "wires": []
    },
    {
        "id": "25fb3aa77ab2a028",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "item": "F_62_Conveyor",
        "datatype": "Boolean",
        "value": "",
        "name": "F_62_Conveyor",
        "x": 480,
        "y": 2280,
        "wires": [
            [
                "20cc20402f9c71d9"
            ]
        ]
    },
    {
        "id": "4d46b4669a343888",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "item": "F_62_P1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_62_P1",
        "x": 500,
        "y": 2320,
        "wires": [
            [
                "20cc20402f9c71d9"
            ]
        ]
    },
    {
        "id": "db85a2a0d6925f6c",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "item": "F_62_P2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_62_P2",
        "x": 500,
        "y": 2360,
        "wires": [
            [
                "20cc20402f9c71d9"
            ]
        ]
    },
    {
        "id": "ba29f33ef212a7e5",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "item": "F_62_Identify",
        "datatype": "Boolean",
        "value": "",
        "name": "F_62_Identify",
        "x": 480,
        "y": 2400,
        "wires": [
            [
                "20cc20402f9c71d9"
            ]
        ]
    },
    {
        "id": "20cc20402f9c71d9",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "60 Physical Feedback",
        "mode": "link",
        "links": [
            "1f151589e0bb6940",
            "4c5c21df37d2d438"
        ],
        "x": 645,
        "y": 2340,
        "wires": []
    },
    {
        "id": "c0f7138fa74ef1be",
        "type": "switch",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "60 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_62_Conveyor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_62_P1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_62_P2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_62_Identify",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 2340,
        "wires": [
            [
                "f56a20962c3d649a"
            ],
            [
                "96a50669353c9d40"
            ],
            [
                "93eae190a7ce5734"
            ],
            [
                "dbfe026cd4d1b353"
            ]
        ]
    },
    {
        "id": "f56a20962c3d649a",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "order": 0,
        "group": "2ec6e07dd7556b6d",
        "width": 0,
        "height": 0,
        "label": "Conveyor on",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_62_Conveyor",
        "x": 1060,
        "y": 2280,
        "wires": []
    },
    {
        "id": "96a50669353c9d40",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "order": 0,
        "group": "2ec6e07dd7556b6d",
        "width": 0,
        "height": 0,
        "label": "Pushes Lever 1 forward",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_62_P1",
        "x": 1040,
        "y": 2320,
        "wires": []
    },
    {
        "id": "93eae190a7ce5734",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "order": 0,
        "group": "2ec6e07dd7556b6d",
        "width": 0,
        "height": 0,
        "label": "Pushes Lever 2 forward",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_62_P2",
        "x": 1040,
        "y": 2360,
        "wires": []
    },
    {
        "id": "dbfe026cd4d1b353",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "order": 0,
        "group": "2ec6e07dd7556b6d",
        "width": 0,
        "height": 0,
        "label": "Identify pin",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_62_Identify",
        "x": 1060,
        "y": 2400,
        "wires": []
    },
    {
        "id": "68a35ba6e26c1b58",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2200,
        "wires": [
            [
                "ae58e5cd22a563ce"
            ]
        ]
    },
    {
        "id": "0e532938adad4c1f",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2200,
        "wires": [
            [
                "68a35ba6e26c1b58"
            ]
        ]
    },
    {
        "id": "ae58e5cd22a563ce",
        "type": "OpcUa-Client",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PF",
        "x": 1130,
        "y": 2200,
        "wires": [
            [
                "d19d52c80f8aa529",
                "dc555c9ee09269e1"
            ],
            [
                "981c75357d8d2e35"
            ]
        ]
    },
    {
        "id": "4fab15dc3b9818fe",
        "type": "file in",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2200,
        "wires": [
            [
                "0e532938adad4c1f"
            ]
        ]
    },
    {
        "id": "d19d52c80f8aa529",
        "type": "debug",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "60 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2240,
        "wires": []
    },
    {
        "id": "981c75357d8d2e35",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_62_Conveyor\" : false,\n            \"F_62_P1\" : false,\n            \"F_62_P2\" : false,\n            \"F_62_Identify\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2200,
        "wires": [
            [
                "967acdc68aee4ea1"
            ]
        ]
    },
    {
        "id": "dc52daf973eba772",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2200,
        "wires": [
            [
                "4fab15dc3b9818fe"
            ]
        ]
    },
    {
        "id": "967acdc68aee4ea1",
        "type": "trigger",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2200,
        "wires": [
            [
                "e4a179dd91b58965"
            ]
        ]
    },
    {
        "id": "e4a179dd91b58965",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2200,
        "wires": [
            [
                "dc52daf973eba772"
            ]
        ]
    },
    {
        "id": "2698adf299778541",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "item": "F_63_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Led_Start",
        "x": 480,
        "y": 2580,
        "wires": [
            [
                "9ab06aad1bcea0b1"
            ]
        ]
    },
    {
        "id": "d60d72622e90629c",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "item": "F_63_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Led_Reset",
        "x": 470,
        "y": 2620,
        "wires": [
            [
                "9ab06aad1bcea0b1"
            ]
        ]
    },
    {
        "id": "515420237e57a7df",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "item": "F_63_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Led_Extra1",
        "x": 470,
        "y": 2660,
        "wires": [
            [
                "9ab06aad1bcea0b1"
            ]
        ]
    },
    {
        "id": "46f637529ee0e107",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "item": "F_63_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Led_Extra2",
        "x": 470,
        "y": 2700,
        "wires": [
            [
                "9ab06aad1bcea0b1"
            ]
        ]
    },
    {
        "id": "79ee2e1243f61a9f",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "item": "F_63_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Panel_O4",
        "x": 480,
        "y": 2740,
        "wires": [
            [
                "9ab06aad1bcea0b1"
            ]
        ]
    },
    {
        "id": "e70b89c151375ad1",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "item": "F_63_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Panel_O5",
        "x": 480,
        "y": 2780,
        "wires": [
            [
                "9ab06aad1bcea0b1"
            ]
        ]
    },
    {
        "id": "afe5824318ea2517",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "item": "F_63_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Panel_O6",
        "x": 480,
        "y": 2820,
        "wires": [
            [
                "9ab06aad1bcea0b1"
            ]
        ]
    },
    {
        "id": "9ab06aad1bcea0b1",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "60 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "1f151589e0bb6940",
            "4c5c21df37d2d438"
        ],
        "x": 645,
        "y": 2720,
        "wires": []
    },
    {
        "id": "8bf9d312ea440499",
        "type": "switch",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "60 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_63_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_63_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2720,
        "wires": [
            [
                "18b8521fc47398c9"
            ],
            [
                "2994ab83b522c87b"
            ],
            [
                "93cad13bffe2bc32"
            ],
            [
                "50b244685ed54922"
            ],
            [
                "d9ee14905bd2b097"
            ],
            [
                "43efb01192847188"
            ],
            [
                "8f1c36f9bc8b88a7"
            ],
            [
                "6e36d5ac219ee7a6"
            ]
        ]
    },
    {
        "id": "18b8521fc47398c9",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "order": 0,
        "group": "85e1f08e371b3f8d",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Led_Start",
        "x": 1060,
        "y": 2580,
        "wires": []
    },
    {
        "id": "2994ab83b522c87b",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "order": 0,
        "group": "85e1f08e371b3f8d",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Led_Reset",
        "x": 1070,
        "y": 2620,
        "wires": []
    },
    {
        "id": "93cad13bffe2bc32",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "order": 0,
        "group": "85e1f08e371b3f8d",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Led_Extra1",
        "x": 1070,
        "y": 2660,
        "wires": []
    },
    {
        "id": "50b244685ed54922",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "order": 0,
        "group": "85e1f08e371b3f8d",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Led_Extra2",
        "x": 1070,
        "y": 2700,
        "wires": []
    },
    {
        "id": "d9ee14905bd2b097",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "order": 0,
        "group": "85e1f08e371b3f8d",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Panel_O4",
        "x": 1060,
        "y": 2740,
        "wires": []
    },
    {
        "id": "43efb01192847188",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "order": 0,
        "group": "85e1f08e371b3f8d",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Panel_O5",
        "x": 1060,
        "y": 2780,
        "wires": []
    },
    {
        "id": "8f1c36f9bc8b88a7",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "order": 0,
        "group": "85e1f08e371b3f8d",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Panel_O6",
        "x": 1060,
        "y": 2820,
        "wires": []
    },
    {
        "id": "fa437742a8ba7281",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "item": "F_63_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_63_Panel_O7",
        "x": 480,
        "y": 2860,
        "wires": [
            [
                "9ab06aad1bcea0b1"
            ]
        ]
    },
    {
        "id": "6e36d5ac219ee7a6",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "order": 0,
        "group": "85e1f08e371b3f8d",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_63_Panel_O7",
        "x": 1060,
        "y": 2860,
        "wires": []
    },
    {
        "id": "24f81d0e4a730383",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2500,
        "wires": [
            [
                "e74ef712a31669e0"
            ]
        ]
    },
    {
        "id": "d1444a420e87910f",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2500,
        "wires": [
            [
                "24f81d0e4a730383"
            ]
        ]
    },
    {
        "id": "e74ef712a31669e0",
        "type": "OpcUa-Client",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AF",
        "x": 1130,
        "y": 2500,
        "wires": [
            [
                "c97ab39141f2c675",
                "e2a39b7f4246b04c"
            ],
            [
                "91cd13a972552eab"
            ]
        ]
    },
    {
        "id": "704d79b99033c6d3",
        "type": "file in",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2500,
        "wires": [
            [
                "d1444a420e87910f"
            ]
        ]
    },
    {
        "id": "c97ab39141f2c675",
        "type": "debug",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "60 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2540,
        "wires": []
    },
    {
        "id": "91cd13a972552eab",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_63_Led_Start\" : false,\n            \"F_63_Led_Reset\" : false,\n            \"F_63_Led_Extra1\" : false,\n            \"F_63_Led_Extra2\" : false,\n            \"F_63_Panel_O4\" : false,\n            \"F_63_Panel_O5\" : false,\n            \"F_63_Panel_O6\" : false,\n            \"F_63_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2500,
        "wires": [
            [
                "2f78182bc064ba97"
            ]
        ]
    },
    {
        "id": "8cd958ab7d0e7121",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2500,
        "wires": [
            [
                "704d79b99033c6d3"
            ]
        ]
    },
    {
        "id": "2f78182bc064ba97",
        "type": "trigger",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2500,
        "wires": [
            [
                "531765fb7f8e0c12"
            ]
        ]
    },
    {
        "id": "531765fb7f8e0c12",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2500,
        "wires": [
            [
                "8cd958ab7d0e7121"
            ]
        ]
    },
    {
        "id": "05db6b9fd23ceec1",
        "type": "comment",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "bd7f6cccbcc996f7",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "9723a4b320d5e982"
            ]
        ]
    },
    {
        "id": "9723a4b320d5e982",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Sorting_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "82a59b953a0d5394"
            ]
        ]
    },
    {
        "id": "cf92770368587a28",
        "type": "file",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "ee84c35d5750ddf2",
        "type": "comment",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "82a59b953a0d5394",
        "type": "OpcUa-Client",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "83d0db05a5628463"
            ],
            [
                "ae6449878c69e6d2",
                "b08d2bf2147153e2"
            ]
        ]
    },
    {
        "id": "83d0db05a5628463",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "5fcbb1bf15da2f1e",
                "1d82d95ee9603962"
            ]
        ]
    },
    {
        "id": "5fcbb1bf15da2f1e",
        "type": "file",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "1d82d95ee9603962",
        "type": "debug",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "f6f64a10ff83162c",
        "type": "comment",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "1b5154d7a2977bd4",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "0bf4bc6dbb4c09aa"
            ]
        ]
    },
    {
        "id": "2d87e366a9b20563",
        "type": "OpcUa-Client",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "endpoint": "a2328ac43b0b7d73",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "07ba2fa8713f8ccb"
            ],
            []
        ]
    },
    {
        "id": "07ba2fa8713f8ccb",
        "type": "debug",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "1f151589e0bb6940",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Write_Sort",
        "links": [
            "04cb71bab6c22a8c",
            "8f28ce2a07e94b48",
            "20cc20402f9c71d9",
            "9ab06aad1bcea0b1",
            "b6b54d3fb41c6486",
            "2a7d28368bb38c2b",
            "2192e7d8b3358bea",
            "d1f784a38db53d5d"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "ed61aae8ed8b5d76"
            ]
        ]
    },
    {
        "id": "ed61aae8ed8b5d76",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "cb201819f657d793"
            ]
        ]
    },
    {
        "id": "cb201819f657d793",
        "type": "file in",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "1b5154d7a2977bd4"
            ]
        ]
    },
    {
        "id": "0bf4bc6dbb4c09aa",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "2d87e366a9b20563"
            ]
        ]
    },
    {
        "id": "6f3cdbb1cf703e10",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "CSV Link",
        "links": [
            "ae6449878c69e6d2"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "5b7bde26052da85d"
            ]
        ]
    },
    {
        "id": "5b7bde26052da85d",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "4d66a9625d724998"
            ]
        ]
    },
    {
        "id": "4d66a9625d724998",
        "type": "trigger",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "cf92770368587a28"
            ]
        ]
    },
    {
        "id": "ae6449878c69e6d2",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "6f3cdbb1cf703e10",
            "ef042c927c828716"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "ef042c927c828716",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "CSV Link",
        "links": [
            "ae6449878c69e6d2"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "a9a039f6bb15e945"
            ]
        ]
    },
    {
        "id": "a9a039f6bb15e945",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"I_60_Conveyor\" : false,\n    \"I_60_P1\" : false,\n    \"I_60_P2\" : false,\n    \"I_60_Identify\" : false,\n    \"I_61_Led_Start\" : false,\n    \"I_61_Led_Reset\" : false,\n    \"I_61_Led_Extra1\" : false,\n    \"I_61_Led_Extra2\" : false,\n    \"I_61_Panel_O4\" : false,\n    \"I_61_Panel_O5\" : false,\n    \"I_61_Panel_O6\" : false,\n    \"I_61_Panel_O7\" : false,\n    \"C_65_Initialization\" : false,\n    \"C_65_ID_1\" : false,\n    \"C_65_ID_2\" : false,\n    \"C_62_Profibus\" : true,\n    \"C_65_RBS_Output\" : true,\n    \"C_65_RSB_Output\" : false,\n    \"C_65_BRS_Output\" : false,\n    \"C_65_BSR_Output\" : false,\n    \"C_65_SRB_Output\" : false,\n    \"C_65_SBR_Output\" : false,\n    \"F_62_Conveyor\" : false,\n    \"F_62_P1\" : false,\n    \"F_62_P2\" : false,\n    \"F_62_Identify\" : false,\n    \"F_63_Led_Start\" : false,\n    \"F_63_Led_Reset\" : false,\n    \"F_63_Led_Extra1\" : false,\n    \"F_63_Led_Extra2\" : false,\n    \"F_63_Panel_O4\" : false,\n    \"F_63_Panel_O5\" : false,\n    \"F_63_Panel_O6\" : false,\n    \"F_63_Panel_O7\" : false,\n    \"O_60_SPart\" : false,\n    \"O_60_SInd\" : false,\n    \"O_60_SPhoto\" : false,\n    \"O_60_Part_Pass\" : false,\n    \"O_60_SL1_Bck\" : true,\n    \"O_60_SL1_Fwd\" : false,\n    \"O_60_SL2_Bck\" : true,\n    \"O_60_SL2_Fwd\" : false,\n    \"O_61_Start\" : false,\n    \"O_61_Stop\" : true,\n    \"O_61_Key_Pos\" : false,\n    \"O_61_Reset\" : false,\n    \"O_61_Panel_I4\" : false,\n    \"O_61_Panel_I5\" : true,\n    \"O_61_Panel_I6\" : false,\n    \"O_61_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "8e12322662cddc77"
            ]
        ]
    },
    {
        "id": "8e12322662cddc77",
        "type": "trigger",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "bd7f6cccbcc996f7"
            ]
        ]
    },
    {
        "id": "8f7dd2ed5e821f8a",
        "type": "debug",
        "z": "ebda326947bc6818",
        "g": "dd3cb4f8204f6bde",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "31b7777bfec28112",
        "type": "OpcUa-Server",
        "z": "ebda326947bc6818",
        "g": "dd3cb4f8204f6bde",
        "port": "53880",
        "name": "Server : Sorting",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Sorting/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Sorting",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "8f7dd2ed5e821f8a"
            ]
        ]
    },
    {
        "id": "c4436d112b1b1431",
        "type": "debug",
        "z": "ebda326947bc6818",
        "g": "4e8d3a5991cab92f",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "6582c61b55afdc95",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "4e8d3a5991cab92f",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "c0f1618f9ad79d53",
            "f977bd06e48a7c42",
            "e8957e6d9f566a25",
            "3d1a6d3dd834edbd",
            "3d342d722aa88472"
        ],
        "x": 825,
        "y": 60,
        "wires": []
    },
    {
        "id": "dc555c9ee09269e1",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "Sub Out 60 PF",
        "mode": "link",
        "links": [
            "e1342e355a81dfdd"
        ],
        "x": 1295,
        "y": 2200,
        "wires": []
    },
    {
        "id": "e1342e355a81dfdd",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "Sub In 60 PF",
        "links": [
            "dc555c9ee09269e1"
        ],
        "x": 775,
        "y": 2340,
        "wires": [
            [
                "c0f7138fa74ef1be"
            ]
        ]
    },
    {
        "id": "8d6bc003d43d7372",
        "type": "function",
        "z": "ebda326947bc6818",
        "name": "F_62_Conveyor",
        "func": "if (msg.topic === \"F_62_Conveyor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_62_Conveyor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2300,
        "wires": [
            [
                "25fb3aa77ab2a028"
            ]
        ]
    },
    {
        "id": "67c9a9421f1e7504",
        "type": "function",
        "z": "ebda326947bc6818",
        "name": "F_62_P1",
        "func": "if (msg.topic === \"F_62_P1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_62_P1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 2340,
        "wires": [
            [
                "4d46b4669a343888"
            ]
        ]
    },
    {
        "id": "fd046a45365df13e",
        "type": "function",
        "z": "ebda326947bc6818",
        "name": "F_62_P2",
        "func": "if (msg.topic === \"F_62_P2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_62_P2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 2380,
        "wires": [
            [
                "db85a2a0d6925f6c"
            ]
        ]
    },
    {
        "id": "0b202563c1b963f8",
        "type": "function",
        "z": "ebda326947bc6818",
        "name": "F_62_Identify",
        "func": "if (msg.topic === \"F_62_Identify\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_62_Identify\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2420,
        "wires": [
            [
                "ba29f33ef212a7e5"
            ]
        ]
    },
    {
        "id": "e8957e6d9f566a25",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "S7 PF",
        "links": [
            "6582c61b55afdc95"
        ],
        "x": 55,
        "y": 2340,
        "wires": [
            [
                "8d6bc003d43d7372",
                "67c9a9421f1e7504",
                "fd046a45365df13e",
                "0b202563c1b963f8"
            ]
        ]
    },
    {
        "id": "e2a39b7f4246b04c",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "Sub Out 60 AF",
        "mode": "link",
        "links": [
            "91519321bdcfb6a5"
        ],
        "x": 1295,
        "y": 2500,
        "wires": []
    },
    {
        "id": "91519321bdcfb6a5",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "Sub In 60 AF",
        "links": [
            "e2a39b7f4246b04c"
        ],
        "x": 775,
        "y": 2720,
        "wires": [
            [
                "8bf9d312ea440499"
            ]
        ]
    },
    {
        "id": "44769a7efe783b7e",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "F_63_Led_Start",
        "func": "if (msg.topic === \"F_63_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2580,
        "wires": [
            [
                "2698adf299778541"
            ]
        ]
    },
    {
        "id": "3d1a6d3dd834edbd",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "S7 AF",
        "links": [
            "6582c61b55afdc95"
        ],
        "x": 55,
        "y": 2720,
        "wires": [
            [
                "44769a7efe783b7e",
                "438d4bae531d9cfd",
                "1ea70a58a764a5f9",
                "ddccf78e790720a4",
                "7aae526762aab330",
                "6732c5b24567fd8d",
                "598563ca32957b34",
                "4675b0ba3bdd946b"
            ]
        ]
    },
    {
        "id": "7aae526762aab330",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "F_63_Panel_O4",
        "func": "if (msg.topic === \"F_63_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2740,
        "wires": [
            [
                "79ee2e1243f61a9f"
            ]
        ]
    },
    {
        "id": "438d4bae531d9cfd",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "F_63_Led_Reset",
        "func": "if (msg.topic === \"F_63_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2620,
        "wires": [
            [
                "d60d72622e90629c"
            ]
        ]
    },
    {
        "id": "1ea70a58a764a5f9",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "F_63_Led_Extra1",
        "func": "if (msg.topic === \"F_63_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2660,
        "wires": [
            [
                "515420237e57a7df"
            ]
        ]
    },
    {
        "id": "ddccf78e790720a4",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "F_63_Led_Extra2",
        "func": "if (msg.topic === \"F_63_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2700,
        "wires": [
            [
                "46f637529ee0e107"
            ]
        ]
    },
    {
        "id": "6732c5b24567fd8d",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "F_63_Panel_O5",
        "func": "if (msg.topic === \"F_63_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2780,
        "wires": [
            [
                "e70b89c151375ad1"
            ]
        ]
    },
    {
        "id": "598563ca32957b34",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "F_63_Panel_O6",
        "func": "if (msg.topic === \"F_63_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2820,
        "wires": [
            [
                "afe5824318ea2517"
            ]
        ]
    },
    {
        "id": "4675b0ba3bdd946b",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "F_63_Panel_O7",
        "func": "if (msg.topic === \"F_63_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_63_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2860,
        "wires": [
            [
                "fa437742a8ba7281"
            ]
        ]
    },
    {
        "id": "95a529fe131a7550",
        "type": "mqtt in",
        "z": "ebda326947bc6818",
        "g": "4e8d3a5991cab92f",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "4de211dc0a9652ab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "2154ce8f847dbcde"
            ]
        ]
    },
    {
        "id": "2154ce8f847dbcde",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "4e8d3a5991cab92f",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "6582c61b55afdc95",
                "c4436d112b1b1431"
            ]
        ]
    },
    {
        "id": "b08d2bf2147153e2",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "09552fee4a585657"
            ]
        ]
    },
    {
        "id": "09552fee4a585657",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "ec2c2ba3b3bc3655",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "1c3badd6d5ec320f",
            "9d75d9139bd9d116",
            "292a0485f1c8c0a7",
            "80bad71c98debd87",
            "4f46f63ba3379483",
            "20108575cf78667f",
            "159c0d9efdd89813",
            "425a0d5f3fc5cd60"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "80bad71c98debd87",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "0bd8616a38070833",
        "name": "Read AF",
        "links": [
            "09552fee4a585657"
        ],
        "x": 55,
        "y": 2500,
        "wires": [
            [
                "91cd13a972552eab"
            ]
        ]
    },
    {
        "id": "4f46f63ba3379483",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "55647d8ac7987a80",
        "name": "Read PF",
        "links": [
            "09552fee4a585657"
        ],
        "x": 55,
        "y": 2200,
        "wires": [
            [
                "981c75357d8d2e35"
            ]
        ]
    },
    {
        "id": "53db88faf58ade31",
        "type": "mqtt out",
        "z": "ebda326947bc6818",
        "g": "4e8d3a5991cab92f",
        "name": "S7Variables",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4de211dc0a9652ab",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "ecf1b6741783886a",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "4e8d3a5991cab92f",
        "name": "S7 Actuators",
        "links": [
            "5bfa586b29bb2be6",
            "d80d49a4cff88dd2",
            "2e70893973c5a099"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "53db88faf58ade31"
            ]
        ]
    },
    {
        "id": "dd36011fa4dc3b54",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"SA_60_Conveyor\" : false,\n    \"SA_60_P1\" : false,\n    \"SA_60_P2\" : false,\n    \"SA_60_Identify\" : false,\n    \"SA_61_Led_Start\" : false,\n    \"SA_61_Led_Reset\" : false,\n    \"SA_61_Led_Extra1\" : false,\n    \"SA_61_Led_Extra2\" : false,\n    \"SA_61_Panel_O4\" : false,\n    \"SA_61_Panel_O5\" : false,\n    \"SA_61_Panel_O6\" : false,\n    \"SA_61_Panel_O7\" : false,\n    \"SC_65_Initialization\" : false,\n    \"SC_65_ID_1\" : false,\n    \"SC_65_ID_2\" : false,\n    \"SC_62_Profibus\" : true,\n    \"SC_65_RBS_Output\" : true,\n    \"SC_65_RSB_Output\" : false,\n    \"SC_65_BRS_Output\" : false,\n    \"SC_65_BSR_Output\" : false,\n    \"SC_65_SRB_Output\" : false,\n    \"SC_65_SBR_Output\" : false,\n\t\"SS_60_SPart\" : false,\n    \"SS_60_SInd\" : false,\n    \"SS_60_SPhoto\" : false,\n    \"SS_60_Part_Pass\" : false,\n    \"SS_60_SL1_Bck\" : true,\n    \"SS_60_SL1_Fwd\" : false,\n    \"SS_60_SL2_Bck\" : true,\n    \"SS_60_SL2_Fwd\" : false,\n    \"SS_61_Start\" : false,\n    \"SS_61_Stop\" : true,\n    \"SS_61_Key_Pos\" : false,\n    \"SS_61_Reset\" : false,\n    \"SS_61_Panel_I4\" : false,\n    \"SS_61_Panel_I5\" : true,\n    \"SS_61_Panel_I6\" : false,\n    \"SS_61_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 680,
        "wires": [
            [
                "a27a552aae5c88fc"
            ]
        ]
    },
    {
        "id": "f7956f9fa44c274b",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "Simulated CSV Link",
        "links": [
            "9ff6d765bb15e5d0"
        ],
        "x": 65,
        "y": 680,
        "wires": [
            [
                "dd36011fa4dc3b54"
            ]
        ]
    },
    {
        "id": "a27a552aae5c88fc",
        "type": "trigger",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 680,
        "wires": [
            [
                "e553d64247cffc0e"
            ]
        ]
    },
    {
        "id": "e553d64247cffc0e",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"SA_\")) variableClass = \"Simulated_Actuators\";\n        if (key.includes(\"SC_\")) variableClass = \"Simulated_Control\";\n        if (key.includes(\"SS_\")) variableClass = \"Simulated_Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 680,
        "wires": [
            [
                "4d93a74ce9d726da"
            ]
        ]
    },
    {
        "id": "4d93a74ce9d726da",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Sorting_Station/SimulationData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 680,
        "wires": [
            [
                "b2adcec7b330ec9a"
            ]
        ]
    },
    {
        "id": "b2adcec7b330ec9a",
        "type": "OpcUa-Client",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 680,
        "wires": [
            [
                "dfdb1718ee24fe51"
            ],
            [
                "9ff6d765bb15e5d0"
            ]
        ]
    },
    {
        "id": "dfdb1718ee24fe51",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 640,
        "wires": [
            [
                "5afb7e8bd488e319",
                "fa9493880758bb76"
            ]
        ]
    },
    {
        "id": "9ff6d765bb15e5d0",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "Simulated CSV Link",
        "mode": "link",
        "links": [
            "26ec017fe1c0fec7",
            "f7956f9fa44c274b"
        ],
        "x": 935,
        "y": 680,
        "wires": []
    },
    {
        "id": "5afb7e8bd488e319",
        "type": "file",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "Simulated Varaibles List",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1230,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "fa9493880758bb76",
        "type": "debug",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "1cdc5cc336841f4a",
        "type": "comment",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 640,
        "wires": []
    },
    {
        "id": "19f8fd4457c5c15f",
        "type": "comment",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 540,
        "wires": []
    },
    {
        "id": "26ec017fe1c0fec7",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "Simulated CSV Link",
        "links": [
            "9ff6d765bb15e5d0"
        ],
        "x": 65,
        "y": 580,
        "wires": [
            [
                "e526a8156691884a"
            ]
        ]
    },
    {
        "id": "e526a8156691884a",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 580,
        "wires": [
            [
                "aa4dd14a1dbc796f"
            ]
        ]
    },
    {
        "id": "aa4dd14a1dbc796f",
        "type": "trigger",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 580,
        "wires": [
            [
                "61a07e1a04dd4492"
            ]
        ]
    },
    {
        "id": "61a07e1a04dd4492",
        "type": "file",
        "z": "ebda326947bc6818",
        "g": "df3ce4009716f839",
        "name": "Simulated CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 440,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "58bfc28a7eceefd8",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "item": "I_60_Conveyor",
        "datatype": "Boolean",
        "value": "",
        "name": "I_60_Conveyor",
        "x": 480,
        "y": 860,
        "wires": [
            [
                "b6b54d3fb41c6486"
            ]
        ]
    },
    {
        "id": "2c43601bdcc0cfd8",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "item": "I_60_P1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_60_P1",
        "x": 500,
        "y": 900,
        "wires": [
            [
                "b6b54d3fb41c6486"
            ]
        ]
    },
    {
        "id": "49c45bec135ce9cf",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "item": "I_60_P2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_60_P2",
        "x": 500,
        "y": 940,
        "wires": [
            [
                "b6b54d3fb41c6486"
            ]
        ]
    },
    {
        "id": "83cc1a4545934b3b",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "item": "I_60_Identify",
        "datatype": "Boolean",
        "value": "",
        "name": "I_60_Identify",
        "x": 490,
        "y": 980,
        "wires": [
            [
                "b6b54d3fb41c6486"
            ]
        ]
    },
    {
        "id": "b6b54d3fb41c6486",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "60 Physical Actuators",
        "mode": "link",
        "links": [
            "1f151589e0bb6940",
            "4c5c21df37d2d438"
        ],
        "x": 645,
        "y": 920,
        "wires": []
    },
    {
        "id": "b574a5433c996b71",
        "type": "switch",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "60 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_60_Conveyor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_60_P1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_60_P2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_60_Identify",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 920,
        "wires": [
            [
                "ecb91f32b02b1237"
            ],
            [
                "a5de3d1557696d58"
            ],
            [
                "f7e5f128417fd4a6"
            ],
            [
                "dacd842fac6b6f99"
            ]
        ]
    },
    {
        "id": "2bbe6737b539b027",
        "type": "ui_switch",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "I_60_Conveyor",
        "label": "Conveyor on",
        "tooltip": "",
        "group": "3c8c487a31add2ae",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 860,
        "wires": [
            [
                "58bfc28a7eceefd8"
            ]
        ]
    },
    {
        "id": "a5ceb8cf518b6d1b",
        "type": "ui_switch",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "I_60_P1",
        "label": "Pushes Lever 1 forward",
        "tooltip": "",
        "group": "3c8c487a31add2ae",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 180,
        "y": 900,
        "wires": [
            [
                "2c43601bdcc0cfd8"
            ]
        ]
    },
    {
        "id": "95db6bd2e1c964b9",
        "type": "ui_switch",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "I_60_P2",
        "label": "Pushes Lever 2 forward",
        "tooltip": "",
        "group": "3c8c487a31add2ae",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 180,
        "y": 940,
        "wires": [
            [
                "49c45bec135ce9cf"
            ]
        ]
    },
    {
        "id": "2530a6fb0b9d54ca",
        "type": "ui_switch",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "I_60_Identify",
        "label": "Identify pin",
        "tooltip": "",
        "group": "3c8c487a31add2ae",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 980,
        "wires": [
            [
                "83cc1a4545934b3b"
            ]
        ]
    },
    {
        "id": "a84ed8893729bd22",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 780,
        "wires": [
            [
                "90aa4a66f4d06fc6"
            ]
        ]
    },
    {
        "id": "b8c9751fbb8e1aac",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 780,
        "wires": [
            [
                "a84ed8893729bd22"
            ]
        ]
    },
    {
        "id": "90aa4a66f4d06fc6",
        "type": "OpcUa-Client",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PA",
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "178361fdb3e91e5e",
                "95ee0433322c8bc4"
            ],
            [
                "b55ca32e275c8d1d"
            ]
        ]
    },
    {
        "id": "9fcbac8ec472a77b",
        "type": "file in",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 780,
        "wires": [
            [
                "b8c9751fbb8e1aac"
            ]
        ]
    },
    {
        "id": "178361fdb3e91e5e",
        "type": "debug",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "60 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 820,
        "wires": []
    },
    {
        "id": "b55ca32e275c8d1d",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_60_Conveyor\" : false,\n            \"I_60_P1\" : false,\n            \"I_60_P2\" : false,\n            \"I_60_Identify\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 780,
        "wires": [
            [
                "018368705b49e7a0"
            ]
        ]
    },
    {
        "id": "17f4903ad2269408",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 780,
        "wires": [
            [
                "9fcbac8ec472a77b"
            ]
        ]
    },
    {
        "id": "018368705b49e7a0",
        "type": "trigger",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 780,
        "wires": [
            [
                "f6f1908345b7f71f"
            ]
        ]
    },
    {
        "id": "f6f1908345b7f71f",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 780,
        "wires": [
            [
                "17f4903ad2269408"
            ]
        ]
    },
    {
        "id": "95ee0433322c8bc4",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "Sub Out 60 PA",
        "mode": "link",
        "links": [
            "72c9bdead8dec436"
        ],
        "x": 1295,
        "y": 780,
        "wires": []
    },
    {
        "id": "72c9bdead8dec436",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "Sub In 60 PA",
        "links": [
            "95ee0433322c8bc4"
        ],
        "x": 775,
        "y": 920,
        "wires": [
            [
                "b574a5433c996b71"
            ]
        ]
    },
    {
        "id": "159c0d9efdd89813",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "Read PA",
        "links": [
            "09552fee4a585657"
        ],
        "x": 55,
        "y": 780,
        "wires": [
            [
                "b55ca32e275c8d1d"
            ]
        ]
    },
    {
        "id": "ecb91f32b02b1237",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "I_60_Conveyor",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 860,
        "wires": [
            [
                "5bfa586b29bb2be6"
            ]
        ]
    },
    {
        "id": "a5de3d1557696d58",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "I_60_P1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 900,
        "wires": [
            [
                "5bfa586b29bb2be6"
            ]
        ]
    },
    {
        "id": "f7e5f128417fd4a6",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "I_60_P2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 940,
        "wires": [
            [
                "5bfa586b29bb2be6"
            ]
        ]
    },
    {
        "id": "dacd842fac6b6f99",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "I_60_Identify",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 980,
        "wires": [
            [
                "5bfa586b29bb2be6"
            ]
        ]
    },
    {
        "id": "5bfa586b29bb2be6",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "60f3694641c8f010",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "ecf1b6741783886a"
        ],
        "x": 1235,
        "y": 920,
        "wires": []
    },
    {
        "id": "6b5cacc3c14efc59",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "item": "I_61_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Led_Start",
        "x": 480,
        "y": 1160,
        "wires": [
            [
                "04cb71bab6c22a8c"
            ]
        ]
    },
    {
        "id": "a3e651ceddef3dff",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "item": "I_61_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Led_Reset",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "04cb71bab6c22a8c"
            ]
        ]
    },
    {
        "id": "85d4101ec8513bc8",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "item": "I_61_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Led_Extra1",
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "04cb71bab6c22a8c"
            ]
        ]
    },
    {
        "id": "10de3f1650e41b45",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "item": "I_61_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Led_Extra2",
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "04cb71bab6c22a8c"
            ]
        ]
    },
    {
        "id": "b12bd9c961ac6aeb",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "item": "I_61_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Panel_O4",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "04cb71bab6c22a8c"
            ]
        ]
    },
    {
        "id": "04cb71bab6c22a8c",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "60 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "1f151589e0bb6940",
            "4c5c21df37d2d438"
        ],
        "x": 645,
        "y": 1300,
        "wires": []
    },
    {
        "id": "7197400ce1753a14",
        "type": "switch",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "60 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_61_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_61_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1300,
        "wires": [
            [
                "6152c94099fa90a0"
            ],
            [
                "1ee1452b4369cd65"
            ],
            [
                "86ed065a0214192a"
            ],
            [
                "7e6f08335df3f6ee"
            ],
            [
                "7674964b13efce34"
            ],
            [
                "2d1f100b466c4dab"
            ],
            [
                "a7146f3fe5ae5228"
            ],
            [
                "ab59d61afc122006"
            ]
        ]
    },
    {
        "id": "47087a6fedab78ff",
        "type": "ui_switch",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "86be4093d2ac3a53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1160,
        "wires": [
            [
                "6b5cacc3c14efc59"
            ]
        ]
    },
    {
        "id": "e5c94805f51ae727",
        "type": "ui_switch",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "86be4093d2ac3a53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "a3e651ceddef3dff"
            ]
        ]
    },
    {
        "id": "c98276be7e6fa805",
        "type": "ui_switch",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "86be4093d2ac3a53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1240,
        "wires": [
            [
                "85d4101ec8513bc8"
            ]
        ]
    },
    {
        "id": "cda70024c0276320",
        "type": "ui_switch",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "86be4093d2ac3a53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1280,
        "wires": [
            [
                "10de3f1650e41b45"
            ]
        ]
    },
    {
        "id": "0fc96e946b7b4e69",
        "type": "ui_switch",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "86be4093d2ac3a53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "b12bd9c961ac6aeb"
            ]
        ]
    },
    {
        "id": "b94425487885201c",
        "type": "ui_switch",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "86be4093d2ac3a53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1360,
        "wires": [
            [
                "2c4cb8c0fb519aa5"
            ]
        ]
    },
    {
        "id": "2c4cb8c0fb519aa5",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "item": "I_61_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Panel_O5",
        "x": 480,
        "y": 1360,
        "wires": [
            [
                "04cb71bab6c22a8c"
            ]
        ]
    },
    {
        "id": "6f087dcc9be24f19",
        "type": "ui_switch",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "86be4093d2ac3a53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1400,
        "wires": [
            [
                "c380d959b9a9f057"
            ]
        ]
    },
    {
        "id": "c380d959b9a9f057",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "item": "I_61_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Panel_O6",
        "x": 480,
        "y": 1400,
        "wires": [
            [
                "04cb71bab6c22a8c"
            ]
        ]
    },
    {
        "id": "7fce441b728b8445",
        "type": "ui_switch",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "86be4093d2ac3a53",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1440,
        "wires": [
            [
                "3dee6423c30219d4"
            ]
        ]
    },
    {
        "id": "3dee6423c30219d4",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "item": "I_61_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_61_Panel_O7",
        "x": 480,
        "y": 1440,
        "wires": [
            [
                "04cb71bab6c22a8c"
            ]
        ]
    },
    {
        "id": "e65952f52ff96f8e",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1080,
        "wires": [
            [
                "b14fd17d43e40c64"
            ]
        ]
    },
    {
        "id": "ebbb9845458a3e51",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1080,
        "wires": [
            [
                "e65952f52ff96f8e"
            ]
        ]
    },
    {
        "id": "b14fd17d43e40c64",
        "type": "OpcUa-Client",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AA",
        "x": 1130,
        "y": 1080,
        "wires": [
            [
                "6a8bbba6747d3bb8",
                "13485d3baff5f506"
            ],
            [
                "80d256b18f567a3c"
            ]
        ]
    },
    {
        "id": "641e442305206ebf",
        "type": "file in",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1080,
        "wires": [
            [
                "ebbb9845458a3e51"
            ]
        ]
    },
    {
        "id": "6a8bbba6747d3bb8",
        "type": "debug",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "60 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1120,
        "wires": []
    },
    {
        "id": "80d256b18f567a3c",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_61_Led_Start\" : false,\n            \"I_61_Led_Reset\" : false,\n            \"I_61_Led_Extra1\" : false,\n            \"I_61_Led_Extra2\" : false,\n            \"I_61_Panel_O4\" : false,\n            \"I_61_Panel_O5\" : false,\n            \"I_61_Panel_O6\" : false,\n            \"I_61_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "986b65f0f044e77a"
            ]
        ]
    },
    {
        "id": "8cd541dc347b999b",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1080,
        "wires": [
            [
                "641e442305206ebf"
            ]
        ]
    },
    {
        "id": "986b65f0f044e77a",
        "type": "trigger",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1080,
        "wires": [
            [
                "5af97678fe289791"
            ]
        ]
    },
    {
        "id": "5af97678fe289791",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1080,
        "wires": [
            [
                "8cd541dc347b999b"
            ]
        ]
    },
    {
        "id": "13485d3baff5f506",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "Sub Out 60 AA",
        "mode": "link",
        "links": [
            "ef5f757d9fa68c25"
        ],
        "x": 1295,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ef5f757d9fa68c25",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "Sub In 60 AA",
        "links": [
            "13485d3baff5f506"
        ],
        "x": 775,
        "y": 1300,
        "wires": [
            [
                "7197400ce1753a14"
            ]
        ]
    },
    {
        "id": "20108575cf78667f",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "Read AA",
        "links": [
            "09552fee4a585657"
        ],
        "x": 55,
        "y": 1080,
        "wires": [
            [
                "80d256b18f567a3c"
            ]
        ]
    },
    {
        "id": "6152c94099fa90a0",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1160,
        "wires": [
            [
                "d80d49a4cff88dd2"
            ]
        ]
    },
    {
        "id": "1ee1452b4369cd65",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1200,
        "wires": [
            [
                "d80d49a4cff88dd2"
            ]
        ]
    },
    {
        "id": "86ed065a0214192a",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1240,
        "wires": [
            [
                "d80d49a4cff88dd2"
            ]
        ]
    },
    {
        "id": "7e6f08335df3f6ee",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1280,
        "wires": [
            [
                "d80d49a4cff88dd2"
            ]
        ]
    },
    {
        "id": "7674964b13efce34",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1320,
        "wires": [
            [
                "d80d49a4cff88dd2"
            ]
        ]
    },
    {
        "id": "2d1f100b466c4dab",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1360,
        "wires": [
            [
                "d80d49a4cff88dd2"
            ]
        ]
    },
    {
        "id": "a7146f3fe5ae5228",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1400,
        "wires": [
            [
                "d80d49a4cff88dd2"
            ]
        ]
    },
    {
        "id": "ab59d61afc122006",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "I_61_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1440,
        "wires": [
            [
                "d80d49a4cff88dd2"
            ]
        ]
    },
    {
        "id": "d80d49a4cff88dd2",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "2f236afafc3d8b87",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "ecf1b6741783886a"
        ],
        "x": 1225,
        "y": 1300,
        "wires": []
    },
    {
        "id": "5b666501410b5638",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "item": "C_62_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_62_Profibus",
        "x": 640,
        "y": 1620,
        "wires": [
            [
                "8f28ce2a07e94b48"
            ]
        ]
    },
    {
        "id": "207691fb64031175",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "item": "C_65_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_Initialization",
        "x": 630,
        "y": 1660,
        "wires": [
            [
                "8f28ce2a07e94b48"
            ]
        ]
    },
    {
        "id": "713d2fe2871d477c",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "item": "C_65_RBS_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_RBS_Output",
        "x": 630,
        "y": 1900,
        "wires": [
            [
                "d1f784a38db53d5d"
            ]
        ]
    },
    {
        "id": "ce0f30cf9fb3cee5",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "item": "C_65_RSB_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_RSB_Output",
        "x": 630,
        "y": 1940,
        "wires": [
            [
                "d1f784a38db53d5d"
            ]
        ]
    },
    {
        "id": "8f28ce2a07e94b48",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "60 Control Read",
        "mode": "link",
        "links": [
            "1f151589e0bb6940",
            "4c5c21df37d2d438"
        ],
        "x": 805,
        "y": 1680,
        "wires": []
    },
    {
        "id": "1ea0100d938a5f6a",
        "type": "switch",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "60 CR",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_62_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_ID_1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_ID_2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 990,
        "y": 1680,
        "wires": [
            [
                "d8afdc66f8bb0ec3"
            ],
            [
                "982d477789230455"
            ],
            [
                "bc5d603e5505ab82"
            ],
            [
                "3024cfd8393b56d4"
            ]
        ]
    },
    {
        "id": "d8afdc66f8bb0ec3",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "order": 2,
        "group": "c6625dae8176f85c",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_62_Profibus",
        "x": 1180,
        "y": 1620,
        "wires": []
    },
    {
        "id": "982d477789230455",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "order": 1,
        "group": "c6625dae8176f85c",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_65_Initialization",
        "x": 1190,
        "y": 1660,
        "wires": []
    },
    {
        "id": "ebfc7f96ec3a7973",
        "type": "ui_dropdown",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "c6625dae8176f85c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Red-Black-Silver Output",
                "value": "C_65_RBS_Output",
                "type": "str"
            },
            {
                "label": "Red-Silver-Black Output",
                "value": "C_65_RSB_Output",
                "type": "str"
            },
            {
                "label": "Black-Red-Silver Output",
                "value": "C_65_BRS_Output",
                "type": "str"
            },
            {
                "label": "Black-Silver-Red Output",
                "value": "C_65_BSR_Output",
                "type": "str"
            },
            {
                "label": "Silver-Red-Black Output",
                "value": "C_65_SRB_Output",
                "type": "str"
            },
            {
                "label": "Silver-Black_Red Output",
                "value": "C_65_SBR_Output",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 2000,
        "wires": [
            [
                "f8d182b018e9b472",
                "cebff1c52f58fe16",
                "d77a779f60e9cbfb",
                "8eb7a8537fe78a04",
                "e487a967917dab05",
                "032882264e2b96eb"
            ]
        ]
    },
    {
        "id": "f8d182b018e9b472",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_RBS_Output",
        "func": "if (msg.payload === \"C_65_RBS_Output\") \nreturn { payload: true, topic: \"C_65_RBS_Output\"};\nelse return { payload: false, topic: \"C_65_RBS_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1900,
        "wires": [
            [
                "713d2fe2871d477c"
            ]
        ]
    },
    {
        "id": "cebff1c52f58fe16",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_RSB_Output",
        "func": "if (msg.payload === \"C_65_RSB_Output\") \nreturn { payload: true, topic: \"C_65_RSB_Output\"};\nelse return { payload: false, topic: \"C_65_RSB_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1940,
        "wires": [
            [
                "ce0f30cf9fb3cee5"
            ]
        ]
    },
    {
        "id": "2ecaa60d879e6bd6",
        "type": "inject",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_65_RBS_Output",
        "payloadType": "str",
        "x": 190,
        "y": 2040,
        "wires": [
            [
                "ebfc7f96ec3a7973"
            ]
        ]
    },
    {
        "id": "20f761ca8985e07b",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1540,
        "wires": [
            [
                "e18e225a8808b86d"
            ]
        ]
    },
    {
        "id": "c1b44d538ef41094",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1540,
        "wires": [
            [
                "20f761ca8985e07b"
            ]
        ]
    },
    {
        "id": "e18e225a8808b86d",
        "type": "OpcUa-Client",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub CR",
        "x": 1130,
        "y": 1540,
        "wires": [
            [
                "442088b38509ad17",
                "14302e75381e5afb"
            ],
            [
                "2c2afbb0b97bf4a0"
            ]
        ]
    },
    {
        "id": "d2dc837c73d02afd",
        "type": "file in",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1540,
        "wires": [
            [
                "c1b44d538ef41094"
            ]
        ]
    },
    {
        "id": "442088b38509ad17",
        "type": "debug",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "60 CR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1580,
        "wires": []
    },
    {
        "id": "2c2afbb0b97bf4a0",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_65_Initialization\" : false,\n            \"C_65_ID_1\" : false,\n            \"C_65_ID_2\" : false,\n            \"C_62_Profibus\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1540,
        "wires": [
            [
                "4e7613c4f8e6b148"
            ]
        ]
    },
    {
        "id": "5fb967338d5ceb34",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1540,
        "wires": [
            [
                "d2dc837c73d02afd"
            ]
        ]
    },
    {
        "id": "4e7613c4f8e6b148",
        "type": "trigger",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1540,
        "wires": [
            [
                "47dafdf6b6393f2e"
            ]
        ]
    },
    {
        "id": "47dafdf6b6393f2e",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1540,
        "wires": [
            [
                "5fb967338d5ceb34"
            ]
        ]
    },
    {
        "id": "8bba323f029e49e0",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "item": "C_65_ID_1",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_ID_1",
        "x": 650,
        "y": 1700,
        "wires": [
            [
                "8f28ce2a07e94b48"
            ]
        ]
    },
    {
        "id": "bc5d603e5505ab82",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "order": 3,
        "group": "c6625dae8176f85c",
        "width": 0,
        "height": 0,
        "label": "Identified  - Bit 1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_65_ID_1",
        "x": 1170,
        "y": 1700,
        "wires": []
    },
    {
        "id": "d15bb0679c64b273",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "item": "C_65_ID_2",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_ID_2",
        "x": 650,
        "y": 1740,
        "wires": [
            [
                "8f28ce2a07e94b48"
            ]
        ]
    },
    {
        "id": "3024cfd8393b56d4",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "order": 4,
        "group": "c6625dae8176f85c",
        "width": 0,
        "height": 0,
        "label": "Identified  - Bit 2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_65_ID_2",
        "x": 1170,
        "y": 1740,
        "wires": []
    },
    {
        "id": "0debe8ac4a8d76d7",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_65_RBS_Output\" : false,\n            \"C_65_RSB_Output\" : false,\n            \"C_65_BRS_Output\" : false,\n            \"C_65_BSR_Output\" : false,\n            \"C_65_SRB_Output\" : false,\n            \"C_65_SBR_Output\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1820,
        "wires": [
            [
                "f2da02f9e7443d70"
            ]
        ]
    },
    {
        "id": "f2da02f9e7443d70",
        "type": "trigger",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1820,
        "wires": [
            [
                "0e7284551ee71f04"
            ]
        ]
    },
    {
        "id": "0e7284551ee71f04",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1820,
        "wires": [
            [
                "63a76b2674eed451"
            ]
        ]
    },
    {
        "id": "63a76b2674eed451",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1820,
        "wires": [
            [
                "b7ab7f4a8f60e6dd"
            ]
        ]
    },
    {
        "id": "b7ab7f4a8f60e6dd",
        "type": "file in",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1820,
        "wires": [
            [
                "20f5006d204896fd"
            ]
        ]
    },
    {
        "id": "20f5006d204896fd",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1820,
        "wires": [
            [
                "032209a9f7a88d50"
            ]
        ]
    },
    {
        "id": "032209a9f7a88d50",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1820,
        "wires": [
            [
                "e91ae59bdabac3f5"
            ]
        ]
    },
    {
        "id": "e91ae59bdabac3f5",
        "type": "OpcUa-Client",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub CW",
        "x": 1140,
        "y": 1820,
        "wires": [
            [
                "e5707526f0c699e2",
                "ed970e1e27fd049c"
            ],
            [
                "0debe8ac4a8d76d7"
            ]
        ]
    },
    {
        "id": "e5707526f0c699e2",
        "type": "debug",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "60 CW",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1860,
        "wires": []
    },
    {
        "id": "8bed47465cb1114c",
        "type": "switch",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "60 CW",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_65_RBS_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_RSB_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_BRS_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_BSR_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_SRB_Output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_65_SBR_Output",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 990,
        "y": 2000,
        "wires": [
            [
                "54da83afb713c52c"
            ],
            [
                "264d974e626fdabd"
            ],
            [
                "97eb981b2443f6be"
            ],
            [
                "11151c293901f484"
            ],
            [
                "d1aaac9b875389a1"
            ],
            [
                "ca5b24a7ef2d36f9"
            ]
        ]
    },
    {
        "id": "d1f784a38db53d5d",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "60 Control Write",
        "mode": "link",
        "links": [
            "1f151589e0bb6940",
            "4c5c21df37d2d438"
        ],
        "x": 805,
        "y": 2000,
        "wires": []
    },
    {
        "id": "d77a779f60e9cbfb",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_BRS_Output",
        "func": "if (msg.payload === \"C_65_BRS_Output\") \nreturn { payload: true, topic: \"C_65_BRS_Output\"};\nelse return { payload: false, topic: \"C_65_BRS_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1980,
        "wires": [
            [
                "4b8541171faf059c"
            ]
        ]
    },
    {
        "id": "4b8541171faf059c",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "item": "C_65_BRS_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_BRS_Output",
        "x": 630,
        "y": 1980,
        "wires": [
            [
                "d1f784a38db53d5d"
            ]
        ]
    },
    {
        "id": "610adb1d73eebf29",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "item": "C_65_BSR_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_BSR_Output",
        "x": 630,
        "y": 2020,
        "wires": [
            [
                "d1f784a38db53d5d"
            ]
        ]
    },
    {
        "id": "8eb7a8537fe78a04",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_BSR_Output",
        "func": "if (msg.payload === \"C_65_BSR_Output\") \nreturn { payload: true, topic: \"C_65_BSR_Output\"};\nelse return { payload: false, topic: \"C_65_BSR_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2020,
        "wires": [
            [
                "610adb1d73eebf29"
            ]
        ]
    },
    {
        "id": "e487a967917dab05",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_SRB_Output",
        "func": "if (msg.payload === \"C_65_SRB_Output\") \nreturn { payload: true, topic: \"C_65_SRB_Output\"};\nelse return { payload: false, topic: \"C_65_SRB_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2060,
        "wires": [
            [
                "8e5afcb7373ccabf"
            ]
        ]
    },
    {
        "id": "8e5afcb7373ccabf",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "item": "C_65_SRB_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_SRB_Output",
        "x": 630,
        "y": 2060,
        "wires": [
            [
                "d1f784a38db53d5d"
            ]
        ]
    },
    {
        "id": "fbaa4ad033c57d8a",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "item": "C_65_SBR_Output",
        "datatype": "Boolean",
        "value": "",
        "name": "C_65_SBR_Output",
        "x": 630,
        "y": 2100,
        "wires": [
            [
                "d1f784a38db53d5d"
            ]
        ]
    },
    {
        "id": "032882264e2b96eb",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_SBR_Output",
        "func": "if (msg.payload === \"C_65_SBR_Output\") \nreturn { payload: true, topic: \"C_65_SBR_Output\"};\nelse return { payload: false, topic: \"C_65_SBR_Output\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2100,
        "wires": [
            [
                "fbaa4ad033c57d8a"
            ]
        ]
    },
    {
        "id": "14302e75381e5afb",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Sub Out 60 CR",
        "mode": "link",
        "links": [
            "e89ea4e164b1a3e2"
        ],
        "x": 1295,
        "y": 1540,
        "wires": []
    },
    {
        "id": "e89ea4e164b1a3e2",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Sub In 60 CR",
        "links": [
            "14302e75381e5afb"
        ],
        "x": 895,
        "y": 1680,
        "wires": [
            [
                "1ea0100d938a5f6a"
            ]
        ]
    },
    {
        "id": "0b01aeba867ea6cf",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_62_Profibus",
        "func": "if (msg.topic === \"C_62_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_62_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1620,
        "wires": [
            [
                "5b666501410b5638"
            ]
        ]
    },
    {
        "id": "50c7430b8c5f3161",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_Initialization",
        "func": "if (msg.topic === \"C_65_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1660,
        "wires": [
            [
                "207691fb64031175"
            ]
        ]
    },
    {
        "id": "dd39ac8d1e1c425a",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_ID_1",
        "func": "if (msg.topic === \"C_65_ID_1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_ID_1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1700,
        "wires": [
            [
                "8bba323f029e49e0"
            ]
        ]
    },
    {
        "id": "9d32cfe8347b1ad4",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_ID_2",
        "func": "if (msg.topic === \"C_65_ID_2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_65_ID_2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1740,
        "wires": [
            [
                "d15bb0679c64b273"
            ]
        ]
    },
    {
        "id": "3d342d722aa88472",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "S7 CR",
        "links": [
            "6582c61b55afdc95"
        ],
        "x": 55,
        "y": 1680,
        "wires": [
            [
                "0b01aeba867ea6cf",
                "50c7430b8c5f3161",
                "dd39ac8d1e1c425a",
                "9d32cfe8347b1ad4"
            ]
        ]
    },
    {
        "id": "ed970e1e27fd049c",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Sub Out 60 CW",
        "mode": "link",
        "links": [
            "85da4a1b5da735f9"
        ],
        "x": 1295,
        "y": 1820,
        "wires": []
    },
    {
        "id": "85da4a1b5da735f9",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Sub In 60 CW",
        "links": [
            "ed970e1e27fd049c"
        ],
        "x": 895,
        "y": 2000,
        "wires": [
            [
                "8bed47465cb1114c"
            ]
        ]
    },
    {
        "id": "9d75d9139bd9d116",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Read CW",
        "links": [
            "09552fee4a585657"
        ],
        "x": 55,
        "y": 1820,
        "wires": [
            [
                "0debe8ac4a8d76d7"
            ]
        ]
    },
    {
        "id": "292a0485f1c8c0a7",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "Read CR",
        "links": [
            "09552fee4a585657"
        ],
        "x": 55,
        "y": 1540,
        "wires": [
            [
                "2c2afbb0b97bf4a0"
            ]
        ]
    },
    {
        "id": "54da83afb713c52c",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_RBS_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1900,
        "wires": [
            [
                "2e70893973c5a099"
            ]
        ]
    },
    {
        "id": "264d974e626fdabd",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_RSB_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1940,
        "wires": [
            [
                "2e70893973c5a099"
            ]
        ]
    },
    {
        "id": "97eb981b2443f6be",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_BRS_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1980,
        "wires": [
            [
                "2e70893973c5a099"
            ]
        ]
    },
    {
        "id": "11151c293901f484",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_BSR_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2020,
        "wires": [
            [
                "2e70893973c5a099"
            ]
        ]
    },
    {
        "id": "d1aaac9b875389a1",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_SRB_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2060,
        "wires": [
            [
                "2e70893973c5a099"
            ]
        ]
    },
    {
        "id": "ca5b24a7ef2d36f9",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "C_65_SBR_Output",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2100,
        "wires": [
            [
                "2e70893973c5a099"
            ]
        ]
    },
    {
        "id": "2e70893973c5a099",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "a91c21fbbe8af0b9",
        "name": "S7 CW",
        "mode": "link",
        "links": [
            "ecf1b6741783886a"
        ],
        "x": 1365,
        "y": 2000,
        "wires": []
    },
    {
        "id": "1ce345f4fd2f87e1",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "item": "O_60_SPart",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SPart",
        "x": 490,
        "y": 3040,
        "wires": [
            [
                "2192e7d8b3358bea"
            ]
        ]
    },
    {
        "id": "6b8f1aaeeda18022",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "item": "O_60_SInd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SInd",
        "x": 490,
        "y": 3080,
        "wires": [
            [
                "2192e7d8b3358bea"
            ]
        ]
    },
    {
        "id": "1855f5aa816fbeb5",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "item": "O_60_SPhoto",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SPhoto",
        "x": 480,
        "y": 3120,
        "wires": [
            [
                "2192e7d8b3358bea"
            ]
        ]
    },
    {
        "id": "029e756e44f4b51e",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "item": "O_60_Part_Pass",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_Part_Pass",
        "x": 470,
        "y": 3160,
        "wires": [
            [
                "2192e7d8b3358bea"
            ]
        ]
    },
    {
        "id": "f2bff5b5b6864979",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "item": "O_60_SL1_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SL1_Bck",
        "x": 480,
        "y": 3200,
        "wires": [
            [
                "2192e7d8b3358bea"
            ]
        ]
    },
    {
        "id": "7b453482ead5d60d",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "item": "O_60_SL1_Fwd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SL1_Fwd",
        "x": 480,
        "y": 3240,
        "wires": [
            [
                "2192e7d8b3358bea"
            ]
        ]
    },
    {
        "id": "891fed66fc7bbb57",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "item": "O_60_SL2_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SL2_Bck",
        "x": 480,
        "y": 3280,
        "wires": [
            [
                "2192e7d8b3358bea"
            ]
        ]
    },
    {
        "id": "2192e7d8b3358bea",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "60 Physical Sensor",
        "mode": "link",
        "links": [
            "1f151589e0bb6940",
            "4c5c21df37d2d438"
        ],
        "x": 645,
        "y": 3180,
        "wires": []
    },
    {
        "id": "1a5647dbf7d07c7c",
        "type": "switch",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "60 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_60_SPart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SInd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SPhoto",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_Part_Pass",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SL1_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SL1_Fwd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SL2_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_60_SL2_Fwd",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 3180,
        "wires": [
            [
                "36158ae875ecf410"
            ],
            [
                "44f11d98e2705ab3"
            ],
            [
                "a0eb089517bbef07"
            ],
            [
                "79ac825055afebe0"
            ],
            [
                "22e4b6edb477c214"
            ],
            [
                "ef9f1629315aec20"
            ],
            [
                "03245ddbad0e8113"
            ],
            [
                "aedcb595b18634c9"
            ]
        ]
    },
    {
        "id": "36158ae875ecf410",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "order": 0,
        "group": "36c317d51f012b4c",
        "width": 0,
        "height": 0,
        "label": "Part sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SPart",
        "x": 1050,
        "y": 3040,
        "wires": []
    },
    {
        "id": "44f11d98e2705ab3",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "order": 0,
        "group": "36c317d51f012b4c",
        "width": 0,
        "height": 0,
        "label": "Inductive sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SInd",
        "x": 1050,
        "y": 3080,
        "wires": []
    },
    {
        "id": "a0eb089517bbef07",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "order": 0,
        "group": "36c317d51f012b4c",
        "width": 0,
        "height": 0,
        "label": "Photoelectric sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SPhoto",
        "x": 1060,
        "y": 3120,
        "wires": []
    },
    {
        "id": "79ac825055afebe0",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "order": 0,
        "group": "36c317d51f012b4c",
        "width": 0,
        "height": 0,
        "label": "Part has passed the identify",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_Part_Pass",
        "x": 1070,
        "y": 3160,
        "wires": []
    },
    {
        "id": "22e4b6edb477c214",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "order": 0,
        "group": "36c317d51f012b4c",
        "width": 0,
        "height": 0,
        "label": "Lever1 back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SL1_Bck",
        "x": 1060,
        "y": 3200,
        "wires": []
    },
    {
        "id": "ef9f1629315aec20",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "order": 0,
        "group": "36c317d51f012b4c",
        "width": 0,
        "height": 0,
        "label": "Lever1 forward position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SL1_Fwd",
        "x": 1060,
        "y": 3240,
        "wires": []
    },
    {
        "id": "03245ddbad0e8113",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "order": 0,
        "group": "36c317d51f012b4c",
        "width": 0,
        "height": 0,
        "label": "Lever2 back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SL2_Bck",
        "x": 1060,
        "y": 3280,
        "wires": []
    },
    {
        "id": "5d39e56d9790e446",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_60_SPart\" : false,\n            \"O_60_SInd\" : false,\n            \"O_60_SPhoto\" : false,\n            \"O_60_Part_Pass\" : false,\n            \"O_60_SL1_Bck\" : false,\n            \"O_60_SL1_Fwd\" : false,\n            \"O_60_SL2_Bck\" : false,\n            \"O_60_SL2_Fwd\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2960,
        "wires": [
            [
                "2c9c39f25b591f22"
            ]
        ]
    },
    {
        "id": "fbf2534d18a67a91",
        "type": "OpcUa-Client",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PS",
        "x": 1130,
        "y": 2960,
        "wires": [
            [
                "1b3a8fce629098b8",
                "48cef9a1ad07a309"
            ],
            [
                "5d39e56d9790e446"
            ]
        ]
    },
    {
        "id": "2c9c39f25b591f22",
        "type": "trigger",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2960,
        "wires": [
            [
                "3d586aee279cbd01"
            ]
        ]
    },
    {
        "id": "65e997551c4b06e7",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2960,
        "wires": [
            [
                "fbf2534d18a67a91"
            ]
        ]
    },
    {
        "id": "1b3a8fce629098b8",
        "type": "debug",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "60 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3000,
        "wires": []
    },
    {
        "id": "3d586aee279cbd01",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2960,
        "wires": [
            [
                "9f38a1031a365a70"
            ]
        ]
    },
    {
        "id": "2c4fd167c46eed08",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2960,
        "wires": [
            [
                "65e997551c4b06e7"
            ]
        ]
    },
    {
        "id": "9f38a1031a365a70",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2960,
        "wires": [
            [
                "15729c54b894a01e"
            ]
        ]
    },
    {
        "id": "15729c54b894a01e",
        "type": "file in",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2960,
        "wires": [
            [
                "2c4fd167c46eed08"
            ]
        ]
    },
    {
        "id": "aedcb595b18634c9",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "order": 0,
        "group": "36c317d51f012b4c",
        "width": 0,
        "height": 0,
        "label": "Lever2 forward position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_60_SL2_Fwd",
        "x": 1060,
        "y": 3320,
        "wires": []
    },
    {
        "id": "4c5aa03b4a095fc1",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "item": "O_60_SL2_Fwd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_60_SL2_Fwd",
        "x": 480,
        "y": 3320,
        "wires": [
            [
                "2192e7d8b3358bea"
            ]
        ]
    },
    {
        "id": "f631ae9fed2ec09d",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "O_60_SPart",
        "func": "if (msg.topic === \"O_60_SPart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SPart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3040,
        "wires": [
            [
                "1ce345f4fd2f87e1"
            ]
        ]
    },
    {
        "id": "2e93e904d6ba725d",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "Sub In 60 PS",
        "links": [
            "48cef9a1ad07a309"
        ],
        "x": 775,
        "y": 3180,
        "wires": [
            [
                "1a5647dbf7d07c7c"
            ]
        ]
    },
    {
        "id": "48cef9a1ad07a309",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "Sub Out 60 PS",
        "mode": "link",
        "links": [
            "2e93e904d6ba725d"
        ],
        "x": 1295,
        "y": 2960,
        "wires": []
    },
    {
        "id": "c0f1618f9ad79d53",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "S7 PS",
        "links": [
            "6582c61b55afdc95"
        ],
        "x": 55,
        "y": 3180,
        "wires": [
            [
                "f631ae9fed2ec09d",
                "196142ceb23a3f8d",
                "01205dbe4f720818",
                "e48c44a5bd42684e",
                "370216b407ab3fb7",
                "60d5216c6806e7e6",
                "87f7fc33b67e282c",
                "4f1dc2c851d71f4d"
            ]
        ]
    },
    {
        "id": "370216b407ab3fb7",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "O_60_SL1_Bck",
        "func": "if (msg.topic === \"O_60_SL1_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SL1_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3200,
        "wires": [
            [
                "f2bff5b5b6864979"
            ]
        ]
    },
    {
        "id": "196142ceb23a3f8d",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "O_60_SInd",
        "func": "if (msg.topic === \"O_60_SInd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SInd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3080,
        "wires": [
            [
                "6b8f1aaeeda18022"
            ]
        ]
    },
    {
        "id": "01205dbe4f720818",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "O_60_SPhoto",
        "func": "if (msg.topic === \"O_60_SPhoto\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SPhoto\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3120,
        "wires": [
            [
                "1855f5aa816fbeb5"
            ]
        ]
    },
    {
        "id": "e48c44a5bd42684e",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "O_60_Part_Pass",
        "func": "if (msg.topic === \"O_60_Part_Pass\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_Part_Pass\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3160,
        "wires": [
            [
                "029e756e44f4b51e"
            ]
        ]
    },
    {
        "id": "60d5216c6806e7e6",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "O_60_SL1_Fwd",
        "func": "if (msg.topic === \"O_60_SL1_Fwd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SL1_Fwd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3240,
        "wires": [
            [
                "7b453482ead5d60d"
            ]
        ]
    },
    {
        "id": "87f7fc33b67e282c",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "O_60_SL2_Bck",
        "func": "if (msg.topic === \"O_60_SL2_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SL2_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3280,
        "wires": [
            [
                "891fed66fc7bbb57"
            ]
        ]
    },
    {
        "id": "4f1dc2c851d71f4d",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "O_60_SL2_Fwd",
        "func": "if (msg.topic === \"O_60_SL2_Fwd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_60_SL2_Fwd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3320,
        "wires": [
            [
                "4c5aa03b4a095fc1"
            ]
        ]
    },
    {
        "id": "1c3badd6d5ec320f",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "01ac86076f120bf0",
        "name": "Read PS",
        "links": [
            "09552fee4a585657"
        ],
        "x": 55,
        "y": 2960,
        "wires": [
            [
                "5d39e56d9790e446"
            ]
        ]
    },
    {
        "id": "77eb70928e46581c",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "item": "O_61_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Start",
        "x": 490,
        "y": 3500,
        "wires": [
            [
                "2a7d28368bb38c2b"
            ]
        ]
    },
    {
        "id": "5af23ccb80e1f2f5",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "item": "O_61_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Stop",
        "x": 490,
        "y": 3540,
        "wires": [
            [
                "2a7d28368bb38c2b"
            ]
        ]
    },
    {
        "id": "2f24794ef79d0e9d",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "item": "O_61_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Key_Pos",
        "x": 480,
        "y": 3580,
        "wires": [
            [
                "2a7d28368bb38c2b"
            ]
        ]
    },
    {
        "id": "bf7ad20f9eb736bf",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "item": "O_61_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Reset",
        "x": 490,
        "y": 3620,
        "wires": [
            [
                "2a7d28368bb38c2b"
            ]
        ]
    },
    {
        "id": "be652842948f0434",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "item": "O_61_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Panel_I4",
        "x": 480,
        "y": 3660,
        "wires": [
            [
                "2a7d28368bb38c2b"
            ]
        ]
    },
    {
        "id": "4b8ed5a503263199",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "item": "O_61_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Panel_I5",
        "x": 480,
        "y": 3700,
        "wires": [
            [
                "2a7d28368bb38c2b"
            ]
        ]
    },
    {
        "id": "007d5844edf6302b",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "item": "O_61_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Panel_I6",
        "x": 480,
        "y": 3740,
        "wires": [
            [
                "2a7d28368bb38c2b"
            ]
        ]
    },
    {
        "id": "2a7d28368bb38c2b",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "60 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "1f151589e0bb6940",
            "4c5c21df37d2d438"
        ],
        "x": 645,
        "y": 3640,
        "wires": []
    },
    {
        "id": "3a777ce3a082c45c",
        "type": "switch",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "60 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_61_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_61_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 3640,
        "wires": [
            [
                "f2d98101d9596357"
            ],
            [
                "2eebaac79bcb8572"
            ],
            [
                "45737c66836a67ae"
            ],
            [
                "47b56309201abf4e"
            ],
            [
                "4e05b163d11ea11a"
            ],
            [
                "0bd393897342750f"
            ],
            [
                "f3fc0fb6ba6fd131"
            ],
            [
                "01e0ea4d659e3872"
            ]
        ]
    },
    {
        "id": "f2d98101d9596357",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "order": 0,
        "group": "e4a38badd9222c29",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Start",
        "x": 1050,
        "y": 3500,
        "wires": []
    },
    {
        "id": "2eebaac79bcb8572",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "order": 0,
        "group": "e4a38badd9222c29",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Stop",
        "x": 1050,
        "y": 3540,
        "wires": []
    },
    {
        "id": "45737c66836a67ae",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "order": 0,
        "group": "e4a38badd9222c29",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Key_Pos",
        "x": 1060,
        "y": 3580,
        "wires": []
    },
    {
        "id": "47b56309201abf4e",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "order": 0,
        "group": "e4a38badd9222c29",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Reset",
        "x": 1050,
        "y": 3620,
        "wires": []
    },
    {
        "id": "4e05b163d11ea11a",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "order": 0,
        "group": "e4a38badd9222c29",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Panel_I4",
        "x": 1060,
        "y": 3660,
        "wires": []
    },
    {
        "id": "0bd393897342750f",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "order": 0,
        "group": "e4a38badd9222c29",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Panel_I5",
        "x": 1060,
        "y": 3700,
        "wires": []
    },
    {
        "id": "f3fc0fb6ba6fd131",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "order": 0,
        "group": "e4a38badd9222c29",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Panel_I6",
        "x": 1060,
        "y": 3740,
        "wires": []
    },
    {
        "id": "ef3f7a1acbb92e1e",
        "type": "OpcUa-Item",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "item": "O_61_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_61_Panel_I7",
        "x": 480,
        "y": 3780,
        "wires": [
            [
                "2a7d28368bb38c2b"
            ]
        ]
    },
    {
        "id": "01e0ea4d659e3872",
        "type": "ui_led",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "order": 0,
        "group": "e4a38badd9222c29",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_61_Panel_I7",
        "x": 1060,
        "y": 3780,
        "wires": []
    },
    {
        "id": "ccd09a96a43f681a",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3420,
        "wires": [
            [
                "99116135cdb1b3ce"
            ]
        ]
    },
    {
        "id": "a2aac884f91d758f",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3420,
        "wires": [
            [
                "ccd09a96a43f681a"
            ]
        ]
    },
    {
        "id": "99116135cdb1b3ce",
        "type": "OpcUa-Client",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AA",
        "x": 1130,
        "y": 3420,
        "wires": [
            [
                "cfbf4669102697ea",
                "bf5b3c40d46c1cca"
            ],
            [
                "1b1ad18bf3cac6f5"
            ]
        ]
    },
    {
        "id": "59143dafd6bee6fc",
        "type": "file in",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Sorting/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3420,
        "wires": [
            [
                "a2aac884f91d758f"
            ]
        ]
    },
    {
        "id": "cfbf4669102697ea",
        "type": "debug",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "60 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3460,
        "wires": []
    },
    {
        "id": "1b1ad18bf3cac6f5",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_61_Start\" : false,\n            \"O_61_Stop\" : false,\n            \"O_61_Key_Pos\" : false,\n            \"O_61_Reset\" : false,\n            \"O_61_Panel_I4\" : false,\n            \"O_61_Panel_I5\" : false,\n            \"O_61_Panel_I6\" : false,\n            \"O_61_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3420,
        "wires": [
            [
                "9177577919d3a38e"
            ]
        ]
    },
    {
        "id": "01044ba0eb1b0043",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3420,
        "wires": [
            [
                "59143dafd6bee6fc"
            ]
        ]
    },
    {
        "id": "9177577919d3a38e",
        "type": "trigger",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3420,
        "wires": [
            [
                "3355e1d1cd07d6cb"
            ]
        ]
    },
    {
        "id": "3355e1d1cd07d6cb",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3420,
        "wires": [
            [
                "01044ba0eb1b0043"
            ]
        ]
    },
    {
        "id": "bf5b3c40d46c1cca",
        "type": "link out",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "Sub Out 60 AS",
        "mode": "link",
        "links": [
            "cbfe9693fba03d6a"
        ],
        "x": 1295,
        "y": 3420,
        "wires": []
    },
    {
        "id": "cbfe9693fba03d6a",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "Sub In 60 AS",
        "links": [
            "bf5b3c40d46c1cca"
        ],
        "x": 775,
        "y": 3640,
        "wires": [
            [
                "3a777ce3a082c45c"
            ]
        ]
    },
    {
        "id": "b1ba4b76125f6b39",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "O_61_Start",
        "func": "if (msg.topic === \"O_61_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3500,
        "wires": [
            [
                "77eb70928e46581c"
            ]
        ]
    },
    {
        "id": "f977bd06e48a7c42",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "S7 AS",
        "links": [
            "6582c61b55afdc95"
        ],
        "x": 55,
        "y": 3640,
        "wires": [
            [
                "b1ba4b76125f6b39",
                "2d88723866438819",
                "07162728ad50ee8c",
                "fba55364cf948785",
                "25feff8f30bd908b",
                "90c078daa71fe5e2",
                "e1a0028d2d63ef9a",
                "6220d6cf959195a8"
            ]
        ]
    },
    {
        "id": "25feff8f30bd908b",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "O_61_Panel_I4",
        "func": "if (msg.topic === \"O_61_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3660,
        "wires": [
            [
                "be652842948f0434"
            ]
        ]
    },
    {
        "id": "2d88723866438819",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "O_61_Stop",
        "func": "if (msg.topic === \"O_61_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3540,
        "wires": [
            [
                "5af23ccb80e1f2f5"
            ]
        ]
    },
    {
        "id": "07162728ad50ee8c",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "O_61_Key_Pos",
        "func": "if (msg.topic === \"O_61_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3580,
        "wires": [
            [
                "2f24794ef79d0e9d"
            ]
        ]
    },
    {
        "id": "fba55364cf948785",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "O_61_Reset",
        "func": "if (msg.topic === \"O_61_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3620,
        "wires": [
            [
                "bf7ad20f9eb736bf"
            ]
        ]
    },
    {
        "id": "90c078daa71fe5e2",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "O_61_Panel_I5",
        "func": "if (msg.topic === \"O_61_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3700,
        "wires": [
            [
                "4b8ed5a503263199"
            ]
        ]
    },
    {
        "id": "e1a0028d2d63ef9a",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "O_61_Panel_I6",
        "func": "if (msg.topic === \"O_61_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3740,
        "wires": [
            [
                "007d5844edf6302b"
            ]
        ]
    },
    {
        "id": "6220d6cf959195a8",
        "type": "function",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "O_61_Panel_I7",
        "func": "if (msg.topic === \"O_61_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_61_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3780,
        "wires": [
            [
                "ef3f7a1acbb92e1e"
            ]
        ]
    },
    {
        "id": "425a0d5f3fc5cd60",
        "type": "link in",
        "z": "ebda326947bc6818",
        "g": "8d299373ac87948f",
        "name": "Read AS",
        "links": [
            "09552fee4a585657"
        ],
        "x": 55,
        "y": 3420,
        "wires": [
            [
                "1b1ad18bf3cac6f5"
            ]
        ]
    },
    {
        "id": "d7b15052c0eed941",
        "type": "comment",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "cc2b29e2d7edddd6",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "129603202de21f07"
            ]
        ]
    },
    {
        "id": "129603202de21f07",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Testing_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 340,
        "wires": [
            [
                "6554052639670932"
            ]
        ]
    },
    {
        "id": "00d5b7d7ad51943c",
        "type": "file",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "696bb30ffa8a2d62",
        "type": "comment",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "6554052639670932",
        "type": "OpcUa-Client",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 850,
        "y": 340,
        "wires": [
            [
                "d2e5e661ba5ce806"
            ],
            [
                "a87ca68483dc1486",
                "be06b5acf6f2fdb3"
            ]
        ]
    },
    {
        "id": "d2e5e661ba5ce806",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 320,
        "wires": [
            [
                "d905e5171b7b7300",
                "2c98a48d7758cb65"
            ]
        ]
    },
    {
        "id": "d905e5171b7b7300",
        "type": "file",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1250,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "2c98a48d7758cb65",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 360,
        "wires": []
    },
    {
        "id": "dc00aff1ca9fd01e",
        "type": "OpcUa-Client",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "endpoint": "a2328ac43b0b7d73",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "2c383aec8d101b24"
            ],
            []
        ]
    },
    {
        "id": "895e78a122d03323",
        "type": "comment",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "2c383aec8d101b24",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "603a9e3b7502cbd5",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Write_Test",
        "links": [
            "ad52ad70fddf2814",
            "1e9bc77f723b4015",
            "931caa3b141a48a0",
            "c7893e260b428481",
            "72ad7de1cbe9e0d1",
            "d6db28abc1de2f6f",
            "6bb7d65b2b71d25f",
            "e611592f2228f109",
            "ad123295fb2dbf72",
            "1c01a3bbbebeceb3",
            "87205b9641bcf47d",
            "ebfe7a7a3d1ef95d",
            "b7f0901d549fc786",
            "3a8a323f4f49d974",
            "af45d44de35afa53",
            "a9c55683bc2e5c7d",
            "780eb9a38af6aa30"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "86aef96a6c0005e2"
            ]
        ]
    },
    {
        "id": "86aef96a6c0005e2",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "4614c911f16a1486"
            ]
        ]
    },
    {
        "id": "4614c911f16a1486",
        "type": "file in",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "d236f2d0cabf89df"
            ]
        ]
    },
    {
        "id": "d236f2d0cabf89df",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "fc2586fa98deb30f"
            ]
        ]
    },
    {
        "id": "fc2586fa98deb30f",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "dc00aff1ca9fd01e"
            ]
        ]
    },
    {
        "id": "25f31b08c3ed75b6",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"I_70_Elev_Down\" : false,\n    \"I_70_Elev_Up\" : false,\n    \"I_70_Eject_Part\" : false,\n    \"I_70_Air_On\" : false,\n    \"I_71_Led_Start\" : false,\n    \"I_71_Led_Reset\" : false,\n    \"I_71_Led_Extra1\" : false,\n    \"I_71_Led_Extra2\" : false,\n    \"I_71_Panel_O4\" : false,\n    \"I_71_Panel_O5\" : false,\n    \"I_71_Panel_O6\" : false,\n    \"I_71_Panel_O7\" : false,\n    \"A_74_Request\" : false,\n    \"A_74_No_Cart\" : false,\n    \"A_74_Cart_Full\" : false,\n    \"A_74_Cart_Stat\" : false,\n    \"A_74_Cart_Next\" : false,\n    \"A_74_Optic\" : false,\n    \"A_74_Count\" : false,\n    \"A_74_Pist_Bck\" : false,\n    \"A_74_Release_FB\" : false,\n    \"C_75_Initialization\" : false,\n    \"C_75_ID_Delivery1\" : false,\n    \"C_75_ID_Delivery2\" : false,\n    \"C_75_Part_Del\" : false,\n    \"C_75_RQ_Part_Del\" : false,\n    \"C_75_RQ_Wrong\" : false,\n    \"C_75_Identified80\" : false,\n    \"C_75_Requested80\" : false,\n    \"C_72_Profibus\" : true,\n    \"C_75_RQ_Delivery1\" : false,\n    \"C_75_RQ_Delivery2\" : false,\n    \"C_75_Identified\" : true,\n    \"C_75_Requested\" : false,\n    \"F_72_Elev_Down\" : false,\n    \"F_72_Elev_Up\" : false,\n    \"F_72_Eject_Part\" : false,\n    \"F_72_Air_On\" : false,\n    \"F_73_Led_Start\" : false,\n    \"F_73_Led_Reset\" : false,\n    \"F_73_Led_Extra1\" : false,\n    \"F_73_Led_Extra2\" : false,\n    \"F_73_Panel_O4\" : false,\n    \"F_73_Panel_O5\" : false,\n    \"F_73_Panel_O6\" : false,\n    \"F_73_Panel_O7\" : false,\t\n    \"O_70_SInductive\" : false,\n    \"O_70_SPart\" : false,\n    \"O_70_SStation\" : false,\n    \"O_70_SPart_Height\" : false,\n    \"O_70_Elev_High\" : false,\n    \"O_70_Elev_Low\" : true,\n    \"O_70_Pist_Back\" : true,\n    \"O_71_Start\" : false,\n    \"O_71_Stop\" : true,\n    \"O_71_Key_Pos\" : false,\n    \"O_71_Reset\" : false,\n    \"O_71_Panel_I4\" : false,\n    \"O_71_Panel_I5\" : true,\n    \"O_71_Panel_I6\" : false,\n    \"O_71_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "afeb713d84db0645"
            ]
        ]
    },
    {
        "id": "afeb713d84db0645",
        "type": "trigger",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "cc2b29e2d7edddd6"
            ]
        ]
    },
    {
        "id": "b7077665c0d3d12a",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "ebeac108db56595f"
            ]
        ]
    },
    {
        "id": "ebeac108db56595f",
        "type": "trigger",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "00d5b7d7ad51943c"
            ]
        ]
    },
    {
        "id": "a87ca68483dc1486",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "01d0953408662110",
            "5d680736365220ed"
        ],
        "x": 975,
        "y": 360,
        "wires": []
    },
    {
        "id": "01d0953408662110",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "CSV Link",
        "links": [
            "a87ca68483dc1486"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "b7077665c0d3d12a"
            ]
        ]
    },
    {
        "id": "5d680736365220ed",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "CSV Link",
        "links": [
            "a87ca68483dc1486"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "25f31b08c3ed75b6"
            ]
        ]
    },
    {
        "id": "f055c540c0467f2b",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "6bb9db7ea39af927",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "515e6b1f40a7901c",
        "type": "OpcUa-Server",
        "z": "7b73d224df5f2e4d",
        "g": "6bb9db7ea39af927",
        "port": "53880",
        "name": "Server: Testing",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Testing/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Testing",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "f055c540c0467f2b"
            ]
        ]
    },
    {
        "id": "2149a1fc60ba41a5",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "000dc32cc31a9586",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "dc9a228a04ca7786",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "000dc32cc31a9586",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "b388c45724dcc6fd",
            "4091f1311680bd8e",
            "04589650afc34f6b",
            "05b3248d4d8466d2",
            "d809c691bc9c6767",
            "374e7dec5ee76ea4",
            "c955cfd9fce00560",
            "14e2056794bff6be",
            "dca5e9ad86bc3b79",
            "99590eb66fa488c8",
            "1812286b051a8817",
            "0b551f352fa39834"
        ],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "0567a5955148cf97",
        "type": "mqtt in",
        "z": "7b73d224df5f2e4d",
        "g": "000dc32cc31a9586",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "4de211dc0a9652ab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "422e3d3479c15406"
            ]
        ]
    },
    {
        "id": "422e3d3479c15406",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "000dc32cc31a9586",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "dc9a228a04ca7786",
                "2149a1fc60ba41a5"
            ]
        ]
    },
    {
        "id": "be06b5acf6f2fdb3",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 400,
        "wires": [
            [
                "1f7a70769653bb99"
            ]
        ]
    },
    {
        "id": "1f7a70769653bb99",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "1366b9efc31e9a8e",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "3deb984836c56742",
            "407257ec137ae47a",
            "a29ef4b4fd029a01",
            "95585dd05fa31768",
            "1e84f3e71ae7093c",
            "69b0f24066e065a3",
            "400bd421819c957e",
            "25962d5a494a2414",
            "76665436e80f660b",
            "3f2b8d207b5e3c90",
            "49c8d68569f45e75",
            "0de2e33676722819",
            "4b03752ed38656c0",
            "88237b28f04ef0b4",
            "2356408752457b58",
            "51e49b422b29eeb3",
            "c7bb0bc291bb32bd"
        ],
        "x": 1165,
        "y": 400,
        "wires": []
    },
    {
        "id": "ce71095a691ef2c7",
        "type": "mqtt out",
        "z": "7b73d224df5f2e4d",
        "g": "000dc32cc31a9586",
        "name": "S7Variables",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4de211dc0a9652ab",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "8a187640432f2304",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "000dc32cc31a9586",
        "name": "S7 Actuators",
        "links": [
            "d1e9784e100d436a",
            "151d63e9c5694cf7",
            "09c6bc15d591ffa9",
            "a6b9d2e1f1e9a6e8",
            "7ad1a952cd3a2fbb"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "ce71095a691ef2c7"
            ]
        ]
    },
    {
        "id": "463dd51d4d8fe13a",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "item": "O_70_SInductive",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_SInductive",
        "x": 470,
        "y": 3580,
        "wires": [
            [
                "ad52ad70fddf2814"
            ]
        ]
    },
    {
        "id": "b8684517d0b981b2",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "item": "O_70_SPart",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_SPart",
        "x": 490,
        "y": 3620,
        "wires": [
            [
                "ad52ad70fddf2814"
            ]
        ]
    },
    {
        "id": "6cf2cd7547743f4c",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "item": "O_70_SStation",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_SStation",
        "x": 480,
        "y": 3660,
        "wires": [
            [
                "ad52ad70fddf2814"
            ]
        ]
    },
    {
        "id": "2fba7bc889110ca3",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "item": "O_70_SPart_Height",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_SPart_Height",
        "x": 460,
        "y": 3700,
        "wires": [
            [
                "ad52ad70fddf2814"
            ]
        ]
    },
    {
        "id": "4d802db143c81375",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "item": "O_70_Elev_High",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_Elev_High",
        "x": 470,
        "y": 3740,
        "wires": [
            [
                "ad52ad70fddf2814"
            ]
        ]
    },
    {
        "id": "9721ec80210e46f2",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "item": "O_70_Elev_Low",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_Elev_Low",
        "x": 480,
        "y": 3780,
        "wires": [
            [
                "ad52ad70fddf2814"
            ]
        ]
    },
    {
        "id": "a20959fa0ec0fdc5",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "item": "O_70_Pist_Back",
        "datatype": "Boolean",
        "value": "",
        "name": "O_70_Pist_Back",
        "x": 470,
        "y": 3820,
        "wires": [
            [
                "ad52ad70fddf2814"
            ]
        ]
    },
    {
        "id": "ad52ad70fddf2814",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "70 Physical Sensor",
        "mode": "link",
        "links": [
            "603a9e3b7502cbd5"
        ],
        "x": 645,
        "y": 3700,
        "wires": []
    },
    {
        "id": "e2876ad92e0ef524",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3500,
        "wires": [
            [
                "4deacba0b6f9eff4"
            ]
        ]
    },
    {
        "id": "4deacba0b6f9eff4",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3500,
        "wires": [
            [
                "7da93c12d7852aff"
            ]
        ]
    },
    {
        "id": "7da93c12d7852aff",
        "type": "file in",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3500,
        "wires": [
            [
                "3a89edb13ded7b9e"
            ]
        ]
    },
    {
        "id": "3a89edb13ded7b9e",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3500,
        "wires": [
            [
                "dc3acfd9ba7e9d3d"
            ]
        ]
    },
    {
        "id": "dc3acfd9ba7e9d3d",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3500,
        "wires": [
            [
                "3f576add08440ca6"
            ]
        ]
    },
    {
        "id": "3f576add08440ca6",
        "type": "OpcUa-Client",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PS",
        "x": 1130,
        "y": 3500,
        "wires": [
            [
                "8586b22d9bbe56d5",
                "e882a025f69d5dfc"
            ],
            [
                "117052606aa839a2"
            ]
        ]
    },
    {
        "id": "a7740c512c7c28d4",
        "type": "switch",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "70 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_70_SInductive",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_SPart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_SStation",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_SPart_Height",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_Elev_High",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_Elev_Low",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_70_Pist_Back",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 3700,
        "wires": [
            [
                "188b4040d46cdcdd"
            ],
            [
                "7cc40497f218adeb"
            ],
            [
                "6f106dc767376779"
            ],
            [
                "19b736b6daa04c73"
            ],
            [
                "10e0eb3199643d30"
            ],
            [
                "54142f6fa73475a2"
            ],
            [
                "56d1d745544c2c73"
            ]
        ]
    },
    {
        "id": "188b4040d46cdcdd",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "order": 0,
        "group": "811ae08a82fd3d4b",
        "width": 0,
        "height": 0,
        "label": "Inductive sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_SInductive",
        "x": 1070,
        "y": 3580,
        "wires": []
    },
    {
        "id": "7cc40497f218adeb",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "order": 0,
        "group": "811ae08a82fd3d4b",
        "width": 0,
        "height": 0,
        "label": "Part in elevator",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_SPart",
        "x": 1050,
        "y": 3620,
        "wires": []
    },
    {
        "id": "6f106dc767376779",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "order": 0,
        "group": "811ae08a82fd3d4b",
        "width": 0,
        "height": 0,
        "label": "Station through",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_SStation",
        "x": 1060,
        "y": 3660,
        "wires": []
    },
    {
        "id": "19b736b6daa04c73",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "order": 0,
        "group": "811ae08a82fd3d4b",
        "width": 0,
        "height": 0,
        "label": "Part height sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_SPart_Height",
        "x": 1080,
        "y": 3700,
        "wires": []
    },
    {
        "id": "10e0eb3199643d30",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "order": 0,
        "group": "811ae08a82fd3d4b",
        "width": 0,
        "height": 0,
        "label": "Elevator in high position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_Elev_High",
        "x": 1070,
        "y": 3740,
        "wires": []
    },
    {
        "id": "54142f6fa73475a2",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "order": 0,
        "group": "811ae08a82fd3d4b",
        "width": 0,
        "height": 0,
        "label": "Elevator in low position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_Elev_Low",
        "x": 1060,
        "y": 3780,
        "wires": []
    },
    {
        "id": "56d1d745544c2c73",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "order": 0,
        "group": "811ae08a82fd3d4b",
        "width": 0,
        "height": 0,
        "label": "Eject piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_70_Pist_Back",
        "x": 1070,
        "y": 3820,
        "wires": []
    },
    {
        "id": "8586b22d9bbe56d5",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "70 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3540,
        "wires": []
    },
    {
        "id": "117052606aa839a2",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_70_SInductive\" : false,\n            \"O_70_SPart\" : false,\n            \"O_70_SStation\" : false,\n            \"O_70_SPart_Height\" : false,\n            \"O_70_Elev_High\" : false,\n            \"O_70_Elev_Low\" : false,\n            \"O_70_Pist_Back\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3500,
        "wires": [
            [
                "d3dd5001fa26c8e2"
            ]
        ]
    },
    {
        "id": "d3dd5001fa26c8e2",
        "type": "trigger",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3500,
        "wires": [
            [
                "e2876ad92e0ef524"
            ]
        ]
    },
    {
        "id": "cab0dc5c269bbf75",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "O_70_SInductive",
        "func": "if (msg.topic === \"O_70_SInductive\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_SInductive\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3580,
        "wires": [
            [
                "463dd51d4d8fe13a"
            ]
        ]
    },
    {
        "id": "4091f1311680bd8e",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "S7 PS",
        "links": [
            "dc9a228a04ca7786"
        ],
        "x": 55,
        "y": 3700,
        "wires": [
            [
                "cab0dc5c269bbf75",
                "755580cf89bba0a5",
                "d287ac460c53b997",
                "aeb2ecbb4c27b5b5",
                "5b23c8a4fd91994a",
                "cf83209b1cd004bd",
                "5b50615370780fc2"
            ]
        ]
    },
    {
        "id": "5b23c8a4fd91994a",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "O_70_Elev_High",
        "func": "if (msg.topic === \"O_70_Elev_High\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_Elev_High\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3740,
        "wires": [
            [
                "4d802db143c81375"
            ]
        ]
    },
    {
        "id": "755580cf89bba0a5",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "O_70_SPart",
        "func": "if (msg.topic === \"O_70_SPart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_SPart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3620,
        "wires": [
            [
                "b8684517d0b981b2"
            ]
        ]
    },
    {
        "id": "d287ac460c53b997",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "O_70_SStation",
        "func": "if (msg.topic === \"O_70_SStation\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_SStation\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3660,
        "wires": [
            [
                "6cf2cd7547743f4c"
            ]
        ]
    },
    {
        "id": "aeb2ecbb4c27b5b5",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "O_70_SPart_Height",
        "func": "if (msg.topic === \"O_70_SPart_Height\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_SPart_Height\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 3700,
        "wires": [
            [
                "2fba7bc889110ca3"
            ]
        ]
    },
    {
        "id": "cf83209b1cd004bd",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "O_70_Elev_Low",
        "func": "if (msg.topic === \"O_70_Elev_Low\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_Elev_Low\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3780,
        "wires": [
            [
                "9721ec80210e46f2"
            ]
        ]
    },
    {
        "id": "5b50615370780fc2",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "O_70_Pist_Back",
        "func": "if (msg.topic === \"O_70_Pist_Back\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_70_Pist_Back\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3820,
        "wires": [
            [
                "a20959fa0ec0fdc5"
            ]
        ]
    },
    {
        "id": "9afd76d2da522fb7",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "Sub In 70 PS",
        "links": [
            "e882a025f69d5dfc"
        ],
        "x": 775,
        "y": 3700,
        "wires": [
            [
                "a7740c512c7c28d4"
            ]
        ]
    },
    {
        "id": "e882a025f69d5dfc",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "Sub Out 70 PS",
        "mode": "link",
        "links": [
            "9afd76d2da522fb7"
        ],
        "x": 1295,
        "y": 3500,
        "wires": []
    },
    {
        "id": "76665436e80f660b",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "a5a0e7c50f3df2dd",
        "name": "Read PS",
        "links": [
            "1f7a70769653bb99"
        ],
        "x": 55,
        "y": 3500,
        "wires": [
            [
                "117052606aa839a2"
            ]
        ]
    },
    {
        "id": "ceb7b17352043477",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "item": "O_71_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Start",
        "x": 490,
        "y": 4000,
        "wires": [
            [
                "72ad7de1cbe9e0d1"
            ]
        ]
    },
    {
        "id": "2192b531de315785",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "item": "O_71_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Stop",
        "x": 490,
        "y": 4040,
        "wires": [
            [
                "72ad7de1cbe9e0d1"
            ]
        ]
    },
    {
        "id": "12716155b0183056",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "item": "O_71_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Key_Pos",
        "x": 480,
        "y": 4080,
        "wires": [
            [
                "72ad7de1cbe9e0d1"
            ]
        ]
    },
    {
        "id": "63f781de81e15a7e",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "item": "O_71_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Reset",
        "x": 490,
        "y": 4120,
        "wires": [
            [
                "72ad7de1cbe9e0d1"
            ]
        ]
    },
    {
        "id": "22ac8bf73e2a90e1",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "item": "O_71_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Panel_I4",
        "x": 480,
        "y": 4160,
        "wires": [
            [
                "72ad7de1cbe9e0d1"
            ]
        ]
    },
    {
        "id": "24c1a3b187018142",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "item": "O_71_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Panel_I5",
        "x": 480,
        "y": 4200,
        "wires": [
            [
                "72ad7de1cbe9e0d1"
            ]
        ]
    },
    {
        "id": "6f8dc661b3182d72",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "item": "O_71_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Panel_I6",
        "x": 480,
        "y": 4240,
        "wires": [
            [
                "72ad7de1cbe9e0d1"
            ]
        ]
    },
    {
        "id": "72ad7de1cbe9e0d1",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "70 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "603a9e3b7502cbd5"
        ],
        "x": 645,
        "y": 4140,
        "wires": []
    },
    {
        "id": "e7e8b3450ac9fc54",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3920,
        "wires": [
            [
                "8a763f11580d712e"
            ]
        ]
    },
    {
        "id": "8a763f11580d712e",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3920,
        "wires": [
            [
                "99b7bd986139285d"
            ]
        ]
    },
    {
        "id": "99b7bd986139285d",
        "type": "file in",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3920,
        "wires": [
            [
                "1261b7429dca9dfb"
            ]
        ]
    },
    {
        "id": "1261b7429dca9dfb",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3920,
        "wires": [
            [
                "53710f39e82f4d8b"
            ]
        ]
    },
    {
        "id": "53710f39e82f4d8b",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3920,
        "wires": [
            [
                "2c97d93a38e2d69e"
            ]
        ]
    },
    {
        "id": "2c97d93a38e2d69e",
        "type": "OpcUa-Client",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AS",
        "x": 1130,
        "y": 3920,
        "wires": [
            [
                "a9ae08ce0b8cd324",
                "9c9c8fed18cb94d0"
            ],
            [
                "506f575c28fa62d7"
            ]
        ]
    },
    {
        "id": "621119f40e0d01f5",
        "type": "switch",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "70 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_71_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_71_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 4140,
        "wires": [
            [
                "d87adef339466d60"
            ],
            [
                "01225c8fbb84e74e"
            ],
            [
                "7bc70eb68ef7828e"
            ],
            [
                "331ca881d62f04a1"
            ],
            [
                "aff6c8aaaa93d36c"
            ],
            [
                "a6168a6aa88f2b35"
            ],
            [
                "e1c9248ee6dd3848"
            ],
            [
                "e6547cc88c998d92"
            ]
        ]
    },
    {
        "id": "d87adef339466d60",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "order": 0,
        "group": "2763f7e2b1dcca61",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Start",
        "x": 1050,
        "y": 4000,
        "wires": []
    },
    {
        "id": "01225c8fbb84e74e",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "order": 0,
        "group": "2763f7e2b1dcca61",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Stop",
        "x": 1050,
        "y": 4040,
        "wires": []
    },
    {
        "id": "7bc70eb68ef7828e",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "order": 0,
        "group": "2763f7e2b1dcca61",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Key_Pos",
        "x": 1060,
        "y": 4080,
        "wires": []
    },
    {
        "id": "331ca881d62f04a1",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "order": 0,
        "group": "2763f7e2b1dcca61",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Reset",
        "x": 1050,
        "y": 4120,
        "wires": []
    },
    {
        "id": "aff6c8aaaa93d36c",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "order": 0,
        "group": "2763f7e2b1dcca61",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Panel_I4",
        "x": 1060,
        "y": 4160,
        "wires": []
    },
    {
        "id": "a6168a6aa88f2b35",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "order": 0,
        "group": "2763f7e2b1dcca61",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Panel_I5",
        "x": 1060,
        "y": 4200,
        "wires": []
    },
    {
        "id": "e1c9248ee6dd3848",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "order": 0,
        "group": "2763f7e2b1dcca61",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Panel_I6",
        "x": 1060,
        "y": 4240,
        "wires": []
    },
    {
        "id": "ed169362d4302d6a",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "item": "O_71_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_71_Panel_I7",
        "x": 480,
        "y": 4280,
        "wires": [
            [
                "72ad7de1cbe9e0d1"
            ]
        ]
    },
    {
        "id": "e6547cc88c998d92",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "order": 0,
        "group": "2763f7e2b1dcca61",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_71_Panel_I7",
        "x": 1060,
        "y": 4280,
        "wires": []
    },
    {
        "id": "a9ae08ce0b8cd324",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "70 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3960,
        "wires": []
    },
    {
        "id": "506f575c28fa62d7",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_71_Start\" : false,\n            \"O_71_Stop\" : false,\n            \"O_71_Key_Pos\" : false,\n            \"O_71_Reset\" : false,\n            \"O_71_Panel_I4\" : false,\n            \"O_71_Panel_I5\" : false,\n            \"O_71_Panel_I6\" : false,\n            \"O_71_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3920,
        "wires": [
            [
                "d4778f113e14401c"
            ]
        ]
    },
    {
        "id": "d4778f113e14401c",
        "type": "trigger",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3920,
        "wires": [
            [
                "e7e8b3450ac9fc54"
            ]
        ]
    },
    {
        "id": "148ed2bf2626d8f0",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "Sub In 70 AS",
        "links": [
            "9c9c8fed18cb94d0"
        ],
        "x": 775,
        "y": 4140,
        "wires": [
            [
                "621119f40e0d01f5"
            ]
        ]
    },
    {
        "id": "9c9c8fed18cb94d0",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "Sub Out 70 AS",
        "mode": "link",
        "links": [
            "148ed2bf2626d8f0"
        ],
        "x": 1295,
        "y": 3920,
        "wires": []
    },
    {
        "id": "c24371dd67bc8a26",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "O_71_Start",
        "func": "if (msg.topic === \"O_71_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 4000,
        "wires": [
            [
                "ceb7b17352043477"
            ]
        ]
    },
    {
        "id": "b388c45724dcc6fd",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "S7 AS",
        "links": [
            "dc9a228a04ca7786"
        ],
        "x": 55,
        "y": 4140,
        "wires": [
            [
                "c24371dd67bc8a26",
                "c33931d82b4e85f7",
                "802995e2ef6b0860",
                "dcfae368f87f88de",
                "4260fabbea875842",
                "76d8e43e09aa19ff",
                "01adb10c163f02b0",
                "af3d17f293141d1d"
            ]
        ]
    },
    {
        "id": "4260fabbea875842",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "O_71_Panel_I4",
        "func": "if (msg.topic === \"O_71_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4160,
        "wires": [
            [
                "22ac8bf73e2a90e1"
            ]
        ]
    },
    {
        "id": "c33931d82b4e85f7",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "O_71_Stop",
        "func": "if (msg.topic === \"O_71_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 4040,
        "wires": [
            [
                "2192b531de315785"
            ]
        ]
    },
    {
        "id": "802995e2ef6b0860",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "O_71_Key_Pos",
        "func": "if (msg.topic === \"O_71_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4080,
        "wires": [
            [
                "12716155b0183056"
            ]
        ]
    },
    {
        "id": "dcfae368f87f88de",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "O_71_Reset",
        "func": "if (msg.topic === \"O_71_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 4120,
        "wires": [
            [
                "63f781de81e15a7e"
            ]
        ]
    },
    {
        "id": "76d8e43e09aa19ff",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "O_71_Panel_I5",
        "func": "if (msg.topic === \"O_71_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4200,
        "wires": [
            [
                "24c1a3b187018142"
            ]
        ]
    },
    {
        "id": "01adb10c163f02b0",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "O_71_Panel_I6",
        "func": "if (msg.topic === \"O_71_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4240,
        "wires": [
            [
                "6f8dc661b3182d72"
            ]
        ]
    },
    {
        "id": "af3d17f293141d1d",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "O_71_Panel_I7",
        "func": "if (msg.topic === \"O_71_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_71_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 4280,
        "wires": [
            [
                "ed169362d4302d6a"
            ]
        ]
    },
    {
        "id": "25962d5a494a2414",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "c3940d0d6b482a58",
        "name": "Read AS",
        "links": [
            "1f7a70769653bb99"
        ],
        "x": 55,
        "y": 3920,
        "wires": [
            [
                "506f575c28fa62d7"
            ]
        ]
    },
    {
        "id": "ec009d3d4030c595",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"SA_70_Elev_Down\" : false,\n    \"SA_70_Elev_Up\" : false,\n    \"SA_70_Eject_Part\" : false,\n    \"SA_70_Air_On\" : false,\n    \"SA_71_Led_Start\" : false,\n    \"SA_71_Led_Reset\" : false,\n    \"SA_71_Led_Extra1\" : false,\n    \"SA_71_Led_Extra2\" : false,\n    \"SA_71_Panel_O4\" : false,\n    \"SA_71_Panel_O5\" : false,\n    \"SA_71_Panel_O6\" : false,\n    \"SA_71_Panel_O7\" : false,\n    \"SC_75_Initialization\" : false,\n    \"SC_75_ID_Delivery1\" : false,\n    \"SC_75_ID_Delivery2\" : false,\n    \"SC_75_Part_Del\" : false,\n    \"SC_75_RQ_Part_Del\" : false,\n    \"SC_75_RQ_Wrong\" : false,\n    \"SC_75_Identified80\" : false,\n    \"SC_75_Requested80\" : false,\n    \"SC_72_Profibus\" : true,\n    \"SC_75_RQ_Delivery1\" : false,\n    \"SC_75_RQ_Delivery2\" : false,\n    \"SC_75_Identified\" : true,\n    \"SC_75_Requested\" : false,\n    \"SS_70_SInductive\" : false,\n    \"SS_70_SPart\" : false,\n    \"SS_70_SStation\" : false,\n    \"SS_70_SPart_Height\" : false,\n    \"SS_70_Elev_High\" : false,\n    \"SS_70_Elev_Low\" : true,\n    \"SS_70_Pist_Back\" : true,\n    \"SS_71_Start\" : false,\n    \"SS_71_Stop\" : true,\n    \"SS_71_Key_Pos\" : false,\n    \"SS_71_Reset\" : false,\n    \"SS_71_Panel_I4\" : false,\n    \"SS_71_Panel_I5\" : true,\n    \"SS_71_Panel_I6\" : false,\n    \"SS_71_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 680,
        "wires": [
            [
                "acefd88860fdd00a"
            ]
        ]
    },
    {
        "id": "732b9f2a5c832624",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "Simulated CSV Link",
        "links": [
            "08b9e8e7b1fcf92c"
        ],
        "x": 65,
        "y": 680,
        "wires": [
            [
                "ec009d3d4030c595"
            ]
        ]
    },
    {
        "id": "acefd88860fdd00a",
        "type": "trigger",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 680,
        "wires": [
            [
                "d83698c0a69de998"
            ]
        ]
    },
    {
        "id": "d83698c0a69de998",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"SA_\")) variableClass = \"Simulated_Actuators\";\n        if (key.includes(\"SC_\")) variableClass = \"Simulated_Control\";\n        if (key.includes(\"SS_\")) variableClass = \"Simulated_Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 680,
        "wires": [
            [
                "1da4a0cc17f3a08d"
            ]
        ]
    },
    {
        "id": "1da4a0cc17f3a08d",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Testing_Station/SimulationData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 680,
        "wires": [
            [
                "bda1a21e26655fb2"
            ]
        ]
    },
    {
        "id": "bda1a21e26655fb2",
        "type": "OpcUa-Client",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 680,
        "wires": [
            [
                "6fa4972ddd1a49bc"
            ],
            [
                "08b9e8e7b1fcf92c"
            ]
        ]
    },
    {
        "id": "6fa4972ddd1a49bc",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 640,
        "wires": [
            [
                "6c59bd55884cb1d3",
                "a36a8da8b85e29dd"
            ]
        ]
    },
    {
        "id": "08b9e8e7b1fcf92c",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "Simulated CSV Link",
        "mode": "link",
        "links": [
            "0526597db8d22cbe",
            "732b9f2a5c832624"
        ],
        "x": 935,
        "y": 680,
        "wires": []
    },
    {
        "id": "6c59bd55884cb1d3",
        "type": "file",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "Simulated Varaibles List",
        "filename": "/root/ProjetoGemeo/AAS/Testing/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1230,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "a36a8da8b85e29dd",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "93721fab73573932",
        "type": "comment",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 640,
        "wires": []
    },
    {
        "id": "b94923fe3bd273bb",
        "type": "comment",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 540,
        "wires": []
    },
    {
        "id": "0526597db8d22cbe",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "Simulated CSV Link",
        "links": [
            "08b9e8e7b1fcf92c"
        ],
        "x": 65,
        "y": 580,
        "wires": [
            [
                "285fa4015038722b"
            ]
        ]
    },
    {
        "id": "285fa4015038722b",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 580,
        "wires": [
            [
                "cf333a983375ba13"
            ]
        ]
    },
    {
        "id": "cf333a983375ba13",
        "type": "trigger",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 580,
        "wires": [
            [
                "88a50b6c30c32869"
            ]
        ]
    },
    {
        "id": "88a50b6c30c32869",
        "type": "file",
        "z": "7b73d224df5f2e4d",
        "g": "792c2c50ec50f0a6",
        "name": "Simulated CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 440,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "2b479b0436c6e231",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "item": "I_70_Elev_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "I_70_Elev_Down",
        "x": 470,
        "y": 860,
        "wires": [
            [
                "c7893e260b428481"
            ]
        ]
    },
    {
        "id": "95f7969e4099653b",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "item": "I_70_Elev_Up",
        "datatype": "Boolean",
        "value": "",
        "name": "I_70_Elev_Up",
        "x": 480,
        "y": 900,
        "wires": [
            [
                "c7893e260b428481"
            ]
        ]
    },
    {
        "id": "57fd8665f98df0bf",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "item": "I_70_Eject_Part",
        "datatype": "Boolean",
        "value": "",
        "name": "I_70_Eject_Part",
        "x": 480,
        "y": 940,
        "wires": [
            [
                "c7893e260b428481"
            ]
        ]
    },
    {
        "id": "9d03a6c6fbf71acd",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "item": "I_70_Air_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_70_Air_On",
        "x": 490,
        "y": 980,
        "wires": [
            [
                "c7893e260b428481"
            ]
        ]
    },
    {
        "id": "c7893e260b428481",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "70 Physical Actuators",
        "mode": "link",
        "links": [
            "603a9e3b7502cbd5"
        ],
        "x": 645,
        "y": 920,
        "wires": []
    },
    {
        "id": "42199402d0011216",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 780,
        "wires": [
            [
                "c8518e21bb811b3f"
            ]
        ]
    },
    {
        "id": "c8518e21bb811b3f",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 780,
        "wires": [
            [
                "b3d6d9ce5e3df403"
            ]
        ]
    },
    {
        "id": "b3d6d9ce5e3df403",
        "type": "file in",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 780,
        "wires": [
            [
                "6b490dd55d4f5d68"
            ]
        ]
    },
    {
        "id": "6b490dd55d4f5d68",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 780,
        "wires": [
            [
                "8557ef759f86a5fd"
            ]
        ]
    },
    {
        "id": "8557ef759f86a5fd",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 780,
        "wires": [
            [
                "211c86dd0ff8f60e"
            ]
        ]
    },
    {
        "id": "211c86dd0ff8f60e",
        "type": "OpcUa-Client",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PA",
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "811dd63e366638b6",
                "49d82d26b80a2390"
            ],
            [
                "816dd3f059a7ae03"
            ]
        ]
    },
    {
        "id": "e06d2c27bea68d50",
        "type": "switch",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "70 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_70_Elev_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_70_Elev_Up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_70_Eject_Part",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_70_Air_On",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 920,
        "wires": [
            [
                "6372e2c345d7ce61"
            ],
            [
                "ad6996c02be250e4"
            ],
            [
                "5b674f694d2c6add"
            ],
            [
                "56cca2486d450c74"
            ]
        ]
    },
    {
        "id": "d56b9ca8d207cb85",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "I_70_Elev_Down",
        "label": "Lowers elevator",
        "tooltip": "",
        "group": "3d45019236be0ca4",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 860,
        "wires": [
            [
                "2b479b0436c6e231"
            ]
        ]
    },
    {
        "id": "8e463983de670872",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "I_80_Suction_On",
        "label": "Rises elevator",
        "tooltip": "",
        "group": "3d45019236be0ca4",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 900,
        "wires": [
            [
                "95f7969e4099653b"
            ]
        ]
    },
    {
        "id": "81d6aaa175b17fd8",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "I_70_Eject_Part",
        "label": "Eject parts",
        "tooltip": "",
        "group": "3d45019236be0ca4",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 940,
        "wires": [
            [
                "57fd8665f98df0bf"
            ]
        ]
    },
    {
        "id": "1b48463d85933a40",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "I_70_Air_On",
        "label": "Turns on air",
        "tooltip": "",
        "group": "3d45019236be0ca4",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 980,
        "wires": [
            [
                "9d03a6c6fbf71acd"
            ]
        ]
    },
    {
        "id": "811dd63e366638b6",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "70 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 820,
        "wires": []
    },
    {
        "id": "816dd3f059a7ae03",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_70_Elev_Down\" : false,\n            \"I_70_Elev_Up\" : false,\n            \"I_70_Eject_Part\" : false,\n            \"I_70_Air_On\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 780,
        "wires": [
            [
                "721fb7b073ad5d7a"
            ]
        ]
    },
    {
        "id": "721fb7b073ad5d7a",
        "type": "trigger",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 780,
        "wires": [
            [
                "42199402d0011216"
            ]
        ]
    },
    {
        "id": "49d82d26b80a2390",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "Sub Out 70 PA",
        "mode": "link",
        "links": [
            "b62fd8c0a4a7aef2"
        ],
        "x": 1295,
        "y": 780,
        "wires": []
    },
    {
        "id": "b62fd8c0a4a7aef2",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "Sub In 70 PA",
        "links": [
            "49d82d26b80a2390"
        ],
        "x": 775,
        "y": 920,
        "wires": [
            [
                "e06d2c27bea68d50"
            ]
        ]
    },
    {
        "id": "400bd421819c957e",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "Read PA",
        "links": [
            "1f7a70769653bb99"
        ],
        "x": 55,
        "y": 780,
        "wires": [
            [
                "816dd3f059a7ae03"
            ]
        ]
    },
    {
        "id": "6372e2c345d7ce61",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "I_70_Elev_Down",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 860,
        "wires": [
            [
                "d1e9784e100d436a"
            ]
        ]
    },
    {
        "id": "ad6996c02be250e4",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "I_70_Elev_Up",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 900,
        "wires": [
            [
                "d1e9784e100d436a"
            ]
        ]
    },
    {
        "id": "5b674f694d2c6add",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "I_70_Eject_Part",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 940,
        "wires": [
            [
                "d1e9784e100d436a"
            ]
        ]
    },
    {
        "id": "56cca2486d450c74",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "I_70_Air_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 980,
        "wires": [
            [
                "d1e9784e100d436a"
            ]
        ]
    },
    {
        "id": "d1e9784e100d436a",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "52edacf3944ab1df",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "8a187640432f2304"
        ],
        "x": 1235,
        "y": 920,
        "wires": []
    },
    {
        "id": "cfb99d21dfc343e2",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "item": "I_71_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Led_Start",
        "x": 480,
        "y": 1160,
        "wires": [
            [
                "1e9bc77f723b4015"
            ]
        ]
    },
    {
        "id": "5586a4e14552c69f",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "item": "I_71_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Led_Reset",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "1e9bc77f723b4015"
            ]
        ]
    },
    {
        "id": "d420eedf561ff1d9",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "item": "I_71_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Led_Extra1",
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "1e9bc77f723b4015"
            ]
        ]
    },
    {
        "id": "42ee611d213f9819",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "item": "I_71_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Led_Extra2",
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "1e9bc77f723b4015"
            ]
        ]
    },
    {
        "id": "0ce57b032700a01d",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "item": "I_71_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Panel_O4",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "1e9bc77f723b4015"
            ]
        ]
    },
    {
        "id": "1e9bc77f723b4015",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "70 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "603a9e3b7502cbd5"
        ],
        "x": 645,
        "y": 1300,
        "wires": []
    },
    {
        "id": "fab628dc7cdfa3cc",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1080,
        "wires": [
            [
                "c966c54966380c22"
            ]
        ]
    },
    {
        "id": "c966c54966380c22",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1080,
        "wires": [
            [
                "719f1b91db18436b"
            ]
        ]
    },
    {
        "id": "719f1b91db18436b",
        "type": "file in",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1080,
        "wires": [
            [
                "bfd3eccad229b81d"
            ]
        ]
    },
    {
        "id": "bfd3eccad229b81d",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1080,
        "wires": [
            [
                "c36a004139b93fce"
            ]
        ]
    },
    {
        "id": "c36a004139b93fce",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1080,
        "wires": [
            [
                "a75318bd13e6d501"
            ]
        ]
    },
    {
        "id": "a75318bd13e6d501",
        "type": "OpcUa-Client",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AA",
        "x": 1130,
        "y": 1080,
        "wires": [
            [
                "af7f3810d904190e",
                "063bd9c987acdd4d"
            ],
            [
                "a1c36e472ac8a8e5"
            ]
        ]
    },
    {
        "id": "e37435cdc58ddca5",
        "type": "switch",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "70 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_71_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_71_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1300,
        "wires": [
            [
                "7584b83820d18bf5"
            ],
            [
                "b453dbd6ef44f7d3"
            ],
            [
                "7db802f167f9bc1d"
            ],
            [
                "02ee71555c66f337"
            ],
            [
                "aa09114a22294a01"
            ],
            [
                "d959410e9c366315"
            ],
            [
                "c5eb01a51b655262"
            ],
            [
                "c4efcd9abdd729fc"
            ]
        ]
    },
    {
        "id": "b205d81604121c19",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "196b60488cb0844d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1160,
        "wires": [
            [
                "cfb99d21dfc343e2"
            ]
        ]
    },
    {
        "id": "b9419733de1cc52e",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "196b60488cb0844d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "5586a4e14552c69f"
            ]
        ]
    },
    {
        "id": "9af2ea3db7965822",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "196b60488cb0844d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1240,
        "wires": [
            [
                "d420eedf561ff1d9"
            ]
        ]
    },
    {
        "id": "cb7093366a2d8236",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "196b60488cb0844d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1280,
        "wires": [
            [
                "42ee611d213f9819"
            ]
        ]
    },
    {
        "id": "b8b28086588b8a96",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "196b60488cb0844d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "0ce57b032700a01d"
            ]
        ]
    },
    {
        "id": "7fc733230c7bfbba",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "196b60488cb0844d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1360,
        "wires": [
            [
                "325129e5db684218"
            ]
        ]
    },
    {
        "id": "325129e5db684218",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "item": "I_71_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Panel_O5",
        "x": 480,
        "y": 1360,
        "wires": [
            [
                "1e9bc77f723b4015"
            ]
        ]
    },
    {
        "id": "f39599f240371a46",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "196b60488cb0844d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1400,
        "wires": [
            [
                "31858d2f0a60dfa6"
            ]
        ]
    },
    {
        "id": "31858d2f0a60dfa6",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "item": "I_71_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Panel_O6",
        "x": 480,
        "y": 1400,
        "wires": [
            [
                "1e9bc77f723b4015"
            ]
        ]
    },
    {
        "id": "c47b35752c5b1794",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "196b60488cb0844d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1440,
        "wires": [
            [
                "b6c6f8a494e671e4"
            ]
        ]
    },
    {
        "id": "b6c6f8a494e671e4",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "item": "I_71_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_71_Panel_O7",
        "x": 480,
        "y": 1440,
        "wires": [
            [
                "1e9bc77f723b4015"
            ]
        ]
    },
    {
        "id": "af7f3810d904190e",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "70 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1120,
        "wires": []
    },
    {
        "id": "a1c36e472ac8a8e5",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_71_Led_Start\": false,\n            \"I_71_Led_Reset\": false,\n            \"I_71_Led_Extra1\": false,\n            \"I_71_Led_Extra2\": false,\n            \"I_71_Panel_O4\": false,\n            \"I_71_Panel_O5\": false,\n            \"I_71_Panel_O6\": false,\n            \"I_71_Panel_O7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "0380a759329f5c3b"
            ]
        ]
    },
    {
        "id": "0380a759329f5c3b",
        "type": "trigger",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1080,
        "wires": [
            [
                "fab628dc7cdfa3cc"
            ]
        ]
    },
    {
        "id": "063bd9c987acdd4d",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "Sub Out 70 AA",
        "mode": "link",
        "links": [
            "ecda65a7a342d402"
        ],
        "x": 1295,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ecda65a7a342d402",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "Sub In 70 AA",
        "links": [
            "063bd9c987acdd4d"
        ],
        "x": 775,
        "y": 1300,
        "wires": [
            [
                "e37435cdc58ddca5"
            ]
        ]
    },
    {
        "id": "69b0f24066e065a3",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "Read AA",
        "links": [
            "1f7a70769653bb99"
        ],
        "x": 55,
        "y": 1080,
        "wires": [
            [
                "a1c36e472ac8a8e5"
            ]
        ]
    },
    {
        "id": "7584b83820d18bf5",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1160,
        "wires": [
            [
                "151d63e9c5694cf7"
            ]
        ]
    },
    {
        "id": "b453dbd6ef44f7d3",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1200,
        "wires": [
            [
                "151d63e9c5694cf7"
            ]
        ]
    },
    {
        "id": "7db802f167f9bc1d",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1240,
        "wires": [
            [
                "151d63e9c5694cf7"
            ]
        ]
    },
    {
        "id": "02ee71555c66f337",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1280,
        "wires": [
            [
                "151d63e9c5694cf7"
            ]
        ]
    },
    {
        "id": "aa09114a22294a01",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1320,
        "wires": [
            [
                "151d63e9c5694cf7"
            ]
        ]
    },
    {
        "id": "d959410e9c366315",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1360,
        "wires": [
            [
                "151d63e9c5694cf7"
            ]
        ]
    },
    {
        "id": "c5eb01a51b655262",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1400,
        "wires": [
            [
                "151d63e9c5694cf7"
            ]
        ]
    },
    {
        "id": "c4efcd9abdd729fc",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "I_71_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1440,
        "wires": [
            [
                "151d63e9c5694cf7"
            ]
        ]
    },
    {
        "id": "151d63e9c5694cf7",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "621fad59e9713ae2",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "8a187640432f2304"
        ],
        "x": 1225,
        "y": 1300,
        "wires": []
    },
    {
        "id": "ada04d1ea31428ea",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "item": "A_74_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Cart_Stat",
        "x": 480,
        "y": 1620,
        "wires": [
            [
                "e611592f2228f109"
            ]
        ]
    },
    {
        "id": "e2cd3cc0a1da7541",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "item": "A_74_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Cart_Next",
        "x": 480,
        "y": 1660,
        "wires": [
            [
                "e611592f2228f109"
            ]
        ]
    },
    {
        "id": "7044e823a7c4b23b",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "item": "A_74_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Optic",
        "x": 490,
        "y": 1700,
        "wires": [
            [
                "e611592f2228f109"
            ]
        ]
    },
    {
        "id": "af84169f0a4c86e3",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "item": "A_74_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Count",
        "x": 490,
        "y": 1740,
        "wires": [
            [
                "e611592f2228f109"
            ]
        ]
    },
    {
        "id": "11ad2c87d053d1d6",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "item": "A_74_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Pist_Bck",
        "x": 480,
        "y": 1780,
        "wires": [
            [
                "e611592f2228f109"
            ]
        ]
    },
    {
        "id": "724aa0b34ed9b4a3",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "item": "A_74_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Release_FB",
        "x": 470,
        "y": 1820,
        "wires": [
            [
                "e611592f2228f109"
            ]
        ]
    },
    {
        "id": "3418b173d194a8e0",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "item": "A_74_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Request",
        "x": 480,
        "y": 1860,
        "wires": [
            [
                "e611592f2228f109"
            ]
        ]
    },
    {
        "id": "e611592f2228f109",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "70 AS-i",
        "mode": "link",
        "links": [
            "603a9e3b7502cbd5"
        ],
        "x": 645,
        "y": 1780,
        "wires": []
    },
    {
        "id": "f619aa37db6d608d",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1540,
        "wires": [
            [
                "d647d57d06335a76"
            ]
        ]
    },
    {
        "id": "d647d57d06335a76",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1540,
        "wires": [
            [
                "37b1e7d1c35bc670"
            ]
        ]
    },
    {
        "id": "37b1e7d1c35bc670",
        "type": "file in",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1540,
        "wires": [
            [
                "3ced5de7bde381da"
            ]
        ]
    },
    {
        "id": "3ced5de7bde381da",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1540,
        "wires": [
            [
                "05a65e96b0154b70"
            ]
        ]
    },
    {
        "id": "05a65e96b0154b70",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1540,
        "wires": [
            [
                "d10de44ae7f61160"
            ]
        ]
    },
    {
        "id": "d10de44ae7f61160",
        "type": "OpcUa-Client",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AS-i",
        "x": 1140,
        "y": 1540,
        "wires": [
            [
                "0a17d221cd5b7b3e",
                "8cd015390a93dbb3"
            ],
            [
                "8a1001450b83bd8f"
            ]
        ]
    },
    {
        "id": "2f75369c317b274d",
        "type": "switch",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "70 AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A_74_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_No_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_74_Cart_Full",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 1780,
        "wires": [
            [
                "1430d1001567b8c0"
            ],
            [
                "bc3cb4c30c09a514"
            ],
            [
                "312a5743abddae4b"
            ],
            [
                "aa87128a0fcdf652"
            ],
            [
                "aec4d67a1841f6b7"
            ],
            [
                "6ebfbe520477d954"
            ],
            [
                "545349d18d58232d"
            ],
            [
                "7190f374c57d2efb"
            ],
            [
                "42e69c1f830e9e57"
            ]
        ]
    },
    {
        "id": "1430d1001567b8c0",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "order": 0,
        "group": "5c50a0ea78f2fb4c",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Cart_Stat",
        "x": 1060,
        "y": 1620,
        "wires": []
    },
    {
        "id": "bc3cb4c30c09a514",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "order": 0,
        "group": "5c50a0ea78f2fb4c",
        "width": 0,
        "height": 0,
        "label": "Cart near next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Cart_Next",
        "x": 1060,
        "y": 1660,
        "wires": []
    },
    {
        "id": "312a5743abddae4b",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "order": 0,
        "group": "5c50a0ea78f2fb4c",
        "width": 0,
        "height": 0,
        "label": "Optic sensor on station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Optic",
        "x": 1050,
        "y": 1700,
        "wires": []
    },
    {
        "id": "aa87128a0fcdf652",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "order": 0,
        "group": "5c50a0ea78f2fb4c",
        "width": 0,
        "height": 0,
        "label": "Cart count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Count",
        "x": 1050,
        "y": 1740,
        "wires": []
    },
    {
        "id": "aec4d67a1841f6b7",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "order": 0,
        "group": "5c50a0ea78f2fb4c",
        "width": 0,
        "height": 0,
        "label": "Piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Pist_Bck",
        "x": 1060,
        "y": 1780,
        "wires": []
    },
    {
        "id": "6ebfbe520477d954",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "order": 0,
        "group": "5c50a0ea78f2fb4c",
        "width": 0,
        "height": 0,
        "label": "Pin release feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Release_FB",
        "x": 1070,
        "y": 1820,
        "wires": []
    },
    {
        "id": "545349d18d58232d",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "order": 0,
        "group": "5c50a0ea78f2fb4c",
        "width": 0,
        "height": 0,
        "label": "Request cart",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Request",
        "x": 1060,
        "y": 1860,
        "wires": []
    },
    {
        "id": "a17e1334b9341480",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "item": "A_74_No_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_No_Cart",
        "x": 480,
        "y": 1900,
        "wires": [
            [
                "e611592f2228f109"
            ]
        ]
    },
    {
        "id": "7190f374c57d2efb",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "order": 0,
        "group": "5c50a0ea78f2fb4c",
        "width": 0,
        "height": 0,
        "label": "No Cart at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_No_Cart",
        "x": 1060,
        "y": 1900,
        "wires": []
    },
    {
        "id": "42e69c1f830e9e57",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "order": 0,
        "group": "5c50a0ea78f2fb4c",
        "width": 0,
        "height": 0,
        "label": "Cart Full at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_74_Cart_Full",
        "x": 1060,
        "y": 1940,
        "wires": []
    },
    {
        "id": "08f58dfb634136ba",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "item": "A_74_Cart_Full",
        "datatype": "Boolean",
        "value": "",
        "name": "A_74_Cart_Full",
        "x": 480,
        "y": 1940,
        "wires": [
            [
                "e611592f2228f109"
            ]
        ]
    },
    {
        "id": "0a17d221cd5b7b3e",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "70 AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1580,
        "wires": []
    },
    {
        "id": "8a1001450b83bd8f",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n                \"A_74_Request\": false,\n                \"A_74_No_Cart\": false,\n                \"A_74_Cart_Full\": false,\n                \"A_74_Cart_Stat\": false,\n                \"A_74_Cart_Next\": false,\n                \"A_74_Optic\": false,\n                \"A_74_Count\": false,\n                \"A_74_Pist_Bck\": false,\n                \"A_74_Release_FB\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1540,
        "wires": [
            [
                "557825576dcbd02d"
            ]
        ]
    },
    {
        "id": "557825576dcbd02d",
        "type": "trigger",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1540,
        "wires": [
            [
                "f619aa37db6d608d"
            ]
        ]
    },
    {
        "id": "221a571d0491b457",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "A_74_Cart_Stat",
        "func": "if (msg.topic === \"A_74_Cart_Stat\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Cart_Stat\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1620,
        "wires": [
            [
                "ada04d1ea31428ea"
            ]
        ]
    },
    {
        "id": "374e7dec5ee76ea4",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "S7 AS-i",
        "links": [
            "dc9a228a04ca7786"
        ],
        "x": 55,
        "y": 1780,
        "wires": [
            [
                "221a571d0491b457",
                "a15552db8dca5bf2",
                "22e30016bb7e0b30",
                "a3430b5ad0031cbf",
                "2fad0c099044d4e5",
                "5acf3055048d920b",
                "a8e29db3f87540c1",
                "e1dc122a32c3b566",
                "69915dccecaf6552"
            ]
        ]
    },
    {
        "id": "2fad0c099044d4e5",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "A_74_Pist_Bck",
        "func": "if (msg.topic === \"A_74_Pist_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Pist_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1780,
        "wires": [
            [
                "11ad2c87d053d1d6"
            ]
        ]
    },
    {
        "id": "a15552db8dca5bf2",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "A_74_Cart_Next",
        "func": "if (msg.topic === \"A_74_Cart_Next\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Cart_Next\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1660,
        "wires": [
            [
                "e2cd3cc0a1da7541"
            ]
        ]
    },
    {
        "id": "22e30016bb7e0b30",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "A_74_Optic",
        "func": "if (msg.topic === \"A_74_Optic\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Optic\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1700,
        "wires": [
            [
                "7044e823a7c4b23b"
            ]
        ]
    },
    {
        "id": "a3430b5ad0031cbf",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "A_74_Count",
        "func": "if (msg.topic === \"A_74_Count\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Count\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1740,
        "wires": [
            [
                "af84169f0a4c86e3"
            ]
        ]
    },
    {
        "id": "5acf3055048d920b",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "A_74_Release_FB",
        "func": "if (msg.topic === \"A_74_Release_FB\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Release_FB\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1820,
        "wires": [
            [
                "724aa0b34ed9b4a3"
            ]
        ]
    },
    {
        "id": "a8e29db3f87540c1",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "A_74_Request",
        "func": "if (msg.topic === \"A_74_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1860,
        "wires": [
            [
                "3418b173d194a8e0"
            ]
        ]
    },
    {
        "id": "e1dc122a32c3b566",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "A_74_No_Cart",
        "func": "if (msg.topic === \"A_74_No_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_No_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1900,
        "wires": [
            [
                "a17e1334b9341480"
            ]
        ]
    },
    {
        "id": "69915dccecaf6552",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "A_74_Cart_Full",
        "func": "if (msg.topic === \"A_74_Cart_Full\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_74_Cart_Full\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1940,
        "wires": [
            [
                "08f58dfb634136ba"
            ]
        ]
    },
    {
        "id": "8cd015390a93dbb3",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "Sub Out 70 AS-i",
        "mode": "link",
        "links": [
            "82afa6b859934d1c"
        ],
        "x": 1295,
        "y": 1540,
        "wires": []
    },
    {
        "id": "82afa6b859934d1c",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "Sub In 70 AS-i",
        "links": [
            "8cd015390a93dbb3"
        ],
        "x": 755,
        "y": 1780,
        "wires": [
            [
                "2f75369c317b274d"
            ]
        ]
    },
    {
        "id": "3deb984836c56742",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "8925210e5a418e25",
        "name": "Read S",
        "links": [
            "1f7a70769653bb99"
        ],
        "x": 55,
        "y": 1540,
        "wires": [
            [
                "8a1001450b83bd8f"
            ]
        ]
    },
    {
        "id": "460c368512c99687",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "item": "F_73_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Led_Start",
        "x": 480,
        "y": 3120,
        "wires": [
            [
                "3a8a323f4f49d974"
            ]
        ]
    },
    {
        "id": "f0c4724e6a0e9baf",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "item": "F_73_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Led_Reset",
        "x": 470,
        "y": 3160,
        "wires": [
            [
                "3a8a323f4f49d974"
            ]
        ]
    },
    {
        "id": "3674e7ab9d4d9c7b",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "item": "F_73_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Led_Extra1",
        "x": 470,
        "y": 3200,
        "wires": [
            [
                "3a8a323f4f49d974"
            ]
        ]
    },
    {
        "id": "755b4da5cf6e779c",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "item": "F_73_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Led_Extra2",
        "x": 470,
        "y": 3240,
        "wires": [
            [
                "3a8a323f4f49d974"
            ]
        ]
    },
    {
        "id": "efd72912d7ac3900",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "item": "F_73_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Panel_O4",
        "x": 480,
        "y": 3280,
        "wires": [
            [
                "3a8a323f4f49d974"
            ]
        ]
    },
    {
        "id": "18d14e93311eeac1",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "item": "F_73_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Panel_O5",
        "x": 480,
        "y": 3320,
        "wires": [
            [
                "3a8a323f4f49d974"
            ]
        ]
    },
    {
        "id": "c09c865bbe820127",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "item": "F_73_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Panel_O6",
        "x": 480,
        "y": 3360,
        "wires": [
            [
                "3a8a323f4f49d974"
            ]
        ]
    },
    {
        "id": "3a8a323f4f49d974",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "70 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "603a9e3b7502cbd5"
        ],
        "x": 645,
        "y": 3260,
        "wires": []
    },
    {
        "id": "c0ce7ad3302d1ef7",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3040,
        "wires": [
            [
                "9099242fbda313ab"
            ]
        ]
    },
    {
        "id": "9099242fbda313ab",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3040,
        "wires": [
            [
                "aab6a75f14c71063"
            ]
        ]
    },
    {
        "id": "aab6a75f14c71063",
        "type": "file in",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3040,
        "wires": [
            [
                "7a87d5a58556d494"
            ]
        ]
    },
    {
        "id": "7a87d5a58556d494",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3040,
        "wires": [
            [
                "292acddd2ec9b4b2"
            ]
        ]
    },
    {
        "id": "292acddd2ec9b4b2",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3040,
        "wires": [
            [
                "40457bab16ea365c"
            ]
        ]
    },
    {
        "id": "40457bab16ea365c",
        "type": "OpcUa-Client",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AF",
        "x": 1130,
        "y": 3040,
        "wires": [
            [
                "dc9c9f7e64d32335",
                "0a64d6dcd512461f"
            ],
            [
                "ce43bfca6f901862"
            ]
        ]
    },
    {
        "id": "aa9b93e52ede4897",
        "type": "switch",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "70 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_73_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_73_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 3260,
        "wires": [
            [
                "b998a365e958b79a"
            ],
            [
                "53dd59a04fc307d1"
            ],
            [
                "c4b9a88a7bbad1fd"
            ],
            [
                "21a8d44a165e27c9"
            ],
            [
                "79c17147c73651f9"
            ],
            [
                "b719327bfbfccb50"
            ],
            [
                "4825359d41d6613b"
            ],
            [
                "fd17be03841f649d"
            ]
        ]
    },
    {
        "id": "b998a365e958b79a",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "order": 0,
        "group": "11e57f84425ee887",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Led_Start",
        "x": 1060,
        "y": 3120,
        "wires": []
    },
    {
        "id": "53dd59a04fc307d1",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "order": 0,
        "group": "11e57f84425ee887",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Led_Reset",
        "x": 1070,
        "y": 3160,
        "wires": []
    },
    {
        "id": "c4b9a88a7bbad1fd",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "order": 0,
        "group": "11e57f84425ee887",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Led_Extra1",
        "x": 1070,
        "y": 3200,
        "wires": []
    },
    {
        "id": "21a8d44a165e27c9",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "order": 0,
        "group": "11e57f84425ee887",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Led_Extra2",
        "x": 1070,
        "y": 3240,
        "wires": []
    },
    {
        "id": "79c17147c73651f9",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "order": 0,
        "group": "11e57f84425ee887",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Panel_O4",
        "x": 1060,
        "y": 3280,
        "wires": []
    },
    {
        "id": "b719327bfbfccb50",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "order": 0,
        "group": "11e57f84425ee887",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Panel_O5",
        "x": 1060,
        "y": 3320,
        "wires": []
    },
    {
        "id": "4825359d41d6613b",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "order": 0,
        "group": "11e57f84425ee887",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Panel_O6",
        "x": 1060,
        "y": 3360,
        "wires": []
    },
    {
        "id": "ac4b1c72d56be1d4",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "item": "F_73_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_73_Panel_O7",
        "x": 480,
        "y": 3400,
        "wires": [
            [
                "3a8a323f4f49d974"
            ]
        ]
    },
    {
        "id": "fd17be03841f649d",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "order": 0,
        "group": "11e57f84425ee887",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_73_Panel_O7",
        "x": 1060,
        "y": 3400,
        "wires": []
    },
    {
        "id": "dc9c9f7e64d32335",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "70 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3080,
        "wires": []
    },
    {
        "id": "ce43bfca6f901862",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_73_Led_Start\": false,\n            \"F_73_Led_Reset\": false,\n            \"F_73_Led_Extra1\": false,\n            \"F_73_Led_Extra2\": false,\n            \"F_73_Panel_O4\": false,\n            \"F_73_Panel_O5\": false,\n            \"F_73_Panel_O6\": false,\n            \"F_73_Panel_O7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3040,
        "wires": [
            [
                "af1f36680d1cbef5"
            ]
        ]
    },
    {
        "id": "af1f36680d1cbef5",
        "type": "trigger",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3040,
        "wires": [
            [
                "c0ce7ad3302d1ef7"
            ]
        ]
    },
    {
        "id": "0a64d6dcd512461f",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "Sub Out 70 AF",
        "mode": "link",
        "links": [
            "bd43610c11e84938"
        ],
        "x": 1295,
        "y": 3040,
        "wires": []
    },
    {
        "id": "bd43610c11e84938",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "Sub In 70 AF",
        "links": [
            "0a64d6dcd512461f"
        ],
        "x": 775,
        "y": 3260,
        "wires": [
            [
                "aa9b93e52ede4897"
            ]
        ]
    },
    {
        "id": "43dec80ca96c9196",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "F_73_Led_Start",
        "func": "if (msg.topic === \"F_73_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3120,
        "wires": [
            [
                "460c368512c99687"
            ]
        ]
    },
    {
        "id": "99590eb66fa488c8",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "S7 AF",
        "links": [
            "dc9a228a04ca7786"
        ],
        "x": 55,
        "y": 3260,
        "wires": [
            [
                "43dec80ca96c9196",
                "0c41dd8b93178692",
                "2ed311d8d0810e4c",
                "cd24e394353c8647",
                "6d6d9731c9a5c776",
                "a2bb9368e6e8426f",
                "3f3b7aaf7324241b",
                "70060ffa5d8cc854"
            ]
        ]
    },
    {
        "id": "6d6d9731c9a5c776",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "F_73_Panel_O4",
        "func": "if (msg.topic === \"F_73_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3280,
        "wires": [
            [
                "efd72912d7ac3900"
            ]
        ]
    },
    {
        "id": "0c41dd8b93178692",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "F_73_Led_Reset",
        "func": "if (msg.topic === \"F_73_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3160,
        "wires": [
            [
                "f0c4724e6a0e9baf"
            ]
        ]
    },
    {
        "id": "2ed311d8d0810e4c",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "F_73_Led_Extra1",
        "func": "if (msg.topic === \"F_73_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3200,
        "wires": [
            [
                "3674e7ab9d4d9c7b"
            ]
        ]
    },
    {
        "id": "cd24e394353c8647",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "F_73_Led_Extra2",
        "func": "if (msg.topic === \"F_73_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3240,
        "wires": [
            [
                "755b4da5cf6e779c"
            ]
        ]
    },
    {
        "id": "a2bb9368e6e8426f",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "F_73_Panel_O5",
        "func": "if (msg.topic === \"F_73_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3320,
        "wires": [
            [
                "18d14e93311eeac1"
            ]
        ]
    },
    {
        "id": "3f3b7aaf7324241b",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "F_73_Panel_O6",
        "func": "if (msg.topic === \"F_73_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3360,
        "wires": [
            [
                "c09c865bbe820127"
            ]
        ]
    },
    {
        "id": "70060ffa5d8cc854",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "F_73_Panel_O7",
        "func": "if (msg.topic === \"F_73_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_73_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3400,
        "wires": [
            [
                "ac4b1c72d56be1d4"
            ]
        ]
    },
    {
        "id": "88237b28f04ef0b4",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "3b375da071b90b24",
        "name": "Read AF",
        "links": [
            "1f7a70769653bb99"
        ],
        "x": 55,
        "y": 3040,
        "wires": [
            [
                "ce43bfca6f901862"
            ]
        ]
    },
    {
        "id": "ecdb80ec13293918",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "item": "F_72_Elev_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "F_72_Elev_Down",
        "x": 470,
        "y": 2820,
        "wires": [
            [
                "af45d44de35afa53"
            ]
        ]
    },
    {
        "id": "400111305fce0e3b",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "item": "F_72_Elev_Up",
        "datatype": "Boolean",
        "value": "",
        "name": "F_72_Elev_Up",
        "x": 480,
        "y": 2860,
        "wires": [
            [
                "af45d44de35afa53"
            ]
        ]
    },
    {
        "id": "48774a1e191b6667",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "item": "F_72_Eject_Part",
        "datatype": "Boolean",
        "value": "",
        "name": "F_72_Eject_Part",
        "x": 470,
        "y": 2900,
        "wires": [
            [
                "af45d44de35afa53"
            ]
        ]
    },
    {
        "id": "3c9d115976eceeb2",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "item": "F_72_Air_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_72_Air_On",
        "x": 490,
        "y": 2940,
        "wires": [
            [
                "af45d44de35afa53"
            ]
        ]
    },
    {
        "id": "af45d44de35afa53",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "70 Physical Feedback",
        "mode": "link",
        "links": [
            "603a9e3b7502cbd5"
        ],
        "x": 645,
        "y": 2880,
        "wires": []
    },
    {
        "id": "69d0aacda99194fd",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2740,
        "wires": [
            [
                "6b1df8d12fb96210"
            ]
        ]
    },
    {
        "id": "6b1df8d12fb96210",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2740,
        "wires": [
            [
                "faf65144198de0e1"
            ]
        ]
    },
    {
        "id": "faf65144198de0e1",
        "type": "file in",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2740,
        "wires": [
            [
                "ce9e50a402d80cd6"
            ]
        ]
    },
    {
        "id": "ce9e50a402d80cd6",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2740,
        "wires": [
            [
                "7dda81d176daa492"
            ]
        ]
    },
    {
        "id": "7dda81d176daa492",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2740,
        "wires": [
            [
                "85eed12e6e7ca7ea"
            ]
        ]
    },
    {
        "id": "85eed12e6e7ca7ea",
        "type": "OpcUa-Client",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PF",
        "x": 1130,
        "y": 2740,
        "wires": [
            [
                "574f7529a60198a4",
                "b969ed28348e2634"
            ],
            [
                "64850ebe036e0f4d"
            ]
        ]
    },
    {
        "id": "f99818881e192e06",
        "type": "switch",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "70 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_72_Elev_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_72_Elev_Up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_72_Eject_Part",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_72_Air_On",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 2880,
        "wires": [
            [
                "0da2425498498146"
            ],
            [
                "5b52d65a83b30be0"
            ],
            [
                "7aabf35c997f5cc0"
            ],
            [
                "3a26b0db4d53aa9e"
            ]
        ]
    },
    {
        "id": "0da2425498498146",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "order": 0,
        "group": "bb730702e2269d0a",
        "width": 0,
        "height": 0,
        "label": "Lowers elevator",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_72_Elev_Down",
        "x": 1070,
        "y": 2820,
        "wires": []
    },
    {
        "id": "5b52d65a83b30be0",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "order": 0,
        "group": "bb730702e2269d0a",
        "width": 0,
        "height": 0,
        "label": "Rises elevator",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_72_Elev_Up",
        "x": 1060,
        "y": 2860,
        "wires": []
    },
    {
        "id": "7aabf35c997f5cc0",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "order": 0,
        "group": "bb730702e2269d0a",
        "width": 0,
        "height": 0,
        "label": "Eject parts",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_72_Eject_Part",
        "x": 1070,
        "y": 2900,
        "wires": []
    },
    {
        "id": "3a26b0db4d53aa9e",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "order": 0,
        "group": "bb730702e2269d0a",
        "width": 0,
        "height": 0,
        "label": "Turns on air",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_72_Air_On",
        "x": 1050,
        "y": 2940,
        "wires": []
    },
    {
        "id": "574f7529a60198a4",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "70 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2780,
        "wires": []
    },
    {
        "id": "64850ebe036e0f4d",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_72_Elev_Down\" : false,\n            \"F_72_Elev_Up\" : false,\n            \"F_72_Eject_Part\" : false,\n            \"F_72_Air_On\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2740,
        "wires": [
            [
                "87d8d3783e2d4a43"
            ]
        ]
    },
    {
        "id": "87d8d3783e2d4a43",
        "type": "trigger",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2740,
        "wires": [
            [
                "69d0aacda99194fd"
            ]
        ]
    },
    {
        "id": "b969ed28348e2634",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "Sub Out 70 PF",
        "mode": "link",
        "links": [
            "348de52272c0b17f"
        ],
        "x": 1295,
        "y": 2740,
        "wires": []
    },
    {
        "id": "348de52272c0b17f",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "Sub In 70 PF",
        "links": [
            "b969ed28348e2634"
        ],
        "x": 775,
        "y": 2880,
        "wires": [
            [
                "f99818881e192e06"
            ]
        ]
    },
    {
        "id": "49e6f06da4250690",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "F_72_Elev_Down",
        "func": "if (msg.topic === \"F_72_Elev_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_72_Elev_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2820,
        "wires": [
            [
                "ecdb80ec13293918"
            ]
        ]
    },
    {
        "id": "1812286b051a8817",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "S7 PF",
        "links": [
            "dc9a228a04ca7786"
        ],
        "x": 55,
        "y": 2880,
        "wires": [
            [
                "49e6f06da4250690",
                "cd1cac6c48e9a947",
                "9b50008e95af68ee",
                "21740d107f0219bd"
            ]
        ]
    },
    {
        "id": "cd1cac6c48e9a947",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "F_72_Elev_Up",
        "func": "if (msg.topic === \"F_72_Elev_Up\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_72_Elev_Up\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2860,
        "wires": [
            [
                "400111305fce0e3b"
            ]
        ]
    },
    {
        "id": "9b50008e95af68ee",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "F_72_Eject_Part",
        "func": "if (msg.topic === \"F_72_Eject_Part\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_72_Eject_Part\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2900,
        "wires": [
            [
                "48774a1e191b6667"
            ]
        ]
    },
    {
        "id": "21740d107f0219bd",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "F_72_Air_On",
        "func": "if (msg.topic === \"F_72_Air_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_72_Air_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2940,
        "wires": [
            [
                "3c9d115976eceeb2"
            ]
        ]
    },
    {
        "id": "2356408752457b58",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "a04795b1385525dc",
        "name": "Read PF",
        "links": [
            "1f7a70769653bb99"
        ],
        "x": 55,
        "y": 2740,
        "wires": [
            [
                "64850ebe036e0f4d"
            ]
        ]
    },
    {
        "id": "991d0629ba42c453",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "item": "C_72_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_72_Profibus",
        "x": 640,
        "y": 2120,
        "wires": [
            [
                "a9c55683bc2e5c7d"
            ]
        ]
    },
    {
        "id": "4eba9bc5de4004aa",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "item": "C_75_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_Initialization",
        "x": 630,
        "y": 2160,
        "wires": [
            [
                "a9c55683bc2e5c7d"
            ]
        ]
    },
    {
        "id": "288210f8f624c84e",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "item": "C_75_RQ_Delivery2",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_RQ_Delivery2",
        "x": 620,
        "y": 2540,
        "wires": [
            [
                "780eb9a38af6aa30"
            ]
        ]
    },
    {
        "id": "3879b5233c9f29da",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "item": "C_75_Identified",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_Identified",
        "x": 640,
        "y": 2580,
        "wires": [
            [
                "780eb9a38af6aa30"
            ]
        ]
    },
    {
        "id": "9a6f7d031cf9e6d3",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "item": "C_75_Requested",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_Requested",
        "x": 630,
        "y": 2620,
        "wires": [
            [
                "780eb9a38af6aa30"
            ]
        ]
    },
    {
        "id": "a9c55683bc2e5c7d",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "70 Control",
        "mode": "link",
        "links": [
            "603a9e3b7502cbd5"
        ],
        "x": 795,
        "y": 2240,
        "wires": []
    },
    {
        "id": "c3609e2c87a3ec41",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2040,
        "wires": [
            [
                "4ecb8f83b960a0b9"
            ]
        ]
    },
    {
        "id": "4ecb8f83b960a0b9",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2040,
        "wires": [
            [
                "345d49aa70acc84f"
            ]
        ]
    },
    {
        "id": "345d49aa70acc84f",
        "type": "file in",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2040,
        "wires": [
            [
                "4e2755f80f2e2829"
            ]
        ]
    },
    {
        "id": "4e2755f80f2e2829",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2040,
        "wires": [
            [
                "392aae6f19e29145"
            ]
        ]
    },
    {
        "id": "392aae6f19e29145",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2040,
        "wires": [
            [
                "94753ed96f33ef02"
            ]
        ]
    },
    {
        "id": "94753ed96f33ef02",
        "type": "OpcUa-Client",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub CR",
        "x": 1130,
        "y": 2040,
        "wires": [
            [
                "b835b841dfbc774e",
                "f403fd44ae37f9e3"
            ],
            [
                "72534a229949dd72"
            ]
        ]
    },
    {
        "id": "e55d8c02fe9494d8",
        "type": "switch",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "70 CR",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_72_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_ID_Delivery1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_ID_Delivery2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_Part_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_RQ_Part_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_RQ_Wrong",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 1010,
        "y": 2240,
        "wires": [
            [
                "3dc91460fcb3b42a"
            ],
            [
                "b6b66dfd28e05ce0"
            ],
            [
                "ac5ad313d1453609"
            ],
            [
                "5c9c52e7bbf13330"
            ],
            [
                "efa955b5a43b85df"
            ],
            [
                "e4f353027337cc1d"
            ],
            [
                "06809c120ceac85c"
            ]
        ]
    },
    {
        "id": "3dc91460fcb3b42a",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "order": 2,
        "group": "06cbce1d0e6ae6d4",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_72_Profibus",
        "x": 1200,
        "y": 2120,
        "wires": []
    },
    {
        "id": "b6b66dfd28e05ce0",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "order": 1,
        "group": "06cbce1d0e6ae6d4",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_Initialization",
        "x": 1210,
        "y": 2160,
        "wires": []
    },
    {
        "id": "2ba837844c6c9b88",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_RQ_Delivery2",
        "label": "Requested Delivery - Bit 2",
        "tooltip": "Bit 2",
        "group": "06cbce1d0e6ae6d4",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 220,
        "y": 2540,
        "wires": [
            [
                "288210f8f624c84e"
            ]
        ]
    },
    {
        "id": "dce76edfdb9c2531",
        "type": "ui_dropdown",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "06cbce1d0e6ae6d4",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Identified Delivery",
                "value": "C_75_Identified",
                "type": "str"
            },
            {
                "label": "Requested Delivery",
                "value": "C_75_Requested",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 2600,
        "wires": [
            [
                "ef8115d108ac05e5",
                "05791cb3df956456"
            ]
        ]
    },
    {
        "id": "ef8115d108ac05e5",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_Identified",
        "func": "if (msg.payload === \"C_75_Identified\") return { payload: true, topic: \"C_75_Identified\"};\nelse return { payload: false, topic: \"C_75_Identified\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2580,
        "wires": [
            [
                "3879b5233c9f29da"
            ]
        ]
    },
    {
        "id": "05791cb3df956456",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_Requested",
        "func": "if (msg.payload === \"C_75_Requested\") return { payload: true, topic: \"C_75_Requested\"};\nelse return { payload: false, topic: \"C_75_Requested\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2620,
        "wires": [
            [
                "9a6f7d031cf9e6d3"
            ]
        ]
    },
    {
        "id": "a765e0e33993cf1d",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2420,
        "wires": [
            [
                "62b76e328b12cbe7"
            ]
        ]
    },
    {
        "id": "62b76e328b12cbe7",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2420,
        "wires": [
            [
                "8dc7f0aaa9ebc75c"
            ]
        ]
    },
    {
        "id": "8dc7f0aaa9ebc75c",
        "type": "file in",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Testing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2420,
        "wires": [
            [
                "e1c3f45bde86546a"
            ]
        ]
    },
    {
        "id": "e1c3f45bde86546a",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2420,
        "wires": [
            [
                "28ca659f2bc5e79e"
            ]
        ]
    },
    {
        "id": "28ca659f2bc5e79e",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2420,
        "wires": [
            [
                "14d0062516f0d05c"
            ]
        ]
    },
    {
        "id": "14d0062516f0d05c",
        "type": "OpcUa-Client",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub CW",
        "x": 1140,
        "y": 2420,
        "wires": [
            [
                "e0237f52a89c12b3",
                "d5c78597f0995a23"
            ],
            [
                "dcba8f9c251a1359"
            ]
        ]
    },
    {
        "id": "4ff65f96a32f6139",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "item": "C_75_ID_Delivery1",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_ID_Delivery1",
        "x": 630,
        "y": 2200,
        "wires": [
            [
                "a9c55683bc2e5c7d"
            ]
        ]
    },
    {
        "id": "639bced21161e9d8",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "item": "C_75_ID_Delivery2",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_ID_Delivery2",
        "x": 630,
        "y": 2240,
        "wires": [
            [
                "a9c55683bc2e5c7d"
            ]
        ]
    },
    {
        "id": "ac5ad313d1453609",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "order": 3,
        "group": "06cbce1d0e6ae6d4",
        "width": 0,
        "height": 0,
        "label": "Identified Delivery - Bit 1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_ID_Delivery1",
        "x": 1210,
        "y": 2200,
        "wires": []
    },
    {
        "id": "5c9c52e7bbf13330",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "order": 4,
        "group": "06cbce1d0e6ae6d4",
        "width": 0,
        "height": 0,
        "label": "Identified Delivery - Bit 2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_ID_Delivery2",
        "x": 1210,
        "y": 2240,
        "wires": []
    },
    {
        "id": "d12084cc3b7a06c0",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "item": "C_75_Part_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_Part_Del",
        "x": 640,
        "y": 2280,
        "wires": [
            [
                "a9c55683bc2e5c7d"
            ]
        ]
    },
    {
        "id": "c55bea12fc353d3f",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "item": "C_75_RQ_Part_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_RQ_Part_Del",
        "x": 620,
        "y": 2320,
        "wires": [
            [
                "a9c55683bc2e5c7d"
            ]
        ]
    },
    {
        "id": "2074bc5f6de0c1b2",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "item": "C_75_RQ_Wrong",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_RQ_Wrong",
        "x": 630,
        "y": 2360,
        "wires": [
            [
                "a9c55683bc2e5c7d"
            ]
        ]
    },
    {
        "id": "efa955b5a43b85df",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "order": 5,
        "group": "06cbce1d0e6ae6d4",
        "width": 0,
        "height": 0,
        "label": "Part Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_Part_Del",
        "x": 1200,
        "y": 2280,
        "wires": []
    },
    {
        "id": "e4f353027337cc1d",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "order": 6,
        "group": "06cbce1d0e6ae6d4",
        "width": 0,
        "height": 0,
        "label": "Requested Part Delivered",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_RQ_Part_Del",
        "x": 1220,
        "y": 2320,
        "wires": []
    },
    {
        "id": "06809c120ceac85c",
        "type": "ui_led",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "order": 7,
        "group": "06cbce1d0e6ae6d4",
        "width": 0,
        "height": 0,
        "label": "Requested Wrong Part",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_75_RQ_Wrong",
        "x": 1210,
        "y": 2360,
        "wires": []
    },
    {
        "id": "0a18d0fdb381dc0b",
        "type": "OpcUa-Item",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "item": "C_75_RQ_Delivery1",
        "datatype": "Boolean",
        "value": "",
        "name": "C_75_RQ_Delivery1",
        "x": 620,
        "y": 2500,
        "wires": [
            [
                "780eb9a38af6aa30"
            ]
        ]
    },
    {
        "id": "aa4602ae8f38405f",
        "type": "ui_switch",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_RQ_Delivery1",
        "label": "Requested Delivery - Bit 1",
        "tooltip": "Bit 1",
        "group": "06cbce1d0e6ae6d4",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 220,
        "y": 2500,
        "wires": [
            [
                "0a18d0fdb381dc0b"
            ]
        ]
    },
    {
        "id": "961e62028ad2adef",
        "type": "switch",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "70 CW",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_75_RQ_Delivery1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_RQ_Delivery2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_Identified",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_75_Requested",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1010,
        "y": 2560,
        "wires": [
            [
                "cd61e8f6a3a4e15b"
            ],
            [
                "e288783915b367bd"
            ],
            [
                "f049a0ccafad92b5"
            ],
            [
                "5cf7ccedbc6f9ad7"
            ]
        ]
    },
    {
        "id": "1592f17e332cbc8c",
        "type": "inject",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_75_Identified",
        "payloadType": "str",
        "x": 190,
        "y": 2640,
        "wires": [
            [
                "dce76edfdb9c2531"
            ]
        ]
    },
    {
        "id": "b835b841dfbc774e",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "70 CR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2080,
        "wires": []
    },
    {
        "id": "e0237f52a89c12b3",
        "type": "debug",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "70 CW",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2460,
        "wires": []
    },
    {
        "id": "72534a229949dd72",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_72_Profibus\" : false,\n            \"C_75_Initialization\" : false,\n            \"C_75_ID_Delivery1\" : false,\n            \"C_75_ID_Delivery2\" : false,\n            \"C_75_Part_Del\" : false,\n            \"C_75_RQ_Part_Del\" : false,\n            \"C_75_RQ_Wrong\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2040,
        "wires": [
            [
                "99d60235856239ac"
            ]
        ]
    },
    {
        "id": "99d60235856239ac",
        "type": "trigger",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2040,
        "wires": [
            [
                "c3609e2c87a3ec41"
            ]
        ]
    },
    {
        "id": "dcba8f9c251a1359",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_75_RQ_Delivery1\" : false,\n            \"C_75_RQ_Delivery2\" : false,\n            \"C_75_Identified\" : false,\n            \"C_75_Requested\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2420,
        "wires": [
            [
                "065b7e4a7bb11935"
            ]
        ]
    },
    {
        "id": "065b7e4a7bb11935",
        "type": "trigger",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2420,
        "wires": [
            [
                "a765e0e33993cf1d"
            ]
        ]
    },
    {
        "id": "780eb9a38af6aa30",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "70 Control",
        "mode": "link",
        "links": [
            "603a9e3b7502cbd5"
        ],
        "x": 785,
        "y": 2560,
        "wires": []
    },
    {
        "id": "219dc549b36fd6c4",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_72_Profibus",
        "func": "if (msg.topic === \"C_72_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_72_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2120,
        "wires": [
            [
                "991d0629ba42c453"
            ]
        ]
    },
    {
        "id": "0b551f352fa39834",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "S7 CR",
        "links": [
            "dc9a228a04ca7786"
        ],
        "x": 55,
        "y": 2240,
        "wires": [
            [
                "219dc549b36fd6c4",
                "523de74adee394ae",
                "42af02ce5c1bc75b",
                "bdb196c57db2622e",
                "77d2033ed3091b6e",
                "c2f7b852d4ab9a44",
                "8aa882977587c92e"
            ]
        ]
    },
    {
        "id": "77d2033ed3091b6e",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_Part_Del",
        "func": "if (msg.topic === \"C_75_Part_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_Part_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2280,
        "wires": [
            [
                "d12084cc3b7a06c0"
            ]
        ]
    },
    {
        "id": "523de74adee394ae",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_Initialization",
        "func": "if (msg.topic === \"C_75_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2160,
        "wires": [
            [
                "4eba9bc5de4004aa"
            ]
        ]
    },
    {
        "id": "42af02ce5c1bc75b",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_ID_Delivery1",
        "func": "if (msg.topic === \"C_75_ID_Delivery1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_ID_Delivery1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2200,
        "wires": [
            [
                "4ff65f96a32f6139"
            ]
        ]
    },
    {
        "id": "bdb196c57db2622e",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_ID_Delivery2",
        "func": "if (msg.topic === \"C_75_ID_Delivery2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_ID_Delivery2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2240,
        "wires": [
            [
                "639bced21161e9d8"
            ]
        ]
    },
    {
        "id": "c2f7b852d4ab9a44",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_RQ_Part_Del",
        "func": "if (msg.topic === \"C_75_RQ_Part_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_RQ_Part_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 2320,
        "wires": [
            [
                "c55bea12fc353d3f"
            ]
        ]
    },
    {
        "id": "8aa882977587c92e",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_RQ_Wrong",
        "func": "if (msg.topic === \"C_75_RQ_Wrong\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_75_RQ_Wrong\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2360,
        "wires": [
            [
                "2074bc5f6de0c1b2"
            ]
        ]
    },
    {
        "id": "f403fd44ae37f9e3",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Sub Out 70 CR",
        "mode": "link",
        "links": [
            "63d33e97d231d485"
        ],
        "x": 1295,
        "y": 2040,
        "wires": []
    },
    {
        "id": "63d33e97d231d485",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Sub In 70 CR",
        "links": [
            "f403fd44ae37f9e3"
        ],
        "x": 915,
        "y": 2240,
        "wires": [
            [
                "e55d8c02fe9494d8"
            ]
        ]
    },
    {
        "id": "d5c78597f0995a23",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Sub Out 70 CW",
        "mode": "link",
        "links": [
            "64801261aa6fb862"
        ],
        "x": 1295,
        "y": 2420,
        "wires": []
    },
    {
        "id": "64801261aa6fb862",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Sub In 70 CW",
        "links": [
            "d5c78597f0995a23"
        ],
        "x": 915,
        "y": 2560,
        "wires": [
            [
                "961e62028ad2adef"
            ]
        ]
    },
    {
        "id": "51e49b422b29eeb3",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Read CR",
        "links": [
            "1f7a70769653bb99"
        ],
        "x": 55,
        "y": 2040,
        "wires": [
            [
                "72534a229949dd72"
            ]
        ]
    },
    {
        "id": "c7bb0bc291bb32bd",
        "type": "link in",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "Read CW",
        "links": [
            "1f7a70769653bb99"
        ],
        "x": 55,
        "y": 2420,
        "wires": [
            [
                "dcba8f9c251a1359"
            ]
        ]
    },
    {
        "id": "cd61e8f6a3a4e15b",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_RQ_Delivery1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2500,
        "wires": [
            [
                "7ad1a952cd3a2fbb"
            ]
        ]
    },
    {
        "id": "e288783915b367bd",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_RQ_Delivery2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2540,
        "wires": [
            [
                "7ad1a952cd3a2fbb"
            ]
        ]
    },
    {
        "id": "f049a0ccafad92b5",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_Identified",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2580,
        "wires": [
            [
                "7ad1a952cd3a2fbb"
            ]
        ]
    },
    {
        "id": "5cf7ccedbc6f9ad7",
        "type": "function",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "C_75_Requested",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2620,
        "wires": [
            [
                "7ad1a952cd3a2fbb"
            ]
        ]
    },
    {
        "id": "7ad1a952cd3a2fbb",
        "type": "link out",
        "z": "7b73d224df5f2e4d",
        "g": "e0e122314c65721d",
        "name": "S7 CW",
        "mode": "link",
        "links": [
            "8a187640432f2304"
        ],
        "x": 1375,
        "y": 2560,
        "wires": []
    },
    {
        "id": "a12d6ca34207c56d",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "item": "F_82_Pist_Adv",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Pist_Adv",
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "2f19a4bfe40cf688"
            ]
        ]
    },
    {
        "id": "bb7a1c6a3b11b339",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "item": "F_82_Suction_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Suction_On",
        "x": 470,
        "y": 2120,
        "wires": [
            [
                "2f19a4bfe40cf688"
            ]
        ]
    },
    {
        "id": "368baa89b9c56ca3",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "item": "F_82_Suction_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Suction_Off",
        "x": 470,
        "y": 2160,
        "wires": [
            [
                "2f19a4bfe40cf688"
            ]
        ]
    },
    {
        "id": "90c6fcef68027233",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "item": "F_82_Arm_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Arm_2_Del",
        "x": 470,
        "y": 2200,
        "wires": [
            [
                "2f19a4bfe40cf688"
            ]
        ]
    },
    {
        "id": "dbb2b117aaa669df",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "item": "F_82_Arm_2_Mag",
        "datatype": "Boolean",
        "value": "",
        "name": "F_82_Arm_2_Mag",
        "x": 470,
        "y": 2240,
        "wires": [
            [
                "2f19a4bfe40cf688"
            ]
        ]
    },
    {
        "id": "2f19a4bfe40cf688",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "80 Physical Feedback",
        "mode": "link",
        "links": [
            "1cbab702eef23edf"
        ],
        "x": 645,
        "y": 2160,
        "wires": []
    },
    {
        "id": "be75bb52e8ebef80",
        "type": "switch",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "80 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_82_Pist_Adv",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_82_Suction_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_82_Suction_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_82_Arm_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_82_Arm_2_Mag",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 870,
        "y": 2160,
        "wires": [
            [
                "6df57eec20b1df84"
            ],
            [
                "250936f3f03489ee"
            ],
            [
                "2030522432246d3f"
            ],
            [
                "c0bcfd6a7483bfbc"
            ],
            [
                "25b6bdd4c9a2da56"
            ]
        ]
    },
    {
        "id": "6df57eec20b1df84",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "order": 0,
        "group": "64266140633eec38",
        "width": 0,
        "height": 0,
        "label": "Pushes part out of the magazine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Pist_Adv",
        "x": 1060,
        "y": 2080,
        "wires": []
    },
    {
        "id": "250936f3f03489ee",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "order": 0,
        "group": "64266140633eec38",
        "width": 0,
        "height": 0,
        "label": "Suction On",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Suction_On",
        "x": 1070,
        "y": 2120,
        "wires": []
    },
    {
        "id": "2030522432246d3f",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "order": 0,
        "group": "64266140633eec38",
        "width": 0,
        "height": 0,
        "label": "Suction Off",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Suction_Off",
        "x": 1070,
        "y": 2160,
        "wires": []
    },
    {
        "id": "c0bcfd6a7483bfbc",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "order": 0,
        "group": "64266140633eec38",
        "width": 0,
        "height": 0,
        "label": "Moves arm to delivery",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Arm_2_Del",
        "x": 1070,
        "y": 2200,
        "wires": []
    },
    {
        "id": "25b6bdd4c9a2da56",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "order": 0,
        "group": "64266140633eec38",
        "width": 0,
        "height": 0,
        "label": "Moves arm to magazine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_82_Arm_2_Mag",
        "x": 1070,
        "y": 2240,
        "wires": []
    },
    {
        "id": "e6950825e4f0b75b",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "item": "F_83_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Led_Start",
        "x": 480,
        "y": 2420,
        "wires": [
            [
                "0f999fe3477a4fbf"
            ]
        ]
    },
    {
        "id": "9be49f8d33ca028e",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "item": "F_83_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Led_Reset",
        "x": 470,
        "y": 2460,
        "wires": [
            [
                "0f999fe3477a4fbf"
            ]
        ]
    },
    {
        "id": "c91165956d74b1d4",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "item": "F_83_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Led_Extra1",
        "x": 470,
        "y": 2500,
        "wires": [
            [
                "0f999fe3477a4fbf"
            ]
        ]
    },
    {
        "id": "0bea80e3742e9e47",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "item": "F_83_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Led_Extra2",
        "x": 470,
        "y": 2540,
        "wires": [
            [
                "0f999fe3477a4fbf"
            ]
        ]
    },
    {
        "id": "c0dd6f95ba148714",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "item": "F_83_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Panel_O4",
        "x": 480,
        "y": 2580,
        "wires": [
            [
                "0f999fe3477a4fbf"
            ]
        ]
    },
    {
        "id": "d9da3793788167c3",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "item": "F_83_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Panel_O5",
        "x": 480,
        "y": 2620,
        "wires": [
            [
                "0f999fe3477a4fbf"
            ]
        ]
    },
    {
        "id": "0e94c0e8c48266c3",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "item": "F_83_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Panel_O6",
        "x": 480,
        "y": 2660,
        "wires": [
            [
                "0f999fe3477a4fbf"
            ]
        ]
    },
    {
        "id": "0f999fe3477a4fbf",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "80 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "1cbab702eef23edf"
        ],
        "x": 645,
        "y": 2560,
        "wires": []
    },
    {
        "id": "39f008e14a17b66a",
        "type": "switch",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "80 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_83_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_83_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2560,
        "wires": [
            [
                "5b40b9624f782275"
            ],
            [
                "94421e57a70cded4"
            ],
            [
                "25e7e206a52f322a"
            ],
            [
                "1eb55db0fc7d55ad"
            ],
            [
                "ec7414b53d764a80"
            ],
            [
                "eeef9c81ec9fa421"
            ],
            [
                "989f6cae9736d06e"
            ],
            [
                "aa62e02202b81173"
            ]
        ]
    },
    {
        "id": "5b40b9624f782275",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "order": 0,
        "group": "cb6df86b970ae6e4",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Led_Start",
        "x": 1060,
        "y": 2420,
        "wires": []
    },
    {
        "id": "94421e57a70cded4",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "order": 0,
        "group": "cb6df86b970ae6e4",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Led_Reset",
        "x": 1070,
        "y": 2460,
        "wires": []
    },
    {
        "id": "25e7e206a52f322a",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "order": 0,
        "group": "cb6df86b970ae6e4",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Led_Extra1",
        "x": 1070,
        "y": 2500,
        "wires": []
    },
    {
        "id": "1eb55db0fc7d55ad",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "order": 0,
        "group": "cb6df86b970ae6e4",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Led_Extra2",
        "x": 1070,
        "y": 2540,
        "wires": []
    },
    {
        "id": "ec7414b53d764a80",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "order": 0,
        "group": "cb6df86b970ae6e4",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Panel_O4",
        "x": 1060,
        "y": 2580,
        "wires": []
    },
    {
        "id": "eeef9c81ec9fa421",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "order": 0,
        "group": "cb6df86b970ae6e4",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Panel_O5",
        "x": 1060,
        "y": 2620,
        "wires": []
    },
    {
        "id": "989f6cae9736d06e",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "order": 0,
        "group": "cb6df86b970ae6e4",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Panel_O6",
        "x": 1060,
        "y": 2660,
        "wires": []
    },
    {
        "id": "ee228e650f1e0172",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "item": "F_83_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_83_Panel_O7",
        "x": 480,
        "y": 2700,
        "wires": [
            [
                "0f999fe3477a4fbf"
            ]
        ]
    },
    {
        "id": "aa62e02202b81173",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "order": 0,
        "group": "cb6df86b970ae6e4",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_83_Panel_O7",
        "x": 1060,
        "y": 2700,
        "wires": []
    },
    {
        "id": "e2540e542afa75aa",
        "type": "comment",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "0b04f8718c6eb043",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "4d313108088c6b72"
            ]
        ]
    },
    {
        "id": "4d313108088c6b72",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Distribution_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "9fb00f355519abd1"
            ]
        ]
    },
    {
        "id": "a204127349c9be64",
        "type": "file",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "e1df524beecdf85d",
        "type": "comment",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "9fb00f355519abd1",
        "type": "OpcUa-Client",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "5a6c5e2035853cf1"
            ],
            [
                "398a0ad3ef5fd0ea",
                "9dbb28e043cd2b45"
            ]
        ]
    },
    {
        "id": "5a6c5e2035853cf1",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "828b893cec0e30f3",
                "7d8295f391670177"
            ]
        ]
    },
    {
        "id": "828b893cec0e30f3",
        "type": "file",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "7d8295f391670177",
        "type": "debug",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "ee65fb93046c1419",
        "type": "OpcUa-Client",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "endpoint": "a2328ac43b0b7d73",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "eeec56f5d1bef3b7"
            ],
            []
        ]
    },
    {
        "id": "b8b987957d16104a",
        "type": "comment",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "eeec56f5d1bef3b7",
        "type": "debug",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "1cbab702eef23edf",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Write_DIst",
        "links": [
            "88768035e9eef49f",
            "2a753a62b2f8926c",
            "344d653afca7fc14",
            "0f999fe3477a4fbf",
            "2f19a4bfe40cf688",
            "b8e172b04233398f",
            "1412134f03f2b19c"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "3270d7873d3377f8"
            ]
        ]
    },
    {
        "id": "3270d7873d3377f8",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "47f63ed35d0588f7"
            ]
        ]
    },
    {
        "id": "47f63ed35d0588f7",
        "type": "file in",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "4ec95bbd9a3bbd55"
            ]
        ]
    },
    {
        "id": "4ec95bbd9a3bbd55",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "18bdb5acd1968620"
            ]
        ]
    },
    {
        "id": "18bdb5acd1968620",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "ee65fb93046c1419"
            ]
        ]
    },
    {
        "id": "c5e64a33de83c673",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "CSV Link",
        "links": [
            "398a0ad3ef5fd0ea"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "8ae05721095ab939"
            ]
        ]
    },
    {
        "id": "8ae05721095ab939",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "61db171f74c8ad70"
            ]
        ]
    },
    {
        "id": "61db171f74c8ad70",
        "type": "trigger",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "a204127349c9be64"
            ]
        ]
    },
    {
        "id": "398a0ad3ef5fd0ea",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "c5e64a33de83c673",
            "c8e5e02ffbc33c38"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "c8e5e02ffbc33c38",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "CSV Link",
        "links": [
            "398a0ad3ef5fd0ea"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "03bafc96ab6bcb7e"
            ]
        ]
    },
    {
        "id": "03bafc96ab6bcb7e",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"I_80_Pist_Adv\": false,\n    \"I_80_Suction_On\": false,\n    \"I_80_Suction_Off\": false,\n    \"I_80_Arm_2_Del\": false,\n    \"I_80_Arm_2_Mag\": false,\n    \"I_81_Led_Start\": false,\n    \"I_81_Led_Reset\": false,\n    \"I_81_Led_Extra1\": false,\n    \"I_81_Led_Extra2\": false,\n    \"I_81_Panel_O4\": false,\n    \"I_81_Panel_O5\": false,\n    \"I_81_Panel_O6\": false,\n    \"I_81_Panel_O7\": false,\n    \"C_82_Profibus\": true,\n    \"C_83_RQ_Parts\": 0,\n    \"C_85_Initialization\": false,\n    \"C_85_Start\": false,\n    \"C_85_Single\": true,\n    \"C_85_Continuous\": false,\n    \"C_85_Counted\": false,\n    \"F_82_Pist_Adv\": false,\n    \"F_82_Suction_On\": false,\n    \"F_82_Suction_Off\": false,\n    \"F_82_Arm_2_Del\": false,\n    \"F_82_Arm_2_Mag\": false,\n    \"F_83_Led_Start\": false,\n    \"F_83_Led_Reset\": false,\n    \"F_83_Led_Extra1\": false,\n    \"F_83_Led_Extra2\": false,\n    \"F_83_Panel_O4\": false,\n    \"F_83_Panel_O5\": false,\n    \"F_83_Panel_O6\": false,\n    \"F_83_Panel_O7\": false,\n    \"O_80_Mag_Full\" : false,\n    \"O_80_Pist_Back\" : true,\n    \"O_80_Pist_Fwd\" : false,\n    \"O_80_Part_Stuck\" : false,\n    \"O_80_Arm_Mag\": true,\n    \"O_80_Arm_Del\": false,\n    \"O_80_Mag_Empty\": false,\n    \"O_81_Start\": false,\n    \"O_81_Stop\": true,\n    \"O_81_Key_Pos\": false,\n    \"O_81_Reset\": false,\n    \"O_81_Panel_I4\": false,\n    \"O_81_Panel_I5\": true,\n    \"O_81_Panel_I6\": false,\n    \"O_81_Panel_I7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "13341916d281cffe"
            ]
        ]
    },
    {
        "id": "13341916d281cffe",
        "type": "trigger",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "0b04f8718c6eb043"
            ]
        ]
    },
    {
        "id": "47fcc8c5021b0457",
        "type": "debug",
        "z": "1b6d40929ba9c133",
        "g": "a604ebd94dd93e65",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "ed2f688aa784bf33",
        "type": "OpcUa-Server",
        "z": "1b6d40929ba9c133",
        "g": "a604ebd94dd93e65",
        "port": "53880",
        "name": "Server : Distribution",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Distribution/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Distribution",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "47fcc8c5021b0457"
            ]
        ]
    },
    {
        "id": "15834f872d4efd86",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2000,
        "wires": [
            [
                "e7322293fd6605ad"
            ]
        ]
    },
    {
        "id": "79b1c0cadadb15a8",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2000,
        "wires": [
            [
                "15834f872d4efd86"
            ]
        ]
    },
    {
        "id": "e7322293fd6605ad",
        "type": "OpcUa-Client",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PF",
        "x": 1130,
        "y": 2000,
        "wires": [
            [
                "2954bce11504ab12",
                "ca1ad0b2687a0237"
            ],
            [
                "29e9c05c291eac17"
            ]
        ]
    },
    {
        "id": "b126db2e91fb6450",
        "type": "file in",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2000,
        "wires": [
            [
                "79b1c0cadadb15a8"
            ]
        ]
    },
    {
        "id": "2954bce11504ab12",
        "type": "debug",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "80 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2040,
        "wires": []
    },
    {
        "id": "29e9c05c291eac17",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_82_Pist_Adv\": false,\n            \"F_82_Suction_On\": false,\n            \"F_82_Suction_Off\": false,\n            \"F_82_Arm_2_Del\": false,\n            \"F_82_Arm_2_Mag\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2000,
        "wires": [
            [
                "91e8829b6e5e3c2a"
            ]
        ]
    },
    {
        "id": "1ab6aad4771410b4",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2000,
        "wires": [
            [
                "b126db2e91fb6450"
            ]
        ]
    },
    {
        "id": "91e8829b6e5e3c2a",
        "type": "trigger",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2000,
        "wires": [
            [
                "ac8b19ba9b2910f0"
            ]
        ]
    },
    {
        "id": "ac8b19ba9b2910f0",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2000,
        "wires": [
            [
                "1ab6aad4771410b4"
            ]
        ]
    },
    {
        "id": "0f53dbdbfef2dc70",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2340,
        "wires": [
            [
                "4bada79a91a1b373"
            ]
        ]
    },
    {
        "id": "4fed8ff346c51dce",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2340,
        "wires": [
            [
                "0f53dbdbfef2dc70"
            ]
        ]
    },
    {
        "id": "4bada79a91a1b373",
        "type": "OpcUa-Client",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AF",
        "x": 1130,
        "y": 2340,
        "wires": [
            [
                "232bc465586acd19",
                "68942cc70c44cfef"
            ],
            [
                "3ac8264eaa71bc31"
            ]
        ]
    },
    {
        "id": "51aeaee0e32fb386",
        "type": "file in",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2340,
        "wires": [
            [
                "4fed8ff346c51dce"
            ]
        ]
    },
    {
        "id": "232bc465586acd19",
        "type": "debug",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "80 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2380,
        "wires": []
    },
    {
        "id": "3ac8264eaa71bc31",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_83_Led_Start\": false,\n            \"F_83_Led_Reset\": false,\n            \"F_83_Led_Extra1\": false,\n            \"F_83_Led_Extra2\": false,\n            \"F_83_Panel_O4\": false,\n            \"F_83_Panel_O5\": false,\n            \"F_83_Panel_O6\": false,\n            \"F_83_Panel_O7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2340,
        "wires": [
            [
                "888354b72817e87a"
            ]
        ]
    },
    {
        "id": "33afbe741620855b",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2340,
        "wires": [
            [
                "51aeaee0e32fb386"
            ]
        ]
    },
    {
        "id": "888354b72817e87a",
        "type": "trigger",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2340,
        "wires": [
            [
                "975d8519092d5dd4"
            ]
        ]
    },
    {
        "id": "975d8519092d5dd4",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2340,
        "wires": [
            [
                "33afbe741620855b"
            ]
        ]
    },
    {
        "id": "727dfd8d2e24fdd1",
        "type": "debug",
        "z": "1b6d40929ba9c133",
        "g": "89b6403c89367438",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "bddf79de184afa27",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "89b6403c89367438",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "070f71ef146fab3a",
            "f4c137fc9906a7bd",
            "b37077a140b7c657",
            "119f65194accee4e",
            "79d8a61eafea90ee"
        ],
        "x": 825,
        "y": 60,
        "wires": []
    },
    {
        "id": "7c789d113f07a31c",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "F_82_Pist_Adv",
        "func": "if (msg.topic === \"F_82_Pist_Adv\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Pist_Adv\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2080,
        "wires": [
            [
                "a12d6ca34207c56d"
            ]
        ]
    },
    {
        "id": "b37077a140b7c657",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "S7 PF",
        "links": [
            "bddf79de184afa27"
        ],
        "x": 55,
        "y": 2160,
        "wires": [
            [
                "7c789d113f07a31c",
                "38e05ae407d41aba",
                "5a638411ece54167",
                "57c1e4fb38ba6102",
                "f6f0b627a24eee08"
            ]
        ]
    },
    {
        "id": "f6f0b627a24eee08",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "F_82_Arm_2_Mag",
        "func": "if (msg.topic === \"F_82_Arm_2_Mag\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Arm_2_Mag\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2240,
        "wires": [
            [
                "dbb2b117aaa669df"
            ]
        ]
    },
    {
        "id": "38e05ae407d41aba",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "F_82_Suction_On",
        "func": "if (msg.topic === \"F_82_Suction_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Suction_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2120,
        "wires": [
            [
                "bb7a1c6a3b11b339"
            ]
        ]
    },
    {
        "id": "5a638411ece54167",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "F_82_Suction_Off",
        "func": "if (msg.topic === \"F_82_Suction_Off\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Suction_Off\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2160,
        "wires": [
            [
                "368baa89b9c56ca3"
            ]
        ]
    },
    {
        "id": "57c1e4fb38ba6102",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "F_82_Arm_2_Del",
        "func": "if (msg.topic === \"F_82_Arm_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_82_Arm_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2200,
        "wires": [
            [
                "90c6fcef68027233"
            ]
        ]
    },
    {
        "id": "ca1ad0b2687a0237",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "Sub Out 80 PF",
        "mode": "link",
        "links": [
            "9ec60d76b80cc0b8"
        ],
        "x": 1295,
        "y": 2000,
        "wires": []
    },
    {
        "id": "9ec60d76b80cc0b8",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "Sub In 80 PF",
        "links": [
            "ca1ad0b2687a0237"
        ],
        "x": 775,
        "y": 2160,
        "wires": [
            [
                "be75bb52e8ebef80"
            ]
        ]
    },
    {
        "id": "68942cc70c44cfef",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "Sub Out 80 AF",
        "mode": "link",
        "links": [
            "99d6f237552bfd8e"
        ],
        "x": 1295,
        "y": 2340,
        "wires": []
    },
    {
        "id": "99d6f237552bfd8e",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "Sub In 80 AF",
        "links": [
            "68942cc70c44cfef"
        ],
        "x": 775,
        "y": 2560,
        "wires": [
            [
                "39f008e14a17b66a"
            ]
        ]
    },
    {
        "id": "c7ac25944e2acedc",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "F_83_Led_Start",
        "func": "if (msg.topic === \"F_83_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2420,
        "wires": [
            [
                "e6950825e4f0b75b"
            ]
        ]
    },
    {
        "id": "119f65194accee4e",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "S7 AF",
        "links": [
            "bddf79de184afa27"
        ],
        "x": 55,
        "y": 2560,
        "wires": [
            [
                "c7ac25944e2acedc",
                "5f372017f61785b6",
                "3eb34f921c4e4d1b",
                "50cfd58057e2de41",
                "ea67a5c90cc091ef",
                "d1de76b3bef231b4",
                "7dd2d81e99c93bf1",
                "f592a7646d838c25"
            ]
        ]
    },
    {
        "id": "ea67a5c90cc091ef",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "F_83_Panel_O4",
        "func": "if (msg.topic === \"F_83_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2580,
        "wires": [
            [
                "c0dd6f95ba148714"
            ]
        ]
    },
    {
        "id": "5f372017f61785b6",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "F_83_Led_Reset",
        "func": "if (msg.topic === \"F_83_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2460,
        "wires": [
            [
                "9be49f8d33ca028e"
            ]
        ]
    },
    {
        "id": "3eb34f921c4e4d1b",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "F_83_Led_Extra1",
        "func": "if (msg.topic === \"F_83_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2500,
        "wires": [
            [
                "c91165956d74b1d4"
            ]
        ]
    },
    {
        "id": "50cfd58057e2de41",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "F_83_Led_Extra2",
        "func": "if (msg.topic === \"F_83_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2540,
        "wires": [
            [
                "0bea80e3742e9e47"
            ]
        ]
    },
    {
        "id": "d1de76b3bef231b4",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "F_83_Panel_O5",
        "func": "if (msg.topic === \"F_83_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2620,
        "wires": [
            [
                "d9da3793788167c3"
            ]
        ]
    },
    {
        "id": "7dd2d81e99c93bf1",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "F_83_Panel_O6",
        "func": "if (msg.topic === \"F_83_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_83_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2660,
        "wires": [
            [
                "0e94c0e8c48266c3"
            ]
        ]
    },
    {
        "id": "f592a7646d838c25",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "F_83_Panel_O7",
        "func": "if (msg.topic === \"O_81_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2700,
        "wires": [
            [
                "ee228e650f1e0172"
            ]
        ]
    },
    {
        "id": "861e9c8aa7cac6ec",
        "type": "mqtt in",
        "z": "1b6d40929ba9c133",
        "g": "89b6403c89367438",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "4de211dc0a9652ab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "dcbb25b160b3a832"
            ]
        ]
    },
    {
        "id": "dcbb25b160b3a832",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "89b6403c89367438",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "bddf79de184afa27",
                "727dfd8d2e24fdd1"
            ]
        ]
    },
    {
        "id": "9dbb28e043cd2b45",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "378b01d430a7c7d1"
            ]
        ]
    },
    {
        "id": "378b01d430a7c7d1",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "114c542473af4663",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "e48d394a6fe3b8cb",
            "00da2ddfb125096b",
            "ed3fb5e06b4bd34e",
            "e93d76941225f74e",
            "b3667201ae0a1a6c",
            "396459186999e1b5",
            "07fc59a5395d9ef9"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "00da2ddfb125096b",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "3718a9c73445aedc",
        "name": "Read AF",
        "links": [
            "378b01d430a7c7d1"
        ],
        "x": 55,
        "y": 2340,
        "wires": [
            [
                "3ac8264eaa71bc31"
            ]
        ]
    },
    {
        "id": "ed3fb5e06b4bd34e",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "36d7cb4474ef8f7a",
        "name": "Read PF",
        "links": [
            "378b01d430a7c7d1"
        ],
        "x": 55,
        "y": 2000,
        "wires": [
            [
                "29e9c05c291eac17"
            ]
        ]
    },
    {
        "id": "d896c2120cb5ccff",
        "type": "mqtt out",
        "z": "1b6d40929ba9c133",
        "g": "89b6403c89367438",
        "name": "S7Variables",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4de211dc0a9652ab",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "8fc492043ebf02b7",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "89b6403c89367438",
        "name": "S7 Actuators",
        "links": [
            "4d53c16128c1beda",
            "ddd91baeef1f9130",
            "20677fc943a8c194"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "d896c2120cb5ccff"
            ]
        ]
    },
    {
        "id": "56ca6e40eedb2cd2",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "item": "O_80_Mag_Full",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Mag_Full",
        "x": 480,
        "y": 2880,
        "wires": [
            [
                "88768035e9eef49f"
            ]
        ]
    },
    {
        "id": "74c68a4d744bf23e",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "item": "O_80_Pist_Back",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Pist_Back",
        "x": 470,
        "y": 2920,
        "wires": [
            [
                "88768035e9eef49f"
            ]
        ]
    },
    {
        "id": "ed99af88b792a34f",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "item": "O_80_Pist_Fwd",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Pist_Fwd",
        "x": 480,
        "y": 2960,
        "wires": [
            [
                "88768035e9eef49f"
            ]
        ]
    },
    {
        "id": "9566cdacafa968e3",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "item": "O_80_Part_Stuck",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Part_Stuck",
        "x": 470,
        "y": 3000,
        "wires": [
            [
                "88768035e9eef49f"
            ]
        ]
    },
    {
        "id": "7e0c05f755520ccd",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "item": "O_80_Arm_Mag",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Arm_Mag",
        "x": 480,
        "y": 3040,
        "wires": [
            [
                "88768035e9eef49f"
            ]
        ]
    },
    {
        "id": "9650f90ffac12ee7",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "item": "O_80_Arm_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Arm_Del",
        "x": 480,
        "y": 3080,
        "wires": [
            [
                "88768035e9eef49f"
            ]
        ]
    },
    {
        "id": "a7472e6e509a0aec",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "item": "O_80_Mag_Empty",
        "datatype": "Boolean",
        "value": "",
        "name": "O_80_Mag_Empty",
        "x": 470,
        "y": 3120,
        "wires": [
            [
                "88768035e9eef49f"
            ]
        ]
    },
    {
        "id": "88768035e9eef49f",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "80 Physical Sensor",
        "mode": "link",
        "links": [
            "1cbab702eef23edf"
        ],
        "x": 645,
        "y": 3000,
        "wires": []
    },
    {
        "id": "17b0671934e02460",
        "type": "switch",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "80 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_80_Mag_Full",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Pist_Back",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Pist_Fwd",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Part_Stuck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Arm_Mag",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Arm_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_80_Mag_Empty",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 3000,
        "wires": [
            [
                "e572792d0664ae1c"
            ],
            [
                "c82ea26006d8f0e9"
            ],
            [
                "107540e4eb99fc87"
            ],
            [
                "e010330d1db706fe"
            ],
            [
                "dcac75e2c9173598"
            ],
            [
                "ffbda985f2d489fd"
            ],
            [
                "2e6f3e7dc3761d2f"
            ]
        ]
    },
    {
        "id": "e572792d0664ae1c",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "order": 0,
        "group": "b64d433cadaeae8e",
        "width": 0,
        "height": 0,
        "label": "Magazine full",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Mag_Full",
        "x": 1060,
        "y": 2880,
        "wires": []
    },
    {
        "id": "c82ea26006d8f0e9",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "order": 0,
        "group": "b64d433cadaeae8e",
        "width": 0,
        "height": 0,
        "label": "Piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Pist_Back",
        "x": 1070,
        "y": 2920,
        "wires": []
    },
    {
        "id": "107540e4eb99fc87",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "order": 0,
        "group": "b64d433cadaeae8e",
        "width": 0,
        "height": 0,
        "label": "Piston in forward position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Pist_Fwd",
        "x": 1060,
        "y": 2960,
        "wires": []
    },
    {
        "id": "e010330d1db706fe",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "order": 0,
        "group": "b64d433cadaeae8e",
        "width": 0,
        "height": 0,
        "label": "Part stuck in arm",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Part_Stuck",
        "x": 1070,
        "y": 3000,
        "wires": []
    },
    {
        "id": "dcac75e2c9173598",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "order": 0,
        "group": "b64d433cadaeae8e",
        "width": 0,
        "height": 0,
        "label": "Arm in magazine position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Arm_Mag",
        "x": 1060,
        "y": 3040,
        "wires": []
    },
    {
        "id": "ffbda985f2d489fd",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "order": 0,
        "group": "b64d433cadaeae8e",
        "width": 0,
        "height": 0,
        "label": "Arm in delivery (elevator) position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Arm_Del",
        "x": 1060,
        "y": 3080,
        "wires": []
    },
    {
        "id": "2e6f3e7dc3761d2f",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "order": 0,
        "group": "b64d433cadaeae8e",
        "width": 0,
        "height": 0,
        "label": "Magazine Empty",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_80_Mag_Empty",
        "x": 1070,
        "y": 3120,
        "wires": []
    },
    {
        "id": "905057839db27f76",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_80_Mag_Full\" : false,\n            \"O_80_Pist_Back\" : false,\n            \"O_80_Pist_Fwd\" : false,\n            \"O_80_Part_Stuck\" : false,\n            \"O_80_Arm_Mag\": false,\n            \"O_80_Arm_Del\": false,\n            \"O_80_Mag_Empty\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2800,
        "wires": [
            [
                "b24c61025fd00445"
            ]
        ]
    },
    {
        "id": "3f8081a527881231",
        "type": "OpcUa-Client",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PS",
        "x": 1130,
        "y": 2800,
        "wires": [
            [
                "7e4a5f202da9aef4",
                "a3f1f439c5a72c87"
            ],
            [
                "905057839db27f76"
            ]
        ]
    },
    {
        "id": "b24c61025fd00445",
        "type": "trigger",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2800,
        "wires": [
            [
                "8464a6be09067d6e"
            ]
        ]
    },
    {
        "id": "e5d6fd500bfd9f6e",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2800,
        "wires": [
            [
                "3f8081a527881231"
            ]
        ]
    },
    {
        "id": "7e4a5f202da9aef4",
        "type": "debug",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "80 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2840,
        "wires": []
    },
    {
        "id": "8464a6be09067d6e",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2800,
        "wires": [
            [
                "c62fe33d089d2ede"
            ]
        ]
    },
    {
        "id": "1e505119ce4c477f",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2800,
        "wires": [
            [
                "e5d6fd500bfd9f6e"
            ]
        ]
    },
    {
        "id": "c62fe33d089d2ede",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2800,
        "wires": [
            [
                "79486ac25f75502f"
            ]
        ]
    },
    {
        "id": "79486ac25f75502f",
        "type": "file in",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2800,
        "wires": [
            [
                "1e505119ce4c477f"
            ]
        ]
    },
    {
        "id": "17762390fb52de70",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "O_80_Mag_Full",
        "func": "if (msg.topic === \"O_80_Mag_Full\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Mag_Full\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2880,
        "wires": [
            [
                "56ca6e40eedb2cd2"
            ]
        ]
    },
    {
        "id": "070f71ef146fab3a",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "S7 PS",
        "links": [
            "bddf79de184afa27"
        ],
        "x": 55,
        "y": 3000,
        "wires": [
            [
                "17762390fb52de70",
                "3fe02d505e9e1b69",
                "849b7ea3b37f81ed",
                "2a3881d526dbbb57",
                "8bc62934ae7acaee",
                "083be1e98f9d4a82",
                "2b777b646169032d"
            ]
        ]
    },
    {
        "id": "8bc62934ae7acaee",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "O_80_Arm_Mag",
        "func": "if (msg.topic === \"O_80_Arm_Mag\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Arm_Mag\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3040,
        "wires": [
            [
                "7e0c05f755520ccd"
            ]
        ]
    },
    {
        "id": "3fe02d505e9e1b69",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "O_80_Pist_Back",
        "func": "if (msg.topic === \"O_80_Pist_Back\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Pist_Back\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2920,
        "wires": [
            [
                "74c68a4d744bf23e"
            ]
        ]
    },
    {
        "id": "849b7ea3b37f81ed",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "O_80_Pist_Fwd",
        "func": "if (msg.topic === \"O_80_Pist_Fwd\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Pist_Fwd\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2960,
        "wires": [
            [
                "ed99af88b792a34f"
            ]
        ]
    },
    {
        "id": "2a3881d526dbbb57",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "O_80_Part_Stuck",
        "func": "if (msg.topic === \"O_80_Part_Stuck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Part_Stuck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3000,
        "wires": [
            [
                "9566cdacafa968e3"
            ]
        ]
    },
    {
        "id": "083be1e98f9d4a82",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "O_80_Arm_Del",
        "func": "if (msg.topic === \"O_80_Arm_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Arm_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3080,
        "wires": [
            [
                "9650f90ffac12ee7"
            ]
        ]
    },
    {
        "id": "2b777b646169032d",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "O_80_Mag_Empty",
        "func": "if (msg.topic === \"O_80_Mag_Empty\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_80_Mag_Empty\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3120,
        "wires": [
            [
                "a7472e6e509a0aec"
            ]
        ]
    },
    {
        "id": "a3f1f439c5a72c87",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "Sub Out 80 PS",
        "mode": "link",
        "links": [
            "c5069618feb1926d"
        ],
        "x": 1295,
        "y": 2800,
        "wires": []
    },
    {
        "id": "c5069618feb1926d",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "Sub In 80 PS",
        "links": [
            "a3f1f439c5a72c87"
        ],
        "x": 775,
        "y": 3000,
        "wires": [
            [
                "17b0671934e02460"
            ]
        ]
    },
    {
        "id": "07fc59a5395d9ef9",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "a455b0c9b3778b3c",
        "name": "Read PS",
        "links": [
            "378b01d430a7c7d1"
        ],
        "x": 55,
        "y": 2800,
        "wires": [
            [
                "905057839db27f76"
            ]
        ]
    },
    {
        "id": "7cba147a5c8485a5",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "item": "O_81_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Start",
        "x": 490,
        "y": 3300,
        "wires": [
            [
                "2a753a62b2f8926c"
            ]
        ]
    },
    {
        "id": "54d58c194249c709",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "item": "O_81_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Stop",
        "x": 490,
        "y": 3340,
        "wires": [
            [
                "2a753a62b2f8926c"
            ]
        ]
    },
    {
        "id": "cc76033a1ee09394",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "item": "O_81_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Key_Pos",
        "x": 480,
        "y": 3380,
        "wires": [
            [
                "2a753a62b2f8926c"
            ]
        ]
    },
    {
        "id": "cd419bc0d8967780",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "item": "O_81_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Reset",
        "x": 490,
        "y": 3420,
        "wires": [
            [
                "2a753a62b2f8926c"
            ]
        ]
    },
    {
        "id": "69102803ce19844c",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "item": "O_81_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Panel_I4",
        "x": 480,
        "y": 3460,
        "wires": [
            [
                "2a753a62b2f8926c"
            ]
        ]
    },
    {
        "id": "e8663f86a53d9ee7",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "item": "O_81_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Panel_I5",
        "x": 480,
        "y": 3500,
        "wires": [
            [
                "2a753a62b2f8926c"
            ]
        ]
    },
    {
        "id": "d2968258b6895edd",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "item": "O_81_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Panel_I6",
        "x": 480,
        "y": 3540,
        "wires": [
            [
                "2a753a62b2f8926c"
            ]
        ]
    },
    {
        "id": "2a753a62b2f8926c",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "80 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "1cbab702eef23edf"
        ],
        "x": 645,
        "y": 3440,
        "wires": []
    },
    {
        "id": "1565371ddc3a299e",
        "type": "switch",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "80 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_81_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_81_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 3440,
        "wires": [
            [
                "7caadddfad5b6332"
            ],
            [
                "b857c91286466731"
            ],
            [
                "e33c33fb3344d1d4"
            ],
            [
                "9c522913a7597a29"
            ],
            [
                "51a3ca2e68939ef6"
            ],
            [
                "1fee653202d4d62a"
            ],
            [
                "d33859673d77be8e"
            ],
            [
                "35b90ef7711b248f"
            ]
        ]
    },
    {
        "id": "7caadddfad5b6332",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "order": 0,
        "group": "75089c38d5f02de2",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Start",
        "x": 1050,
        "y": 3300,
        "wires": []
    },
    {
        "id": "b857c91286466731",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "order": 0,
        "group": "75089c38d5f02de2",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Stop",
        "x": 1050,
        "y": 3340,
        "wires": []
    },
    {
        "id": "e33c33fb3344d1d4",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "order": 0,
        "group": "75089c38d5f02de2",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Key_Pos",
        "x": 1060,
        "y": 3380,
        "wires": []
    },
    {
        "id": "9c522913a7597a29",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "order": 0,
        "group": "75089c38d5f02de2",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Reset",
        "x": 1050,
        "y": 3420,
        "wires": []
    },
    {
        "id": "51a3ca2e68939ef6",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "order": 0,
        "group": "75089c38d5f02de2",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Panel_I4",
        "x": 1060,
        "y": 3460,
        "wires": []
    },
    {
        "id": "1fee653202d4d62a",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "order": 0,
        "group": "75089c38d5f02de2",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Panel_I5",
        "x": 1060,
        "y": 3500,
        "wires": []
    },
    {
        "id": "d33859673d77be8e",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "order": 0,
        "group": "75089c38d5f02de2",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Panel_I6",
        "x": 1060,
        "y": 3540,
        "wires": []
    },
    {
        "id": "cb728bde69a3a21e",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "item": "O_81_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_81_Panel_I7",
        "x": 480,
        "y": 3580,
        "wires": [
            [
                "2a753a62b2f8926c"
            ]
        ]
    },
    {
        "id": "35b90ef7711b248f",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "order": 0,
        "group": "75089c38d5f02de2",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_81_Panel_I7",
        "x": 1060,
        "y": 3580,
        "wires": []
    },
    {
        "id": "98b23756b573ed49",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3220,
        "wires": [
            [
                "f3646ff39b3aa4df"
            ]
        ]
    },
    {
        "id": "5c7e322df69577a9",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3220,
        "wires": [
            [
                "98b23756b573ed49"
            ]
        ]
    },
    {
        "id": "f3646ff39b3aa4df",
        "type": "OpcUa-Client",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AS",
        "x": 1130,
        "y": 3220,
        "wires": [
            [
                "5b86239577416589",
                "e660ebc41f46653c"
            ],
            [
                "ded0647eede2d203"
            ]
        ]
    },
    {
        "id": "ffed24d5774ad84c",
        "type": "file in",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3220,
        "wires": [
            [
                "5c7e322df69577a9"
            ]
        ]
    },
    {
        "id": "5b86239577416589",
        "type": "debug",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "80 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3260,
        "wires": []
    },
    {
        "id": "ded0647eede2d203",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_81_Start\": false,\n            \"O_81_Stop\": false,\n            \"O_81_Key_Pos\": false,\n            \"O_81_Reset\": false,\n            \"O_81_Panel_I4\": false,\n            \"O_81_Panel_I5\": false,\n            \"O_81_Panel_I6\": false,\n            \"O_81_Panel_I7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3220,
        "wires": [
            [
                "473f5c0614cae4ee"
            ]
        ]
    },
    {
        "id": "e0e57c519b829718",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3220,
        "wires": [
            [
                "ffed24d5774ad84c"
            ]
        ]
    },
    {
        "id": "473f5c0614cae4ee",
        "type": "trigger",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3220,
        "wires": [
            [
                "66046e3e35aafbeb"
            ]
        ]
    },
    {
        "id": "66046e3e35aafbeb",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3220,
        "wires": [
            [
                "e0e57c519b829718"
            ]
        ]
    },
    {
        "id": "626290c510c833b7",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "Sub In 80 AS",
        "links": [
            "e660ebc41f46653c"
        ],
        "x": 775,
        "y": 3440,
        "wires": [
            [
                "1565371ddc3a299e"
            ]
        ]
    },
    {
        "id": "e660ebc41f46653c",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "Sub Out 80 AS",
        "mode": "link",
        "links": [
            "626290c510c833b7"
        ],
        "x": 1295,
        "y": 3220,
        "wires": []
    },
    {
        "id": "cc30a03347c95ac5",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "O_81_Start",
        "func": "if (msg.topic === \"O_81_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3300,
        "wires": [
            [
                "7cba147a5c8485a5"
            ]
        ]
    },
    {
        "id": "f4c137fc9906a7bd",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "S7 AS",
        "links": [
            "bddf79de184afa27"
        ],
        "x": 55,
        "y": 3440,
        "wires": [
            [
                "cc30a03347c95ac5",
                "cdfc9fdaa08b31c0",
                "e22ac14ee7ad8466",
                "094c4b899b1e97e3",
                "078d8ed8f1d78a55",
                "c62e9ed0935307c8",
                "fff05f087a96b227",
                "5799e94efcfbc8b8"
            ]
        ]
    },
    {
        "id": "078d8ed8f1d78a55",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "O_81_Panel_I4",
        "func": "if (msg.topic === \"O_81_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3460,
        "wires": [
            [
                "69102803ce19844c"
            ]
        ]
    },
    {
        "id": "cdfc9fdaa08b31c0",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "O_81_Stop",
        "func": "if (msg.topic === \"O_81_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3340,
        "wires": [
            [
                "54d58c194249c709"
            ]
        ]
    },
    {
        "id": "e22ac14ee7ad8466",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "O_81_Key_Pos",
        "func": "if (msg.topic === \"O_81_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3380,
        "wires": [
            [
                "cc76033a1ee09394"
            ]
        ]
    },
    {
        "id": "094c4b899b1e97e3",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "O_81_Reset",
        "func": "if (msg.topic === \"O_81_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3420,
        "wires": [
            [
                "cd419bc0d8967780"
            ]
        ]
    },
    {
        "id": "c62e9ed0935307c8",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "O_81_Panel_I5",
        "func": "if (msg.topic === \"O_81_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3500,
        "wires": [
            [
                "e8663f86a53d9ee7"
            ]
        ]
    },
    {
        "id": "fff05f087a96b227",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "O_81_Panel_I6",
        "func": "if (msg.topic === \"O_81_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3540,
        "wires": [
            [
                "d2968258b6895edd"
            ]
        ]
    },
    {
        "id": "5799e94efcfbc8b8",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "O_81_Panel_I7",
        "func": "if (msg.topic === \"O_81_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_81_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3580,
        "wires": [
            [
                "cb728bde69a3a21e"
            ]
        ]
    },
    {
        "id": "396459186999e1b5",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "4fe177aaccd14c75",
        "name": "Read AS",
        "links": [
            "378b01d430a7c7d1"
        ],
        "x": 55,
        "y": 3220,
        "wires": [
            [
                "ded0647eede2d203"
            ]
        ]
    },
    {
        "id": "f7010b289c44f07e",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"SA_80_Pist_Adv\": false,\n    \"SA_80_Suction_On\": false,\n    \"SA_80_Suction_Off\": false,\n    \"SA_80_Arm_2_Del\": false,\n    \"SA_80_Arm_2_Mag\": false,\n    \"SA_81_Led_Start\": false,\n    \"SA_81_Led_Reset\": false,\n    \"SA_81_Led_Extra1\": false,\n    \"SA_81_Led_Extra2\": false,\n    \"SA_81_Panel_O4\": false,\n    \"SA_81_Panel_O5\": false,\n    \"SA_81_Panel_O6\": false,\n    \"SA_81_Panel_O7\": false,\n    \"SC_82_Profibus\": true,\n    \"SC_83_RQ_Parts\": 0,\n    \"SC_85_Initialization\": false,\n    \"SC_85_Start\": false,\n    \"SC_85_Single\": true,\n    \"SC_85_Continuous\": false,\n    \"SC_85_Counted\": false,\n    \"SS_80_Mag_Full\" : false,\n    \"SS_80_Pist_Back\" : true,\n    \"SS_80_Pist_Fwd\" : false,\n    \"SS_80_Part_Stuck\" : false,\n    \"SS_80_Arm_Mag\": true,\n    \"SS_80_Arm_Del\": false,\n    \"SS_80_Mag_Empty\": false,\n    \"SS_81_Start\": false,\n    \"SS_81_Stop\": true,\n    \"SS_81_Key_Pos\": false,\n    \"SS_81_Reset\": false,\n    \"SS_81_Panel_I4\": false,\n    \"SS_81_Panel_I5\": true,\n    \"SS_81_Panel_I6\": false,\n    \"SS_81_Panel_I7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 680,
        "wires": [
            [
                "2e5d3792df9ed88b"
            ]
        ]
    },
    {
        "id": "376cf393c5a4403c",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "Simulated CSV Link",
        "links": [
            "f0806f56fdda54e8"
        ],
        "x": 65,
        "y": 680,
        "wires": [
            [
                "f7010b289c44f07e"
            ]
        ]
    },
    {
        "id": "2e5d3792df9ed88b",
        "type": "trigger",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 680,
        "wires": [
            [
                "d0da3516e8a36f32"
            ]
        ]
    },
    {
        "id": "d0da3516e8a36f32",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"SA_\")) variableClass = \"Simulated_Actuators\";\n        if (key.includes(\"SC_\")) variableClass = \"Simulated_Control\";\n        if (key.includes(\"SS_\")) variableClass = \"Simulated_Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 680,
        "wires": [
            [
                "cb4f9605037cd8fd"
            ]
        ]
    },
    {
        "id": "cb4f9605037cd8fd",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Distribution_Station/SimulationData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 680,
        "wires": [
            [
                "7244741cdb16dc0c"
            ]
        ]
    },
    {
        "id": "7244741cdb16dc0c",
        "type": "OpcUa-Client",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 680,
        "wires": [
            [
                "0fcb07b296bd495b"
            ],
            [
                "f0806f56fdda54e8"
            ]
        ]
    },
    {
        "id": "0fcb07b296bd495b",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 640,
        "wires": [
            [
                "d458830ae4f0b57e",
                "140ca761e6e36da5"
            ]
        ]
    },
    {
        "id": "f0806f56fdda54e8",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "Simulated CSV Link",
        "mode": "link",
        "links": [
            "6e4245396fd68ce7",
            "376cf393c5a4403c"
        ],
        "x": 935,
        "y": 680,
        "wires": []
    },
    {
        "id": "d458830ae4f0b57e",
        "type": "file",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "Simulated Varaibles List",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1230,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "140ca761e6e36da5",
        "type": "debug",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "7722f6f90bdd546f",
        "type": "comment",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 640,
        "wires": []
    },
    {
        "id": "0b7519ae5b90c085",
        "type": "comment",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 540,
        "wires": []
    },
    {
        "id": "6e4245396fd68ce7",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "Simulated CSV Link",
        "links": [
            "f0806f56fdda54e8"
        ],
        "x": 65,
        "y": 580,
        "wires": [
            [
                "49dd1aec080b17c3"
            ]
        ]
    },
    {
        "id": "49dd1aec080b17c3",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 580,
        "wires": [
            [
                "e4e08e34228b93d6"
            ]
        ]
    },
    {
        "id": "e4e08e34228b93d6",
        "type": "trigger",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 580,
        "wires": [
            [
                "8a1baf5bbdcc1d79"
            ]
        ]
    },
    {
        "id": "8a1baf5bbdcc1d79",
        "type": "file",
        "z": "1b6d40929ba9c133",
        "g": "27dfb51ddc72833b",
        "name": "Simulated CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 440,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "57ea72ad39ae9e07",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "item": "I_80_Pist_Adv",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Pist_Adv",
        "x": 480,
        "y": 860,
        "wires": [
            [
                "b8e172b04233398f"
            ]
        ]
    },
    {
        "id": "858f29f721765fee",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "item": "I_80_Suction_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Suction_On",
        "x": 470,
        "y": 900,
        "wires": [
            [
                "b8e172b04233398f"
            ]
        ]
    },
    {
        "id": "121e068d068b3fab",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "item": "I_80_Suction_Off",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Suction_Off",
        "x": 470,
        "y": 940,
        "wires": [
            [
                "b8e172b04233398f"
            ]
        ]
    },
    {
        "id": "257f7c359e996b5c",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "item": "I_80_Arm_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Arm_2_Del",
        "x": 470,
        "y": 980,
        "wires": [
            [
                "b8e172b04233398f"
            ]
        ]
    },
    {
        "id": "acd5ee4bb724ba61",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "item": "I_80_Arm_2_Mag",
        "datatype": "Boolean",
        "value": "",
        "name": "I_80_Arm_2_Mag",
        "x": 470,
        "y": 1020,
        "wires": [
            [
                "b8e172b04233398f"
            ]
        ]
    },
    {
        "id": "b8e172b04233398f",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "80 Physical Actuators",
        "mode": "link",
        "links": [
            "1cbab702eef23edf"
        ],
        "x": 645,
        "y": 940,
        "wires": []
    },
    {
        "id": "ac63ea8059d645c8",
        "type": "switch",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "80 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_80_Pist_Adv",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_80_Suction_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_80_Suction_Off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_80_Arm_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_80_Arm_2_Mag",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 870,
        "y": 940,
        "wires": [
            [
                "a08746d5354b7ca6"
            ],
            [
                "200fb32a051eb9d5"
            ],
            [
                "024515cf20d49d8b"
            ],
            [
                "b7353da5eaa49139"
            ],
            [
                "90a20c37592b2e09"
            ]
        ]
    },
    {
        "id": "bdefce6e938b742d",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "I_80_Pist_Adv",
        "label": "Pushes part out of the magazine",
        "tooltip": "",
        "group": "eae32c4d72ac62d1",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 860,
        "wires": [
            [
                "57ea72ad39ae9e07"
            ]
        ]
    },
    {
        "id": "017eef925e04f2e9",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "I_80_Suction_On",
        "label": "Suction On",
        "tooltip": "",
        "group": "eae32c4d72ac62d1",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 900,
        "wires": [
            [
                "858f29f721765fee"
            ]
        ]
    },
    {
        "id": "7165c651ac767b20",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "I_80_Suction_Off",
        "label": "Suction Off",
        "tooltip": "",
        "group": "eae32c4d72ac62d1",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 940,
        "wires": [
            [
                "121e068d068b3fab"
            ]
        ]
    },
    {
        "id": "dd67c82cb1c5c2bf",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "I_80_Arm_2_Del",
        "label": "Moves arm to delivery",
        "tooltip": "",
        "group": "eae32c4d72ac62d1",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 980,
        "wires": [
            [
                "257f7c359e996b5c"
            ]
        ]
    },
    {
        "id": "6fcceac9d2407985",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "I_80_Arm_2_Mag",
        "label": "Moves arm to magazine",
        "tooltip": "",
        "group": "eae32c4d72ac62d1",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1020,
        "wires": [
            [
                "acd5ee4bb724ba61"
            ]
        ]
    },
    {
        "id": "a712f31223d2c6b2",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 780,
        "wires": [
            [
                "ecaeee754a267ac0"
            ]
        ]
    },
    {
        "id": "3717432d96eeb0cf",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 780,
        "wires": [
            [
                "a712f31223d2c6b2"
            ]
        ]
    },
    {
        "id": "ecaeee754a267ac0",
        "type": "OpcUa-Client",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PA",
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "c767c4d04bfdfc2d",
                "191efbbd72294a96"
            ],
            [
                "7806b94828cc5e1a"
            ]
        ]
    },
    {
        "id": "1e7c7789684c9280",
        "type": "file in",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 780,
        "wires": [
            [
                "3717432d96eeb0cf"
            ]
        ]
    },
    {
        "id": "c767c4d04bfdfc2d",
        "type": "debug",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "80 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 820,
        "wires": []
    },
    {
        "id": "7806b94828cc5e1a",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_80_Pist_Adv\": false,\n            \"I_80_Suction_On\": false,\n            \"I_80_Suction_Off\": false,\n            \"I_80_Arm_2_Del\": false,\n            \"I_80_Arm_2_Mag\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 780,
        "wires": [
            [
                "29dc56dfb48c52a6"
            ]
        ]
    },
    {
        "id": "dec3b783ba1b101e",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 780,
        "wires": [
            [
                "1e7c7789684c9280"
            ]
        ]
    },
    {
        "id": "29dc56dfb48c52a6",
        "type": "trigger",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 780,
        "wires": [
            [
                "d639b48907f0b5cb"
            ]
        ]
    },
    {
        "id": "d639b48907f0b5cb",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 780,
        "wires": [
            [
                "dec3b783ba1b101e"
            ]
        ]
    },
    {
        "id": "191efbbd72294a96",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "Sub Out 80 PA",
        "mode": "link",
        "links": [
            "12a397f209fdb181"
        ],
        "x": 1295,
        "y": 780,
        "wires": []
    },
    {
        "id": "12a397f209fdb181",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "Sub In 80 PA",
        "links": [
            "191efbbd72294a96"
        ],
        "x": 765,
        "y": 940,
        "wires": [
            [
                "ac63ea8059d645c8"
            ]
        ]
    },
    {
        "id": "b3667201ae0a1a6c",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "Read PA",
        "links": [
            "378b01d430a7c7d1"
        ],
        "x": 55,
        "y": 780,
        "wires": [
            [
                "7806b94828cc5e1a"
            ]
        ]
    },
    {
        "id": "a08746d5354b7ca6",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "I_80_Pist_Adv",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 860,
        "wires": [
            [
                "ddd91baeef1f9130"
            ]
        ]
    },
    {
        "id": "200fb32a051eb9d5",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "I_80_Suction_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 900,
        "wires": [
            [
                "ddd91baeef1f9130"
            ]
        ]
    },
    {
        "id": "024515cf20d49d8b",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "I_80_Suction_Off",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 940,
        "wires": [
            [
                "ddd91baeef1f9130"
            ]
        ]
    },
    {
        "id": "b7353da5eaa49139",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "I_80_Arm_2_Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 980,
        "wires": [
            [
                "ddd91baeef1f9130"
            ]
        ]
    },
    {
        "id": "90a20c37592b2e09",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "I_80_Arm_2_Mag",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1020,
        "wires": [
            [
                "ddd91baeef1f9130"
            ]
        ]
    },
    {
        "id": "ddd91baeef1f9130",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "6015fdf8f6e01d3a",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "8fc492043ebf02b7"
        ],
        "x": 1235,
        "y": 940,
        "wires": []
    },
    {
        "id": "1e8c3f05b9cd4bf6",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "item": "I_81_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Led_Start",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "1412134f03f2b19c"
            ]
        ]
    },
    {
        "id": "4c96ef4e28e8151d",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "item": "I_81_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Led_Reset",
        "x": 480,
        "y": 1240,
        "wires": [
            [
                "1412134f03f2b19c"
            ]
        ]
    },
    {
        "id": "9d39da103bffb1c1",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "item": "I_81_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Led_Extra1",
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "1412134f03f2b19c"
            ]
        ]
    },
    {
        "id": "857050cd056fbb09",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "item": "I_81_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Led_Extra2",
        "x": 470,
        "y": 1320,
        "wires": [
            [
                "1412134f03f2b19c"
            ]
        ]
    },
    {
        "id": "3ba145de0731cfaf",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "item": "I_81_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Panel_O4",
        "x": 480,
        "y": 1360,
        "wires": [
            [
                "1412134f03f2b19c"
            ]
        ]
    },
    {
        "id": "1412134f03f2b19c",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "80 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "1cbab702eef23edf"
        ],
        "x": 645,
        "y": 1340,
        "wires": []
    },
    {
        "id": "b42f413ace68f8bf",
        "type": "switch",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "80 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_81_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_81_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1340,
        "wires": [
            [
                "d864c8cd7c31cd03"
            ],
            [
                "877734f3d20fcb2c"
            ],
            [
                "a719824b1fd77c2d"
            ],
            [
                "9ec6f4da53dd11d6"
            ],
            [
                "21c7f9c279e4129a"
            ],
            [
                "98b4358b6df5ca8f"
            ],
            [
                "0890022e76a1be21"
            ],
            [
                "b7830f3fec1c5933"
            ]
        ]
    },
    {
        "id": "8a4ca190cc789b8d",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "1b1b3e354c3eeeea",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "1e8c3f05b9cd4bf6"
            ]
        ]
    },
    {
        "id": "69199139de488903",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "1b1b3e354c3eeeea",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1240,
        "wires": [
            [
                "4c96ef4e28e8151d"
            ]
        ]
    },
    {
        "id": "d92cc09db8f2bde8",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "1b1b3e354c3eeeea",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1280,
        "wires": [
            [
                "9d39da103bffb1c1"
            ]
        ]
    },
    {
        "id": "f5513bbccb292469",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "1b1b3e354c3eeeea",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1320,
        "wires": [
            [
                "857050cd056fbb09"
            ]
        ]
    },
    {
        "id": "8669b3de3e9b8de2",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "1b1b3e354c3eeeea",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1360,
        "wires": [
            [
                "3ba145de0731cfaf"
            ]
        ]
    },
    {
        "id": "e3be709a2b793607",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "1b1b3e354c3eeeea",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1400,
        "wires": [
            [
                "57fe3aa854b28b4f"
            ]
        ]
    },
    {
        "id": "57fe3aa854b28b4f",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "item": "I_81_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Panel_O5",
        "x": 480,
        "y": 1400,
        "wires": [
            [
                "1412134f03f2b19c"
            ]
        ]
    },
    {
        "id": "6276c77a899d9d84",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "1b1b3e354c3eeeea",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1440,
        "wires": [
            [
                "c5246b8d644fd672"
            ]
        ]
    },
    {
        "id": "c5246b8d644fd672",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "item": "I_81_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Panel_O6",
        "x": 480,
        "y": 1440,
        "wires": [
            [
                "1412134f03f2b19c"
            ]
        ]
    },
    {
        "id": "33b31f968e1b9bcd",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "1b1b3e354c3eeeea",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1480,
        "wires": [
            [
                "499e030b0977244c"
            ]
        ]
    },
    {
        "id": "499e030b0977244c",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "item": "I_81_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_81_Panel_O7",
        "x": 480,
        "y": 1480,
        "wires": [
            [
                "1412134f03f2b19c"
            ]
        ]
    },
    {
        "id": "e31c3e8b54da932f",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1120,
        "wires": [
            [
                "c9bef5e546202af7"
            ]
        ]
    },
    {
        "id": "69e5b01f7ae15e56",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1120,
        "wires": [
            [
                "e31c3e8b54da932f"
            ]
        ]
    },
    {
        "id": "c9bef5e546202af7",
        "type": "OpcUa-Client",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AA",
        "x": 1130,
        "y": 1120,
        "wires": [
            [
                "921dcc74fb6029d2",
                "8d4da16c125a8c4c"
            ],
            [
                "c93ebf034a559165"
            ]
        ]
    },
    {
        "id": "11068d0d2244468e",
        "type": "file in",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1120,
        "wires": [
            [
                "69e5b01f7ae15e56"
            ]
        ]
    },
    {
        "id": "921dcc74fb6029d2",
        "type": "debug",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "80 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c93ebf034a559165",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_81_Led_Start\": false,\n            \"I_81_Led_Reset\": false,\n            \"I_81_Led_Extra1\": false,\n            \"I_81_Led_Extra2\": false,\n            \"I_81_Panel_O4\": false,\n            \"I_81_Panel_O5\": false,\n            \"I_81_Panel_O6\": false,\n            \"I_81_Panel_O7\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1120,
        "wires": [
            [
                "7ec7a7c63bf4fc71"
            ]
        ]
    },
    {
        "id": "8e328b656ad13cf0",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1120,
        "wires": [
            [
                "11068d0d2244468e"
            ]
        ]
    },
    {
        "id": "7ec7a7c63bf4fc71",
        "type": "trigger",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1120,
        "wires": [
            [
                "01a0c2e61f83b09e"
            ]
        ]
    },
    {
        "id": "01a0c2e61f83b09e",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1120,
        "wires": [
            [
                "8e328b656ad13cf0"
            ]
        ]
    },
    {
        "id": "8d4da16c125a8c4c",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "Sub Out 80 AA",
        "mode": "link",
        "links": [
            "8071ed5906b6e386"
        ],
        "x": 1295,
        "y": 1120,
        "wires": []
    },
    {
        "id": "8071ed5906b6e386",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "Sub In 80 AA",
        "links": [
            "8d4da16c125a8c4c"
        ],
        "x": 775,
        "y": 1340,
        "wires": [
            [
                "b42f413ace68f8bf"
            ]
        ]
    },
    {
        "id": "e93d76941225f74e",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "Read S",
        "links": [
            "378b01d430a7c7d1"
        ],
        "x": 55,
        "y": 1120,
        "wires": [
            [
                "c93ebf034a559165"
            ]
        ]
    },
    {
        "id": "d864c8cd7c31cd03",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1200,
        "wires": [
            [
                "4d53c16128c1beda"
            ]
        ]
    },
    {
        "id": "877734f3d20fcb2c",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1240,
        "wires": [
            [
                "4d53c16128c1beda"
            ]
        ]
    },
    {
        "id": "a719824b1fd77c2d",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1280,
        "wires": [
            [
                "4d53c16128c1beda"
            ]
        ]
    },
    {
        "id": "9ec6f4da53dd11d6",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1320,
        "wires": [
            [
                "4d53c16128c1beda"
            ]
        ]
    },
    {
        "id": "21c7f9c279e4129a",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1360,
        "wires": [
            [
                "4d53c16128c1beda"
            ]
        ]
    },
    {
        "id": "98b4358b6df5ca8f",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1400,
        "wires": [
            [
                "4d53c16128c1beda"
            ]
        ]
    },
    {
        "id": "0890022e76a1be21",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1440,
        "wires": [
            [
                "4d53c16128c1beda"
            ]
        ]
    },
    {
        "id": "b7830f3fec1c5933",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "I_81_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1480,
        "wires": [
            [
                "4d53c16128c1beda"
            ]
        ]
    },
    {
        "id": "4d53c16128c1beda",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "f995869f74c77ee2",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "8fc492043ebf02b7"
        ],
        "x": 1225,
        "y": 1340,
        "wires": []
    },
    {
        "id": "3058faadb689e0c5",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "item": "C_82_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_82_Profibus",
        "x": 640,
        "y": 1660,
        "wires": [
            [
                "344d653afca7fc14"
            ]
        ]
    },
    {
        "id": "06ea992832a56b21",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "item": "C_83_RQ_Parts",
        "datatype": "Double",
        "value": "",
        "name": "C_83_RQ_Parts",
        "x": 640,
        "y": 1740,
        "wires": [
            [
                "344d653afca7fc14"
            ]
        ]
    },
    {
        "id": "49602133618a1442",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "item": "C_85_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Initialization",
        "x": 630,
        "y": 1700,
        "wires": [
            [
                "344d653afca7fc14"
            ]
        ]
    },
    {
        "id": "cb4c9d0799d4d18f",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "item": "C_85_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Start",
        "x": 650,
        "y": 1780,
        "wires": [
            [
                "344d653afca7fc14"
            ]
        ]
    },
    {
        "id": "192597c4fe6d1531",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "item": "C_85_Single",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Single",
        "x": 650,
        "y": 1820,
        "wires": [
            [
                "344d653afca7fc14"
            ]
        ]
    },
    {
        "id": "26d6b6f9ebe2c061",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "item": "C_85_Continuous",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Continuous",
        "x": 630,
        "y": 1860,
        "wires": [
            [
                "344d653afca7fc14"
            ]
        ]
    },
    {
        "id": "45acf8653aed1d6d",
        "type": "OpcUa-Item",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "item": "C_85_Counted",
        "datatype": "Boolean",
        "value": "",
        "name": "C_85_Counted",
        "x": 640,
        "y": 1900,
        "wires": [
            [
                "344d653afca7fc14"
            ]
        ]
    },
    {
        "id": "344d653afca7fc14",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "80 Control",
        "mode": "link",
        "links": [
            "1cbab702eef23edf"
        ],
        "x": 805,
        "y": 1780,
        "wires": []
    },
    {
        "id": "6bdb4805e92abfd0",
        "type": "switch",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "80 C",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_82_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_83_RQ_Parts",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Single",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Continuous",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_85_Counted",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 1010,
        "y": 1780,
        "wires": [
            [
                "309a845b41de56ca"
            ],
            [
                "0470363f68d49dac"
            ],
            [
                "61598607f16de832"
            ],
            [
                "63ac0bef3e6341f2"
            ],
            [
                "5a6e7ca2dde45fa6"
            ],
            [
                "03783101540211e4"
            ],
            [
                "9c5151438a29c3f1"
            ]
        ]
    },
    {
        "id": "309a845b41de56ca",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "order": 2,
        "group": "5b0242e632593bf8",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_82_Profibus",
        "x": 1200,
        "y": 1660,
        "wires": []
    },
    {
        "id": "0470363f68d49dac",
        "type": "ui_led",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "order": 1,
        "group": "5b0242e632593bf8",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_85_Initialization",
        "x": 1210,
        "y": 1700,
        "wires": []
    },
    {
        "id": "17948befdd774dbc",
        "type": "ui_numeric",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "C_83_RQ_Parts",
        "label": "Requested Parts",
        "tooltip": "Number of Requested Parts to be used with C_85_Counted.",
        "group": "5b0242e632593bf8",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 200,
        "y": 1740,
        "wires": [
            [
                "06ea992832a56b21"
            ]
        ]
    },
    {
        "id": "54dea002d3043eb7",
        "type": "ui_switch",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "C_85_Start",
        "label": "Start",
        "tooltip": "Start Production",
        "group": "5b0242e632593bf8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 1780,
        "wires": [
            [
                "cb4c9d0799d4d18f"
            ]
        ]
    },
    {
        "id": "ca068c04ca37ae21",
        "type": "ui_dropdown",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "5b0242e632593bf8",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Single Mode",
                "value": "C_85_Single",
                "type": "str"
            },
            {
                "label": "Continuous Mode",
                "value": "C_85_Continuous",
                "type": "str"
            },
            {
                "label": "Counted Mode",
                "value": "C_85_Counted",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 1860,
        "wires": [
            [
                "cabe24a36daf52e4",
                "6d09200409f474fb",
                "06e4f75c687342b5"
            ]
        ]
    },
    {
        "id": "cabe24a36daf52e4",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "C_85_Single",
        "func": "if (msg.payload === \"C_85_Single\") return { payload: true, topic: \"C_85_Single\"};\nelse return { payload: false, topic: \"C_85_Single\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1820,
        "wires": [
            [
                "192597c4fe6d1531"
            ]
        ]
    },
    {
        "id": "6d09200409f474fb",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "C_85_Continuous",
        "func": "if (msg.payload === \"C_85_Continuous\") return { payload: true, topic: \"C_85_Continuous\"};\nelse return { payload: false, topic: \"C_85_Continuous\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1860,
        "wires": [
            [
                "26d6b6f9ebe2c061"
            ]
        ]
    },
    {
        "id": "06e4f75c687342b5",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "C_85_Counted",
        "func": "if (msg.payload === \"C_85_Counted\") return { payload: true, topic: \"C_85_Counted\"};\nelse return { payload: false, topic: \"C_85_Counted\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1900,
        "wires": [
            [
                "45acf8653aed1d6d"
            ]
        ]
    },
    {
        "id": "37bd00075b3045b6",
        "type": "inject",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_85_Single",
        "payloadType": "str",
        "x": 190,
        "y": 1900,
        "wires": [
            [
                "ca068c04ca37ae21"
            ]
        ]
    },
    {
        "id": "47987cc3f5508d54",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1580,
        "wires": [
            [
                "ea02a993da4cdf14"
            ]
        ]
    },
    {
        "id": "d3fb1386853986f5",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1580,
        "wires": [
            [
                "47987cc3f5508d54"
            ]
        ]
    },
    {
        "id": "ea02a993da4cdf14",
        "type": "OpcUa-Client",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub C",
        "x": 1130,
        "y": 1580,
        "wires": [
            [
                "b187b558fd58ecab",
                "6a8596e2f2a6275a"
            ],
            [
                "bdf43bc3843ec6b4"
            ]
        ]
    },
    {
        "id": "72c93d5008bb9ac5",
        "type": "file in",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Distribution/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1580,
        "wires": [
            [
                "d3fb1386853986f5"
            ]
        ]
    },
    {
        "id": "b187b558fd58ecab",
        "type": "debug",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "80 C",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1620,
        "wires": []
    },
    {
        "id": "bdf43bc3843ec6b4",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_82_Profibus\": false,\n            \"C_83_RQ_Parts\": 0,\n            \"C_85_Initialization\": false,\n            \"C_85_Start\": false,\n            \"C_85_Single\": false,\n            \"C_85_Continuous\": false,\n            \"C_85_Counted\": false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1580,
        "wires": [
            [
                "2cd4da396cce5165"
            ]
        ]
    },
    {
        "id": "a93d913e6df9300d",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1580,
        "wires": [
            [
                "72c93d5008bb9ac5"
            ]
        ]
    },
    {
        "id": "2cd4da396cce5165",
        "type": "trigger",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1580,
        "wires": [
            [
                "bbcbcb422ee129e5"
            ]
        ]
    },
    {
        "id": "bbcbcb422ee129e5",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1580,
        "wires": [
            [
                "a93d913e6df9300d"
            ]
        ]
    },
    {
        "id": "6a8596e2f2a6275a",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "Sub Out 80 C",
        "mode": "link",
        "links": [
            "4bc090f8b85f0871"
        ],
        "x": 1295,
        "y": 1580,
        "wires": []
    },
    {
        "id": "4bc090f8b85f0871",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "Sub In 80 C",
        "links": [
            "6a8596e2f2a6275a"
        ],
        "x": 905,
        "y": 1780,
        "wires": [
            [
                "6bdb4805e92abfd0"
            ]
        ]
    },
    {
        "id": "79d8a61eafea90ee",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "S7 C",
        "links": [
            "bddf79de184afa27"
        ],
        "x": 55,
        "y": 1680,
        "wires": [
            [
                "85726d0d240ed296",
                "68a70b985101c97b"
            ]
        ]
    },
    {
        "id": "85726d0d240ed296",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "C_82_Profibus",
        "func": "if (msg.topic === \"C_82_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_82_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1660,
        "wires": [
            [
                "3058faadb689e0c5"
            ]
        ]
    },
    {
        "id": "68a70b985101c97b",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "C_85_Initialization",
        "func": "if (msg.topic === \"C_85_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_85_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1700,
        "wires": [
            [
                "49602133618a1442"
            ]
        ]
    },
    {
        "id": "e48d394a6fe3b8cb",
        "type": "link in",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "Read C",
        "links": [
            "378b01d430a7c7d1"
        ],
        "x": 55,
        "y": 1580,
        "wires": [
            [
                "bdf43bc3843ec6b4"
            ]
        ]
    },
    {
        "id": "61598607f16de832",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "C_83_RQ_Parts",
        "func": "let Value\nlet TAG\n\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload})\n\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1740,
        "wires": [
            [
                "20677fc943a8c194"
            ]
        ]
    },
    {
        "id": "63ac0bef3e6341f2",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "C_85_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1780,
        "wires": [
            [
                "20677fc943a8c194"
            ]
        ]
    },
    {
        "id": "5a6e7ca2dde45fa6",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "C_85_Single",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1820,
        "wires": [
            [
                "20677fc943a8c194"
            ]
        ]
    },
    {
        "id": "03783101540211e4",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "C_85_Continuous",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1860,
        "wires": [
            [
                "20677fc943a8c194"
            ]
        ]
    },
    {
        "id": "9c5151438a29c3f1",
        "type": "function",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "C_85_Counted",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1900,
        "wires": [
            [
                "20677fc943a8c194"
            ]
        ]
    },
    {
        "id": "20677fc943a8c194",
        "type": "link out",
        "z": "1b6d40929ba9c133",
        "g": "05991a84d51b3c8d",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "8fc492043ebf02b7"
        ],
        "x": 1365,
        "y": 1780,
        "wires": []
    },
    {
        "id": "9dad70c2c97bab03",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "item": "F_92_Claw_2_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "F_92_Claw_2_Cart",
        "x": 470,
        "y": 2480,
        "wires": [
            [
                "8c808091b70742a1"
            ]
        ]
    },
    {
        "id": "4cec187110a8ebfd",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "item": "F_92_Claw_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "F_92_Claw_2_Del",
        "x": 470,
        "y": 2520,
        "wires": [
            [
                "8c808091b70742a1"
            ]
        ]
    },
    {
        "id": "ad16192df3c8dd57",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "item": "F_92_Claw_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "F_92_Claw_Down",
        "x": 470,
        "y": 2560,
        "wires": [
            [
                "8c808091b70742a1"
            ]
        ]
    },
    {
        "id": "9c1981d4248a6c26",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "item": "F_92_Close_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "F_92_Close_Claw",
        "x": 470,
        "y": 2600,
        "wires": [
            [
                "8c808091b70742a1"
            ]
        ]
    },
    {
        "id": "8c808091b70742a1",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "90 Physical Feedback",
        "mode": "link",
        "links": [
            "b6bc552313f3f14f"
        ],
        "x": 645,
        "y": 2540,
        "wires": []
    },
    {
        "id": "acdaa4ca374bc711",
        "type": "switch",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "90 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_92_Claw_2_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_92_Claw_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_92_Claw_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_92_Close_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 2540,
        "wires": [
            [
                "e87395ebcfd1bc9e"
            ],
            [
                "6e2f686d7f22348d"
            ],
            [
                "083f09df52f5a95c"
            ],
            [
                "90bcafc099d09b99"
            ]
        ]
    },
    {
        "id": "e87395ebcfd1bc9e",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "order": 0,
        "group": "27d977d5eaf06e45",
        "width": 0,
        "height": 0,
        "label": "Moves claw to cart position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_92_Claw_2_Cart",
        "x": 1070,
        "y": 2480,
        "wires": []
    },
    {
        "id": "6e2f686d7f22348d",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "order": 0,
        "group": "27d977d5eaf06e45",
        "width": 0,
        "height": 0,
        "label": "Moves claw to delivery position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_92_Claw_2_Del",
        "x": 1070,
        "y": 2520,
        "wires": []
    },
    {
        "id": "083f09df52f5a95c",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "order": 0,
        "group": "27d977d5eaf06e45",
        "width": 0,
        "height": 0,
        "label": "Lowers claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_92_Claw_Down",
        "x": 1070,
        "y": 2560,
        "wires": []
    },
    {
        "id": "90bcafc099d09b99",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "order": 0,
        "group": "27d977d5eaf06e45",
        "width": 0,
        "height": 0,
        "label": "Closes claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_92_Close_Claw",
        "x": 1070,
        "y": 2600,
        "wires": []
    },
    {
        "id": "d96bbe1a09e3acc9",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2400,
        "wires": [
            [
                "965d0bdbde7f1676"
            ]
        ]
    },
    {
        "id": "69a1b49807dd9c2f",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2400,
        "wires": [
            [
                "d96bbe1a09e3acc9"
            ]
        ]
    },
    {
        "id": "965d0bdbde7f1676",
        "type": "OpcUa-Client",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PF",
        "x": 1130,
        "y": 2400,
        "wires": [
            [
                "f7d89e1bd0ca63e0",
                "152a23d6ee15d13f"
            ],
            [
                "14c1c61b237ab4d2"
            ]
        ]
    },
    {
        "id": "52b03e51cb306264",
        "type": "file in",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2400,
        "wires": [
            [
                "69a1b49807dd9c2f"
            ]
        ]
    },
    {
        "id": "f7d89e1bd0ca63e0",
        "type": "debug",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "90 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2440,
        "wires": []
    },
    {
        "id": "14c1c61b237ab4d2",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_92_Claw_2_Cart\" : false,\n            \"F_92_Claw_2_Del\" : false,\n            \"F_92_Claw_Down\" : false,\n            \"F_92_Close_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2400,
        "wires": [
            [
                "0f19f96fa0f4075c"
            ]
        ]
    },
    {
        "id": "a467ee2ce64a7fb7",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2400,
        "wires": [
            [
                "52b03e51cb306264"
            ]
        ]
    },
    {
        "id": "0f19f96fa0f4075c",
        "type": "trigger",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2400,
        "wires": [
            [
                "2889ba191e92c29f"
            ]
        ]
    },
    {
        "id": "2889ba191e92c29f",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2400,
        "wires": [
            [
                "a467ee2ce64a7fb7"
            ]
        ]
    },
    {
        "id": "683b29343d0636a8",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "item": "F_93_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Led_Start",
        "x": 480,
        "y": 2780,
        "wires": [
            [
                "f512c9b2f44f30dd"
            ]
        ]
    },
    {
        "id": "5f21aec030c7e784",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "item": "F_93_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Led_Reset",
        "x": 470,
        "y": 2820,
        "wires": [
            [
                "f512c9b2f44f30dd"
            ]
        ]
    },
    {
        "id": "f3913f43f2cc742b",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "item": "F_93_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Led_Extra1",
        "x": 470,
        "y": 2860,
        "wires": [
            [
                "f512c9b2f44f30dd"
            ]
        ]
    },
    {
        "id": "6d5ef480efa75883",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "item": "F_93_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Led_Extra2",
        "x": 470,
        "y": 2900,
        "wires": [
            [
                "f512c9b2f44f30dd"
            ]
        ]
    },
    {
        "id": "cc2eb643b5800635",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "item": "F_93_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Panel_O4",
        "x": 480,
        "y": 2940,
        "wires": [
            [
                "f512c9b2f44f30dd"
            ]
        ]
    },
    {
        "id": "fa254c7d78ac9c9a",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "item": "F_93_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Panel_O5",
        "x": 480,
        "y": 2980,
        "wires": [
            [
                "f512c9b2f44f30dd"
            ]
        ]
    },
    {
        "id": "d41a61fe717c9a68",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "item": "F_93_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Panel_O6",
        "x": 480,
        "y": 3020,
        "wires": [
            [
                "f512c9b2f44f30dd"
            ]
        ]
    },
    {
        "id": "f512c9b2f44f30dd",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "90 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "b6bc552313f3f14f"
        ],
        "x": 645,
        "y": 2920,
        "wires": []
    },
    {
        "id": "ef7b187bf4481352",
        "type": "switch",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "90 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_93_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_93_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 2920,
        "wires": [
            [
                "ca7e611834a66788"
            ],
            [
                "2126a20940bc8bcf"
            ],
            [
                "f14171e680744e8c"
            ],
            [
                "2b8f9f4fa460ebdf"
            ],
            [
                "6321ba54dc90e2b5"
            ],
            [
                "d1e593f353650fb9"
            ],
            [
                "6f0cc638407545af"
            ],
            [
                "f6700249220c808a"
            ]
        ]
    },
    {
        "id": "ca7e611834a66788",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "order": 0,
        "group": "8f466fe0b9fec698",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Led_Start",
        "x": 1060,
        "y": 2780,
        "wires": []
    },
    {
        "id": "2126a20940bc8bcf",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "order": 0,
        "group": "8f466fe0b9fec698",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Led_Reset",
        "x": 1070,
        "y": 2820,
        "wires": []
    },
    {
        "id": "f14171e680744e8c",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "order": 0,
        "group": "8f466fe0b9fec698",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Led_Extra1",
        "x": 1070,
        "y": 2860,
        "wires": []
    },
    {
        "id": "2b8f9f4fa460ebdf",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "order": 0,
        "group": "8f466fe0b9fec698",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Led_Extra2",
        "x": 1070,
        "y": 2900,
        "wires": []
    },
    {
        "id": "6321ba54dc90e2b5",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "order": 0,
        "group": "8f466fe0b9fec698",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Panel_O4",
        "x": 1060,
        "y": 2940,
        "wires": []
    },
    {
        "id": "d1e593f353650fb9",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "order": 0,
        "group": "8f466fe0b9fec698",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Panel_O5",
        "x": 1060,
        "y": 2980,
        "wires": []
    },
    {
        "id": "6f0cc638407545af",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "order": 0,
        "group": "8f466fe0b9fec698",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Panel_O6",
        "x": 1060,
        "y": 3020,
        "wires": []
    },
    {
        "id": "0401c9b84bc2e8f4",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "item": "F_93_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_93_Panel_O7",
        "x": 480,
        "y": 3060,
        "wires": [
            [
                "f512c9b2f44f30dd"
            ]
        ]
    },
    {
        "id": "f6700249220c808a",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "order": 0,
        "group": "8f466fe0b9fec698",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_93_Panel_O7",
        "x": 1060,
        "y": 3060,
        "wires": []
    },
    {
        "id": "f142708a735f0338",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2700,
        "wires": [
            [
                "3229cca2704428c1"
            ]
        ]
    },
    {
        "id": "776e7720d311cac6",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2700,
        "wires": [
            [
                "f142708a735f0338"
            ]
        ]
    },
    {
        "id": "3229cca2704428c1",
        "type": "OpcUa-Client",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AF",
        "x": 1130,
        "y": 2700,
        "wires": [
            [
                "3302f69813a56a7b",
                "d388edc9420db302"
            ],
            [
                "4a30202590d76011"
            ]
        ]
    },
    {
        "id": "87771fd380103f78",
        "type": "file in",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2700,
        "wires": [
            [
                "776e7720d311cac6"
            ]
        ]
    },
    {
        "id": "3302f69813a56a7b",
        "type": "debug",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "90 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2740,
        "wires": []
    },
    {
        "id": "4a30202590d76011",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_93_Led_Start\" : false,\n            \"F_93_Led_Reset\" : false,\n            \"F_93_Led_Extra1\" : false,\n            \"F_93_Led_Extra2\" : false,\n            \"F_93_Panel_O4\" : false,\n            \"F_93_Panel_O5\" : false,\n            \"F_93_Panel_O6\" : false,\n            \"F_93_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2700,
        "wires": [
            [
                "eda64c12db7bf495"
            ]
        ]
    },
    {
        "id": "cd886c350f3fd96c",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2700,
        "wires": [
            [
                "87771fd380103f78"
            ]
        ]
    },
    {
        "id": "eda64c12db7bf495",
        "type": "trigger",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2700,
        "wires": [
            [
                "ef822fc73c2f884d"
            ]
        ]
    },
    {
        "id": "ef822fc73c2f884d",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2700,
        "wires": [
            [
                "cd886c350f3fd96c"
            ]
        ]
    },
    {
        "id": "50c88bb6a3fee3ba",
        "type": "comment",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "21bf85898d4f2fe8",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "fc27cffb95bd65df"
            ]
        ]
    },
    {
        "id": "fc27cffb95bd65df",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Handling2_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "d379578ecea16ea5"
            ]
        ]
    },
    {
        "id": "0cbbfeb1118474e3",
        "type": "file",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "4893556c0bd0baf6",
        "type": "comment",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "d379578ecea16ea5",
        "type": "OpcUa-Client",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "f148658c1a9d0132"
            ],
            [
                "3f35cb0203a87714",
                "73b4286462c0d18c"
            ]
        ]
    },
    {
        "id": "f148658c1a9d0132",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "2efee3e3f911a3df",
                "d582da83dfc60ce3"
            ]
        ]
    },
    {
        "id": "2efee3e3f911a3df",
        "type": "file",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "d582da83dfc60ce3",
        "type": "debug",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "db9e17e96a7d2abd",
        "type": "comment",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "fc6e1f006ef423d4",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "2b5fc042b1f1d405"
            ]
        ]
    },
    {
        "id": "40036dd5fbc10f13",
        "type": "OpcUa-Client",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "endpoint": "a2328ac43b0b7d73",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "19fb43b94073a8ba"
            ],
            []
        ]
    },
    {
        "id": "19fb43b94073a8ba",
        "type": "debug",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "b6bc552313f3f14f",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Write_Hand2",
        "links": [
            "c5982121c6c33497",
            "acb78bc918bc5eb0",
            "1b91aea4a857aa35",
            "a88ae441125ee885",
            "8c808091b70742a1",
            "f512c9b2f44f30dd",
            "020ac694ad21ce89",
            "d5020c8bf202a4c1"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "b79273a1e7ceb1e8"
            ]
        ]
    },
    {
        "id": "b79273a1e7ceb1e8",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "c37bd28a4d92f098"
            ]
        ]
    },
    {
        "id": "c37bd28a4d92f098",
        "type": "file in",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "fc6e1f006ef423d4"
            ]
        ]
    },
    {
        "id": "2b5fc042b1f1d405",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "40036dd5fbc10f13"
            ]
        ]
    },
    {
        "id": "e80d9ce7100c1ede",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "CSV Link",
        "links": [
            "3f35cb0203a87714"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "ef0d5fb4165cecea"
            ]
        ]
    },
    {
        "id": "ef0d5fb4165cecea",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "f6e7e5c907fb9cde"
            ]
        ]
    },
    {
        "id": "f6e7e5c907fb9cde",
        "type": "trigger",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "0cbbfeb1118474e3"
            ]
        ]
    },
    {
        "id": "3f35cb0203a87714",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "e80d9ce7100c1ede",
            "255587c999fd53f0"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "255587c999fd53f0",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "CSV Link",
        "links": [
            "3f35cb0203a87714"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "c59662bd1d229bfc"
            ]
        ]
    },
    {
        "id": "c59662bd1d229bfc",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"I_90_Claw_2_Cart\" : false,\n    \"I_90_Claw_2_Del\" : false,\n    \"I_90_Claw_Down\" : false,\n    \"I_90_Close_Claw\" : false,\n    \"I_91_Led_Start\" : false,\n    \"I_91_Led_Reset\" : false,\n    \"I_91_Led_Extra1\" : false,\n    \"I_91_Led_Extra2\" : false,\n    \"I_91_Panel_O4\" : false,\n    \"I_91_Panel_O5\" : false,\n    \"I_91_Panel_O6\" : false,\n    \"I_91_Panel_O7\" : false,\n    \"A_94_Request\" : false,\n    \"A_94_No_Cart\" : false,\n    \"A_94_Cart_Full\" : false,\n    \"A_94_Cart_Stat\" : false,\n    \"A_94_Cart_Next\" : false,\n    \"A_94_Optic\" : false,\n    \"A_94_Count\" : false,\n    \"A_94_Pist_Bck\" : false,\n    \"A_94_Release_FB\" : false,\n    \"C_95_Initialization\" : false,\n    \"C_92_Profibus\" : true,\n    \"C_95_Start\" : false,\n    \"C_95_Cart2Del\" : true,\n    \"C_95_Del2Cart\" : false,\n    \"F_92_Claw_2_Cart\" : false,\n    \"F_92_Claw_2_Del\" : false,\n    \"F_92_Claw_Down\" : false,\n    \"F_92_Close_Claw\" : false,\n    \"F_93_Led_Start\" : false,\n    \"F_93_Led_Reset\" : false,\n    \"F_93_Led_Extra1\" : false,\n    \"F_93_Led_Extra2\" : false,\n    \"F_93_Panel_O4\" : false,\n    \"F_93_Panel_O5\" : false,\n    \"F_93_Panel_O6\" : false,\n    \"F_93_Panel_O7\" : false,\t\n    \"O_90_Part_Reserve\" : false,\n    \"O_90_Claw_Del\" : false,\n    \"O_90_Claw_Cart\" : true,\n    \"O_90_Claw_Reserve\" : false,\n    \"O_90_Claw_Low\" : false,\n    \"O_90_Claw_High\" : true,\n    \"O_90_Part_in_Claw\" : false,\n    \"O_91_Start\" : false,\n    \"O_91_Stop\" : true,\n    \"O_91_Key_Pos\" : false,\n    \"O_91_Reset\" : false,\n    \"O_91_Panel_I4\" : false,\n    \"O_91_Panel_I5\" : true,\n    \"O_91_Panel_I6\" : false,\n    \"O_91_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "4a5c743c7d2b7392"
            ]
        ]
    },
    {
        "id": "4a5c743c7d2b7392",
        "type": "trigger",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "21bf85898d4f2fe8"
            ]
        ]
    },
    {
        "id": "fa2c4470b22e3017",
        "type": "debug",
        "z": "078507e39b438a2b",
        "g": "21809d9ceb4a9b5f",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 100,
        "wires": []
    },
    {
        "id": "91440968ff4d670d",
        "type": "OpcUa-Server",
        "z": "078507e39b438a2b",
        "g": "21809d9ceb4a9b5f",
        "port": "53880",
        "name": "Server: Handling 2",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Handling2/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Handling2",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": 0,
        "maxNodesPerHistoryReadData": 0,
        "maxNodesPerHistoryReadEvents": 0,
        "maxNodesPerHistoryUpdateData": 0,
        "maxNodesPerRead": 0,
        "maxNodesPerWrite": 0,
        "maxNodesPerMethodCall": 0,
        "maxNodesPerRegisterNodes": 0,
        "maxNodesPerNodeManagement": 0,
        "maxMonitoredItemsPerCall": 0,
        "maxNodesPerHistoryUpdateEvents": 0,
        "maxNodesPerTranslateBrowsePathsToNodeIds": 0,
        "maxConnectionsPerEndpoint": 20,
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": 20,
        "x": 130,
        "y": 60,
        "wires": [
            [
                "fa2c4470b22e3017"
            ]
        ]
    },
    {
        "id": "52c32fd4f19e797a",
        "type": "debug",
        "z": "078507e39b438a2b",
        "g": "fe54e8f3bb4da20f",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "516d17040f361a78",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "fe54e8f3bb4da20f",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "2df9ee1fcda1f78a",
            "f56b40ef06410759",
            "f2c35ee224a1b49a",
            "5b83013aa6e829c7",
            "cb9769f2672a5e2b",
            "f7cf919049763fbc"
        ],
        "x": 825,
        "y": 60,
        "wires": []
    },
    {
        "id": "152a23d6ee15d13f",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "Sub Out 90 PF",
        "mode": "link",
        "links": [
            "355e0e0b4184b0e0"
        ],
        "x": 1295,
        "y": 2400,
        "wires": []
    },
    {
        "id": "355e0e0b4184b0e0",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "Sub In 90 PF",
        "links": [
            "152a23d6ee15d13f"
        ],
        "x": 775,
        "y": 2540,
        "wires": [
            [
                "acdaa4ca374bc711"
            ]
        ]
    },
    {
        "id": "4b7088d7a25f7b9c",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "F_92_Claw_2_Cart",
        "func": "if (msg.topic === \"F_92_Claw_2_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_92_Claw_2_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2480,
        "wires": [
            [
                "9dad70c2c97bab03"
            ]
        ]
    },
    {
        "id": "f2c35ee224a1b49a",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "S7 PF",
        "links": [
            "516d17040f361a78"
        ],
        "x": 55,
        "y": 2540,
        "wires": [
            [
                "4b7088d7a25f7b9c",
                "f4acd4083aa18fc9",
                "d318ca9f80a01da6",
                "05515ec289b3a6dd"
            ]
        ]
    },
    {
        "id": "f4acd4083aa18fc9",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "F_92_Claw_2_Del",
        "func": "if (msg.topic === \"F_92_Claw_2_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_92_Claw_2_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2520,
        "wires": [
            [
                "4cec187110a8ebfd"
            ]
        ]
    },
    {
        "id": "d318ca9f80a01da6",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "F_92_Claw_Down",
        "func": "if (msg.topic === \"F_92_Claw_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_92_Claw_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2560,
        "wires": [
            [
                "ad16192df3c8dd57"
            ]
        ]
    },
    {
        "id": "05515ec289b3a6dd",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "F_92_Close_Claw",
        "func": "if (msg.topic === \"F_92_Close_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_92_Close_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2600,
        "wires": [
            [
                "9c1981d4248a6c26"
            ]
        ]
    },
    {
        "id": "d388edc9420db302",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "Sub Out 90 AF",
        "mode": "link",
        "links": [
            "fabe55b700b02bf2"
        ],
        "x": 1295,
        "y": 2700,
        "wires": []
    },
    {
        "id": "fabe55b700b02bf2",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "Sub In 90 AF",
        "links": [
            "d388edc9420db302"
        ],
        "x": 775,
        "y": 2920,
        "wires": [
            [
                "ef7b187bf4481352"
            ]
        ]
    },
    {
        "id": "1dbc69deaf10ea95",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "F_93_Led_Start",
        "func": "if (msg.topic === \"F_93_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2780,
        "wires": [
            [
                "683b29343d0636a8"
            ]
        ]
    },
    {
        "id": "5b83013aa6e829c7",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "S7 AF",
        "links": [
            "516d17040f361a78"
        ],
        "x": 55,
        "y": 2920,
        "wires": [
            [
                "1dbc69deaf10ea95",
                "7aa3bf1bf8abdbf2",
                "27c498d7ca23cd80",
                "c086a841b4ba7731",
                "a38c785cd14fb938",
                "e48cb0dafb032ed9",
                "25aa39aa2f2c7c75",
                "b2bd59523984c6f0"
            ]
        ]
    },
    {
        "id": "a38c785cd14fb938",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "F_93_Panel_O4",
        "func": "if (msg.topic === \"F_93_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2940,
        "wires": [
            [
                "cc2eb643b5800635"
            ]
        ]
    },
    {
        "id": "7aa3bf1bf8abdbf2",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "F_93_Led_Reset",
        "func": "if (msg.topic === \"F_93_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2820,
        "wires": [
            [
                "5f21aec030c7e784"
            ]
        ]
    },
    {
        "id": "27c498d7ca23cd80",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "F_93_Led_Extra1",
        "func": "if (msg.topic === \"F_93_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2860,
        "wires": [
            [
                "f3913f43f2cc742b"
            ]
        ]
    },
    {
        "id": "c086a841b4ba7731",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "F_93_Led_Extra2",
        "func": "if (msg.topic === \"F_93_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2900,
        "wires": [
            [
                "6d5ef480efa75883"
            ]
        ]
    },
    {
        "id": "e48cb0dafb032ed9",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "F_93_Panel_O5",
        "func": "if (msg.topic === \"F_93_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2980,
        "wires": [
            [
                "fa254c7d78ac9c9a"
            ]
        ]
    },
    {
        "id": "25aa39aa2f2c7c75",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "F_93_Panel_O6",
        "func": "if (msg.topic === \"F_93_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3020,
        "wires": [
            [
                "d41a61fe717c9a68"
            ]
        ]
    },
    {
        "id": "b2bd59523984c6f0",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "F_93_Panel_O7",
        "func": "if (msg.topic === \"F_93_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_93_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3060,
        "wires": [
            [
                "0401c9b84bc2e8f4"
            ]
        ]
    },
    {
        "id": "7cb0a432ac4c3fe5",
        "type": "mqtt in",
        "z": "078507e39b438a2b",
        "g": "fe54e8f3bb4da20f",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "4de211dc0a9652ab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "ef9e81862cedd8ab"
            ]
        ]
    },
    {
        "id": "ef9e81862cedd8ab",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "fe54e8f3bb4da20f",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "516d17040f361a78",
                "52c32fd4f19e797a"
            ]
        ]
    },
    {
        "id": "73b4286462c0d18c",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "c4a016bca2449959"
            ]
        ]
    },
    {
        "id": "c4a016bca2449959",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "8bc8dad591767a58",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "909251c06d3388c8",
            "b810539d30293938",
            "07ce958e8a6808fe",
            "52d5115293cab3be",
            "baf1134278576234",
            "2c7ba96cca478041",
            "5347d402a1ec422c",
            "ddfbf309b36463a6"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "07ce958e8a6808fe",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "8a2bb225ff15aa30",
        "name": "Read AF",
        "links": [
            "c4a016bca2449959"
        ],
        "x": 55,
        "y": 2700,
        "wires": [
            [
                "4a30202590d76011"
            ]
        ]
    },
    {
        "id": "52d5115293cab3be",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "5013d4b8351d33d6",
        "name": "Read PF",
        "links": [
            "c4a016bca2449959"
        ],
        "x": 55,
        "y": 2400,
        "wires": [
            [
                "14c1c61b237ab4d2"
            ]
        ]
    },
    {
        "id": "0def3965ced795b4",
        "type": "mqtt out",
        "z": "078507e39b438a2b",
        "g": "fe54e8f3bb4da20f",
        "name": "S7Variables",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4de211dc0a9652ab",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "fba4ecfb29f40396",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "fe54e8f3bb4da20f",
        "name": "S7 Actuators",
        "links": [
            "23cd9c479def8fdd",
            "797d084aa540214e",
            "80b78a3f79f4d923"
        ],
        "x": 565,
        "y": 100,
        "wires": [
            [
                "0def3965ced795b4"
            ]
        ]
    },
    {
        "id": "e212c046525ae934",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "item": "O_90_Part_Reserve",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Part_Reserve",
        "x": 460,
        "y": 3240,
        "wires": [
            [
                "a88ae441125ee885"
            ]
        ]
    },
    {
        "id": "ef755c034c2b00cf",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "item": "O_90_Claw_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_Del",
        "x": 480,
        "y": 3280,
        "wires": [
            [
                "a88ae441125ee885"
            ]
        ]
    },
    {
        "id": "60ef929a2b996885",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "item": "O_90_Claw_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_Cart",
        "x": 470,
        "y": 3320,
        "wires": [
            [
                "a88ae441125ee885"
            ]
        ]
    },
    {
        "id": "f28a3871fe703389",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "item": "O_90_Claw_Reserve",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_Reserve",
        "x": 460,
        "y": 3360,
        "wires": [
            [
                "a88ae441125ee885"
            ]
        ]
    },
    {
        "id": "7ee155a763ea3309",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "item": "O_90_Claw_Low",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_Low",
        "x": 470,
        "y": 3400,
        "wires": [
            [
                "a88ae441125ee885"
            ]
        ]
    },
    {
        "id": "9b5d4ea4289e61e2",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "item": "O_90_Claw_High",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Claw_High",
        "x": 470,
        "y": 3440,
        "wires": [
            [
                "a88ae441125ee885"
            ]
        ]
    },
    {
        "id": "d2fe7f5d1cf65652",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "item": "O_90_Part_in_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "O_90_Part_in_Claw",
        "x": 460,
        "y": 3480,
        "wires": [
            [
                "a88ae441125ee885"
            ]
        ]
    },
    {
        "id": "a88ae441125ee885",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "90 Physical Sensor",
        "mode": "link",
        "links": [
            "b6bc552313f3f14f"
        ],
        "x": 645,
        "y": 3360,
        "wires": []
    },
    {
        "id": "9c50640d4dbbf376",
        "type": "switch",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "90 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_90_Part_Reserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_Reserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_Low",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Claw_High",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_90_Part_in_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 870,
        "y": 3360,
        "wires": [
            [
                "af5e09cdcc9406fe"
            ],
            [
                "435619c525d7a58e"
            ],
            [
                "e017d4c803b921a6"
            ],
            [
                "2fc160f9608c57d3"
            ],
            [
                "1457d385d6ac9070"
            ],
            [
                "66744a695480aab4"
            ],
            [
                "8c36e8ed0dd10e23"
            ]
        ]
    },
    {
        "id": "af5e09cdcc9406fe",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "order": 0,
        "group": "db272c300ec944f8",
        "width": 0,
        "height": 0,
        "label": "Part in reserve position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Part_Reserve",
        "x": 1080,
        "y": 3240,
        "wires": []
    },
    {
        "id": "435619c525d7a58e",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "order": 0,
        "group": "db272c300ec944f8",
        "width": 0,
        "height": 0,
        "label": "Claw at delivery position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_Del",
        "x": 1060,
        "y": 3280,
        "wires": []
    },
    {
        "id": "e017d4c803b921a6",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "order": 0,
        "group": "db272c300ec944f8",
        "width": 0,
        "height": 0,
        "label": "Claw at cart position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_Cart",
        "x": 1070,
        "y": 3320,
        "wires": []
    },
    {
        "id": "2fc160f9608c57d3",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "order": 0,
        "group": "db272c300ec944f8",
        "width": 0,
        "height": 0,
        "label": "Claw at reserve position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_Reserve",
        "x": 1080,
        "y": 3360,
        "wires": []
    },
    {
        "id": "1457d385d6ac9070",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "order": 0,
        "group": "db272c300ec944f8",
        "width": 0,
        "height": 0,
        "label": "Claw Low",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_Low",
        "x": 1070,
        "y": 3400,
        "wires": []
    },
    {
        "id": "66744a695480aab4",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "order": 0,
        "group": "db272c300ec944f8",
        "width": 0,
        "height": 0,
        "label": "Claw high",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Claw_High",
        "x": 1070,
        "y": 3440,
        "wires": []
    },
    {
        "id": "8c36e8ed0dd10e23",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "order": 0,
        "group": "db272c300ec944f8",
        "width": 0,
        "height": 0,
        "label": "Part in claw",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_90_Part_in_Claw",
        "x": 1080,
        "y": 3480,
        "wires": []
    },
    {
        "id": "646ee7f74323251b",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_90_Part_Reserve\" : false,\n            \"O_90_Claw_Del\" : false,\n            \"O_90_Claw_Reserve\" : false,\n            \"O_90_Claw_Cart\" : false,\n            \"O_90_Claw_Low\" : false,\n            \"O_90_Claw_High\" : false,\n            \"O_90_Part_in_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3160,
        "wires": [
            [
                "1365eafd9e5968c2"
            ]
        ]
    },
    {
        "id": "884884afb535c6fd",
        "type": "OpcUa-Client",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PS",
        "x": 1130,
        "y": 3160,
        "wires": [
            [
                "983d1c9357bd915e",
                "c96cb51491ff4611"
            ],
            [
                "646ee7f74323251b"
            ]
        ]
    },
    {
        "id": "1365eafd9e5968c2",
        "type": "trigger",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3160,
        "wires": [
            [
                "afe6c5b5b11fc9bb"
            ]
        ]
    },
    {
        "id": "54c566721f0f4ae0",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3160,
        "wires": [
            [
                "884884afb535c6fd"
            ]
        ]
    },
    {
        "id": "983d1c9357bd915e",
        "type": "debug",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "90 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3200,
        "wires": []
    },
    {
        "id": "afe6c5b5b11fc9bb",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3160,
        "wires": [
            [
                "507daaae64a6593f"
            ]
        ]
    },
    {
        "id": "fdc5d43b87f3d947",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3160,
        "wires": [
            [
                "54c566721f0f4ae0"
            ]
        ]
    },
    {
        "id": "507daaae64a6593f",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3160,
        "wires": [
            [
                "2d347f0def77d6d4"
            ]
        ]
    },
    {
        "id": "2d347f0def77d6d4",
        "type": "file in",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3160,
        "wires": [
            [
                "fdc5d43b87f3d947"
            ]
        ]
    },
    {
        "id": "e97d4fe62dd1a490",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "O_90_Part_Reserve",
        "func": "if (msg.topic === \"O_90_Part_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Part_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 3240,
        "wires": [
            [
                "e212c046525ae934"
            ]
        ]
    },
    {
        "id": "2df9ee1fcda1f78a",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "S7 PS",
        "links": [
            "516d17040f361a78"
        ],
        "x": 55,
        "y": 3360,
        "wires": [
            [
                "e97d4fe62dd1a490",
                "4cec8ae2703693db",
                "802a8759e0bc6cc2",
                "e28a237bab4b7eb7",
                "6d28ce1bdfcf4456",
                "619cded0bd226d3d",
                "659c731e9d032e73"
            ]
        ]
    },
    {
        "id": "6d28ce1bdfcf4456",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "O_90_Claw_Low",
        "func": "if (msg.topic === \"O_90_Claw_Low\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_Low\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3400,
        "wires": [
            [
                "7ee155a763ea3309"
            ]
        ]
    },
    {
        "id": "4cec8ae2703693db",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "O_90_Claw_Del",
        "func": "if (msg.topic === \"O_90_Claw_Del\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_Del\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3280,
        "wires": [
            [
                "ef755c034c2b00cf"
            ]
        ]
    },
    {
        "id": "802a8759e0bc6cc2",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "O_90_Claw_Cart",
        "func": "if (msg.topic === \"O_90_Claw_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3320,
        "wires": [
            [
                "60ef929a2b996885"
            ]
        ]
    },
    {
        "id": "e28a237bab4b7eb7",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "O_90_Claw_Reserve",
        "func": "if (msg.topic === \"O_90_Claw_Reserve\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_Reserve\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 3360,
        "wires": [
            [
                "f28a3871fe703389"
            ]
        ]
    },
    {
        "id": "619cded0bd226d3d",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "O_90_Claw_High",
        "func": "if (msg.topic === \"O_90_Claw_High\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Claw_High\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3440,
        "wires": [
            [
                "9b5d4ea4289e61e2"
            ]
        ]
    },
    {
        "id": "659c731e9d032e73",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "O_90_Part_in_Claw",
        "func": "if (msg.topic === \"O_90_Part_in_Claw\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_90_Part_in_Claw\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 3480,
        "wires": [
            [
                "d2fe7f5d1cf65652"
            ]
        ]
    },
    {
        "id": "c96cb51491ff4611",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "Sub Out 90 PS",
        "mode": "link",
        "links": [
            "9deff8f593069c30"
        ],
        "x": 1295,
        "y": 3160,
        "wires": []
    },
    {
        "id": "9deff8f593069c30",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "Sub In 90 PS",
        "links": [
            "c96cb51491ff4611"
        ],
        "x": 775,
        "y": 3360,
        "wires": [
            [
                "9c50640d4dbbf376"
            ]
        ]
    },
    {
        "id": "ddfbf309b36463a6",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "6cd7c06e7b0bc3aa",
        "name": "Read S",
        "links": [
            "c4a016bca2449959"
        ],
        "x": 55,
        "y": 3160,
        "wires": [
            [
                "646ee7f74323251b"
            ]
        ]
    },
    {
        "id": "ba877de8c31302ec",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "item": "O_91_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Start",
        "x": 490,
        "y": 3660,
        "wires": [
            [
                "c5982121c6c33497"
            ]
        ]
    },
    {
        "id": "32f1fce36398c5eb",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "item": "O_91_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Stop",
        "x": 490,
        "y": 3700,
        "wires": [
            [
                "c5982121c6c33497"
            ]
        ]
    },
    {
        "id": "fa6b9bfb24cdb04c",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "item": "O_91_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Key_Pos",
        "x": 480,
        "y": 3740,
        "wires": [
            [
                "c5982121c6c33497"
            ]
        ]
    },
    {
        "id": "73d0eb42c08d8895",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "item": "O_91_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Reset",
        "x": 490,
        "y": 3780,
        "wires": [
            [
                "c5982121c6c33497"
            ]
        ]
    },
    {
        "id": "0f89be0554604cf7",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "item": "O_91_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Panel_I4",
        "x": 480,
        "y": 3820,
        "wires": [
            [
                "c5982121c6c33497"
            ]
        ]
    },
    {
        "id": "24d8a63e3fd3ba20",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "item": "O_91_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Panel_I5",
        "x": 480,
        "y": 3860,
        "wires": [
            [
                "c5982121c6c33497"
            ]
        ]
    },
    {
        "id": "0f9263104e043501",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "item": "O_91_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Panel_I6",
        "x": 480,
        "y": 3900,
        "wires": [
            [
                "c5982121c6c33497"
            ]
        ]
    },
    {
        "id": "c5982121c6c33497",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "90 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "b6bc552313f3f14f"
        ],
        "x": 645,
        "y": 3800,
        "wires": []
    },
    {
        "id": "5d4e2a5c2ac6ac68",
        "type": "switch",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "90 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_91_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_91_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 3800,
        "wires": [
            [
                "188875d22fb6dc16"
            ],
            [
                "23d77b598da64267"
            ],
            [
                "31ce6f395c06ad03"
            ],
            [
                "841b22ba7533305c"
            ],
            [
                "4bc1514ca762093f"
            ],
            [
                "8487eedf4194a4a6"
            ],
            [
                "668c58d0f38624a9"
            ],
            [
                "4fe3fdf663cdffb7"
            ]
        ]
    },
    {
        "id": "188875d22fb6dc16",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "order": 0,
        "group": "3d9563c6cd652e4f",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Start",
        "x": 1050,
        "y": 3660,
        "wires": []
    },
    {
        "id": "23d77b598da64267",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "order": 0,
        "group": "3d9563c6cd652e4f",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Stop",
        "x": 1050,
        "y": 3700,
        "wires": []
    },
    {
        "id": "31ce6f395c06ad03",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "order": 0,
        "group": "3d9563c6cd652e4f",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Key_Pos",
        "x": 1060,
        "y": 3740,
        "wires": []
    },
    {
        "id": "841b22ba7533305c",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "order": 0,
        "group": "3d9563c6cd652e4f",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Reset",
        "x": 1050,
        "y": 3780,
        "wires": []
    },
    {
        "id": "4bc1514ca762093f",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "order": 0,
        "group": "3d9563c6cd652e4f",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Panel_I4",
        "x": 1060,
        "y": 3820,
        "wires": []
    },
    {
        "id": "8487eedf4194a4a6",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "order": 0,
        "group": "3d9563c6cd652e4f",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Panel_I5",
        "x": 1060,
        "y": 3860,
        "wires": []
    },
    {
        "id": "668c58d0f38624a9",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "order": 0,
        "group": "3d9563c6cd652e4f",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Panel_I6",
        "x": 1060,
        "y": 3900,
        "wires": []
    },
    {
        "id": "690e72a9fe330560",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "item": "O_91_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_91_Panel_I7",
        "x": 480,
        "y": 3940,
        "wires": [
            [
                "c5982121c6c33497"
            ]
        ]
    },
    {
        "id": "4fe3fdf663cdffb7",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "order": 0,
        "group": "3d9563c6cd652e4f",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_91_Panel_I7",
        "x": 1060,
        "y": 3940,
        "wires": []
    },
    {
        "id": "0108826f1b8e0ab4",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3580,
        "wires": [
            [
                "0bae17e013441b7c"
            ]
        ]
    },
    {
        "id": "895e7d1a507bfd7f",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3580,
        "wires": [
            [
                "0108826f1b8e0ab4"
            ]
        ]
    },
    {
        "id": "0bae17e013441b7c",
        "type": "OpcUa-Client",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AS",
        "x": 1130,
        "y": 3580,
        "wires": [
            [
                "1f00f9e05e878dd7",
                "8e5bf578ebc90e45"
            ],
            [
                "9789dfd96c4ba381"
            ]
        ]
    },
    {
        "id": "2c3bfe64eaf0f28f",
        "type": "file in",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3580,
        "wires": [
            [
                "895e7d1a507bfd7f"
            ]
        ]
    },
    {
        "id": "1f00f9e05e878dd7",
        "type": "debug",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "90 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 3620,
        "wires": []
    },
    {
        "id": "9789dfd96c4ba381",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_91_Start\" : false,\n            \"O_91_Stop\" : false,\n            \"O_91_Key_Pos\" : false,\n            \"O_91_Reset\" : false,\n            \"O_91_Panel_I4\" : false,\n            \"O_91_Panel_I5\" : false,\n            \"O_91_Panel_I6\" : false,\n            \"O_91_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3580,
        "wires": [
            [
                "ea2cfed0643d3d5b"
            ]
        ]
    },
    {
        "id": "86b0001a12662cf8",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3580,
        "wires": [
            [
                "2c3bfe64eaf0f28f"
            ]
        ]
    },
    {
        "id": "ea2cfed0643d3d5b",
        "type": "trigger",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3580,
        "wires": [
            [
                "e3769b1692b78ce4"
            ]
        ]
    },
    {
        "id": "e3769b1692b78ce4",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3580,
        "wires": [
            [
                "86b0001a12662cf8"
            ]
        ]
    },
    {
        "id": "8e5bf578ebc90e45",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "Sub Out 90 AS",
        "mode": "link",
        "links": [
            "4fa80f1e638b1fd5"
        ],
        "x": 1295,
        "y": 3580,
        "wires": []
    },
    {
        "id": "4fa80f1e638b1fd5",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "Sub In 90 AS",
        "links": [
            "8e5bf578ebc90e45"
        ],
        "x": 775,
        "y": 3800,
        "wires": [
            [
                "5d4e2a5c2ac6ac68"
            ]
        ]
    },
    {
        "id": "dd90f8681081ee95",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "O_91_Start",
        "func": "if (msg.topic === \"O_91_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3660,
        "wires": [
            [
                "ba877de8c31302ec"
            ]
        ]
    },
    {
        "id": "f56b40ef06410759",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "S7 AS",
        "links": [
            "516d17040f361a78"
        ],
        "x": 55,
        "y": 3800,
        "wires": [
            [
                "dd90f8681081ee95",
                "0ae76b0bd6e7c51c",
                "ac3e69458ed8a512",
                "e0b8b8bec11c672e",
                "c37eb4b1940d1ee9",
                "fadf2efae0cb0b9c",
                "27d5cc726769aa14",
                "74b785d2e68b35b2"
            ]
        ]
    },
    {
        "id": "c37eb4b1940d1ee9",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "O_91_Panel_I4",
        "func": "if (msg.topic === \"O_91_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3820,
        "wires": [
            [
                "0f89be0554604cf7"
            ]
        ]
    },
    {
        "id": "0ae76b0bd6e7c51c",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "O_91_Stop",
        "func": "if (msg.topic === \"O_91_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3700,
        "wires": [
            [
                "32f1fce36398c5eb"
            ]
        ]
    },
    {
        "id": "ac3e69458ed8a512",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "O_91_Key_Pos",
        "func": "if (msg.topic === \"O_91_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3740,
        "wires": [
            [
                "fa6b9bfb24cdb04c"
            ]
        ]
    },
    {
        "id": "e0b8b8bec11c672e",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "O_91_Reset",
        "func": "if (msg.topic === \"O_91_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3780,
        "wires": [
            [
                "73d0eb42c08d8895"
            ]
        ]
    },
    {
        "id": "fadf2efae0cb0b9c",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "O_91_Panel_I5",
        "func": "if (msg.topic === \"O_91_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3860,
        "wires": [
            [
                "24d8a63e3fd3ba20"
            ]
        ]
    },
    {
        "id": "27d5cc726769aa14",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "O_91_Panel_I6",
        "func": "if (msg.topic === \"O_91_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3900,
        "wires": [
            [
                "0f9263104e043501"
            ]
        ]
    },
    {
        "id": "74b785d2e68b35b2",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "O_91_Panel_I7",
        "func": "if (msg.topic === \"O_91_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_91_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3940,
        "wires": [
            [
                "690e72a9fe330560"
            ]
        ]
    },
    {
        "id": "5347d402a1ec422c",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "9ea105a6051778e5",
        "name": "Read S",
        "links": [
            "c4a016bca2449959"
        ],
        "x": 55,
        "y": 3580,
        "wires": [
            [
                "9789dfd96c4ba381"
            ]
        ]
    },
    {
        "id": "d58a87728e7021c6",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"SA_90_Claw_2_Cart\" : false,\n    \"SA_90_Claw_2_Del\" : false,\n    \"SA_90_Claw_Down\" : false,\n    \"SA_90_Close_Claw\" : false,\n    \"SA_91_Led_Start\" : false,\n    \"SA_91_Led_Reset\" : false,\n    \"SA_91_Led_Extra1\" : false,\n    \"SA_91_Led_Extra2\" : false,\n    \"SA_91_Panel_O4\" : false,\n    \"SA_91_Panel_O5\" : false,\n    \"SA_91_Panel_O6\" : false,\n    \"SA_91_Panel_O7\" : false,\n    \"SC_95_Initialization\" : false,\n    \"SC_92_Profibus\" : true,\n    \"SC_95_Start\" : false,\n    \"SC_95_Cart2Del\" : true,\n    \"SC_95_Del2Cart\" : false,\n\t\"SS_90_Part_Reserve\" : false,\n    \"SS_90_Claw_Del\" : false,\n    \"SS_90_Claw_Cart\" : true,\n    \"SS_90_Claw_Reserve\" : false,\n    \"SS_90_Claw_Low\" : false,\n    \"SS_90_Claw_High\" : true,\n    \"SS_90_Part_in_Claw\" : false,\n    \"SS_91_Start\" : false,\n    \"SS_91_Stop\" : true,\n    \"SS_91_Key_Pos\" : false,\n    \"SS_91_Reset\" : false,\n    \"SS_91_Panel_I4\" : false,\n    \"SS_91_Panel_I5\" : true,\n    \"SS_91_Panel_I6\" : false,\n    \"SS_91_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 680,
        "wires": [
            [
                "2b02c1a162eabe22"
            ]
        ]
    },
    {
        "id": "954ee0813f396dfd",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "Simulated CSV Link",
        "links": [
            "5e01c196b0276b5a"
        ],
        "x": 65,
        "y": 680,
        "wires": [
            [
                "d58a87728e7021c6"
            ]
        ]
    },
    {
        "id": "2b02c1a162eabe22",
        "type": "trigger",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 680,
        "wires": [
            [
                "82f9d0560761a7ad"
            ]
        ]
    },
    {
        "id": "82f9d0560761a7ad",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"SA_\")) variableClass = \"Simulated_Actuators\";\n        if (key.includes(\"SC_\")) variableClass = \"Simulated_Control\";\n        if (key.includes(\"SS_\")) variableClass = \"Simulated_Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 680,
        "wires": [
            [
                "b463e9831cad69c7"
            ]
        ]
    },
    {
        "id": "b463e9831cad69c7",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Handling2_Station/SimulationData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 680,
        "wires": [
            [
                "d25a8bbed7b36216"
            ]
        ]
    },
    {
        "id": "d25a8bbed7b36216",
        "type": "OpcUa-Client",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 680,
        "wires": [
            [
                "bc73aa916b56d965"
            ],
            [
                "5e01c196b0276b5a"
            ]
        ]
    },
    {
        "id": "bc73aa916b56d965",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 640,
        "wires": [
            [
                "6afaa97b351a8684",
                "4b47466dd6e41382"
            ]
        ]
    },
    {
        "id": "5e01c196b0276b5a",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "Simulated CSV Link",
        "mode": "link",
        "links": [
            "fbaef9736eb11e31",
            "954ee0813f396dfd"
        ],
        "x": 935,
        "y": 680,
        "wires": []
    },
    {
        "id": "6afaa97b351a8684",
        "type": "file",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "Simulated Varaibles List",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1230,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "4b47466dd6e41382",
        "type": "debug",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "b35df6e9488dca69",
        "type": "comment",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 640,
        "wires": []
    },
    {
        "id": "c3eeebcda04506c0",
        "type": "comment",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 540,
        "wires": []
    },
    {
        "id": "fbaef9736eb11e31",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "Simulated CSV Link",
        "links": [
            "5e01c196b0276b5a"
        ],
        "x": 65,
        "y": 580,
        "wires": [
            [
                "42fb6b216eaca27c"
            ]
        ]
    },
    {
        "id": "42fb6b216eaca27c",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 580,
        "wires": [
            [
                "94a39343d44b6295"
            ]
        ]
    },
    {
        "id": "94a39343d44b6295",
        "type": "trigger",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 580,
        "wires": [
            [
                "ee657e3b8be23a86"
            ]
        ]
    },
    {
        "id": "ee657e3b8be23a86",
        "type": "file",
        "z": "078507e39b438a2b",
        "g": "a35af8c682590cf0",
        "name": "Simulated CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 440,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "2b5ae1463651a498",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "item": "I_90_Claw_2_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "I_90_Claw_2_Cart",
        "x": 470,
        "y": 860,
        "wires": [
            [
                "020ac694ad21ce89"
            ]
        ]
    },
    {
        "id": "a7a7bf7d4c6f51d5",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "item": "I_90_Claw_2_Del",
        "datatype": "Boolean",
        "value": "",
        "name": "I_90_Claw_2_Del",
        "x": 470,
        "y": 900,
        "wires": [
            [
                "020ac694ad21ce89"
            ]
        ]
    },
    {
        "id": "d13b860be5721d35",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "item": "I_90_Claw_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "I_90_Claw_Down",
        "x": 470,
        "y": 940,
        "wires": [
            [
                "020ac694ad21ce89"
            ]
        ]
    },
    {
        "id": "2d1cce4df4c6a5bc",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "item": "I_90_Close_Claw",
        "datatype": "Boolean",
        "value": "",
        "name": "I_90_Close_Claw",
        "x": 470,
        "y": 980,
        "wires": [
            [
                "020ac694ad21ce89"
            ]
        ]
    },
    {
        "id": "020ac694ad21ce89",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "90 Physical Actuators",
        "mode": "link",
        "links": [
            "b6bc552313f3f14f"
        ],
        "x": 645,
        "y": 920,
        "wires": []
    },
    {
        "id": "3434ca0e592c5379",
        "type": "switch",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "90 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_90_Claw_2_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_90_Claw_2_Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_90_Claw_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_90_Close_Claw",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 920,
        "wires": [
            [
                "05b9df39ed1464ea"
            ],
            [
                "258a9b65c4de354b"
            ],
            [
                "77bb18b1c6ea6b03"
            ],
            [
                "7edd5351691f6297"
            ]
        ]
    },
    {
        "id": "b60addc89bfa9260",
        "type": "ui_switch",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "I_90_Claw_2_Cart",
        "label": "Moves claw to cart position",
        "tooltip": "",
        "group": "093f0592ce4cfbbb",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 860,
        "wires": [
            [
                "2b5ae1463651a498"
            ]
        ]
    },
    {
        "id": "82fc129d41cd47bd",
        "type": "ui_switch",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "I_90_Claw_2_Del",
        "label": "Moves claw to delivery position",
        "tooltip": "",
        "group": "093f0592ce4cfbbb",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 900,
        "wires": [
            [
                "a7a7bf7d4c6f51d5"
            ]
        ]
    },
    {
        "id": "0a512bdc8756d9d5",
        "type": "ui_switch",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "I_90_Claw_Down",
        "label": "Lowers claw",
        "tooltip": "",
        "group": "093f0592ce4cfbbb",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 940,
        "wires": [
            [
                "d13b860be5721d35"
            ]
        ]
    },
    {
        "id": "7f2b8a644b7abdf9",
        "type": "ui_switch",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "I_90_Close_Claw",
        "label": "Closes claw",
        "tooltip": "",
        "group": "093f0592ce4cfbbb",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 980,
        "wires": [
            [
                "2d1cce4df4c6a5bc"
            ]
        ]
    },
    {
        "id": "193a849b57d1a0d0",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 780,
        "wires": [
            [
                "9501b06e0fe64955"
            ]
        ]
    },
    {
        "id": "80039c9c234f44e8",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 780,
        "wires": [
            [
                "193a849b57d1a0d0"
            ]
        ]
    },
    {
        "id": "9501b06e0fe64955",
        "type": "OpcUa-Client",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PA",
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "ccbe6801a66d84ab",
                "d4b20ac071cb5de5"
            ],
            [
                "49c8bcf575757d15"
            ]
        ]
    },
    {
        "id": "ae295cf8a60476fb",
        "type": "file in",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 780,
        "wires": [
            [
                "80039c9c234f44e8"
            ]
        ]
    },
    {
        "id": "ccbe6801a66d84ab",
        "type": "debug",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "90 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 820,
        "wires": []
    },
    {
        "id": "49c8bcf575757d15",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_90_Claw_2_Cart\" : false,\n            \"I_90_Claw_2_Del\" : false,\n            \"I_90_Claw_Down\" : false,\n            \"I_90_Close_Claw\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 780,
        "wires": [
            [
                "985854dec9268228"
            ]
        ]
    },
    {
        "id": "ca3c5ce2bf7e419c",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 780,
        "wires": [
            [
                "ae295cf8a60476fb"
            ]
        ]
    },
    {
        "id": "985854dec9268228",
        "type": "trigger",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 780,
        "wires": [
            [
                "d176689c81c11ab9"
            ]
        ]
    },
    {
        "id": "d176689c81c11ab9",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 780,
        "wires": [
            [
                "ca3c5ce2bf7e419c"
            ]
        ]
    },
    {
        "id": "d4b20ac071cb5de5",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "Sub Out 90 PA",
        "mode": "link",
        "links": [
            "bcd1a3fa988787dc"
        ],
        "x": 1295,
        "y": 780,
        "wires": []
    },
    {
        "id": "bcd1a3fa988787dc",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "Sub In 90 PA",
        "links": [
            "d4b20ac071cb5de5"
        ],
        "x": 775,
        "y": 920,
        "wires": [
            [
                "3434ca0e592c5379"
            ]
        ]
    },
    {
        "id": "2c7ba96cca478041",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "Read S",
        "links": [
            "c4a016bca2449959"
        ],
        "x": 55,
        "y": 780,
        "wires": [
            [
                "49c8bcf575757d15"
            ]
        ]
    },
    {
        "id": "05b9df39ed1464ea",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "I_90_Claw_2_Cart",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 860,
        "wires": [
            [
                "23cd9c479def8fdd"
            ]
        ]
    },
    {
        "id": "258a9b65c4de354b",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "I_90_Claw_2_Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 900,
        "wires": [
            [
                "23cd9c479def8fdd"
            ]
        ]
    },
    {
        "id": "77bb18b1c6ea6b03",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "I_90_Claw_Down",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 940,
        "wires": [
            [
                "23cd9c479def8fdd"
            ]
        ]
    },
    {
        "id": "7edd5351691f6297",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "I_90_Close_Claw",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 980,
        "wires": [
            [
                "23cd9c479def8fdd"
            ]
        ]
    },
    {
        "id": "23cd9c479def8fdd",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "af3e92e7a7813388",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "fba4ecfb29f40396"
        ],
        "x": 1235,
        "y": 920,
        "wires": []
    },
    {
        "id": "82c58c104387b995",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "item": "I_91_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Led_Start",
        "x": 480,
        "y": 1160,
        "wires": [
            [
                "1b91aea4a857aa35"
            ]
        ]
    },
    {
        "id": "291fd116a3355399",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "item": "I_91_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Led_Reset",
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "1b91aea4a857aa35"
            ]
        ]
    },
    {
        "id": "7d63680ee843fa89",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "item": "I_91_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Led_Extra1",
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "1b91aea4a857aa35"
            ]
        ]
    },
    {
        "id": "870d60ea2c947d60",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "item": "I_91_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Led_Extra2",
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "1b91aea4a857aa35"
            ]
        ]
    },
    {
        "id": "6554a1c0ce989034",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "item": "I_91_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Panel_O4",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "1b91aea4a857aa35"
            ]
        ]
    },
    {
        "id": "1b91aea4a857aa35",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "90 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "b6bc552313f3f14f"
        ],
        "x": 645,
        "y": 1300,
        "wires": []
    },
    {
        "id": "d5f1685c0c2849b1",
        "type": "switch",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "90 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_91_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_91_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 870,
        "y": 1300,
        "wires": [
            [
                "2e3bdec7d17c7910"
            ],
            [
                "421f23625fbf704f"
            ],
            [
                "1d50c7138e56ec40"
            ],
            [
                "567093f4c3eaa418"
            ],
            [
                "3ae7a9abc5594d97"
            ],
            [
                "413557bf56198452"
            ],
            [
                "5f16b0a4be04a6e5"
            ],
            [
                "7fe6358b8963800b"
            ]
        ]
    },
    {
        "id": "c3ed54d9da4babe5",
        "type": "ui_switch",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "a28a4b09d5a9d3a6",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1160,
        "wires": [
            [
                "82c58c104387b995"
            ]
        ]
    },
    {
        "id": "30bf6b6447a9fde7",
        "type": "ui_switch",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "a28a4b09d5a9d3a6",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "291fd116a3355399"
            ]
        ]
    },
    {
        "id": "30d3f631cdccb747",
        "type": "ui_switch",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "a28a4b09d5a9d3a6",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1240,
        "wires": [
            [
                "7d63680ee843fa89"
            ]
        ]
    },
    {
        "id": "e767473573de6f4f",
        "type": "ui_switch",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "a28a4b09d5a9d3a6",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1280,
        "wires": [
            [
                "870d60ea2c947d60"
            ]
        ]
    },
    {
        "id": "14297ddc4b670802",
        "type": "ui_switch",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "a28a4b09d5a9d3a6",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1320,
        "wires": [
            [
                "6554a1c0ce989034"
            ]
        ]
    },
    {
        "id": "c18e12dd52415a06",
        "type": "ui_switch",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "a28a4b09d5a9d3a6",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1360,
        "wires": [
            [
                "cddb707f3f3fe8e2"
            ]
        ]
    },
    {
        "id": "cddb707f3f3fe8e2",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "item": "I_91_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Panel_O5",
        "x": 480,
        "y": 1360,
        "wires": [
            [
                "1b91aea4a857aa35"
            ]
        ]
    },
    {
        "id": "c0f7229fde6b2b29",
        "type": "ui_switch",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "a28a4b09d5a9d3a6",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1400,
        "wires": [
            [
                "1fb035d9642f6d36"
            ]
        ]
    },
    {
        "id": "1fb035d9642f6d36",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "item": "I_91_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Panel_O6",
        "x": 480,
        "y": 1400,
        "wires": [
            [
                "1b91aea4a857aa35"
            ]
        ]
    },
    {
        "id": "2f70e96737d5a4dc",
        "type": "ui_switch",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "a28a4b09d5a9d3a6",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1440,
        "wires": [
            [
                "0cd9a97caffd9ef8"
            ]
        ]
    },
    {
        "id": "0cd9a97caffd9ef8",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "item": "I_91_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_91_Panel_O7",
        "x": 480,
        "y": 1440,
        "wires": [
            [
                "1b91aea4a857aa35"
            ]
        ]
    },
    {
        "id": "7cd7d6813658a7fe",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1080,
        "wires": [
            [
                "2b13d0545b6bb8d9"
            ]
        ]
    },
    {
        "id": "06832c7c05713a7e",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1080,
        "wires": [
            [
                "7cd7d6813658a7fe"
            ]
        ]
    },
    {
        "id": "2b13d0545b6bb8d9",
        "type": "OpcUa-Client",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AA",
        "x": 1130,
        "y": 1080,
        "wires": [
            [
                "1aabae46e6a56016",
                "8a158660cbbf13e2"
            ],
            [
                "8635af5115df708a"
            ]
        ]
    },
    {
        "id": "0d92bb63557a58b6",
        "type": "file in",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1080,
        "wires": [
            [
                "06832c7c05713a7e"
            ]
        ]
    },
    {
        "id": "1aabae46e6a56016",
        "type": "debug",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "90 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1120,
        "wires": []
    },
    {
        "id": "8635af5115df708a",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_91_Led_Start\" : false,\n            \"I_91_Led_Reset\" : false,\n            \"I_91_Led_Extra1\" : false,\n            \"I_91_Led_Extra2\" : false,\n            \"I_91_Panel_O4\" : false,\n            \"I_91_Panel_O5\" : false,\n            \"I_91_Panel_O6\" : false,\n            \"I_91_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "7609243a7cbacc5f"
            ]
        ]
    },
    {
        "id": "7b800a4a79ddbd9b",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1080,
        "wires": [
            [
                "0d92bb63557a58b6"
            ]
        ]
    },
    {
        "id": "7609243a7cbacc5f",
        "type": "trigger",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1080,
        "wires": [
            [
                "19a2c8bb087b17ff"
            ]
        ]
    },
    {
        "id": "19a2c8bb087b17ff",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1080,
        "wires": [
            [
                "7b800a4a79ddbd9b"
            ]
        ]
    },
    {
        "id": "8a158660cbbf13e2",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "Sub Out 90 AA",
        "mode": "link",
        "links": [
            "f393a00ca9d8933f"
        ],
        "x": 1295,
        "y": 1080,
        "wires": []
    },
    {
        "id": "f393a00ca9d8933f",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "Sub In 90 AA",
        "links": [
            "8a158660cbbf13e2"
        ],
        "x": 775,
        "y": 1300,
        "wires": [
            [
                "d5f1685c0c2849b1"
            ]
        ]
    },
    {
        "id": "baf1134278576234",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "Read AA",
        "links": [
            "c4a016bca2449959"
        ],
        "x": 55,
        "y": 1080,
        "wires": [
            [
                "8635af5115df708a"
            ]
        ]
    },
    {
        "id": "2e3bdec7d17c7910",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1160,
        "wires": [
            [
                "797d084aa540214e"
            ]
        ]
    },
    {
        "id": "421f23625fbf704f",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1200,
        "wires": [
            [
                "797d084aa540214e"
            ]
        ]
    },
    {
        "id": "1d50c7138e56ec40",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1240,
        "wires": [
            [
                "797d084aa540214e"
            ]
        ]
    },
    {
        "id": "567093f4c3eaa418",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1280,
        "wires": [
            [
                "797d084aa540214e"
            ]
        ]
    },
    {
        "id": "3ae7a9abc5594d97",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1320,
        "wires": [
            [
                "797d084aa540214e"
            ]
        ]
    },
    {
        "id": "413557bf56198452",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1360,
        "wires": [
            [
                "797d084aa540214e"
            ]
        ]
    },
    {
        "id": "5f16b0a4be04a6e5",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1400,
        "wires": [
            [
                "797d084aa540214e"
            ]
        ]
    },
    {
        "id": "7fe6358b8963800b",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "I_91_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1440,
        "wires": [
            [
                "797d084aa540214e"
            ]
        ]
    },
    {
        "id": "797d084aa540214e",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "882a0f33cb898513",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "fba4ecfb29f40396"
        ],
        "x": 1225,
        "y": 1300,
        "wires": []
    },
    {
        "id": "505e2d7b044c29aa",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "item": "A_94_Cart_Stat",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Cart_Stat",
        "x": 480,
        "y": 1620,
        "wires": [
            [
                "d5020c8bf202a4c1"
            ]
        ]
    },
    {
        "id": "25017e948f78c768",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "item": "A_94_Cart_Next",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Cart_Next",
        "x": 470,
        "y": 1660,
        "wires": [
            [
                "d5020c8bf202a4c1"
            ]
        ]
    },
    {
        "id": "98760a3ee340afe0",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "item": "A_94_Optic",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Optic",
        "x": 490,
        "y": 1700,
        "wires": [
            [
                "d5020c8bf202a4c1"
            ]
        ]
    },
    {
        "id": "5fec5afbc77ad782",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "item": "A_94_Count",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Count",
        "x": 490,
        "y": 1740,
        "wires": [
            [
                "d5020c8bf202a4c1"
            ]
        ]
    },
    {
        "id": "6f9219779db8c1c7",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "item": "A_94_Pist_Bck",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Pist_Bck",
        "x": 480,
        "y": 1780,
        "wires": [
            [
                "d5020c8bf202a4c1"
            ]
        ]
    },
    {
        "id": "152a61709f466f03",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "item": "A_94_Release_FB",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Release_FB",
        "x": 470,
        "y": 1820,
        "wires": [
            [
                "d5020c8bf202a4c1"
            ]
        ]
    },
    {
        "id": "f5275603d59b2295",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "item": "A_94_Request",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Request",
        "x": 480,
        "y": 1860,
        "wires": [
            [
                "d5020c8bf202a4c1"
            ]
        ]
    },
    {
        "id": "d5020c8bf202a4c1",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "90 AS-i",
        "mode": "link",
        "links": [
            "b6bc552313f3f14f"
        ],
        "x": 645,
        "y": 1780,
        "wires": []
    },
    {
        "id": "ed0ccd8c7c8ccc27",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1540,
        "wires": [
            [
                "c45a0c7ecc6ec7fb"
            ]
        ]
    },
    {
        "id": "c45a0c7ecc6ec7fb",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1540,
        "wires": [
            [
                "667dea0866703463"
            ]
        ]
    },
    {
        "id": "667dea0866703463",
        "type": "file in",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1540,
        "wires": [
            [
                "780668255ce0d484"
            ]
        ]
    },
    {
        "id": "780668255ce0d484",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1540,
        "wires": [
            [
                "dc9849f0a8dba67d"
            ]
        ]
    },
    {
        "id": "dc9849f0a8dba67d",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1540,
        "wires": [
            [
                "b410b0e54153785d"
            ]
        ]
    },
    {
        "id": "b410b0e54153785d",
        "type": "OpcUa-Client",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AS-i",
        "x": 1140,
        "y": 1540,
        "wires": [
            [
                "6a66b86a735b60f7",
                "e0456be3e8f15696"
            ],
            [
                "6699f2cf06f9c27a"
            ]
        ]
    },
    {
        "id": "11e5a201337e0226",
        "type": "switch",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "90 AS-i",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "A_94_Cart_Stat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Cart_Next",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Optic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Count",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Pist_Bck",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Release_FB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_No_Cart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A_94_Cart_Full",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 860,
        "y": 1780,
        "wires": [
            [
                "2a0d9b654f6d6388"
            ],
            [
                "f09acf089fbacc07"
            ],
            [
                "be80dd2c504f4cce"
            ],
            [
                "78d6833a275ee268"
            ],
            [
                "ba244507dfc28259"
            ],
            [
                "260b75d51e622457"
            ],
            [
                "1a0f3132a902662b"
            ],
            [
                "4d3e1547829bb8b6"
            ],
            [
                "11169ee6f187d288"
            ]
        ]
    },
    {
        "id": "2a0d9b654f6d6388",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "order": 0,
        "group": "9b7a49e0e2851638",
        "width": 0,
        "height": 0,
        "label": "Cart in station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Cart_Stat",
        "x": 1060,
        "y": 1620,
        "wires": []
    },
    {
        "id": "f09acf089fbacc07",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "order": 0,
        "group": "9b7a49e0e2851638",
        "width": 0,
        "height": 0,
        "label": "Cart near next station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Cart_Next",
        "x": 1070,
        "y": 1660,
        "wires": []
    },
    {
        "id": "be80dd2c504f4cce",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "order": 0,
        "group": "9b7a49e0e2851638",
        "width": 0,
        "height": 0,
        "label": "Optic sensor on station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Optic",
        "x": 1050,
        "y": 1700,
        "wires": []
    },
    {
        "id": "78d6833a275ee268",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "order": 0,
        "group": "9b7a49e0e2851638",
        "width": 0,
        "height": 0,
        "label": "Cart count identifier",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Count",
        "x": 1050,
        "y": 1740,
        "wires": []
    },
    {
        "id": "ba244507dfc28259",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "order": 0,
        "group": "9b7a49e0e2851638",
        "width": 0,
        "height": 0,
        "label": "Piston in back position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Pist_Bck",
        "x": 1060,
        "y": 1780,
        "wires": []
    },
    {
        "id": "260b75d51e622457",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "order": 0,
        "group": "9b7a49e0e2851638",
        "width": 0,
        "height": 0,
        "label": "Pin release feedback",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Release_FB",
        "x": 1070,
        "y": 1820,
        "wires": []
    },
    {
        "id": "1a0f3132a902662b",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "order": 0,
        "group": "9b7a49e0e2851638",
        "width": 0,
        "height": 0,
        "label": "Request cart",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Request",
        "x": 1060,
        "y": 1860,
        "wires": []
    },
    {
        "id": "78b603d45ef76a23",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "item": "A_94_No_Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_No_Cart",
        "x": 480,
        "y": 1900,
        "wires": [
            [
                "d5020c8bf202a4c1"
            ]
        ]
    },
    {
        "id": "4d3e1547829bb8b6",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "order": 0,
        "group": "9b7a49e0e2851638",
        "width": 0,
        "height": 0,
        "label": "No Cart at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_No_Cart",
        "x": 1060,
        "y": 1900,
        "wires": []
    },
    {
        "id": "11169ee6f187d288",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "order": 0,
        "group": "9b7a49e0e2851638",
        "width": 0,
        "height": 0,
        "label": "Cart Full at Station",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "A_94_Cart_Full",
        "x": 1060,
        "y": 1940,
        "wires": []
    },
    {
        "id": "92f1f859d1c1d15f",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "item": "A_94_Cart_Full",
        "datatype": "Boolean",
        "value": "",
        "name": "A_94_Cart_Full",
        "x": 480,
        "y": 1940,
        "wires": [
            [
                "d5020c8bf202a4c1"
            ]
        ]
    },
    {
        "id": "6a66b86a735b60f7",
        "type": "debug",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "90 AS-i",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1580,
        "wires": []
    },
    {
        "id": "6699f2cf06f9c27a",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"A_94_Cart_Stat\" : false,\n            \"A_94_Cart_Next\" : false,\n            \"A_94_Optic\" : false,\n            \"A_94_Count\" : false,\n            \"A_94_Pist_Bck\" : false,\n            \"A_94_Release_FB\" : false,\n            \"A_94_Request\" : false,\n            \"A_94_No_Cart\" : false,\n            \"A_94_Cart_Full\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1540,
        "wires": [
            [
                "b8f09249bc28f717"
            ]
        ]
    },
    {
        "id": "b8f09249bc28f717",
        "type": "trigger",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1540,
        "wires": [
            [
                "ed0ccd8c7c8ccc27"
            ]
        ]
    },
    {
        "id": "e0456be3e8f15696",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "Sub Out 90 AS-i",
        "mode": "link",
        "links": [
            "742282e98fd8e333"
        ],
        "x": 1295,
        "y": 1540,
        "wires": []
    },
    {
        "id": "742282e98fd8e333",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "Sub In 90 AF",
        "links": [
            "e0456be3e8f15696"
        ],
        "x": 755,
        "y": 1780,
        "wires": [
            [
                "11e5a201337e0226"
            ]
        ]
    },
    {
        "id": "9e4dc311254a14cc",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "A_94_Cart_Stat",
        "func": "if (msg.topic === \"A_94_Cart_Stat\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Cart_Stat\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1620,
        "wires": [
            [
                "505e2d7b044c29aa"
            ]
        ]
    },
    {
        "id": "f7cf919049763fbc",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "S7 AS-i",
        "links": [
            "516d17040f361a78"
        ],
        "x": 55,
        "y": 1780,
        "wires": [
            [
                "9e4dc311254a14cc",
                "0d9ece59801328ab",
                "d2e61529c2407ae8",
                "2e762b69f3c39e40",
                "5d0f9c2a90110266",
                "1e9f74444757b820",
                "b4591a1217d1ad59",
                "4e9f34ab0441b0e7",
                "acc491ab7819c8b2"
            ]
        ]
    },
    {
        "id": "5d0f9c2a90110266",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "A_94_Pist_Bck",
        "func": "if (msg.topic === \"A_94_Pist_Bck\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Pist_Bck\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1780,
        "wires": [
            [
                "6f9219779db8c1c7"
            ]
        ]
    },
    {
        "id": "0d9ece59801328ab",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "A_94_Cart_Next",
        "func": "if (msg.topic === \"A_94_Cart_Next\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Cart_Next\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1660,
        "wires": [
            [
                "25017e948f78c768"
            ]
        ]
    },
    {
        "id": "d2e61529c2407ae8",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "A_94_Optic",
        "func": "if (msg.topic === \"A_94_Optic\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Optic\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1700,
        "wires": [
            [
                "98760a3ee340afe0"
            ]
        ]
    },
    {
        "id": "2e762b69f3c39e40",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "A_94_Count",
        "func": "if (msg.topic === \"A_94_Count\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Count\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1740,
        "wires": [
            [
                "5fec5afbc77ad782"
            ]
        ]
    },
    {
        "id": "1e9f74444757b820",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "A_94_Release_FB",
        "func": "if (msg.topic === \"A_94_Release_FB\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Release_FB\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1820,
        "wires": [
            [
                "152a61709f466f03"
            ]
        ]
    },
    {
        "id": "b4591a1217d1ad59",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "A_94_Request",
        "func": "if (msg.topic === \"A_94_Request\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Request\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1860,
        "wires": [
            [
                "f5275603d59b2295"
            ]
        ]
    },
    {
        "id": "4e9f34ab0441b0e7",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "A_94_No_Cart",
        "func": "if (msg.topic === \"A_94_No_Cart\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_No_Cart\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1900,
        "wires": [
            [
                "78b603d45ef76a23"
            ]
        ]
    },
    {
        "id": "acc491ab7819c8b2",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "A_94_Cart_Full",
        "func": "if (msg.topic === \"A_94_Cart_Full\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"A_94_Cart_Full\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1940,
        "wires": [
            [
                "92f1f859d1c1d15f"
            ]
        ]
    },
    {
        "id": "909251c06d3388c8",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "69551ac3e8559c24",
        "name": "Read AS-i",
        "links": [
            "c4a016bca2449959"
        ],
        "x": 55,
        "y": 1540,
        "wires": [
            [
                "6699f2cf06f9c27a"
            ]
        ]
    },
    {
        "id": "903baf352ea37a47",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "item": "C_92_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_92_Profibus",
        "x": 640,
        "y": 2120,
        "wires": [
            [
                "acb78bc918bc5eb0"
            ]
        ]
    },
    {
        "id": "d8dffe264fc88ec4",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "item": "C_95_Initialization",
        "datatype": "Boolean",
        "value": "",
        "name": "C_95_Initialization",
        "x": 630,
        "y": 2160,
        "wires": [
            [
                "acb78bc918bc5eb0"
            ]
        ]
    },
    {
        "id": "361c5f32c8a4d064",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "item": "C_95_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "C_95_Start",
        "x": 650,
        "y": 2200,
        "wires": [
            [
                "acb78bc918bc5eb0"
            ]
        ]
    },
    {
        "id": "b97aa57b0c352235",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "item": "C_95_Cart2Del",
        "datatype": "Boolean",
        "value": "",
        "name": "C_95_Cart2Del",
        "x": 640,
        "y": 2240,
        "wires": [
            [
                "acb78bc918bc5eb0"
            ]
        ]
    },
    {
        "id": "d1d3c670c593a960",
        "type": "OpcUa-Item",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "item": "C_95_Del2Cart",
        "datatype": "Boolean",
        "value": "",
        "name": "C_95_Del2Cart",
        "x": 640,
        "y": 2280,
        "wires": [
            [
                "acb78bc918bc5eb0"
            ]
        ]
    },
    {
        "id": "acb78bc918bc5eb0",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "90 Control",
        "mode": "link",
        "links": [
            "b6bc552313f3f14f"
        ],
        "x": 805,
        "y": 2200,
        "wires": []
    },
    {
        "id": "225395816f56459d",
        "type": "switch",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "90 C",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_92_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_95_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_95_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_95_Cart2Del",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_95_Del2Cart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1010,
        "y": 2200,
        "wires": [
            [
                "cdefba8f58d16249"
            ],
            [
                "17fe459428206b85"
            ],
            [
                "f847056871b3bc84"
            ],
            [
                "e2112b9d0ece05cc"
            ],
            [
                "6b3a53317b416895"
            ]
        ]
    },
    {
        "id": "cdefba8f58d16249",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "order": 2,
        "group": "6bd3cf378d2206aa",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_92_Profibus",
        "x": 1200,
        "y": 2120,
        "wires": []
    },
    {
        "id": "17fe459428206b85",
        "type": "ui_led",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "order": 1,
        "group": "6bd3cf378d2206aa",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_95_Initialization",
        "x": 1210,
        "y": 2160,
        "wires": []
    },
    {
        "id": "78a8473a08d503cd",
        "type": "ui_dropdown",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "6bd3cf378d2206aa",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Cart to Delivery Mode",
                "value": "C_95_Cart2Del",
                "type": "str"
            },
            {
                "label": "Delivery to Cart Mode",
                "value": "C_95_Del2Cart",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 2260,
        "wires": [
            [
                "0403e062fbeeb25b",
                "847537a9c66a3730"
            ]
        ]
    },
    {
        "id": "0403e062fbeeb25b",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "C_95_Cart2Del",
        "func": "if (msg.payload === \"C_95_Cart2Del\") return { payload: true, topic: \"C_95_Cart2Del\"};\nelse return { payload: false, topic: \"C_95_Cart2Del\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2240,
        "wires": [
            [
                "b97aa57b0c352235"
            ]
        ]
    },
    {
        "id": "847537a9c66a3730",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "C_95_Del2Cart",
        "func": "if (msg.payload === \"C_95_Del2Cart\") return { payload: true, topic: \"C_95_Del2Cart\"};\nelse return { payload: false, topic: \"C_95_Del2Cart\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2280,
        "wires": [
            [
                "d1d3c670c593a960"
            ]
        ]
    },
    {
        "id": "7ca219f40263474f",
        "type": "inject",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_95_Cart2Del",
        "payloadType": "str",
        "x": 190,
        "y": 2300,
        "wires": [
            [
                "78a8473a08d503cd"
            ]
        ]
    },
    {
        "id": "a745e04ef69be6b7",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2040,
        "wires": [
            [
                "d9e9d6dfc75b25de"
            ]
        ]
    },
    {
        "id": "64dfca40a3452d07",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2040,
        "wires": [
            [
                "a745e04ef69be6b7"
            ]
        ]
    },
    {
        "id": "d9e9d6dfc75b25de",
        "type": "OpcUa-Client",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub C",
        "x": 1130,
        "y": 2040,
        "wires": [
            [
                "b7a2b467d89ae64c",
                "097596312550f51b"
            ],
            [
                "f2a24d89a177db58"
            ]
        ]
    },
    {
        "id": "3ba2476ddd8d1284",
        "type": "file in",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Handling2/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2040,
        "wires": [
            [
                "64dfca40a3452d07"
            ]
        ]
    },
    {
        "id": "b7a2b467d89ae64c",
        "type": "debug",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "90 C",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2080,
        "wires": []
    },
    {
        "id": "f2a24d89a177db58",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_92_Profibus\" : false,\n            \"C_95_Initialization\" : false,\n            \"C_95_Start\" : false,\n            \"C_95_Cart2Del\" : false,\n            \"C_95_Del2Cart\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2040,
        "wires": [
            [
                "daa3d80615cc71a7"
            ]
        ]
    },
    {
        "id": "f4793b59841bb606",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2040,
        "wires": [
            [
                "3ba2476ddd8d1284"
            ]
        ]
    },
    {
        "id": "daa3d80615cc71a7",
        "type": "trigger",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2040,
        "wires": [
            [
                "2796ab53769453bd"
            ]
        ]
    },
    {
        "id": "2796ab53769453bd",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2040,
        "wires": [
            [
                "f4793b59841bb606"
            ]
        ]
    },
    {
        "id": "878e333ed970cf8d",
        "type": "ui_switch",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "C_95_Start",
        "label": "Start",
        "tooltip": "Start Production",
        "group": "6bd3cf378d2206aa",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 2200,
        "wires": [
            [
                "361c5f32c8a4d064"
            ]
        ]
    },
    {
        "id": "097596312550f51b",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "Sub Out 90 C",
        "mode": "link",
        "links": [
            "2dae996282bc4f3d"
        ],
        "x": 1295,
        "y": 2040,
        "wires": []
    },
    {
        "id": "2dae996282bc4f3d",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "Sub In 90 C",
        "links": [
            "097596312550f51b"
        ],
        "x": 915,
        "y": 2200,
        "wires": [
            [
                "225395816f56459d"
            ]
        ]
    },
    {
        "id": "cb9769f2672a5e2b",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "S7 C",
        "links": [
            "516d17040f361a78"
        ],
        "x": 55,
        "y": 2140,
        "wires": [
            [
                "d3c415a64f7b7825",
                "03de65686ad8e891"
            ]
        ]
    },
    {
        "id": "03de65686ad8e891",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "C_95_Initialization",
        "func": "if (msg.topic === \"C_95_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_95_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2160,
        "wires": [
            [
                "d8dffe264fc88ec4"
            ]
        ]
    },
    {
        "id": "d3c415a64f7b7825",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "C_92_Profibus",
        "func": "if (msg.topic === \"C_92_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_92_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2120,
        "wires": [
            [
                "903baf352ea37a47"
            ]
        ]
    },
    {
        "id": "b810539d30293938",
        "type": "link in",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "Read C",
        "links": [
            "c4a016bca2449959"
        ],
        "x": 55,
        "y": 2040,
        "wires": [
            [
                "f2a24d89a177db58"
            ]
        ]
    },
    {
        "id": "f847056871b3bc84",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "C_95_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2200,
        "wires": [
            [
                "80b78a3f79f4d923"
            ]
        ]
    },
    {
        "id": "e2112b9d0ece05cc",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "C_95_Cart2Del",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2240,
        "wires": [
            [
                "80b78a3f79f4d923"
            ]
        ]
    },
    {
        "id": "6b3a53317b416895",
        "type": "function",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "C_95_Del2Cart",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2280,
        "wires": [
            [
                "80b78a3f79f4d923"
            ]
        ]
    },
    {
        "id": "80b78a3f79f4d923",
        "type": "link out",
        "z": "078507e39b438a2b",
        "g": "10bae33fa87eb35f",
        "name": "S7 C",
        "mode": "link",
        "links": [
            "fba4ecfb29f40396"
        ],
        "x": 1355,
        "y": 2200,
        "wires": []
    },
    {
        "id": "4a273bcd123bdf2e",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "item": "I_100_Drill_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Drill_On",
        "x": 480,
        "y": 860,
        "wires": [
            [
                "aa96f40cc1df2d3b"
            ]
        ]
    },
    {
        "id": "ed1b7e904c183720",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "item": "I_100_RT_On",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_RT_On",
        "x": 480,
        "y": 900,
        "wires": [
            [
                "aa96f40cc1df2d3b"
            ]
        ]
    },
    {
        "id": "33448a9e309c290c",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "item": "I_100_Drill_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Drill_Down",
        "x": 470,
        "y": 940,
        "wires": [
            [
                "aa96f40cc1df2d3b"
            ]
        ]
    },
    {
        "id": "a6bee765bbfc6aad",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "item": "I_100_Drill_Up",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Drill_Up",
        "x": 480,
        "y": 980,
        "wires": [
            [
                "aa96f40cc1df2d3b"
            ]
        ]
    },
    {
        "id": "72c277dcc4dbfd13",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "item": "I_100_Drill_Pin",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Drill_Pin",
        "x": 480,
        "y": 1020,
        "wires": [
            [
                "aa96f40cc1df2d3b"
            ]
        ]
    },
    {
        "id": "aa96f40cc1df2d3b",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "100 Physical Actuators",
        "mode": "link",
        "links": [
            "3228eca40ff4e66c"
        ],
        "x": 645,
        "y": 960,
        "wires": []
    },
    {
        "id": "38ef7ce8c36618d8",
        "type": "switch",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "100 PA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_100_Drill_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_RT_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_Drill_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_Drill_Up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_Drill_Pin",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_100_Test_Pin",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 860,
        "y": 960,
        "wires": [
            [
                "21e6668ee2720618"
            ],
            [
                "097c5ba5a3adf1a1"
            ],
            [
                "6bd9664ea04e57b1"
            ],
            [
                "1482f9d2e66ef9d1"
            ],
            [
                "bc8a4597e5cbd9f6"
            ],
            [
                "c9ecd1625eead13a"
            ]
        ]
    },
    {
        "id": "c4ec9645b65ef137",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "I_100_Drill_On",
        "label": "Turns drill on",
        "tooltip": "",
        "group": "ee83eee4122bde42",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 860,
        "wires": [
            [
                "4a273bcd123bdf2e"
            ]
        ]
    },
    {
        "id": "3554cdf7bc51bbf9",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "I_100_RT_On",
        "label": "Moves rotating table",
        "tooltip": "",
        "group": "ee83eee4122bde42",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 900,
        "wires": [
            [
                "ed1b7e904c183720"
            ]
        ]
    },
    {
        "id": "f10c77f5ad9f7f71",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "I_100_Drill_Down",
        "label": "Lowers drill",
        "tooltip": "",
        "group": "ee83eee4122bde42",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 940,
        "wires": [
            [
                "33448a9e309c290c"
            ]
        ]
    },
    {
        "id": "d09da6bcce4a5d27",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "I_100_Drill_Up",
        "label": "Raises drill",
        "tooltip": "",
        "group": "ee83eee4122bde42",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 980,
        "wires": [
            [
                "a6bee765bbfc6aad"
            ]
        ]
    },
    {
        "id": "ee8dd78b328ff08b",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "I_100_Drill_Pin",
        "label": "Advances drill pin",
        "tooltip": "",
        "group": "ee83eee4122bde42",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1020,
        "wires": [
            [
                "72c277dcc4dbfd13"
            ]
        ]
    },
    {
        "id": "0b73698fc7bdcb30",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 780,
        "wires": [
            [
                "df9364583ca6bf20"
            ]
        ]
    },
    {
        "id": "f78a46bc19a54163",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 780,
        "wires": [
            [
                "0b73698fc7bdcb30"
            ]
        ]
    },
    {
        "id": "df9364583ca6bf20",
        "type": "OpcUa-Client",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PA",
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "db170fc5a03be704",
                "9c41495b875e37b0"
            ],
            [
                "d05811343481f838"
            ]
        ]
    },
    {
        "id": "441707cc55cbb0a1",
        "type": "file in",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 780,
        "wires": [
            [
                "f78a46bc19a54163"
            ]
        ]
    },
    {
        "id": "db170fc5a03be704",
        "type": "debug",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "100 PA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 820,
        "wires": []
    },
    {
        "id": "d05811343481f838",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_100_Drill_On\" : false,\n            \"I_100_RT_On\" : false,\n            \"I_100_Drill_Down\" : false,\n            \"I_100_Drill_Up\" : false,\n            \"I_100_Drill_Pin\" : false,\n            \"I_100_Test_Pin\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 780,
        "wires": [
            [
                "5d66419185c16e6f"
            ]
        ]
    },
    {
        "id": "a11348aec0c92878",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 780,
        "wires": [
            [
                "441707cc55cbb0a1"
            ]
        ]
    },
    {
        "id": "5d66419185c16e6f",
        "type": "trigger",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 780,
        "wires": [
            [
                "25a10aa70ecebd71"
            ]
        ]
    },
    {
        "id": "25a10aa70ecebd71",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 780,
        "wires": [
            [
                "a11348aec0c92878"
            ]
        ]
    },
    {
        "id": "ecee94a4c68de1d6",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "item": "I_101_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Led_Start",
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "b091c824bce6b739"
            ]
        ]
    },
    {
        "id": "b4a0f692d8045ac1",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "item": "I_101_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Led_Reset",
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "b091c824bce6b739"
            ]
        ]
    },
    {
        "id": "464b8874636b8c74",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "item": "I_101_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Led_Extra1",
        "x": 470,
        "y": 1320,
        "wires": [
            [
                "b091c824bce6b739"
            ]
        ]
    },
    {
        "id": "364744a317ce5db1",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "item": "I_101_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Led_Extra2",
        "x": 470,
        "y": 1360,
        "wires": [
            [
                "b091c824bce6b739"
            ]
        ]
    },
    {
        "id": "f0519abe2a593bf6",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "item": "I_101_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Panel_O4",
        "x": 470,
        "y": 1400,
        "wires": [
            [
                "b091c824bce6b739"
            ]
        ]
    },
    {
        "id": "b091c824bce6b739",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "100 Auxiliary Actuators",
        "mode": "link",
        "links": [
            "3228eca40ff4e66c"
        ],
        "x": 645,
        "y": 1380,
        "wires": []
    },
    {
        "id": "70048d7e8df034ea",
        "type": "switch",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "100 AA",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "I_101_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "I_101_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 860,
        "y": 1380,
        "wires": [
            [
                "9739582985781f23"
            ],
            [
                "08cf3aed5ab0bdf7"
            ],
            [
                "742c5b8954b7a2b5"
            ],
            [
                "76de80859601896e"
            ],
            [
                "b74eb6049a20d4fd"
            ],
            [
                "50f505e373fc9bf2"
            ],
            [
                "a1a89eea3647fb50"
            ],
            [
                "b3dfc0f95cfd2120"
            ]
        ]
    },
    {
        "id": "7099e85cb0a7dc3e",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Led_Start",
        "label": "Start LED",
        "tooltip": "",
        "group": "df787b52462d7d92",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1240,
        "wires": [
            [
                "ecee94a4c68de1d6"
            ]
        ]
    },
    {
        "id": "a175d77a84bcef3a",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Led_Reset",
        "label": "Reset LED",
        "tooltip": "",
        "group": "df787b52462d7d92",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1280,
        "wires": [
            [
                "b4a0f692d8045ac1"
            ]
        ]
    },
    {
        "id": "e25820e7d0d82c51",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Led_Extra1",
        "label": "Extra1 LED",
        "tooltip": "",
        "group": "df787b52462d7d92",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1320,
        "wires": [
            [
                "464b8874636b8c74"
            ]
        ]
    },
    {
        "id": "3e5250e597a7c401",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Led_Extra2",
        "label": "Extra2 LED",
        "tooltip": "",
        "group": "df787b52462d7d92",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1360,
        "wires": [
            [
                "364744a317ce5db1"
            ]
        ]
    },
    {
        "id": "5ad54af1f3dda3a3",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Panel_O4",
        "label": "Panel O4",
        "tooltip": "",
        "group": "df787b52462d7d92",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1400,
        "wires": [
            [
                "f0519abe2a593bf6"
            ]
        ]
    },
    {
        "id": "d8f2b2fde65d92d8",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Panel_O5",
        "label": "Panel O5",
        "tooltip": "",
        "group": "df787b52462d7d92",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1440,
        "wires": [
            [
                "40e0924beefdc058"
            ]
        ]
    },
    {
        "id": "40e0924beefdc058",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "item": "I_101_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Panel_O5",
        "x": 470,
        "y": 1440,
        "wires": [
            [
                "b091c824bce6b739"
            ]
        ]
    },
    {
        "id": "a481b897d893de3b",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Panel_O6",
        "label": "Panel O6",
        "tooltip": "",
        "group": "df787b52462d7d92",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1480,
        "wires": [
            [
                "81038acdb606bed9"
            ]
        ]
    },
    {
        "id": "81038acdb606bed9",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "item": "I_101_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Panel_O6",
        "x": 470,
        "y": 1480,
        "wires": [
            [
                "b091c824bce6b739"
            ]
        ]
    },
    {
        "id": "98ce6dbb41e9a088",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Panel_O7",
        "label": "Panel O7",
        "tooltip": "",
        "group": "df787b52462d7d92",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 210,
        "y": 1520,
        "wires": [
            [
                "0e8d080b33999f2e"
            ]
        ]
    },
    {
        "id": "0e8d080b33999f2e",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "item": "I_101_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "I_101_Panel_O7",
        "x": 470,
        "y": 1520,
        "wires": [
            [
                "b091c824bce6b739"
            ]
        ]
    },
    {
        "id": "897516fa3bbef246",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1160,
        "wires": [
            [
                "1a5a36f179ecdcb4"
            ]
        ]
    },
    {
        "id": "1feeadb9e12b088d",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1160,
        "wires": [
            [
                "897516fa3bbef246"
            ]
        ]
    },
    {
        "id": "1a5a36f179ecdcb4",
        "type": "OpcUa-Client",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AA",
        "x": 1130,
        "y": 1160,
        "wires": [
            [
                "c0a12e93d514d9f0",
                "a5edeb3a57740ad2"
            ],
            [
                "a8607bbedc3d7873"
            ]
        ]
    },
    {
        "id": "1b385837b2a7d3d7",
        "type": "file in",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1160,
        "wires": [
            [
                "1feeadb9e12b088d"
            ]
        ]
    },
    {
        "id": "c0a12e93d514d9f0",
        "type": "debug",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "100 AA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1200,
        "wires": []
    },
    {
        "id": "a8607bbedc3d7873",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"I_101_Led_Start\" : false,\n            \"I_101_Led_Reset\" : false,\n            \"I_101_Led_Extra1\" : false,\n            \"I_101_Led_Extra2\" : false,\n            \"I_101_Panel_O4\" : false,\n            \"I_101_Panel_O5\" : false,\n            \"I_101_Panel_O6\" : false,\n            \"I_101_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "962d3e87427ad45e"
            ]
        ]
    },
    {
        "id": "77447c37755f4361",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1160,
        "wires": [
            [
                "1b385837b2a7d3d7"
            ]
        ]
    },
    {
        "id": "962d3e87427ad45e",
        "type": "trigger",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1160,
        "wires": [
            [
                "2bad94e85aad2c9d"
            ]
        ]
    },
    {
        "id": "2bad94e85aad2c9d",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1160,
        "wires": [
            [
                "77447c37755f4361"
            ]
        ]
    },
    {
        "id": "6956885a2ab5e3ef",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "item": "F_102_Drill_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Drill_On",
        "x": 480,
        "y": 2120,
        "wires": [
            [
                "6ec7acd3ce5b8887"
            ]
        ]
    },
    {
        "id": "c0429fc88d6e9185",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "item": "F_102_RT_On",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_RT_On",
        "x": 480,
        "y": 2160,
        "wires": [
            [
                "6ec7acd3ce5b8887"
            ]
        ]
    },
    {
        "id": "47c95372af36ebaf",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "item": "F_102_Drill_Down",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Drill_Down",
        "x": 470,
        "y": 2200,
        "wires": [
            [
                "6ec7acd3ce5b8887"
            ]
        ]
    },
    {
        "id": "2575616b99487c83",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "item": "F_102_Drill_Up",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Drill_Up",
        "x": 480,
        "y": 2240,
        "wires": [
            [
                "6ec7acd3ce5b8887"
            ]
        ]
    },
    {
        "id": "f93c2bf8fa404e1c",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "item": "F_102_Drill_Pin",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Drill_Pin",
        "x": 480,
        "y": 2280,
        "wires": [
            [
                "6ec7acd3ce5b8887"
            ]
        ]
    },
    {
        "id": "6ec7acd3ce5b8887",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "100 Physical Feedback",
        "mode": "link",
        "links": [
            "3228eca40ff4e66c"
        ],
        "x": 645,
        "y": 2220,
        "wires": []
    },
    {
        "id": "ea20c3a1e3a7b0ef",
        "type": "switch",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "100 PF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_102_Drill_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_RT_On",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_Drill_Down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_Drill_Up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_Drill_Pin",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_102_Test_Pin",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 860,
        "y": 2220,
        "wires": [
            [
                "543b9a24de00af21"
            ],
            [
                "1be6d1d2f0ac0ac8"
            ],
            [
                "bcd2625f47e92f19"
            ],
            [
                "ba5cece87c61a70b"
            ],
            [
                "177a15ceb3d3d0f9"
            ],
            [
                "e38b713c88041ae2"
            ]
        ]
    },
    {
        "id": "543b9a24de00af21",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "order": 0,
        "group": "d170d96e59fe39c5",
        "width": 0,
        "height": 0,
        "label": "Turns drill on",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Drill_On",
        "x": 1060,
        "y": 2120,
        "wires": []
    },
    {
        "id": "1be6d1d2f0ac0ac8",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "order": 0,
        "group": "d170d96e59fe39c5",
        "width": 0,
        "height": 0,
        "label": "Moves rotating table",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_RT_On",
        "x": 1060,
        "y": 2160,
        "wires": []
    },
    {
        "id": "bcd2625f47e92f19",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "order": 0,
        "group": "d170d96e59fe39c5",
        "width": 0,
        "height": 0,
        "label": "Lowers drill",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Drill_Down",
        "x": 1070,
        "y": 2200,
        "wires": []
    },
    {
        "id": "ba5cece87c61a70b",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "order": 0,
        "group": "d170d96e59fe39c5",
        "width": 0,
        "height": 0,
        "label": "Raises drill",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Drill_Up",
        "x": 1060,
        "y": 2240,
        "wires": []
    },
    {
        "id": "177a15ceb3d3d0f9",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "order": 0,
        "group": "d170d96e59fe39c5",
        "width": 0,
        "height": 0,
        "label": "Advances drill pin",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Drill_Pin",
        "x": 1060,
        "y": 2280,
        "wires": []
    },
    {
        "id": "cb67c77651795a1d",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2040,
        "wires": [
            [
                "9f2b5d7a64bbfc89"
            ]
        ]
    },
    {
        "id": "51c19b5fe30ecb09",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2040,
        "wires": [
            [
                "cb67c77651795a1d"
            ]
        ]
    },
    {
        "id": "9f2b5d7a64bbfc89",
        "type": "OpcUa-Client",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PF",
        "x": 1130,
        "y": 2040,
        "wires": [
            [
                "683cb1843187d985",
                "151224ac7899d3e8"
            ],
            [
                "fa771d289400741b"
            ]
        ]
    },
    {
        "id": "33180d0cf0fd1dd2",
        "type": "file in",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2040,
        "wires": [
            [
                "51c19b5fe30ecb09"
            ]
        ]
    },
    {
        "id": "683cb1843187d985",
        "type": "debug",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "100 PF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 2080,
        "wires": []
    },
    {
        "id": "fa771d289400741b",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_102_Drill_On\" : false,\n            \"F_102_RT_On\" : false,\n            \"F_102_Drill_Down\" : false,\n            \"F_102_Drill_Up\" : false,\n            \"F_102_Drill_Pin\" : false,\n            \"F_102_Test_Pin\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2040,
        "wires": [
            [
                "80bf6031ace7d279"
            ]
        ]
    },
    {
        "id": "fa22e040030fb1df",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2040,
        "wires": [
            [
                "33180d0cf0fd1dd2"
            ]
        ]
    },
    {
        "id": "80bf6031ace7d279",
        "type": "trigger",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2040,
        "wires": [
            [
                "47bfda427d7dc302"
            ]
        ]
    },
    {
        "id": "47bfda427d7dc302",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2040,
        "wires": [
            [
                "fa22e040030fb1df"
            ]
        ]
    },
    {
        "id": "3831d172e6138810",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "item": "F_103_Led_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Led_Start",
        "x": 470,
        "y": 2500,
        "wires": [
            [
                "6a4796169480a6e6"
            ]
        ]
    },
    {
        "id": "6cfef3f45d9a5223",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "item": "F_103_Led_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Led_Reset",
        "x": 470,
        "y": 2540,
        "wires": [
            [
                "6a4796169480a6e6"
            ]
        ]
    },
    {
        "id": "6a5adc7664e926f8",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "item": "F_103_Led_Extra1",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Led_Extra1",
        "x": 470,
        "y": 2580,
        "wires": [
            [
                "6a4796169480a6e6"
            ]
        ]
    },
    {
        "id": "05e01f8d1863da86",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "item": "F_103_Led_Extra2",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Led_Extra2",
        "x": 470,
        "y": 2620,
        "wires": [
            [
                "6a4796169480a6e6"
            ]
        ]
    },
    {
        "id": "3317c136a7c5744a",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "item": "F_103_Panel_O4",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Panel_O4",
        "x": 470,
        "y": 2660,
        "wires": [
            [
                "6a4796169480a6e6"
            ]
        ]
    },
    {
        "id": "18a16c9e251316ea",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "item": "F_103_Panel_O5",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Panel_O5",
        "x": 470,
        "y": 2700,
        "wires": [
            [
                "6a4796169480a6e6"
            ]
        ]
    },
    {
        "id": "35ba2608c44b91a6",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "item": "F_103_Panel_O6",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Panel_O6",
        "x": 470,
        "y": 2740,
        "wires": [
            [
                "6a4796169480a6e6"
            ]
        ]
    },
    {
        "id": "6a4796169480a6e6",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "100 Auxiliary Feedback",
        "mode": "link",
        "links": [
            "3228eca40ff4e66c"
        ],
        "x": 645,
        "y": 2640,
        "wires": []
    },
    {
        "id": "4905a2b91c3fc094",
        "type": "switch",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "100 AF",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F_103_Led_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Led_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Led_Extra1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Led_Extra2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Panel_O4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Panel_O5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Panel_O6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F_103_Panel_O7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 860,
        "y": 2640,
        "wires": [
            [
                "96d77bd7d58a804c"
            ],
            [
                "0f0924dd8b6663a8"
            ],
            [
                "12bb6b152ea3e358"
            ],
            [
                "d4a2bc6031cebd03"
            ],
            [
                "afad8f8e0a222adc"
            ],
            [
                "f96911038da147cf"
            ],
            [
                "b485c8279534c228"
            ],
            [
                "c70cf18922a3207b"
            ]
        ]
    },
    {
        "id": "96d77bd7d58a804c",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "order": 0,
        "group": "b087d1582a680f66",
        "width": 0,
        "height": 0,
        "label": "Start LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Led_Start",
        "x": 1070,
        "y": 2500,
        "wires": []
    },
    {
        "id": "0f0924dd8b6663a8",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "order": 0,
        "group": "b087d1582a680f66",
        "width": 0,
        "height": 0,
        "label": "Reset LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Led_Reset",
        "x": 1070,
        "y": 2540,
        "wires": []
    },
    {
        "id": "12bb6b152ea3e358",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "order": 0,
        "group": "b087d1582a680f66",
        "width": 0,
        "height": 0,
        "label": "Extra1 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Led_Extra1",
        "x": 1070,
        "y": 2580,
        "wires": []
    },
    {
        "id": "d4a2bc6031cebd03",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "order": 0,
        "group": "b087d1582a680f66",
        "width": 0,
        "height": 0,
        "label": "Extra2 LED",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Led_Extra2",
        "x": 1070,
        "y": 2620,
        "wires": []
    },
    {
        "id": "afad8f8e0a222adc",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "order": 0,
        "group": "b087d1582a680f66",
        "width": 0,
        "height": 0,
        "label": "Panel O4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Panel_O4",
        "x": 1070,
        "y": 2660,
        "wires": []
    },
    {
        "id": "f96911038da147cf",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "order": 0,
        "group": "b087d1582a680f66",
        "width": 0,
        "height": 0,
        "label": "Panel O5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Panel_O5",
        "x": 1070,
        "y": 2700,
        "wires": []
    },
    {
        "id": "b485c8279534c228",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "order": 0,
        "group": "b087d1582a680f66",
        "width": 0,
        "height": 0,
        "label": "Panel O6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Panel_O6",
        "x": 1070,
        "y": 2740,
        "wires": []
    },
    {
        "id": "72f34cd83a196f9b",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "item": "F_103_Panel_O7",
        "datatype": "Boolean",
        "value": "",
        "name": "F_103_Panel_O7",
        "x": 470,
        "y": 2780,
        "wires": [
            [
                "6a4796169480a6e6"
            ]
        ]
    },
    {
        "id": "c70cf18922a3207b",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "order": 0,
        "group": "b087d1582a680f66",
        "width": 0,
        "height": 0,
        "label": "Panel O7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_103_Panel_O7",
        "x": 1070,
        "y": 2780,
        "wires": []
    },
    {
        "id": "4afd693728fc93c5",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2420,
        "wires": [
            [
                "f41896369f55eb58"
            ]
        ]
    },
    {
        "id": "a7041a896cc4f62e",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2420,
        "wires": [
            [
                "4afd693728fc93c5"
            ]
        ]
    },
    {
        "id": "f41896369f55eb58",
        "type": "OpcUa-Client",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AF",
        "x": 1130,
        "y": 2420,
        "wires": [
            [
                "8650b358d6967627",
                "cd5ba6a804508214"
            ],
            [
                "ce91cf92ae300893"
            ]
        ]
    },
    {
        "id": "814ec8b2c6c06e40",
        "type": "file in",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2420,
        "wires": [
            [
                "a7041a896cc4f62e"
            ]
        ]
    },
    {
        "id": "8650b358d6967627",
        "type": "debug",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "100 AF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 2460,
        "wires": []
    },
    {
        "id": "ce91cf92ae300893",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"F_103_Led_Start\" : false,\n            \"F_103_Led_Reset\" : false,\n            \"F_103_Led_Extra1\" : false,\n            \"F_103_Led_Extra2\" : false,\n            \"F_103_Panel_O4\" : false,\n            \"F_103_Panel_O5\" : false,\n            \"F_103_Panel_O6\" : false,\n            \"F_103_Panel_O7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2420,
        "wires": [
            [
                "7a51b1dc485c0b78"
            ]
        ]
    },
    {
        "id": "0ceb31401ae8a316",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2420,
        "wires": [
            [
                "814ec8b2c6c06e40"
            ]
        ]
    },
    {
        "id": "7a51b1dc485c0b78",
        "type": "trigger",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2420,
        "wires": [
            [
                "d6c1697613504d7d"
            ]
        ]
    },
    {
        "id": "d6c1697613504d7d",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2420,
        "wires": [
            [
                "0ceb31401ae8a316"
            ]
        ]
    },
    {
        "id": "e91977b42fe167ba",
        "type": "comment",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "6c64517945bdac8e",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"A_\")) variableClass = \"ASi\";\n        if (key.includes(\"C_\")) variableClass = \"Control\";\n        if (key.includes(\"F_\")) variableClass = \"Feedback\";\n        if (key.includes(\"I_\")) variableClass = \"Actuators\";\n        if (key.includes(\"O_\")) variableClass = \"Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "b50292146808172a"
            ]
        ]
    },
    {
        "id": "b50292146808172a",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Processing_Station/OperationalData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "af1a2019bf8da17c"
            ]
        ]
    },
    {
        "id": "3f6189653b498a20",
        "type": "file",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Creates CSV Header",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "db7fd21999992b29",
        "type": "comment",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "af1a2019bf8da17c",
        "type": "OpcUa-Client",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "c04a3d21e8d4ade1"
            ],
            [
                "ed1a912080d65f64",
                "8b4de4b5f8172be8"
            ]
        ]
    },
    {
        "id": "c04a3d21e8d4ade1",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "d3ad95500d8c6480",
                "3f311d665778e05c"
            ]
        ]
    },
    {
        "id": "d3ad95500d8c6480",
        "type": "file",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Creates CSV List",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1210,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "3f311d665778e05c",
        "type": "debug",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "654570d615ee3c9f",
        "type": "comment",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Writes values on the server via the translation file",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "0f6b6cd2fa77f71e",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Variable => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "a2bf2b8c39195192"
            ]
        ]
    },
    {
        "id": "2576d38274a51900",
        "type": "OpcUa-Client",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "endpoint": "a2328ac43b0b7d73",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "10",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Write",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "12b106b88318eede"
            ],
            []
        ]
    },
    {
        "id": "12b106b88318eede",
        "type": "debug",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Write",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "3228eca40ff4e66c",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Write_DIst",
        "links": [
            "577fa138b950d339",
            "0e8beaeba4a65d6b",
            "ed17886167681946",
            "6a4796169480a6e6",
            "6ec7acd3ce5b8887",
            "aa96f40cc1df2d3b",
            "b091c824bce6b739"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "f29fb4df729d0046"
            ]
        ]
    },
    {
        "id": "f29fb4df729d0046",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\nlet datatype = msg.datatype;\n\nmsg = {variable: variable, value: value, datatype: datatype};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "2370326a447ba52a"
            ]
        ]
    },
    {
        "id": "2370326a447ba52a",
        "type": "file in",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "CSV File",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "0f6b6cd2fa77f71e"
            ]
        ]
    },
    {
        "id": "a2bf2b8c39195192",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "2576d38274a51900"
            ]
        ]
    },
    {
        "id": "c1ba3b58760631ad",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "CSV Link",
        "links": [
            "ed1a912080d65f64"
        ],
        "x": 65,
        "y": 240,
        "wires": [
            [
                "32152b9250863ca3"
            ]
        ]
    },
    {
        "id": "32152b9250863ca3",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "4aa05c0b26287c70"
            ]
        ]
    },
    {
        "id": "4aa05c0b26287c70",
        "type": "trigger",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "3f6189653b498a20"
            ]
        ]
    },
    {
        "id": "ed1a912080d65f64",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "CSV Link",
        "mode": "link",
        "links": [
            "c1ba3b58760631ad",
            "6dcfaaa40e7a9246"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "6dcfaaa40e7a9246",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "CSV Link",
        "links": [
            "ed1a912080d65f64"
        ],
        "x": 65,
        "y": 340,
        "wires": [
            [
                "33beb7ee1ff0e8b5"
            ]
        ]
    },
    {
        "id": "33beb7ee1ff0e8b5",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"I_100_Drill_On\" : false,\n    \"I_100_RT_On\" : false,\n    \"I_100_Drill_Down\" : false,\n    \"I_100_Drill_Up\" : false,\n    \"I_100_Drill_Pin\" : false,\n    \"I_100_Test_Pin\" : false,\n    \"I_101_Led_Start\" : false,\n    \"I_101_Led_Reset\" : false,\n    \"I_101_Led_Extra1\" : false,\n    \"I_101_Led_Extra2\" : false,\n    \"I_101_Panel_O4\" : false,\n    \"I_101_Panel_O5\" : false,\n    \"I_101_Panel_O6\" : false,\n    \"I_101_Panel_O7\" : false,\n    \"C_102_Profibus\" : true,\n    \"C_105_Initialization\" : false,\n    \"C_105_Part_ready\" : false,\n    \"C_105_Start\" : false,\n    \"C_105_Test\" : true,\n    \"C_105_TestDrill\" : false,\n    \"C_105_Rotation\" : false,\n    \"F_102_Drill_On\" : false,\n    \"F_102_RT_On\" : false,\n    \"F_102_Drill_Down\" : false,\n    \"F_102_Drill_Up\" : false,\n    \"F_102_Drill_Pin\" : false,\n    \"F_102_Test_Pin\" : false,\n    \"F_103_Led_Start\" : false,\n    \"F_103_Led_Reset\" : false,\n    \"F_103_Led_Extra1\" : false,\n    \"F_103_Led_Extra2\" : false,\n    \"F_103_Panel_O4\" : false,\n    \"F_103_Panel_O5\" : false,\n    \"F_103_Panel_O6\" : false,\n    \"F_103_Panel_O7\" : false,\n    \"O_100_PInit_Pos\" : false,\n    \"O_100_PDrill_Pos\" : false,\n    \"O_100_PTest_Pos\" : false,\n    \"O_100_SDrill_High\" : false,\n    \"O_100_SDrill_Low\" : false,\n    \"O_100_RT_Sensor\" : true,\n    \"O_100_PTest_Ok\" : false,\n    \"O_101_Start\" : false,\n    \"O_101_Stop\" : true,\n    \"O_101_Key_Pos\" : false,\n    \"O_101_Reset\" : false,\n    \"O_101_Panel_I4\" : false,\n    \"O_101_Panel_I5\" : true,\n    \"O_101_Panel_I6\" : false,\n    \"O_101_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "f99fd6032fd5d492"
            ]
        ]
    },
    {
        "id": "f99fd6032fd5d492",
        "type": "trigger",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "6c64517945bdac8e"
            ]
        ]
    },
    {
        "id": "4899acb2dc72becd",
        "type": "debug",
        "z": "7b3114de0a2b4bca",
        "g": "8093d73ad9a75ea4",
        "name": "Server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 100,
        "wires": []
    },
    {
        "id": "852d7a2fa7629155",
        "type": "OpcUa-Server",
        "z": "7b3114de0a2b4bca",
        "g": "8093d73ad9a75ea4",
        "port": "53880",
        "name": "Server : Processing",
        "endpoint": "",
        "users": "/root/ProjetoGemeo/AAS/Processing/users.json",
        "nodesetDir": "/root/ProjetoGemeo/AAS/Processing/",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": true,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": false,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": "100",
        "maxNodesPerHistoryReadData": "100",
        "maxNodesPerHistoryReadEvents": "100",
        "maxNodesPerHistoryUpdateData": "100",
        "maxNodesPerRead": "100",
        "maxNodesPerWrite": "1000",
        "maxNodesPerMethodCall": "100",
        "maxNodesPerRegisterNodes": "100",
        "maxNodesPerNodeManagement": "100",
        "maxMonitoredItemsPerCall": "100",
        "maxNodesPerHistoryUpdateEvents": "100",
        "maxNodesPerTranslateBrowsePathsToNodeIds": "100",
        "maxConnectionsPerEndpoint": "30",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "maxSessions": "30",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "4899acb2dc72becd"
            ]
        ]
    },
    {
        "id": "9fb7edf9b886f4c9",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "I_100_Test_Pin",
        "label": "Advances test pin",
        "tooltip": "",
        "group": "ee83eee4122bde42",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 1060,
        "wires": [
            [
                "6fb9a1064a0cd507"
            ]
        ]
    },
    {
        "id": "6fb9a1064a0cd507",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "item": "I_100_Test_Pin",
        "datatype": "Boolean",
        "value": "",
        "name": "I_100_Test_Pin",
        "x": 480,
        "y": 1060,
        "wires": [
            [
                "aa96f40cc1df2d3b"
            ]
        ]
    },
    {
        "id": "6a8a47f274161670",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "item": "F_102_Test_Pin",
        "datatype": "Boolean",
        "value": "",
        "name": "F_102_Test_Pin",
        "x": 480,
        "y": 2320,
        "wires": [
            [
                "6ec7acd3ce5b8887"
            ]
        ]
    },
    {
        "id": "e38b713c88041ae2",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "order": 0,
        "group": "d170d96e59fe39c5",
        "width": 0,
        "height": 0,
        "label": "Advances test pin",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "F_102_Test_Pin",
        "x": 1060,
        "y": 2320,
        "wires": []
    },
    {
        "id": "19932d1de534997f",
        "type": "debug",
        "z": "7b3114de0a2b4bca",
        "g": "ce317878932abc8c",
        "name": "S7 Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 100,
        "wires": []
    },
    {
        "id": "5f3a1094ae5e61a7",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "ce317878932abc8c",
        "name": "S7 Sensors",
        "mode": "link",
        "links": [
            "62a48f8f46c5ad32",
            "d79a9cb15c1f8aaf",
            "0afffc3ce2e1c0bc",
            "ae32a560b342247b",
            "2076a741a501b9ea"
        ],
        "x": 855,
        "y": 60,
        "wires": []
    },
    {
        "id": "9c41495b875e37b0",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "Sub Out 100 PA",
        "mode": "link",
        "links": [
            "97855369c9559d81"
        ],
        "x": 1295,
        "y": 780,
        "wires": []
    },
    {
        "id": "97855369c9559d81",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "Sub In 100 PA",
        "links": [
            "9c41495b875e37b0"
        ],
        "x": 755,
        "y": 960,
        "wires": [
            [
                "38ef7ce8c36618d8"
            ]
        ]
    },
    {
        "id": "a5edeb3a57740ad2",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "Sub Out 100 AA",
        "mode": "link",
        "links": [
            "1e3559f5af740d8a"
        ],
        "x": 1295,
        "y": 1160,
        "wires": []
    },
    {
        "id": "1e3559f5af740d8a",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "Sub In 100 AA",
        "links": [
            "a5edeb3a57740ad2"
        ],
        "x": 755,
        "y": 1380,
        "wires": [
            [
                "70048d7e8df034ea"
            ]
        ]
    },
    {
        "id": "151224ac7899d3e8",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "Sub Out 100 PF",
        "mode": "link",
        "links": [
            "1affcbb413a4215e"
        ],
        "x": 1295,
        "y": 2040,
        "wires": []
    },
    {
        "id": "1affcbb413a4215e",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "Sub In 100 PF",
        "links": [
            "151224ac7899d3e8"
        ],
        "x": 755,
        "y": 2220,
        "wires": [
            [
                "ea20c3a1e3a7b0ef"
            ]
        ]
    },
    {
        "id": "8b5d2180685512a7",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "F_102_Drill_On",
        "func": "if (msg.topic === \"F_102_Drill_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Drill_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2120,
        "wires": [
            [
                "6956885a2ab5e3ef"
            ]
        ]
    },
    {
        "id": "0afffc3ce2e1c0bc",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "S7 PF",
        "links": [
            "5f3a1094ae5e61a7"
        ],
        "x": 55,
        "y": 2220,
        "wires": [
            [
                "8b5d2180685512a7",
                "6c069ef08a8f8168",
                "35292d809cfba348",
                "3f0562d14deff578",
                "7b54194776382f16",
                "419aeb8222e57ee5"
            ]
        ]
    },
    {
        "id": "7b54194776382f16",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "F_102_Drill_Pin",
        "func": "if (msg.topic === \"F_102_Drill_Pin\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Drill_Pin\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2280,
        "wires": [
            [
                "f93c2bf8fa404e1c"
            ]
        ]
    },
    {
        "id": "6c069ef08a8f8168",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "F_102_RT_On",
        "func": "if (msg.topic === \"F_102_RT_On\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_RT_On\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2160,
        "wires": [
            [
                "c0429fc88d6e9185"
            ]
        ]
    },
    {
        "id": "35292d809cfba348",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "F_102_Drill_Down",
        "func": "if (msg.topic === \"F_102_Drill_Down\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Drill_Down\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2200,
        "wires": [
            [
                "47c95372af36ebaf"
            ]
        ]
    },
    {
        "id": "3f0562d14deff578",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "F_102_Drill_Up",
        "func": "if (msg.topic === \"F_102_Drill_Up\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Drill_Up\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2240,
        "wires": [
            [
                "2575616b99487c83"
            ]
        ]
    },
    {
        "id": "419aeb8222e57ee5",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "F_102_Test_Pin",
        "func": "if (msg.topic === \"F_102_Test_Pin\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_102_Test_Pin\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2320,
        "wires": [
            [
                "6a8a47f274161670"
            ]
        ]
    },
    {
        "id": "cd5ba6a804508214",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "Sub Out 100 AF",
        "mode": "link",
        "links": [
            "de3270b4617198a9"
        ],
        "x": 1295,
        "y": 2420,
        "wires": []
    },
    {
        "id": "de3270b4617198a9",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "Sub In 100 AF",
        "links": [
            "cd5ba6a804508214"
        ],
        "x": 755,
        "y": 2640,
        "wires": [
            [
                "4905a2b91c3fc094"
            ]
        ]
    },
    {
        "id": "beffe88c2924914d",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "F_103_Led_Start",
        "func": "if (msg.topic === \"F_103_Led_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Led_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2500,
        "wires": [
            [
                "3831d172e6138810"
            ]
        ]
    },
    {
        "id": "ae32a560b342247b",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "S7 AF",
        "links": [
            "5f3a1094ae5e61a7"
        ],
        "x": 55,
        "y": 2640,
        "wires": [
            [
                "beffe88c2924914d",
                "85b611d570e440af",
                "e0c6817bbd750b27",
                "af1a9b077693beb3",
                "d082bfcbe6eaf625",
                "586ed6fe35b8f4f2",
                "8d63ef55b4348ba7",
                "4922ea4293c42e76"
            ]
        ]
    },
    {
        "id": "d082bfcbe6eaf625",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "F_103_Panel_O4",
        "func": "if (msg.topic === \"F_103_Panel_O4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Panel_O4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2660,
        "wires": [
            [
                "3317c136a7c5744a"
            ]
        ]
    },
    {
        "id": "85b611d570e440af",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "F_103_Led_Reset",
        "func": "if (msg.topic === \"F_103_Led_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Led_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2540,
        "wires": [
            [
                "6cfef3f45d9a5223"
            ]
        ]
    },
    {
        "id": "e0c6817bbd750b27",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "F_103_Led_Extra1",
        "func": "if (msg.topic === \"F_103_Led_Extra1\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Led_Extra1\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2580,
        "wires": [
            [
                "6a5adc7664e926f8"
            ]
        ]
    },
    {
        "id": "af1a9b077693beb3",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "F_103_Led_Extra2",
        "func": "if (msg.topic === \"F_103_Led_Extra2\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Led_Extra2\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2620,
        "wires": [
            [
                "05e01f8d1863da86"
            ]
        ]
    },
    {
        "id": "586ed6fe35b8f4f2",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "F_103_Panel_O5",
        "func": "if (msg.topic === \"F_103_Panel_O5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Panel_O5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2700,
        "wires": [
            [
                "18a16c9e251316ea"
            ]
        ]
    },
    {
        "id": "8d63ef55b4348ba7",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "F_103_Panel_O6",
        "func": "if (msg.topic === \"F_103_Panel_O6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Panel_O6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2740,
        "wires": [
            [
                "35ba2608c44b91a6"
            ]
        ]
    },
    {
        "id": "4922ea4293c42e76",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "F_103_Panel_O7",
        "func": "if (msg.topic === \"F_103_Panel_O7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"F_103_Panel_O7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2780,
        "wires": [
            [
                "72f34cd83a196f9b"
            ]
        ]
    },
    {
        "id": "598a5222f417c290",
        "type": "mqtt in",
        "z": "7b3114de0a2b4bca",
        "g": "ce317878932abc8c",
        "name": "S7Variables",
        "topic": "S7Variables",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "4de211dc0a9652ab",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 530,
        "y": 60,
        "wires": [
            [
                "9d6ea4ccd5b86f6c"
            ]
        ]
    },
    {
        "id": "9d6ea4ccd5b86f6c",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "ce317878932abc8c",
        "name": "Recomposes MSG",
        "func": "msg.topic = msg.payload.TAG\nmsg.payload = msg.payload.Value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 60,
        "wires": [
            [
                "5f3a1094ae5e61a7",
                "19932d1de534997f"
            ]
        ]
    },
    {
        "id": "8b4de4b5f8172be8",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Translator On",
        "func": "if (msg.status === \"active reading\" && msg.error === null) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Translator On\"})\n    return {topic : \"ReadOk\", payload : true}\n    }\nelse return null",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "c11b30a7bc385e40"
            ]
        ]
    },
    {
        "id": "c11b30a7bc385e40",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "475b67fb7463e3ae",
        "name": "Read OK",
        "mode": "link",
        "links": [
            "f5f032742992f494",
            "75edc8f65c816362",
            "7e424319d3a55adb",
            "9c32d138859261c8",
            "3a0e7164c0f5127e",
            "34aa5cd4c7757e1f",
            "37d8a601817264a5"
        ],
        "x": 1125,
        "y": 400,
        "wires": []
    },
    {
        "id": "7e424319d3a55adb",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "Read S",
        "links": [
            "c11b30a7bc385e40"
        ],
        "x": 55,
        "y": 780,
        "wires": [
            [
                "d05811343481f838"
            ]
        ]
    },
    {
        "id": "9c32d138859261c8",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "Read AA",
        "links": [
            "c11b30a7bc385e40"
        ],
        "x": 55,
        "y": 1160,
        "wires": [
            [
                "a8607bbedc3d7873"
            ]
        ]
    },
    {
        "id": "3a0e7164c0f5127e",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "8719c38384e7fef3",
        "name": "Read PF",
        "links": [
            "c11b30a7bc385e40"
        ],
        "x": 55,
        "y": 2040,
        "wires": [
            [
                "fa771d289400741b"
            ]
        ]
    },
    {
        "id": "34aa5cd4c7757e1f",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "c0a43e6bb6d59102",
        "name": "Read AF",
        "links": [
            "c11b30a7bc385e40"
        ],
        "x": 55,
        "y": 2420,
        "wires": [
            [
                "ce91cf92ae300893"
            ]
        ]
    },
    {
        "id": "8724a2f488ac2598",
        "type": "mqtt out",
        "z": "7b3114de0a2b4bca",
        "g": "ce317878932abc8c",
        "name": "S7Variables",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4de211dc0a9652ab",
        "x": 690,
        "y": 100,
        "wires": []
    },
    {
        "id": "a1997b66de515dcc",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "ce317878932abc8c",
        "name": "S7 Actuators",
        "links": [
            "555176c2f21b28b3",
            "5cce90e4f3c9cbe2",
            "b46f240a5a48d184"
        ],
        "x": 585,
        "y": 100,
        "wires": [
            [
                "8724a2f488ac2598"
            ]
        ]
    },
    {
        "id": "21e6668ee2720618",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "I_100_Drill_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 860,
        "wires": [
            [
                "555176c2f21b28b3"
            ]
        ]
    },
    {
        "id": "097c5ba5a3adf1a1",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "I_100_RT_On",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 900,
        "wires": [
            [
                "555176c2f21b28b3"
            ]
        ]
    },
    {
        "id": "6bd9664ea04e57b1",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "I_100_Drill_Down",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 940,
        "wires": [
            [
                "555176c2f21b28b3"
            ]
        ]
    },
    {
        "id": "1482f9d2e66ef9d1",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "I_100_Drill_Up",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 980,
        "wires": [
            [
                "555176c2f21b28b3"
            ]
        ]
    },
    {
        "id": "bc8a4597e5cbd9f6",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "I_100_Drill_Pin",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1020,
        "wires": [
            [
                "555176c2f21b28b3"
            ]
        ]
    },
    {
        "id": "c9ecd1625eead13a",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "I_100_Test_Pin",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1060,
        "wires": [
            [
                "555176c2f21b28b3"
            ]
        ]
    },
    {
        "id": "555176c2f21b28b3",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "73c0b2c25d36a13c",
        "name": "S7 PA",
        "mode": "link",
        "links": [
            "a1997b66de515dcc"
        ],
        "x": 1235,
        "y": 960,
        "wires": []
    },
    {
        "id": "9739582985781f23",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Led_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1240,
        "wires": [
            [
                "b46f240a5a48d184"
            ]
        ]
    },
    {
        "id": "08cf3aed5ab0bdf7",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Led_Reset",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1280,
        "wires": [
            [
                "b46f240a5a48d184"
            ]
        ]
    },
    {
        "id": "742c5b8954b7a2b5",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Led_Extra1",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1320,
        "wires": [
            [
                "b46f240a5a48d184"
            ]
        ]
    },
    {
        "id": "76de80859601896e",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Led_Extra2",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1360,
        "wires": [
            [
                "b46f240a5a48d184"
            ]
        ]
    },
    {
        "id": "b74eb6049a20d4fd",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Panel_O4",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1400,
        "wires": [
            [
                "b46f240a5a48d184"
            ]
        ]
    },
    {
        "id": "50f505e373fc9bf2",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Panel_O5",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1440,
        "wires": [
            [
                "b46f240a5a48d184"
            ]
        ]
    },
    {
        "id": "a1a89eea3647fb50",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Panel_O6",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1480,
        "wires": [
            [
                "b46f240a5a48d184"
            ]
        ]
    },
    {
        "id": "b3dfc0f95cfd2120",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "I_101_Panel_O7",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1520,
        "wires": [
            [
                "b46f240a5a48d184"
            ]
        ]
    },
    {
        "id": "b46f240a5a48d184",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "b2c67090221487a5",
        "name": "S7 AA",
        "mode": "link",
        "links": [
            "a1997b66de515dcc"
        ],
        "x": 1225,
        "y": 1380,
        "wires": []
    },
    {
        "id": "6310fc4ada0edc78",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "item": "O_100_PInit_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "'O_100_PInit_Pos",
        "x": 470,
        "y": 2960,
        "wires": [
            [
                "577fa138b950d339"
            ]
        ]
    },
    {
        "id": "5e6474903f0e5dc6",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "item": "O_100_PDrill_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_PDrill_Pos",
        "x": 470,
        "y": 3000,
        "wires": [
            [
                "577fa138b950d339"
            ]
        ]
    },
    {
        "id": "f882af9558875d5b",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "item": "O_100_PTest_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_PTest_Pos",
        "x": 470,
        "y": 3040,
        "wires": [
            [
                "577fa138b950d339"
            ]
        ]
    },
    {
        "id": "0210d941cba89f62",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "item": "O_100_SDrill_High",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_SDrill_High",
        "x": 470,
        "y": 3080,
        "wires": [
            [
                "577fa138b950d339"
            ]
        ]
    },
    {
        "id": "0bcc2b2eda4c4ee3",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "item": "O_100_SDrill_Low",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_SDrill_Low",
        "x": 470,
        "y": 3120,
        "wires": [
            [
                "577fa138b950d339"
            ]
        ]
    },
    {
        "id": "7926a062acb76398",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "item": "O_100_RT_Sensor",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_RT_Sensor",
        "x": 470,
        "y": 3160,
        "wires": [
            [
                "577fa138b950d339"
            ]
        ]
    },
    {
        "id": "fd211b8bb3922e2f",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "item": "O_100_PTest_Ok",
        "datatype": "Boolean",
        "value": "",
        "name": "O_100_PTest_Ok",
        "x": 470,
        "y": 3200,
        "wires": [
            [
                "577fa138b950d339"
            ]
        ]
    },
    {
        "id": "577fa138b950d339",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "100 Physical Sensor",
        "mode": "link",
        "links": [
            "3228eca40ff4e66c"
        ],
        "x": 645,
        "y": 3080,
        "wires": []
    },
    {
        "id": "88dfeb20772aa469",
        "type": "switch",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "100 PS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_100_PInit_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_PDrill_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_PTest_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_SDrill_High",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_SDrill_Low",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_RT_Sensor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_100_PTest_Ok",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 860,
        "y": 3080,
        "wires": [
            [
                "b395d4b8434ceca3"
            ],
            [
                "7090d0d3582ed6a8"
            ],
            [
                "73aa1f7adcfc7491"
            ],
            [
                "ed093559a9f8e5f7"
            ],
            [
                "8aa44d5091f6d96e"
            ],
            [
                "00f5e4d47b0123da"
            ],
            [
                "a25038e9351e79e2"
            ]
        ]
    },
    {
        "id": "b395d4b8434ceca3",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "order": 0,
        "group": "3c70b94f18f1a698",
        "width": 0,
        "height": 0,
        "label": "Part in initial position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_PInit_Pos",
        "x": 1070,
        "y": 2960,
        "wires": []
    },
    {
        "id": "7090d0d3582ed6a8",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "order": 0,
        "group": "3c70b94f18f1a698",
        "width": 0,
        "height": 0,
        "label": "Part in drill position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_PDrill_Pos",
        "x": 1070,
        "y": 3000,
        "wires": []
    },
    {
        "id": "73aa1f7adcfc7491",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "order": 0,
        "group": "3c70b94f18f1a698",
        "width": 0,
        "height": 0,
        "label": "Part in test position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_PTest_Pos",
        "x": 1070,
        "y": 3040,
        "wires": []
    },
    {
        "id": "ed093559a9f8e5f7",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "order": 0,
        "group": "3c70b94f18f1a698",
        "width": 0,
        "height": 0,
        "label": "Drill in high position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_SDrill_High",
        "x": 1070,
        "y": 3080,
        "wires": []
    },
    {
        "id": "8aa44d5091f6d96e",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "order": 0,
        "group": "3c70b94f18f1a698",
        "width": 0,
        "height": 0,
        "label": "Drill in low position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_SDrill_Low",
        "x": 1070,
        "y": 3120,
        "wires": []
    },
    {
        "id": "00f5e4d47b0123da",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "order": 0,
        "group": "3c70b94f18f1a698",
        "width": 0,
        "height": 0,
        "label": "Rotating table sensor",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_RT_Sensor",
        "x": 1070,
        "y": 3160,
        "wires": []
    },
    {
        "id": "a25038e9351e79e2",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "order": 0,
        "group": "3c70b94f18f1a698",
        "width": 0,
        "height": 0,
        "label": "Test Ok",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_100_PTest_Ok",
        "x": 1070,
        "y": 3200,
        "wires": []
    },
    {
        "id": "61fadec435109f82",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_100_PInit_Pos\" : false,\n            \"O_100_PDrill_Pos\" : false,\n            \"O_100_PTest_Pos\" : false,\n            \"O_100_SDrill_High\" : false,\n            \"O_100_SDrill_Low\" : false,\n            \"O_100_RT_Sensor\" : false,\n            \"O_100_PTest_Ok\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2880,
        "wires": [
            [
                "1d33f84471256bd9"
            ]
        ]
    },
    {
        "id": "d4bab82ba8f8fd3d",
        "type": "OpcUa-Client",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub PS",
        "x": 1130,
        "y": 2880,
        "wires": [
            [
                "2f0ca36941b0ce4a",
                "35e138954c988f67"
            ],
            [
                "61fadec435109f82"
            ]
        ]
    },
    {
        "id": "1d33f84471256bd9",
        "type": "trigger",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 2880,
        "wires": [
            [
                "42b97446c8cd2529"
            ]
        ]
    },
    {
        "id": "719eb7994b1a7f8a",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2880,
        "wires": [
            [
                "d4bab82ba8f8fd3d"
            ]
        ]
    },
    {
        "id": "2f0ca36941b0ce4a",
        "type": "debug",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "100 PS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 2920,
        "wires": []
    },
    {
        "id": "42b97446c8cd2529",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2880,
        "wires": [
            [
                "c86fa5470553d55a"
            ]
        ]
    },
    {
        "id": "325f995496c63703",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2880,
        "wires": [
            [
                "719eb7994b1a7f8a"
            ]
        ]
    },
    {
        "id": "c86fa5470553d55a",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2880,
        "wires": [
            [
                "976f5eece0660387"
            ]
        ]
    },
    {
        "id": "976f5eece0660387",
        "type": "file in",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 2880,
        "wires": [
            [
                "325f995496c63703"
            ]
        ]
    },
    {
        "id": "a5392ce81934865a",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "O_100_PInit_Pos",
        "func": "if (msg.topic === \"O_100_PInit_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_PInit_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2960,
        "wires": [
            [
                "6310fc4ada0edc78"
            ]
        ]
    },
    {
        "id": "62a48f8f46c5ad32",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "S7 PS",
        "links": [
            "5f3a1094ae5e61a7"
        ],
        "x": 55,
        "y": 3080,
        "wires": [
            [
                "a5392ce81934865a",
                "17891dd58b09683b",
                "55a0155b67834275",
                "c25b658906bc0354",
                "35124cd04716de12",
                "660380bbd0c48175",
                "74f147c28ad69985"
            ]
        ]
    },
    {
        "id": "35124cd04716de12",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "O_100_SDrill_Low",
        "func": "if (msg.topic === \"O_100_SDrill_Low\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_SDrill_Low\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3120,
        "wires": [
            [
                "0bcc2b2eda4c4ee3"
            ]
        ]
    },
    {
        "id": "17891dd58b09683b",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "O_100_PDrill_Pos",
        "func": "if (msg.topic === \"O_100_PDrill_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_PDrill_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3000,
        "wires": [
            [
                "5e6474903f0e5dc6"
            ]
        ]
    },
    {
        "id": "55a0155b67834275",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "O_100_PTest_Pos",
        "func": "if (msg.topic === \"O_100_PTest_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_PTest_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3040,
        "wires": [
            [
                "f882af9558875d5b"
            ]
        ]
    },
    {
        "id": "c25b658906bc0354",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "O_100_SDrill_High",
        "func": "if (msg.topic === \"O_100_SDrill_High\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_SDrill_High\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3080,
        "wires": [
            [
                "0210d941cba89f62"
            ]
        ]
    },
    {
        "id": "660380bbd0c48175",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "O_100_RT_Sensor",
        "func": "if (msg.topic === \"O_100_RT_Sensor\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_RT_Sensor\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3160,
        "wires": [
            [
                "7926a062acb76398"
            ]
        ]
    },
    {
        "id": "74f147c28ad69985",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "O_100_PTest_Ok",
        "func": "if (msg.topic === \"O_100_PTest_Ok\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_100_PTest_Ok\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3200,
        "wires": [
            [
                "fd211b8bb3922e2f"
            ]
        ]
    },
    {
        "id": "9bfc0e707e314850",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "Sub In 100 PS",
        "links": [
            "35e138954c988f67"
        ],
        "x": 755,
        "y": 3080,
        "wires": [
            [
                "88dfeb20772aa469"
            ]
        ]
    },
    {
        "id": "35e138954c988f67",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "Sub Out 100 PS",
        "mode": "link",
        "links": [
            "9bfc0e707e314850"
        ],
        "x": 1295,
        "y": 2880,
        "wires": []
    },
    {
        "id": "f5f032742992f494",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "88c6737a75ad1ca4",
        "name": "Read PS",
        "links": [
            "c11b30a7bc385e40"
        ],
        "x": 55,
        "y": 2880,
        "wires": [
            [
                "61fadec435109f82"
            ]
        ]
    },
    {
        "id": "f5af8d966ff234f9",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "item": "O_101_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Start",
        "x": 490,
        "y": 3380,
        "wires": [
            [
                "0e8beaeba4a65d6b"
            ]
        ]
    },
    {
        "id": "b9baef20e60642f0",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "item": "O_101_Stop",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Stop",
        "x": 490,
        "y": 3420,
        "wires": [
            [
                "0e8beaeba4a65d6b"
            ]
        ]
    },
    {
        "id": "bd9f65c49b8d60d9",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "item": "O_101_Key_Pos",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Key_Pos",
        "x": 470,
        "y": 3460,
        "wires": [
            [
                "0e8beaeba4a65d6b"
            ]
        ]
    },
    {
        "id": "60e4a55a7f5bc48c",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "item": "O_101_Reset",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Reset",
        "x": 480,
        "y": 3500,
        "wires": [
            [
                "0e8beaeba4a65d6b"
            ]
        ]
    },
    {
        "id": "33f298c5145e240b",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "item": "O_101_Panel_I4",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Panel_I4",
        "x": 470,
        "y": 3540,
        "wires": [
            [
                "0e8beaeba4a65d6b"
            ]
        ]
    },
    {
        "id": "6eda1cc93de6a48d",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "item": "O_101_Panel_I5",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Panel_I5",
        "x": 470,
        "y": 3580,
        "wires": [
            [
                "0e8beaeba4a65d6b"
            ]
        ]
    },
    {
        "id": "0c740454b7ea2950",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "item": "O_101_Panel_I6",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Panel_I6",
        "x": 470,
        "y": 3620,
        "wires": [
            [
                "0e8beaeba4a65d6b"
            ]
        ]
    },
    {
        "id": "0e8beaeba4a65d6b",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "100 Auxiliary Sensor",
        "mode": "link",
        "links": [
            "3228eca40ff4e66c"
        ],
        "x": 645,
        "y": 3520,
        "wires": []
    },
    {
        "id": "585ccab86aeb7688",
        "type": "switch",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "100 AS",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "O_101_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Key_Pos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Panel_I4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Panel_I5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Panel_I6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "O_101_Panel_I7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 860,
        "y": 3520,
        "wires": [
            [
                "696ef333d11969d4"
            ],
            [
                "4b01d66dbf22c558"
            ],
            [
                "7bb947ba9ca3a680"
            ],
            [
                "17b091e390438d62"
            ],
            [
                "0502dfe3e8054cd3"
            ],
            [
                "6e5e3623b7604299"
            ],
            [
                "8ea7b4df6fc8c170"
            ],
            [
                "d4a495cc7504ac46"
            ]
        ]
    },
    {
        "id": "696ef333d11969d4",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "order": 0,
        "group": "e8a6fefccb35026d",
        "width": 0,
        "height": 0,
        "label": "Start Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Start",
        "x": 1050,
        "y": 3380,
        "wires": []
    },
    {
        "id": "4b01d66dbf22c558",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "order": 0,
        "group": "e8a6fefccb35026d",
        "width": 0,
        "height": 0,
        "label": "Stop Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Stop",
        "x": 1050,
        "y": 3420,
        "wires": []
    },
    {
        "id": "7bb947ba9ca3a680",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "order": 0,
        "group": "e8a6fefccb35026d",
        "width": 0,
        "height": 0,
        "label": "Key position",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Key_Pos",
        "x": 1070,
        "y": 3460,
        "wires": []
    },
    {
        "id": "17b091e390438d62",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "order": 0,
        "group": "e8a6fefccb35026d",
        "width": 0,
        "height": 0,
        "label": "Reset Button",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Reset",
        "x": 1060,
        "y": 3500,
        "wires": []
    },
    {
        "id": "0502dfe3e8054cd3",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "order": 0,
        "group": "e8a6fefccb35026d",
        "width": 0,
        "height": 0,
        "label": "Panel I4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Panel_I4",
        "x": 1070,
        "y": 3540,
        "wires": []
    },
    {
        "id": "6e5e3623b7604299",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "order": 0,
        "group": "e8a6fefccb35026d",
        "width": 0,
        "height": 0,
        "label": "Panel I5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Panel_I5",
        "x": 1070,
        "y": 3580,
        "wires": []
    },
    {
        "id": "8ea7b4df6fc8c170",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "order": 0,
        "group": "e8a6fefccb35026d",
        "width": 0,
        "height": 0,
        "label": "Panel I6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Panel_I6",
        "x": 1070,
        "y": 3620,
        "wires": []
    },
    {
        "id": "03d1021e41157c8d",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "item": "O_101_Panel_I7",
        "datatype": "Boolean",
        "value": "",
        "name": "O_101_Panel_I7",
        "x": 470,
        "y": 3660,
        "wires": [
            [
                "0e8beaeba4a65d6b"
            ]
        ]
    },
    {
        "id": "d4a495cc7504ac46",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "order": 0,
        "group": "e8a6fefccb35026d",
        "width": 0,
        "height": 0,
        "label": "Panel I7",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "O_101_Panel_I7",
        "x": 1070,
        "y": 3660,
        "wires": []
    },
    {
        "id": "cc54f8ce86c1973d",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3300,
        "wires": [
            [
                "4eea895681dfe097"
            ]
        ]
    },
    {
        "id": "1956d86fe29a5cf8",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3300,
        "wires": [
            [
                "cc54f8ce86c1973d"
            ]
        ]
    },
    {
        "id": "4eea895681dfe097",
        "type": "OpcUa-Client",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub AS",
        "x": 1130,
        "y": 3300,
        "wires": [
            [
                "091dcff88a997357",
                "bc37fdb1bda2c480"
            ],
            [
                "9aaa751602e57d3b"
            ]
        ]
    },
    {
        "id": "5922ef756dd08851",
        "type": "file in",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 3300,
        "wires": [
            [
                "1956d86fe29a5cf8"
            ]
        ]
    },
    {
        "id": "091dcff88a997357",
        "type": "debug",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "100 AS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 3340,
        "wires": []
    },
    {
        "id": "9aaa751602e57d3b",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"O_101_Start\" : false,\n            \"O_101_Stop\" : false,\n            \"O_101_Key_Pos\" : false,\n            \"O_101_Reset\" : false,\n            \"O_101_Panel_I4\" : false,\n            \"O_101_Panel_I5\" : false,\n            \"O_101_Panel_I6\" : false,\n            \"O_101_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3300,
        "wires": [
            [
                "287ec4f1de756948"
            ]
        ]
    },
    {
        "id": "fd0f5cbaf82769b4",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3300,
        "wires": [
            [
                "5922ef756dd08851"
            ]
        ]
    },
    {
        "id": "287ec4f1de756948",
        "type": "trigger",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 3300,
        "wires": [
            [
                "4fc707086bc1dbec"
            ]
        ]
    },
    {
        "id": "4fc707086bc1dbec",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3300,
        "wires": [
            [
                "fd0f5cbaf82769b4"
            ]
        ]
    },
    {
        "id": "c5e9d4641046d5f3",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "O_101_Start",
        "func": "if (msg.topic === \"O_101_Start\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Start\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3380,
        "wires": [
            [
                "f5af8d966ff234f9"
            ]
        ]
    },
    {
        "id": "d79a9cb15c1f8aaf",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "S7 AS",
        "links": [
            "5f3a1094ae5e61a7"
        ],
        "x": 55,
        "y": 3520,
        "wires": [
            [
                "c5e9d4641046d5f3",
                "d4431b4af5dba04b",
                "29b2d1bccdc4df53",
                "5458be58a366af92",
                "eed194f4c07357eb",
                "3fcf26a10b5fb3e8",
                "66fc101b49c5a1d5",
                "ced5194c1a34c299"
            ]
        ]
    },
    {
        "id": "eed194f4c07357eb",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "O_101_Panel_I4",
        "func": "if (msg.topic === \"O_101_Panel_I4\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Panel_I4\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3540,
        "wires": [
            [
                "33f298c5145e240b"
            ]
        ]
    },
    {
        "id": "d4431b4af5dba04b",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "O_101_Stop",
        "func": "if (msg.topic === \"O_101_Stop\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Stop\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3420,
        "wires": [
            [
                "b9baef20e60642f0"
            ]
        ]
    },
    {
        "id": "29b2d1bccdc4df53",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "O_101_Key_Pos",
        "func": "if (msg.topic === \"O_101_Key_Pos\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Key_Pos\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3460,
        "wires": [
            [
                "bd9f65c49b8d60d9"
            ]
        ]
    },
    {
        "id": "5458be58a366af92",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "O_101_Reset",
        "func": "if (msg.topic === \"O_101_Reset\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Reset\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 3500,
        "wires": [
            [
                "60e4a55a7f5bc48c"
            ]
        ]
    },
    {
        "id": "3fcf26a10b5fb3e8",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "O_101_Panel_I5",
        "func": "if (msg.topic === \"O_101_Panel_I5\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Panel_I5\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3580,
        "wires": [
            [
                "6eda1cc93de6a48d"
            ]
        ]
    },
    {
        "id": "66fc101b49c5a1d5",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "O_101_Panel_I6",
        "func": "if (msg.topic === \"O_101_Panel_I6\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Panel_I6\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3620,
        "wires": [
            [
                "0c740454b7ea2950"
            ]
        ]
    },
    {
        "id": "ced5194c1a34c299",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "O_101_Panel_I7",
        "func": "if (msg.topic === \"O_101_Panel_I7\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"O_101_Panel_I7\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 3660,
        "wires": [
            [
                "03d1021e41157c8d"
            ]
        ]
    },
    {
        "id": "bc37fdb1bda2c480",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "Sub Out 100 AS",
        "mode": "link",
        "links": [
            "b3f1e54c79af55bf"
        ],
        "x": 1295,
        "y": 3300,
        "wires": []
    },
    {
        "id": "b3f1e54c79af55bf",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "Sub In 100 AS",
        "links": [
            "bc37fdb1bda2c480"
        ],
        "x": 755,
        "y": 3520,
        "wires": [
            [
                "585ccab86aeb7688"
            ]
        ]
    },
    {
        "id": "75edc8f65c816362",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "01ea2b66702aeffe",
        "name": "Read AS",
        "links": [
            "c11b30a7bc385e40"
        ],
        "x": 55,
        "y": 3300,
        "wires": [
            [
                "9aaa751602e57d3b"
            ]
        ]
    },
    {
        "id": "9e3bdfadc5a0b610",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "Variable List",
        "func": "if (msg.status == \"session active\") return { \npayload : {\n    \"SA_100_Drill_On\" : false,\n    \"SA_100_RT_On\" : false,\n    \"SA_100_Drill_Down\" : false,\n    \"SA_100_Drill_Up\" : false,\n    \"SA_100_Drill_Pin\" : false,\n    \"SA_100_Test_Pin\" : false,\n    \"SA_101_Led_Start\" : false,\n    \"SA_101_Led_Reset\" : false,\n    \"SA_101_Led_Extra1\" : false,\n    \"SA_101_Led_Extra2\" : false,\n    \"SA_101_Panel_O4\" : false,\n    \"SA_101_Panel_O5\" : false,\n    \"SA_101_Panel_O6\" : false,\n    \"SA_101_Panel_O7\" : false,\n    \"SC_102_Profibus\" : true,\n    \"SC_105_Initialization\" : false,\n    \"SC_105_Part_ready\" : false,\n    \"SC_105_Start\" : false,\n    \"SC_105_Test\" : true,\n    \"SC_105_TestDrill\" : false,\n    \"SC_105_Rotation\" : false,\n    \"SS_100_PInit_Pos\" : false,\n    \"SS_100_PDrill_Pos\" : false,\n    \"SS_100_PTest_Pos\" : false,\n    \"SS_100_SDrill_High\" : false,\n    \"SS_100_SDrill_Low\" : false,\n    \"SS_100_RT_Sensor\" : true,\n    \"SS_100_PTest_Ok\" : false,\n    \"SS_101_Start\" : false,\n    \"SS_101_Stop\" : true,\n    \"SS_101_Key_Pos\" : false,\n    \"SS_101_Reset\" : false,\n    \"SS_101_Panel_I4\" : false,\n    \"SS_101_Panel_I5\" : true,\n    \"SS_101_Panel_I6\" : false,\n    \"SS_101_Panel_I7\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 680,
        "wires": [
            [
                "c20c4181d2e45d60"
            ]
        ]
    },
    {
        "id": "e7d7f31b5311c824",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "Simulated CSV Link",
        "links": [
            "c392d34283a94352"
        ],
        "x": 65,
        "y": 680,
        "wires": [
            [
                "9e3bdfadc5a0b610"
            ]
        ]
    },
    {
        "id": "c20c4181d2e45d60",
        "type": "trigger",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 680,
        "wires": [
            [
                "ef96020ce0aa155a"
            ]
        ]
    },
    {
        "id": "ef96020ce0aa155a",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "Creates Classes",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\nvar variableClass = \"\";\n\nfor (let key in variables) {\n    if (variables.hasOwnProperty(key)) {\n        if (key.includes(\"SA_\")) variableClass = \"Simulated_Actuators\";\n        if (key.includes(\"SC_\")) variableClass = \"Simulated_Control\";\n        if (key.includes(\"SS_\")) variableClass = \"Simulated_Sensors\";\n        if (variableClass != \"\") node.send({ variable: key, variableClass: variableClass });  // Envia uma mensagem com a linha atual\n    }\n}\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 680,
        "wires": [
            [
                "5a06b8fd2a48adc9"
            ]
        ]
    },
    {
        "id": "5a06b8fd2a48adc9",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "Finds Variable",
        "func": "var variableClass = msg.variableClass;\nvar variable = msg.variable;\nvar topic = \"br=/Objects/AASROOT/Processing_Station/SimulationData/\" + variableClass + \"/\" + variable + \"/Value\";\nmsg = {\n    variable: msg.variable,\n    topic: topic,\n}\nreturn msg;\n\n// topic: \"br=/Objects/AASROOT/myStation1/Handling2/Feedback/Q_94_Claw_2_Cart/Value\"",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 680,
        "wires": [
            [
                "a9717d156d4d346f"
            ]
        ]
    },
    {
        "id": "a9717d156d4d346f",
        "type": "OpcUa-Client",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "endpoint": "a2328ac43b0b7d73",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Read",
        "x": 810,
        "y": 680,
        "wires": [
            [
                "92ad01cdaaa4cc0c"
            ],
            [
                "c392d34283a94352"
            ]
        ]
    },
    {
        "id": "92ad01cdaaa4cc0c",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "Return of query",
        "func": "let csvLine = `${msg.variable};${msg.topic}\\n`;  // Cria uma nova linha com os valores\nmsg.payload = csvLine;  // Coloca a linha CSV como a carga útil\nmsg.append = true;  // Adiciona ao final do arquivo, sem sobrescrever\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 640,
        "wires": [
            [
                "cabc4fa179a56f56",
                "72db42c5bbddd449"
            ]
        ]
    },
    {
        "id": "c392d34283a94352",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "Simulated CSV Link",
        "mode": "link",
        "links": [
            "91dca4b9fb093199",
            "e7d7f31b5311c824"
        ],
        "x": 935,
        "y": 680,
        "wires": []
    },
    {
        "id": "cabc4fa179a56f56",
        "type": "file",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "Simulated Varaibles List",
        "filename": "/root/ProjetoGemeo/AAS/Processing/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1230,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "72db42c5bbddd449",
        "type": "debug",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "Variable List",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "feb0a6b5e9f4866c",
        "type": "comment",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "Checks the variables in the server and creates the table",
        "info": "",
        "x": 240,
        "y": 640,
        "wires": []
    },
    {
        "id": "547bb12696815483",
        "type": "comment",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "Creates the header for the translation table",
        "info": "",
        "x": 200,
        "y": 540,
        "wires": []
    },
    {
        "id": "91dca4b9fb093199",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "Simulated CSV Link",
        "links": [
            "c392d34283a94352"
        ],
        "x": 65,
        "y": 580,
        "wires": [
            [
                "9c94cba00828f35e"
            ]
        ]
    },
    {
        "id": "9c94cba00828f35e",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "Header",
        "func": "if (msg.status == \"session active\") return { \npayload : \"Variable;Namespace;Identifier\\n\" , append : false}  // Sobrescreve o arquivo\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 580,
        "wires": [
            [
                "784b815b4b6255a8"
            ]
        ]
    },
    {
        "id": "784b815b4b6255a8",
        "type": "trigger",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 580,
        "wires": [
            [
                "3f6fc11428837052"
            ]
        ]
    },
    {
        "id": "3f6fc11428837052",
        "type": "file",
        "z": "7b3114de0a2b4bca",
        "g": "573c572cb94392b6",
        "name": "Simulated CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/SimulatedVariables.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 440,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "6ffe807b9fd4d0f0",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "item": "C_102_Profibus",
        "datatype": "Boolean",
        "value": "",
        "name": "C_102_Profibus",
        "x": 640,
        "y": 1700,
        "wires": [
            [
                "ed17886167681946"
            ]
        ]
    },
    {
        "id": "657923e6e1a8ea4a",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "item": "C_105_Initialization",
        "datatype": "Double",
        "value": "",
        "name": "C_105_Initialization",
        "x": 630,
        "y": 1740,
        "wires": [
            [
                "ed17886167681946"
            ]
        ]
    },
    {
        "id": "77994ae7c29f2d47",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "item": "C_105_Part_ready",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_Part_ready",
        "x": 630,
        "y": 1780,
        "wires": [
            [
                "ed17886167681946"
            ]
        ]
    },
    {
        "id": "91a7a019e3a9b11b",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "item": "C_105_Start",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_Start",
        "x": 650,
        "y": 1820,
        "wires": [
            [
                "ed17886167681946"
            ]
        ]
    },
    {
        "id": "304fc9333f71a8c5",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "item": "C_105_Test",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_Test",
        "x": 650,
        "y": 1860,
        "wires": [
            [
                "ed17886167681946"
            ]
        ]
    },
    {
        "id": "1f531e69637317c7",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "item": "C_105_TestDrill",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_TestDrill",
        "x": 640,
        "y": 1900,
        "wires": [
            [
                "ed17886167681946"
            ]
        ]
    },
    {
        "id": "6af1471a24c3c4a8",
        "type": "OpcUa-Item",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "item": "C_105_Rotation",
        "datatype": "Boolean",
        "value": "",
        "name": "C_105_Rotation",
        "x": 640,
        "y": 1940,
        "wires": [
            [
                "ed17886167681946"
            ]
        ]
    },
    {
        "id": "ed17886167681946",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "100 Control",
        "mode": "link",
        "links": [
            "3228eca40ff4e66c"
        ],
        "x": 805,
        "y": 1820,
        "wires": []
    },
    {
        "id": "52fc6dd71c4d4119",
        "type": "switch",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "100 C",
        "property": "variable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C_102_Profibus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Initialization",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Part_ready",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Test",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_TestDrill",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C_105_Rotation",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 1010,
        "y": 1820,
        "wires": [
            [
                "5f8ac6d672157ee7"
            ],
            [
                "f9500320c6784926"
            ],
            [
                "d6198ec9bb59446e"
            ],
            [
                "4c7003f13edf17a2"
            ],
            [
                "1759f21f53deb35f"
            ],
            [
                "0209304f7705946c"
            ],
            [
                "9f394dfe0be55052"
            ]
        ]
    },
    {
        "id": "5f8ac6d672157ee7",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "order": 2,
        "group": "e9e085c0926fa963",
        "width": 0,
        "height": 0,
        "label": "Profibus OK",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_102_Profibus",
        "x": 1200,
        "y": 1700,
        "wires": []
    },
    {
        "id": "d6198ec9bb59446e",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "order": 3,
        "group": "e9e085c0926fa963",
        "width": 0,
        "height": 0,
        "label": "Part Ready for Transport",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_105_Part_ready",
        "x": 1210,
        "y": 1780,
        "wires": []
    },
    {
        "id": "d7bbc0a3097907fc",
        "type": "ui_switch",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "C_105_Start",
        "label": "Start",
        "tooltip": "Start Production",
        "group": "e9e085c0926fa963",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 1820,
        "wires": [
            [
                "91a7a019e3a9b11b"
            ]
        ]
    },
    {
        "id": "c9ae9a82e3cd51f4",
        "type": "ui_dropdown",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "Mode Select",
        "label": "Mode Select",
        "tooltip": "",
        "place": "Select option",
        "group": "e9e085c0926fa963",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Test Only Mode",
                "value": "C_105_Test",
                "type": "str"
            },
            {
                "label": "Test and Drill Mode",
                "value": "C_105_TestDrill",
                "type": "str"
            },
            {
                "label": "Rotation Mode",
                "value": "C_105_Rotation",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 190,
        "y": 1900,
        "wires": [
            [
                "ebb0b1a2bc33feae",
                "c668a711fbcb0ddc",
                "167c606686cc8a2e"
            ]
        ]
    },
    {
        "id": "ebb0b1a2bc33feae",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "C_105_Test",
        "func": "if (msg.payload === \"C_105_Test\") \nreturn { payload: true, topic: \"C_105_Test\"};\nelse return { payload: false, topic: \"C_105_Test\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1860,
        "wires": [
            [
                "304fc9333f71a8c5"
            ]
        ]
    },
    {
        "id": "c668a711fbcb0ddc",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "C_105_TestDrill",
        "func": "if (msg.payload === \"C_105_TestDrill\") \nreturn { payload: true, topic: \"C_105_TestDrill\"};\nelse return { payload: false, topic: \"C_105_TestDrill\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1900,
        "wires": [
            [
                "1f531e69637317c7"
            ]
        ]
    },
    {
        "id": "167c606686cc8a2e",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "C_105_Rotation",
        "func": "if (msg.payload === \"C_105_Rotation\") \nreturn { payload: true, topic: \"C_105_Rotation\"};\nelse return { payload: false, topic: \"C_105_Rotation\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1940,
        "wires": [
            [
                "6af1471a24c3c4a8"
            ]
        ]
    },
    {
        "id": "8e699b9b77df826d",
        "type": "inject",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "payload": "C_105_Test",
        "payloadType": "str",
        "x": 190,
        "y": 1940,
        "wires": [
            [
                "c9ae9a82e3cd51f4"
            ]
        ]
    },
    {
        "id": "d678df31b56a0aef",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "Adj2",
        "func": "// Create a new payload object\nmsg.payload = msg.value;\nmsg.topic = msg.id;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1620,
        "wires": [
            [
                "dc74b1b2135ce927"
            ]
        ]
    },
    {
        "id": "01dd3a6220d78e45",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "Var => ns;i",
        "func": "const csv = msg.payload;  // O conteúdo do CSV como string\nconst variable = msg.variable;  // A variável para buscar\n\nmsg.payload = {};\n\nconst lines = csv.trim().split('\\n');  // Divide o conteúdo em linhas e remove espaços extras\nconst header = lines.shift().split(';');  // Remove e divide o cabeçalho pelo delimitador ';'\n\nconst data = lines.map(line => {\n    const [Variable, Namespace, Identifier] = line.split(';').map(value => value.trim());\n    return { Variable, Namespace, Identifier };\n});\n\n// Debug: log the data and variable to check correctness\n// node.warn(`Data: ${JSON.stringify(data)}`);\n// node.warn(`Variable: ${variable}`);\n\nfunction getNamespaceIdentifier(variable) {\n    const row = data.find(r => r.Variable === variable);\n    if (row) {\n        return `${row.Namespace};${row.Identifier}`;\n    }\n    return null;\n}\n\nmsg.id = getNamespaceIdentifier(variable);\n\n// Debug: log the result\n// node.warn(`Identifier: ${msg.identifier}`);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1620,
        "wires": [
            [
                "d678df31b56a0aef"
            ]
        ]
    },
    {
        "id": "dc74b1b2135ce927",
        "type": "OpcUa-Client",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "endpoint": "a2328ac43b0b7d73",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "ms",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": true,
        "maxChunkCount": "100",
        "maxMessageSize": 8192,
        "receiveBufferSize": 8192,
        "sendBufferSize": 8192,
        "name": "AAS Sub C",
        "x": 1130,
        "y": 1620,
        "wires": [
            [
                "04e75439d2657711",
                "ef5257841c2ffd99"
            ],
            [
                "52692ba7b25a50a8"
            ]
        ]
    },
    {
        "id": "8ddd24848bfbb0ed",
        "type": "file in",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "CSV",
        "filename": "/root/ProjetoGemeo/AAS/Processing/Variables.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 710,
        "y": 1620,
        "wires": [
            [
                "01dd3a6220d78e45"
            ]
        ]
    },
    {
        "id": "04e75439d2657711",
        "type": "debug",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "100 C",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1660,
        "wires": []
    },
    {
        "id": "52692ba7b25a50a8",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "Variable List",
        "func": "let StatusRead = false\nlet StatusSubscribe = false\n\nif (msg.status === \"session active\" && msg.error === null) {\n    StatusSubscribe = true\n}\n\nif (msg.topic === \"ReadOk\" && msg.payload === true) {\n    StatusRead = true\n}\n    \nif (StatusSubscribe = true && StatusRead == true) \n    return { \n        payload : {\n            \"C_102_Profibus\" : false,\n            \"C_105_Initialization\" : false,\n            \"C_105_Part_ready\" : false,\n            \"C_105_Start\" : false,\n            \"C_105_Test\" : false,\n            \"C_105_TestDrill\" : false,\n            \"C_105_Rotation\" : false,\n}};\n else return null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1620,
        "wires": [
            [
                "1bc343ec4cef8b92"
            ]
        ]
    },
    {
        "id": "3988c4fcd1606a9e",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "Adj1",
        "func": "let variable = msg.topic;\nlet value = msg.payload;\n\nmsg = {variable: variable};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1620,
        "wires": [
            [
                "8ddd24848bfbb0ed"
            ]
        ]
    },
    {
        "id": "1bc343ec4cef8b92",
        "type": "trigger",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "1st",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 1620,
        "wires": [
            [
                "71fe0a817067ae22"
            ]
        ]
    },
    {
        "id": "71fe0a817067ae22",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "Sep. Line",
        "func": "let variables = msg.payload;  // Assumindo que msg.payload é um array de variáveis\n\nfor (let key in variables) {\n node.send({ topic: key,});  // Envia uma mensagem com a linha atual\n    }\n\nreturn null;  // Finaliza o nó principal (não precisa enviar mais mensagens depois do loop)\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1620,
        "wires": [
            [
                "3988c4fcd1606a9e"
            ]
        ]
    },
    {
        "id": "f9500320c6784926",
        "type": "ui_led",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "order": 1,
        "group": "e9e085c0926fa963",
        "width": 0,
        "height": 0,
        "label": "Initialization Routine",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "C_105_Initialization",
        "x": 1210,
        "y": 1740,
        "wires": []
    },
    {
        "id": "ef5257841c2ffd99",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "Sub Out 100 C",
        "mode": "link",
        "links": [
            "0c8a517525e2f4a7"
        ],
        "x": 1295,
        "y": 1620,
        "wires": []
    },
    {
        "id": "0c8a517525e2f4a7",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "Sub In 100 C",
        "links": [
            "ef5257841c2ffd99"
        ],
        "x": 915,
        "y": 1820,
        "wires": [
            [
                "52fc6dd71c4d4119"
            ]
        ]
    },
    {
        "id": "2076a741a501b9ea",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "S7 C",
        "links": [
            "5f3a1094ae5e61a7"
        ],
        "x": 55,
        "y": 1740,
        "wires": [
            [
                "46d1366a45862707",
                "30f66bbc7b65bc5d",
                "b2a87f25daf0e932"
            ]
        ]
    },
    {
        "id": "b2a87f25daf0e932",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "C_105_Part_ready",
        "func": "if (msg.topic === \"C_105_Part_ready\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_Part_ready\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1780,
        "wires": [
            [
                "77994ae7c29f2d47"
            ]
        ]
    },
    {
        "id": "46d1366a45862707",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "C_102_Profibus",
        "func": "if (msg.topic === \"C_102_Profibus\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_102_Profibus\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1700,
        "wires": [
            [
                "6ffe807b9fd4d0f0"
            ]
        ]
    },
    {
        "id": "30f66bbc7b65bc5d",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "C_105_Initialization",
        "func": "if (msg.topic === \"C_105_Initialization\" && msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    return msg\n    }\n\nif (msg.topic === \"C_105_Initialization\" && msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    return msg\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1740,
        "wires": [
            [
                "657923e6e1a8ea4a"
            ]
        ]
    },
    {
        "id": "37d8a601817264a5",
        "type": "link in",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "Read C",
        "links": [
            "c11b30a7bc385e40"
        ],
        "x": 55,
        "y": 1620,
        "wires": [
            [
                "52692ba7b25a50a8"
            ]
        ]
    },
    {
        "id": "4c7003f13edf17a2",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "C_105_Start",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1820,
        "wires": [
            [
                "5cce90e4f3c9cbe2"
            ]
        ]
    },
    {
        "id": "1759f21f53deb35f",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "C_105_Test",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1860,
        "wires": [
            [
                "5cce90e4f3c9cbe2"
            ]
        ]
    },
    {
        "id": "0209304f7705946c",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "C_105_TestDrill",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1900,
        "wires": [
            [
                "5cce90e4f3c9cbe2"
            ]
        ]
    },
    {
        "id": "9f394dfe0be55052",
        "type": "function",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "C_105_Rotation",
        "func": "let Value\nlet TAG\n\nif (msg.payload === true) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"True\"})\n    }\nif (msg.payload === false) {\n    node.status({fill:\"red\",shape:\"dot\",text:\"False\"})\n    }\nValue = msg.payload\nTAG = msg.variable\n\nmsg.payload = {Value, TAG}\nmsg.topic = \"S7Variables\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1940,
        "wires": [
            [
                "5cce90e4f3c9cbe2"
            ]
        ]
    },
    {
        "id": "5cce90e4f3c9cbe2",
        "type": "link out",
        "z": "7b3114de0a2b4bca",
        "g": "aaff29da7b613f4d",
        "name": "S7 C",
        "mode": "link",
        "links": [
            "a1997b66de515dcc"
        ],
        "x": 1365,
        "y": 1820,
        "wires": []
    }
]